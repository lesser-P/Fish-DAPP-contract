{
	"id": "5a7a8908deff0a3343cf11dbb85f6223",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sseaERC20.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\";\nimport \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\";\nimport \"@boringcrypto/boring-solidity/contracts/Domain.sol\";\nimport \"@boringcrypto/boring-solidity/contracts/ERC20.sol\";\nimport \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\";\n\n// Staking in sFISH inspired by Chef Nomi's SushiBar - MIT license (originally WTFPL)\n// modified by BoringCrypto for DictatorDAO\n\ncontract sSeaERC20 is IERC20, Domain {\n    using BoringMath for uint256;\n    using BoringMath128 for uint128;\n    using BoringERC20 for IERC20;\n\n    string public constant symbol = \"sSEA\";\n    string public constant name = \"Staked SEA Tokens\";\n    uint8 public constant decimals = 18;\n    uint256 public override totalSupply;\n    uint256 public LOCK_TIME = 24 hours;\n    address public _owner;\n    IERC20 public immutable token;\n\n    constructor(IERC20 _token) public {\n        token = _token;\n        _owner = msg.sender;\n    }\n\n    struct User {\n        uint128 balance;\n        uint128 lockedUntil;\n    }\n\n    /// @notice owner > balance mapping.\n    mapping(address => User) public users;\n    /// @notice owner > spender > allowance mapping.\n    mapping(address => mapping(address => uint256)) public override allowance;\n    /// @notice owner > nonce mapping. Used in `permit`.\n    mapping(address => uint256) public nonces;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(\n        address indexed _owner,\n        address indexed _spender,\n        uint256 _value\n    );\n\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    modifier onlyOwner() {\n        require(owner() == msg.sender, \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        _transferOwnership(newOwner);\n    }\n\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n    }\n\n    function setLOCK_TIME(uint256 _LOCK_TIME) public onlyOwner returns (bool) {\n        LOCK_TIME = _LOCK_TIME;\n        return true;\n    }\n\n    function balanceOf(address user)\n        public\n        view\n        override\n        returns (uint256 balance)\n    {\n        return users[user].balance;\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 shares\n    ) internal {\n        User memory fromUser = users[from];\n        require(block.timestamp >= fromUser.lockedUntil, \"Locked\");\n        if (shares != 0) {\n            require(fromUser.balance >= shares, \"Low balance\");\n            if (from != to) {\n                require(to != address(0), \"Zero address\"); // Moved down so other failed calls safe some gas\n                User memory toUser = users[to];\n                users[from].balance = fromUser.balance - shares.to128(); // Underflow is checked\n                users[to].balance = toUser.balance + shares.to128(); // Can't overflow because totalSupply would be greater than 2^128-1;\n            }\n        }\n        emit Transfer(from, to, shares);\n    }\n\n    function _useAllowance(address from, uint256 shares) internal {\n        if (msg.sender == from) {\n            return;\n        }\n        uint256 spenderAllowance = allowance[from][msg.sender];\n        // If allowance is infinite, don't decrease it to save on gas (breaks with EIP-20).\n        if (spenderAllowance != type(uint256).max) {\n            require(spenderAllowance >= shares, \"Low allowance\");\n            allowance[from][msg.sender] = spenderAllowance - shares; // Underflow is checked\n        }\n    }\n\n    /// @notice Transfers `shares` tokens from `msg.sender` to `to`.\n    /// @param to The address to move the tokens.\n    /// @param shares of the tokens to move.\n    /// @return (bool) Returns True if succeeded.\n    function transfer(address to, uint256 shares) public returns (bool) {\n        _transfer(msg.sender, to, shares);\n        return true;\n    }\n\n    /// @notice Transfers `shares` tokens from `from` to `to`. Caller needs approval for `from`.\n    /// @param from Address to draw tokens from.\n    /// @param to The address to move the tokens.\n    /// @param shares The token shares to move.\n    /// @return (bool) Returns True if succeeded.\n    function transferFrom(\n        address from,\n        address to,\n        uint256 shares\n    ) public returns (bool) {\n        _useAllowance(from, shares);\n        _transfer(from, to, shares);\n        return true;\n    }\n\n    /// @notice Approves `amount` from sender to be spend by `spender`.\n    /// @param spender Address of the party that can draw from msg.sender's account.\n    /// @param amount The maximum collective amount that `spender` can draw.\n    /// @return (bool) Returns True if approved.\n    function approve(address spender, uint256 amount)\n        public\n        override\n        returns (bool)\n    {\n        allowance[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32) {\n        return _domainSeparator();\n    }\n\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 private constant PERMIT_SIGNATURE_HASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    /// @notice Approves `value` from `owner_` to be spend by `spender`.\n    /// @param owner_ Address of the owner.\n    /// @param spender The address of the spender that gets approved to draw from `owner_`.\n    /// @param value The maximum collective amount that `spender` can draw.\n    /// @param deadline This permit must be redeemed before this deadline (UTC timestamp in seconds).\n    function permit(\n        address owner_,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external override {\n        require(owner_ != address(0), \"Zero owner\");\n        require(block.timestamp < deadline, \"Expired\");\n        require(\n            ecrecover(\n                _getDigest(\n                    keccak256(\n                        abi.encode(\n                            PERMIT_SIGNATURE_HASH,\n                            owner_,\n                            spender,\n                            value,\n                            nonces[owner_]++,\n                            deadline\n                        )\n                    )\n                ),\n                v,\n                r,\n                s\n            ) == owner_,\n            \"Invalid Sig\"\n        );\n        allowance[owner_][spender] = value;\n        emit Approval(owner_, spender, value);\n    }\n\n    /// math is ok, because amount, totalSupply and shares is always 0 <= amount <= 100.000.000 * 10^18\n    /// theoretically you can grow the amount/share ratio, but it's not practical and useless\n    function mint(uint256 amount) public returns (bool) {\n        require(msg.sender != address(0), \"Zero address\");\n        User memory user = users[msg.sender];\n\n        uint256 totalTokens = token.balanceOf(address(this));\n        uint256 shares = totalSupply == 0\n            ? amount\n            : (amount * totalSupply) / totalTokens;\n        user.balance += shares.to128();\n        user.lockedUntil = (block.timestamp + LOCK_TIME).to128();\n        users[msg.sender] = user;\n        totalSupply += shares;\n\n        token.safeTransferFrom(msg.sender, address(this), amount);\n\n        emit Transfer(address(0), msg.sender, shares);\n        return true;\n    }\n\n    function _burn(\n        address from,\n        address to,\n        uint256 shares\n    ) internal {\n        require(to != address(0), \"Zero address\");\n        User memory user = users[from];\n        require(block.timestamp >= user.lockedUntil, \"Locked\");\n        uint256 amount = (shares * token.balanceOf(address(this))) /\n            totalSupply;\n        users[from].balance = user.balance.sub(shares.to128()); // Must check underflow\n        totalSupply -= shares;\n\n        token.safeTransfer(to, amount);\n\n        emit Transfer(from, address(0), shares);\n    }\n\n    function burn(address to, uint256 shares) public returns (bool) {\n        _burn(msg.sender, to, shares);\n        return true;\n    }\n\n    function burnFrom(\n        address from,\n        address to,\n        uint256 shares\n    ) public returns (bool) {\n        _useAllowance(from, shares);\n        _burn(from, to, shares);\n        return true;\n    }\n}\n"
			},
			"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\n// solhint-disable avoid-low-level-calls\n// solhint-disable no-inline-assembly\n\n// Audit on 5-Jan-2021 by Keno and BoringCrypto\n\nimport \"./interfaces/IERC20.sol\";\n\ncontract BaseBoringBatchable {\n    /// @dev Helper function to extract a useful revert message from a failed call.\n    /// If the returned data is malformed or not correctly abi encoded then this call can fail itself.\n    function _getRevertMsg(bytes memory _returnData) internal pure returns (string memory) {\n        // If the _res length is less than 68, then the transaction failed silently (without a revert message)\n        if (_returnData.length < 68) return \"Transaction reverted silently\";\n\n        assembly {\n            // Slice the sighash.\n            _returnData := add(_returnData, 0x04)\n        }\n        return abi.decode(_returnData, (string)); // All that remains is the revert string\n    }\n\n    /// @notice Allows batched call to self (this contract).\n    /// @param calls An array of inputs for each call.\n    /// @param revertOnFail If True then reverts after a failed call and stops doing further calls.\n    // F1: External is ok here because this is the batch function, adding it to a batch makes no sense\n    // F2: Calls in the batch may be payable, delegatecall operates in the same context, so each call in the batch has access to msg.value\n    // C3: The length of the loop is fully under user control, so can't be exploited\n    // C7: Delegatecall is only used on the same contract, so it's safe\n    function batch(bytes[] calldata calls, bool revertOnFail) external payable {\n        for (uint256 i = 0; i < calls.length; i++) {\n            (bool success, bytes memory result) = address(this).delegatecall(calls[i]);\n            if (!success && revertOnFail) {\n                revert(_getRevertMsg(result));\n            }\n        }\n    }\n}\n\ncontract BoringBatchable is BaseBoringBatchable {\n    /// @notice Call wrapper that performs `ERC20.permit` on `token`.\n    /// Lookup `IERC20.permit`.\n    // F6: Parameters can be used front-run the permit and the user's permit will fail (due to nonce or other revert)\n    //     if part of a batch this could be used to grief once as the second call would not need the permit\n    function permitToken(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public {\n        token.permit(from, to, amount, deadline, v, r, s);\n    }\n}\n"
			},
			"@boringcrypto/boring-solidity/contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\nimport \"./interfaces/IERC20.sol\";\nimport \"./Domain.sol\";\n\n// solhint-disable no-inline-assembly\n// solhint-disable not-rely-on-time\n\n// Data part taken out for building of contracts that receive delegate calls\ncontract ERC20Data {\n    /// @notice owner > balance mapping.\n    mapping(address => uint256) public balanceOf;\n    /// @notice owner > spender > allowance mapping.\n    mapping(address => mapping(address => uint256)) public allowance;\n    /// @notice owner > nonce mapping. Used in `permit`.\n    mapping(address => uint256) public nonces;\n}\n\nabstract contract ERC20 is IERC20, Domain {\n    /// @notice owner > balance mapping.\n    mapping(address => uint256) public override balanceOf;\n    /// @notice owner > spender > allowance mapping.\n    mapping(address => mapping(address => uint256)) public override allowance;\n    /// @notice owner > nonce mapping. Used in `permit`.\n    mapping(address => uint256) public nonces;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    /// @notice Transfers `amount` tokens from `msg.sender` to `to`.\n    /// @param to The address to move the tokens.\n    /// @param amount of the tokens to move.\n    /// @return (bool) Returns True if succeeded.\n    function transfer(address to, uint256 amount) public returns (bool) {\n        // If `amount` is 0, or `msg.sender` is `to` nothing happens\n        if (amount != 0 || msg.sender == to) {\n            uint256 srcBalance = balanceOf[msg.sender];\n            require(srcBalance >= amount, \"ERC20: balance too low\");\n            if (msg.sender != to) {\n                require(to != address(0), \"ERC20: no zero address\"); // Moved down so low balance calls safe some gas\n\n                balanceOf[msg.sender] = srcBalance - amount; // Underflow is checked\n                balanceOf[to] += amount;\n            }\n        }\n        emit Transfer(msg.sender, to, amount);\n        return true;\n    }\n\n    /// @notice Transfers `amount` tokens from `from` to `to`. Caller needs approval for `from`.\n    /// @param from Address to draw tokens from.\n    /// @param to The address to move the tokens.\n    /// @param amount The token amount to move.\n    /// @return (bool) Returns True if succeeded.\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public returns (bool) {\n        // If `amount` is 0, or `from` is `to` nothing happens\n        if (amount != 0) {\n            uint256 srcBalance = balanceOf[from];\n            require(srcBalance >= amount, \"ERC20: balance too low\");\n\n            if (from != to) {\n                uint256 spenderAllowance = allowance[from][msg.sender];\n                // If allowance is infinite, don't decrease it to save on gas (breaks with EIP-20).\n                if (spenderAllowance != type(uint256).max) {\n                    require(spenderAllowance >= amount, \"ERC20: allowance too low\");\n                    allowance[from][msg.sender] = spenderAllowance - amount; // Underflow is checked\n                }\n                require(to != address(0), \"ERC20: no zero address\"); // Moved down so other failed calls safe some gas\n\n                balanceOf[from] = srcBalance - amount; // Underflow is checked\n                balanceOf[to] += amount;\n            }\n        }\n        emit Transfer(from, to, amount);\n        return true;\n    }\n\n    /// @notice Approves `amount` from sender to be spend by `spender`.\n    /// @param spender Address of the party that can draw from msg.sender's account.\n    /// @param amount The maximum collective amount that `spender` can draw.\n    /// @return (bool) Returns True if approved.\n    function approve(address spender, uint256 amount) public override returns (bool) {\n        allowance[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32) {\n        return _domainSeparator();\n    }\n\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 private constant PERMIT_SIGNATURE_HASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    /// @notice Approves `value` from `owner_` to be spend by `spender`.\n    /// @param owner_ Address of the owner.\n    /// @param spender The address of the spender that gets approved to draw from `owner_`.\n    /// @param value The maximum collective amount that `spender` can draw.\n    /// @param deadline This permit must be redeemed before this deadline (UTC timestamp in seconds).\n    function permit(\n        address owner_,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external override {\n        require(owner_ != address(0), \"ERC20: Owner cannot be 0\");\n        require(block.timestamp < deadline, \"ERC20: Expired\");\n        require(\n            ecrecover(_getDigest(keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline))), v, r, s) ==\n                owner_,\n            \"ERC20: Invalid Signature\"\n        );\n        allowance[owner_][spender] = value;\n        emit Approval(owner_, spender, value);\n    }\n}\n\ncontract ERC20WithSupply is IERC20, ERC20 {\n    uint256 public override totalSupply;\n\n    function _mint(address user, uint256 amount) private {\n        uint256 newTotalSupply = totalSupply + amount;\n        require(newTotalSupply >= totalSupply, \"Mint overflow\");\n        totalSupply = newTotalSupply;\n        balanceOf[user] += amount;\n    }\n\n    function _burn(address user, uint256 amount) private {\n        require(balanceOf[user] >= amount, \"Burn too much\");\n        totalSupply -= amount;\n        balanceOf[user] -= amount;\n    }\n}\n"
			},
			"@boringcrypto/boring-solidity/contracts/Domain.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Based on code and smartness by Ross Campbell and Keno\n// Uses immutable to store the domain separator to reduce gas usage\n// If the chain id changes due to a fork, the forked chain will calculate on the fly.\npragma solidity 0.6.12;\n\n// solhint-disable no-inline-assembly\n\ncontract Domain {\n    bytes32 private constant DOMAIN_SEPARATOR_SIGNATURE_HASH = keccak256(\"EIP712Domain(uint256 chainId,address verifyingContract)\");\n    // See https://eips.ethereum.org/EIPS/eip-191\n    string private constant EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA = \"\\x19\\x01\";\n\n    // solhint-disable var-name-mixedcase\n    bytes32 private immutable _DOMAIN_SEPARATOR;\n    uint256 private immutable DOMAIN_SEPARATOR_CHAIN_ID;    \n\n    /// @dev Calculate the DOMAIN_SEPARATOR\n    function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {\n        return keccak256(\n            abi.encode(\n                DOMAIN_SEPARATOR_SIGNATURE_HASH,\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    constructor() public {\n        uint256 chainId; assembly {chainId := chainid()}\n        _DOMAIN_SEPARATOR = _calculateDomainSeparator(DOMAIN_SEPARATOR_CHAIN_ID = chainId);\n    }\n\n    /// @dev Return the DOMAIN_SEPARATOR\n    // It's named internal to allow making it public from the contract that uses it by creating a simple view function\n    // with the desired public name, such as DOMAIN_SEPARATOR or domainSeparator.\n    // solhint-disable-next-line func-name-mixedcase\n    function _domainSeparator() internal view returns (bytes32) {\n        uint256 chainId; assembly {chainId := chainid()}\n        return chainId == DOMAIN_SEPARATOR_CHAIN_ID ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId);\n    }\n\n    function _getDigest(bytes32 dataHash) internal view returns (bytes32 digest) {\n        digest =\n            keccak256(\n                abi.encodePacked(\n                    EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA,\n                    _domainSeparator(),\n                    dataHash\n                )\n            );\n    }\n}"
			},
			"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\nimport \"../interfaces/IERC20.sol\";\n\n// solhint-disable avoid-low-level-calls\n\nlibrary BoringERC20 {\n    bytes4 private constant SIG_SYMBOL = 0x95d89b41; // symbol()\n    bytes4 private constant SIG_NAME = 0x06fdde03; // name()\n    bytes4 private constant SIG_DECIMALS = 0x313ce567; // decimals()\n    bytes4 private constant SIG_TRANSFER = 0xa9059cbb; // transfer(address,uint256)\n    bytes4 private constant SIG_TRANSFER_FROM = 0x23b872dd; // transferFrom(address,address,uint256)\n\n    function returnDataToString(bytes memory data) internal pure returns (string memory) {\n        if (data.length >= 64) {\n            return abi.decode(data, (string));\n        } else if (data.length == 32) {\n            uint8 i = 0;\n            while(i < 32 && data[i] != 0) {\n                i++;\n            }\n            bytes memory bytesArray = new bytes(i);\n            for (i = 0; i < 32 && data[i] != 0; i++) {\n                bytesArray[i] = data[i];\n            }\n            return string(bytesArray);\n        } else {\n            return \"???\";\n        }\n    }\n\n    /// @notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\n    /// @param token The address of the ERC-20 token contract.\n    /// @return (string) Token symbol.\n    function safeSymbol(IERC20 token) internal view returns (string memory) {\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_SYMBOL));\n        return success ? returnDataToString(data) : \"???\";\n    }\n\n    /// @notice Provides a safe ERC20.name version which returns '???' as fallback string.\n    /// @param token The address of the ERC-20 token contract.\n    /// @return (string) Token name.\n    function safeName(IERC20 token) internal view returns (string memory) {\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_NAME));\n        return success ? returnDataToString(data) : \"???\";\n    }\n\n    /// @notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\n    /// @param token The address of the ERC-20 token contract.\n    /// @return (uint8) Token decimals.\n    function safeDecimals(IERC20 token) internal view returns (uint8) {\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_DECIMALS));\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\n    }\n\n    /// @notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\n    /// Reverts on a failed transfer.\n    /// @param token The address of the ERC-20 token.\n    /// @param to Transfer tokens to.\n    /// @param amount The token amount.\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER, to, amount));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"BoringERC20: Transfer failed\");\n    }\n\n    /// @notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\n    /// Reverts on a failed transfer.\n    /// @param token The address of the ERC-20 token.\n    /// @param from Transfer tokens from.\n    /// @param to Transfer tokens to.\n    /// @param amount The token amount.\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"BoringERC20: TransferFrom failed\");\n    }\n}\n"
			},
			"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\n/// @notice A library for performing overflow-/underflow-safe math,\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\nlibrary BoringMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        require((c = a + b) >= b, \"BoringMath: Add Overflow\");\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        require((c = a - b) <= a, \"BoringMath: Underflow\");\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        require(b == 0 || (c = a * b) / b == a, \"BoringMath: Mul Overflow\");\n    }\n\n    function to128(uint256 a) internal pure returns (uint128 c) {\n        require(a <= uint128(-1), \"BoringMath: uint128 Overflow\");\n        c = uint128(a);\n    }\n\n    function to64(uint256 a) internal pure returns (uint64 c) {\n        require(a <= uint64(-1), \"BoringMath: uint64 Overflow\");\n        c = uint64(a);\n    }\n\n    function to32(uint256 a) internal pure returns (uint32 c) {\n        require(a <= uint32(-1), \"BoringMath: uint32 Overflow\");\n        c = uint32(a);\n    }\n}\n\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\nlibrary BoringMath128 {\n    function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\n        require((c = a + b) >= b, \"BoringMath: Add Overflow\");\n    }\n\n    function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\n        require((c = a - b) <= a, \"BoringMath: Underflow\");\n    }\n}\n\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\nlibrary BoringMath64 {\n    function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\n        require((c = a + b) >= b, \"BoringMath: Add Overflow\");\n    }\n\n    function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\n        require((c = a - b) <= a, \"BoringMath: Underflow\");\n    }\n}\n\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\nlibrary BoringMath32 {\n    function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\n        require((c = a + b) >= b, \"BoringMath: Add Overflow\");\n    }\n\n    function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\n        require((c = a - b) <= a, \"BoringMath: Underflow\");\n    }\n}\n"
			},
			"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /// @notice EIP 2612\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol": {
				"BaseBoringBatchable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "calls",
									"type": "bytes[]"
								},
								{
									"internalType": "bool",
									"name": "revertOnFail",
									"type": "bool"
								}
							],
							"name": "batch",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"batch(bytes[],bool)": {
								"params": {
									"calls": "An array of inputs for each call.",
									"revertOnFail": "If True then reverts after a failed call and stops doing further calls."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":255:1925  contract BaseBoringBatchable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":255:1925  contract BaseBoringBatchable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd2423b51\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1585:1923  function batch(bytes[] calldata calls, bool revertOnFail) external payable {... */\n    tag_2:\n      tag_3\n      tag_4\n      calldatasize\n      0x04\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      stop\n    tag_6:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1675:1684  uint256 i */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1670:1917  for (uint256 i = 0; i < calls.length; i++) {... */\n    tag_8:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1690:1706  i < calls.length */\n      dup3\n      dup2\n      lt\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1670:1917  for (uint256 i = 0; i < calls.length; i++) {... */\n      iszero\n      tag_9\n      jumpi\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1728:1740  bool success */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1742:1761  bytes memory result */\n      0x60\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1773:1777  this */\n      address\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1792:1797  calls */\n      dup7\n      dup7\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1798:1799  i */\n      dup6\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1792:1800  calls[i] */\n      dup2\n      dup2\n      lt\n      tag_11\n      jumpi\n      invalid\n    tag_11:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1765:1801  address(this).delegatecall(calls[i]) */\n      mload(0x40)\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_18\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_17)\n    tag_18:\n      0x60\n      swap2\n      pop\n    tag_17:\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1727:1801  (bool success, bytes memory result) = address(this).delegatecall(calls[i]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1820:1827  success */\n      dup2\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1819:1827  !success */\n      iszero\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1819:1843  !success && revertOnFail */\n      dup1\n      iszero\n      tag_19\n      jumpi\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1831:1843  revertOnFail */\n      dup4\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1819:1843  !success && revertOnFail */\n    tag_19:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1815:1907  if (!success && revertOnFail) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1870:1891  _getRevertMsg(result) */\n      tag_21\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1884:1890  result */\n      dup2\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1870:1883  _getRevertMsg */\n      tag_22\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1870:1891  _getRevertMsg(result) */\n      jump\t// in\n    tag_21:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1863:1892  revert(_getRevertMsg(result)) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1815:1907  if (!success && revertOnFail) {... */\n    tag_20:\n      pop\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1708:1711  i++ */\n      0x01\n      add\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1670:1917  for (uint256 i = 0; i < calls.length; i++) {... */\n      jump(tag_8)\n    tag_9:\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1585:1923  function batch(bytes[] calldata calls, bool revertOnFail) external payable {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":477:964  function _getRevertMsg(bytes memory _returnData) internal pure returns (string memory) {... */\n    tag_22:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":549:562  string memory */\n      0x60\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":710:712  68 */\n      0x44\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":689:700  _returnData */\n      dup3\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":689:707  _returnData.length */\n      mload\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":689:712  _returnData.length < 68 */\n      lt\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":685:752  if (_returnData.length < 68) return \"Transaction reverted silently\" */\n      iszero\n      tag_26\n      jumpi\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":714:752  return \"Transaction reverted silently\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x5472616e73616374696f6e2072657665727465642073696c656e746c79000000\n      0x20\n      dup3\n      add\n      mstore\n      jump(tag_25)\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":685:752  if (_returnData.length < 68) return \"Transaction reverted silently\" */\n    tag_26:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":852:856  0x04 */\n      0x04\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":839:850  _returnData */\n      dup3\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":835:857  add(_returnData, 0x04) */\n      add\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":820:857  _returnData := add(_returnData, 0x04) */\n      swap2\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":894:905  _returnData */\n      dup2\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":883:916  abi.decode(_returnData, (string)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":876:916  return abi.decode(_returnData, (string)) */\n      swap1\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":477:964  function _getRevertMsg(bytes memory _returnData) internal pure returns (string memory) {... */\n    tag_25:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":976:1514   */\n    tag_5:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":1140:1142   */\n      0x40\n        /* \"--CODEGEN--\":1128:1137   */\n      dup5\n        /* \"--CODEGEN--\":1119:1126   */\n      dup7\n        /* \"--CODEGEN--\":1115:1138   */\n      sub\n        /* \"--CODEGEN--\":1111:1143   */\n      slt\n        /* \"--CODEGEN--\":1108:1110   */\n      iszero\n      tag_31\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":1146:1158   */\n      revert\n        /* \"--CODEGEN--\":1108:1110   */\n    tag_31:\n        /* \"--CODEGEN--\":1204:1221   */\n      dup4\n        /* \"--CODEGEN--\":1191:1222   */\n      calldataload\n        /* \"--CODEGEN--\":1242:1260   */\n      0xffffffffffffffff\n      dup1\n        /* \"--CODEGEN--\":1234:1240   */\n      dup3\n        /* \"--CODEGEN--\":1231:1261   */\n      gt\n        /* \"--CODEGEN--\":1228:1230   */\n      iszero\n      tag_32\n      jumpi\n      dup5\n      dup6\n        /* \"--CODEGEN--\":1264:1276   */\n      revert\n        /* \"--CODEGEN--\":1228:1230   */\n    tag_32:\n        /* \"--CODEGEN--\":1376:1382   */\n      dup2\n        /* \"--CODEGEN--\":1365:1374   */\n      dup7\n        /* \"--CODEGEN--\":1361:1383   */\n      add\n      swap2\n      pop\n        /* \"--CODEGEN--\":162:165   */\n      dup7\n        /* \"--CODEGEN--\":155:159   */\n      0x1f\n        /* \"--CODEGEN--\":147:153   */\n      dup4\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":139:166   */\n      slt\n        /* \"--CODEGEN--\":129:131   */\n      tag_33\n      jumpi\n      dup5\n      dup6\n        /* \"--CODEGEN--\":170:182   */\n      revert\n        /* \"--CODEGEN--\":129:131   */\n    tag_33:\n        /* \"--CODEGEN--\":213:219   */\n      dup2\n        /* \"--CODEGEN--\":200:220   */\n      calldataload\n        /* \"--CODEGEN--\":1242:1260   */\n      dup2\n        /* \"--CODEGEN--\":232:238   */\n      dup2\n        /* \"--CODEGEN--\":229:259   */\n      gt\n        /* \"--CODEGEN--\":226:228   */\n      iszero\n      tag_34\n      jumpi\n      dup6\n      dup7\n        /* \"--CODEGEN--\":262:274   */\n      revert\n        /* \"--CODEGEN--\":226:228   */\n    tag_34:\n        /* \"--CODEGEN--\":357:360   */\n      dup8\n        /* \"--CODEGEN--\":306:310   */\n      0x20\n      dup1\n        /* \"--CODEGEN--\":341:347   */\n      dup4\n        /* \"--CODEGEN--\":337:354   */\n      mul\n        /* \"--CODEGEN--\":298:304   */\n      dup6\n        /* \"--CODEGEN--\":323:355   */\n      add\n      add\n        /* \"--CODEGEN--\":320:361   */\n      gt\n        /* \"--CODEGEN--\":317:319   */\n      iszero\n      tag_35\n      jumpi\n      dup6\n      dup7\n        /* \"--CODEGEN--\":364:376   */\n      revert\n        /* \"--CODEGEN--\":317:319   */\n    tag_35:\n        /* \"--CODEGEN--\":306:310   */\n      0x20\n        /* \"--CODEGEN--\":294:311   */\n      swap3\n      dup4\n      add\n      swap6\n      pop\n        /* \"--CODEGEN--\":1284:1393   */\n      swap4\n      pop\n      pop\n        /* \"--CODEGEN--\":1466:1488   */\n      dup5\n      add\n        /* \"--CODEGEN--\":456:476   */\n      calldataload\n        /* \"--CODEGEN--\":4825:4838   */\n      dup1\n      iszero\n        /* \"--CODEGEN--\":4818:4839   */\n      iszero\n        /* \"--CODEGEN--\":5443:5475   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":5433:5435   */\n      tag_36\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":5479:5491   */\n      revert\n        /* \"--CODEGEN--\":5433:5435   */\n    tag_36:\n        /* \"--CODEGEN--\":1438:1498   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":1102:1514   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"--CODEGEN--\":1521:1883   */\n    tag_28:\n      0x00\n        /* \"--CODEGEN--\":1646:1648   */\n      0x20\n        /* \"--CODEGEN--\":1634:1643   */\n      dup3\n        /* \"--CODEGEN--\":1625:1632   */\n      dup5\n        /* \"--CODEGEN--\":1621:1644   */\n      sub\n        /* \"--CODEGEN--\":1617:1649   */\n      slt\n        /* \"--CODEGEN--\":1614:1616   */\n      iszero\n      tag_38\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":1652:1664   */\n      revert\n        /* \"--CODEGEN--\":1614:1616   */\n    tag_38:\n        /* \"--CODEGEN--\":1703:1720   */\n      dup2\n        /* \"--CODEGEN--\":1697:1721   */\n      mload\n        /* \"--CODEGEN--\":1741:1759   */\n      0xffffffffffffffff\n      dup1\n        /* \"--CODEGEN--\":1733:1739   */\n      dup3\n        /* \"--CODEGEN--\":1730:1760   */\n      gt\n        /* \"--CODEGEN--\":1727:1729   */\n      iszero\n      tag_39\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":1763:1775   */\n      revert\n        /* \"--CODEGEN--\":1727:1729   */\n    tag_39:\n        /* \"--CODEGEN--\":1850:1856   */\n      dup2\n        /* \"--CODEGEN--\":1839:1848   */\n      dup5\n        /* \"--CODEGEN--\":1835:1857   */\n      add\n      swap2\n      pop\n        /* \"--CODEGEN--\":637:640   */\n      dup5\n        /* \"--CODEGEN--\":630:634   */\n      0x1f\n        /* \"--CODEGEN--\":622:628   */\n      dup4\n        /* \"--CODEGEN--\":618:635   */\n      add\n        /* \"--CODEGEN--\":614:641   */\n      slt\n        /* \"--CODEGEN--\":604:606   */\n      tag_40\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":645:657   */\n      revert\n        /* \"--CODEGEN--\":604:606   */\n    tag_40:\n        /* \"--CODEGEN--\":685:691   */\n      dup2\n        /* \"--CODEGEN--\":679:692   */\n      mload\n        /* \"--CODEGEN--\":1741:1759   */\n      dup2\n        /* \"--CODEGEN--\":4112:4118   */\n      dup2\n        /* \"--CODEGEN--\":4109:4139   */\n      gt\n        /* \"--CODEGEN--\":4106:4108   */\n      iszero\n      tag_41\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":4142:4154   */\n      revert\n        /* \"--CODEGEN--\":4106:4108   */\n    tag_41:\n        /* \"--CODEGEN--\":3775:3777   */\n      0x40\n        /* \"--CODEGEN--\":3769:3778   */\n      mload\n        /* \"--CODEGEN--\":4215:4224   */\n      0x1f\n        /* \"--CODEGEN--\":4196:4213   */\n      dup3\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":4192:4225   */\n      and\n        /* \"--CODEGEN--\":3801:3818   */\n      dup2\n      add\n        /* \"--CODEGEN--\":1646:1648   */\n      0x20\n        /* \"--CODEGEN--\":3801:3818   */\n      add\n        /* \"--CODEGEN--\":3861:3895   */\n      dup4\n      dup2\n      gt\n        /* \"--CODEGEN--\":3897:3919   */\n      dup3\n      dup3\n      lt\n        /* \"--CODEGEN--\":3858:3920   */\n      or\n        /* \"--CODEGEN--\":3855:3857   */\n      iszero\n      tag_42\n      jumpi\n      dup6\n      dup7\n        /* \"--CODEGEN--\":3923:3935   */\n      revert\n        /* \"--CODEGEN--\":3855:3857   */\n    tag_42:\n        /* \"--CODEGEN--\":3775:3777   */\n      0x40\n        /* \"--CODEGEN--\":3942:3964   */\n      mstore\n        /* \"--CODEGEN--\":778:799   */\n      dup2\n      dup2\n      mstore\n        /* \"--CODEGEN--\":878:894   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":1646:1648   */\n      0x20\n        /* \"--CODEGEN--\":878:894   */\n      add\n        /* \"--CODEGEN--\":875:900   */\n      dup8\n      lt\n        /* \"--CODEGEN--\":872:874   */\n      iszero\n      tag_43\n      jumpi\n      dup5\n      dup6\n        /* \"--CODEGEN--\":903:915   */\n      revert\n        /* \"--CODEGEN--\":872:874   */\n    tag_43:\n        /* \"--CODEGEN--\":923:962   */\n      tag_44\n        /* \"--CODEGEN--\":955:961   */\n      dup3\n        /* \"--CODEGEN--\":1646:1648   */\n      0x20\n        /* \"--CODEGEN--\":854:859   */\n      dup4\n        /* \"--CODEGEN--\":850:866   */\n      add\n        /* \"--CODEGEN--\":1646:1648   */\n      0x20\n        /* \"--CODEGEN--\":820:826   */\n      dup8\n        /* \"--CODEGEN--\":816:833   */\n      add\n        /* \"--CODEGEN--\":923:962   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"--CODEGEN--\":1783:1867   */\n      swap7\n        /* \"--CODEGEN--\":1608:1883   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":2585:2876   */\n    tag_15:\n      0x00\n        /* \"--CODEGEN--\":4933:4939   */\n      dup3\n        /* \"--CODEGEN--\":4928:4931   */\n      dup5\n        /* \"--CODEGEN--\":4923:4926   */\n      dup4\n        /* \"--CODEGEN--\":4910:4940   */\n      calldatacopy\n        /* \"--CODEGEN--\":4971:4987   */\n      swap2\n      add\n        /* \"--CODEGEN--\":4964:4991   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":4971:4987   */\n      swap2\n        /* \"--CODEGEN--\":2729:2876   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":2883:3193   */\n    tag_24:\n      0x00\n        /* \"--CODEGEN--\":3030:3032   */\n      0x20\n        /* \"--CODEGEN--\":3051:3068   */\n      dup3\n        /* \"--CODEGEN--\":3044:3091   */\n      mstore\n        /* \"--CODEGEN--\":2376:2381   */\n      dup3\n        /* \"--CODEGEN--\":4393:4405   */\n      mload\n        /* \"--CODEGEN--\":4703:4709   */\n      dup1\n        /* \"--CODEGEN--\":3030:3032   */\n      0x20\n        /* \"--CODEGEN--\":3019:3028   */\n      dup5\n        /* \"--CODEGEN--\":3015:3033   */\n      add\n        /* \"--CODEGEN--\":4691:4710   */\n      mstore\n        /* \"--CODEGEN--\":2470:2522   */\n      tag_48\n        /* \"--CODEGEN--\":2515:2521   */\n      dup2\n        /* \"--CODEGEN--\":4731:4745   */\n      0x40\n        /* \"--CODEGEN--\":3019:3028   */\n      dup6\n        /* \"--CODEGEN--\":4731:4745   */\n      add\n        /* \"--CODEGEN--\":3030:3032   */\n      0x20\n        /* \"--CODEGEN--\":2496:2501   */\n      dup8\n        /* \"--CODEGEN--\":2492:2508   */\n      add\n        /* \"--CODEGEN--\":2470:2522   */\n      tag_45\n      jump\t// in\n    tag_48:\n        /* \"--CODEGEN--\":4215:4224   */\n      0x1f\n        /* \"--CODEGEN--\":5350:5364   */\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":5346:5374   */\n      and\n        /* \"--CODEGEN--\":2534:2573   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":4731:4745   */\n      0x40\n        /* \"--CODEGEN--\":2534:2573   */\n      add\n      swap3\n        /* \"--CODEGEN--\":3001:3193   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3200:3706   */\n    tag_13:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":3335:3346   */\n      dup4\n        /* \"--CODEGEN--\":3322:3347   */\n      calldataload\n        /* \"--CODEGEN--\":3386:3434   */\n      not(0x1e)\n        /* \"--CODEGEN--\":3410:3418   */\n      dup5\n        /* \"--CODEGEN--\":3394:3408   */\n      calldatasize\n        /* \"--CODEGEN--\":3390:3419   */\n      sub\n        /* \"--CODEGEN--\":3386:3434   */\n      add\n        /* \"--CODEGEN--\":3366:3384   */\n      dup2\n        /* \"--CODEGEN--\":3362:3435   */\n      slt\n        /* \"--CODEGEN--\":3352:3354   */\n      tag_50\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":3439:3451   */\n      revert\n        /* \"--CODEGEN--\":3352:3354   */\n    tag_50:\n        /* \"--CODEGEN--\":3466:3499   */\n      dup4\n      add\n        /* \"--CODEGEN--\":3520:3538   */\n      dup1\n      calldataload\n      swap2\n      pop\n        /* \"--CODEGEN--\":3558:3576   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":3547:3577   */\n      dup3\n      gt\n        /* \"--CODEGEN--\":3544:3546   */\n      iszero\n      tag_51\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":3580:3592   */\n      revert\n        /* \"--CODEGEN--\":3544:3546   */\n    tag_51:\n        /* \"--CODEGEN--\":3425:3429   */\n      0x20\n        /* \"--CODEGEN--\":3608:3621   */\n      add\n      swap2\n      pop\n        /* \"--CODEGEN--\":3394:3408   */\n      calldatasize\n        /* \"--CODEGEN--\":3640:3678   */\n      dup2\n      swap1\n      sub\n        /* \"--CODEGEN--\":3630:3679   */\n      dup3\n      sgt\n        /* \"--CODEGEN--\":3627:3629   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":3692:3693   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":3682:3694   */\n      revert\n        /* \"--CODEGEN--\":3627:3629   */\n    tag_52:\n        /* \"--CODEGEN--\":3290:3706   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5006:5274   */\n    tag_45:\n        /* \"--CODEGEN--\":5071:5072   */\n      0x00\n        /* \"--CODEGEN--\":5078:5179   */\n    tag_54:\n        /* \"--CODEGEN--\":5092:5098   */\n      dup4\n        /* \"--CODEGEN--\":5089:5090   */\n      dup2\n        /* \"--CODEGEN--\":5086:5099   */\n      lt\n        /* \"--CODEGEN--\":5078:5179   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":5159:5170   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":5153:5171   */\n      mload\n        /* \"--CODEGEN--\":5140:5151   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":5133:5172   */\n      mstore\n        /* \"--CODEGEN--\":5114:5116   */\n      0x20\n        /* \"--CODEGEN--\":5107:5117   */\n      add\n        /* \"--CODEGEN--\":5078:5179   */\n      jump(tag_54)\n    tag_56:\n        /* \"--CODEGEN--\":5194:5200   */\n      dup4\n        /* \"--CODEGEN--\":5191:5192   */\n      dup2\n        /* \"--CODEGEN--\":5188:5201   */\n      gt\n        /* \"--CODEGEN--\":5185:5187   */\n      iszero\n      tag_9\n      jumpi\n      pop\n      pop\n        /* \"--CODEGEN--\":5071:5072   */\n      0x00\n        /* \"--CODEGEN--\":5241:5257   */\n      swap2\n      add\n        /* \"--CODEGEN--\":5234:5261   */\n      mstore\n        /* \"--CODEGEN--\":5055:5274   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bf47649cb32ac7ddb8a89b81730f11f48475f563346d0c7270cf1812e91ce78f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061037c806100206000396000f3fe60806040526004361061001e5760003560e01c8063d2423b5114610023575b600080fd5b61003661003136600461016c565b610038565b005b60005b828110156100fe57600060603086868581811061005457fe5b905060200281019061006691906102ce565b60405161007492919061028b565b600060405180830381855af49150503d80600081146100af576040519150601f19603f3d011682016040523d82523d6000602084013e6100b4565b606091505b5091509150811580156100c45750835b156100f4576100d281610104565b60405162461bcd60e51b81526004016100eb919061029b565b60405180910390fd5b505060010161003b565b50505050565b606060448251101561014a575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006020820152610167565b6004820191508180602001905181019061016491906101f0565b90505b919050565b600080600060408486031215610180578283fd5b833567ffffffffffffffff80821115610197578485fd5b818601915086601f8301126101aa578485fd5b8135818111156101b8578586fd5b87602080830285010111156101cb578586fd5b6020928301955093505084013580151581146101e5578182fd5b809150509250925092565b600060208284031215610201578081fd5b815167ffffffffffffffff80821115610218578283fd5b818401915084601f83011261022b578283fd5b815181811115610239578384fd5b604051601f8201601f191681016020018381118282101715610259578586fd5b604052818152838201602001871015610270578485fd5b61028182602083016020870161031a565b9695505050505050565b6000828483379101908152919050565b60006020825282518060208401526102ba81604085016020870161031a565b601f01601f19169190910160400192915050565b6000808335601e198436030181126102e4578283fd5b83018035915067ffffffffffffffff8211156102fe578283fd5b60200191503681900382131561031357600080fd5b9250929050565b60005b8381101561033557818101518382015260200161031d565b838111156100fe575050600091015256fea2646970667358221220bf47649cb32ac7ddb8a89b81730f11f48475f563346d0c7270cf1812e91ce78f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD2423B51 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C JUMP JUMPDEST PUSH2 0x38 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 PUSH1 0x60 ADDRESS DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x54 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74 SWAP3 SWAP2 SWAP1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xAF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xC4 JUMPI POP DUP4 JUMPDEST ISZERO PUSH2 0xF4 JUMPI PUSH2 0xD2 DUP2 PUSH2 0x104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x3B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x14A JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x167 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1F0 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x180 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x197 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AA JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B8 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x1CB JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E5 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x201 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x218 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x239 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x259 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x270 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x281 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x31A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2BA DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x31A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2E4 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FE JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x335 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x31D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFE JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SELFBALANCE PUSH5 0x9CB32AC7DD 0xB8 0xA8 SWAP12 DUP2 PUSH20 0xF11F48475F563346D0C7270CF1812E91CE78F64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "255:1670:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c8063d2423b5114610023575b600080fd5b61003661003136600461016c565b610038565b005b60005b828110156100fe57600060603086868581811061005457fe5b905060200281019061006691906102ce565b60405161007492919061028b565b600060405180830381855af49150503d80600081146100af576040519150601f19603f3d011682016040523d82523d6000602084013e6100b4565b606091505b5091509150811580156100c45750835b156100f4576100d281610104565b60405162461bcd60e51b81526004016100eb919061029b565b60405180910390fd5b505060010161003b565b50505050565b606060448251101561014a575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006020820152610167565b6004820191508180602001905181019061016491906101f0565b90505b919050565b600080600060408486031215610180578283fd5b833567ffffffffffffffff80821115610197578485fd5b818601915086601f8301126101aa578485fd5b8135818111156101b8578586fd5b87602080830285010111156101cb578586fd5b6020928301955093505084013580151581146101e5578182fd5b809150509250925092565b600060208284031215610201578081fd5b815167ffffffffffffffff80821115610218578283fd5b818401915084601f83011261022b578283fd5b815181811115610239578384fd5b604051601f8201601f191681016020018381118282101715610259578586fd5b604052818152838201602001871015610270578485fd5b61028182602083016020870161031a565b9695505050505050565b6000828483379101908152919050565b60006020825282518060208401526102ba81604085016020870161031a565b601f01601f19169190910160400192915050565b6000808335601e198436030181126102e4578283fd5b83018035915067ffffffffffffffff8211156102fe578283fd5b60200191503681900382131561031357600080fd5b9250929050565b60005b8381101561033557818101518382015260200161031d565b838111156100fe575050600091015256fea2646970667358221220bf47649cb32ac7ddb8a89b81730f11f48475f563346d0c7270cf1812e91ce78f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD2423B51 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C JUMP JUMPDEST PUSH2 0x38 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 PUSH1 0x60 ADDRESS DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x54 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74 SWAP3 SWAP2 SWAP1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xAF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xC4 JUMPI POP DUP4 JUMPDEST ISZERO PUSH2 0xF4 JUMPI PUSH2 0xD2 DUP2 PUSH2 0x104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x3B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x14A JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x167 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1F0 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x180 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x197 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AA JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B8 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x1CB JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E5 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x201 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x218 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x239 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x259 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x270 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x281 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x31A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2BA DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x31A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2E4 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FE JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x335 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x31D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFE JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SELFBALANCE PUSH5 0x9CB32AC7DD 0xB8 0xA8 SWAP12 DUP2 PUSH20 0xF11F48475F563346D0C7270CF1812E91CE78F64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "255:1670:0:-:0;;;;;;;;;;;;;;;;;;;;;1585:338;;;;;;:::i;:::-;;:::i;:::-;;;1675:9;1670:247;1690:16;;;1670:247;;;1728:12;1742:19;1773:4;1792:5;;1798:1;1792:8;;;;;;;;;;;;;;;;;;:::i;:::-;1765:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:74;;;;1820:7;1819:8;:24;;;;;1831:12;1819:24;1815:92;;;1870:21;1884:6;1870:13;:21::i;:::-;1863:29;;-1:-1:-1;;;1863:29:0;;;;;;;;:::i;:::-;;;;;;;;1815:92;-1:-1:-1;;1708:3:0;;1670:247;;;;1585:338;;;:::o;477:487::-;549:13;710:2;689:11;:18;:23;685:67;;;-1:-1:-1;714:38:0;;;;;;;;;;;;;;;;;;;685:67;852:4;839:11;835:22;820:37;;894:11;883:33;;;;;;;;;;;;:::i;:::-;876:40;;477:487;;;;:::o;976:538:-1:-;;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;-1:-1;;1146:12;1108:2;1204:17;1191:31;1242:18;;1234:6;1231:30;1228:2;;;-1:-1;;1264:12;1228:2;1376:6;1365:9;1361:22;;;162:3;155:4;147:6;143:17;139:27;129:2;;-1:-1;;170:12;129:2;213:6;200:20;1242:18;232:6;229:30;226:2;;;-1:-1;;262:12;226:2;357:3;306:4;;341:6;337:17;298:6;323:32;;320:41;317:2;;;-1:-1;;364:12;317:2;306:4;294:17;;;;-1:-1;1284:109;-1:-1;;1466:22;;456:20;4825:13;;4818:21;5443:32;;5433:2;;-1:-1;;5479:12;5433:2;1438:60;;;;1102:412;;;;;:::o;1521:362::-;;1646:2;1634:9;1625:7;1621:23;1617:32;1614:2;;;-1:-1;;1652:12;1614:2;1703:17;1697:24;1741:18;;1733:6;1730:30;1727:2;;;-1:-1;;1763:12;1727:2;1850:6;1839:9;1835:22;;;637:3;630:4;622:6;618:17;614:27;604:2;;-1:-1;;645:12;604:2;685:6;679:13;1741:18;4112:6;4109:30;4106:2;;;-1:-1;;4142:12;4106:2;3775;3769:9;4215;4196:17;;-1:-1;;4192:33;3801:17;;1646:2;3801:17;3861:34;;;3897:22;;;3858:62;3855:2;;;-1:-1;;3923:12;3855:2;3775;3942:22;778:21;;;878:16;;;1646:2;878:16;875:25;-1:-1;872:2;;;-1:-1;;903:12;872:2;923:39;955:6;1646:2;854:5;850:16;1646:2;820:6;816:17;923:39;:::i;:::-;1783:84;1608:275;-1:-1;;;;;;1608:275::o;2585:291::-;;4933:6;4928:3;4923;4910:30;4971:16;;4964:27;;;4971:16;2729:147;-1:-1;2729:147::o;2883:310::-;;3030:2;3051:17;3044:47;2376:5;4393:12;4703:6;3030:2;3019:9;3015:18;4691:19;2470:52;2515:6;4731:14;3019:9;4731:14;3030:2;2496:5;2492:16;2470:52;:::i;:::-;4215:9;5350:14;-1:-1;;5346:28;2534:39;;;;4731:14;2534:39;;3001:192;-1:-1;;3001:192::o;3200:506::-;;;3335:11;3322:25;3386:48;;3410:8;3394:14;3390:29;3386:48;3366:18;3362:73;3352:2;;-1:-1;;3439:12;3352:2;3466:33;;3520:18;;;-1:-1;3558:18;3547:30;;3544:2;;;-1:-1;;3580:12;3544:2;3425:4;3608:13;;-1:-1;3394:14;3640:38;;;3630:49;;3627:2;;;3692:1;;3682:12;3627:2;3290:416;;;;;:::o;5006:268::-;5071:1;5078:101;5092:6;5089:1;5086:13;5078:101;;;5159:11;;;5153:18;5140:11;;;5133:39;5114:2;5107:10;5078:101;;;5194:6;5191:1;5188:13;5185:2;;;-1:-1;;5071:1;5241:16;;5234:27;5055:219::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "178400",
								"executionCost": "220",
								"totalCost": "178620"
							},
							"external": {
								"batch(bytes[],bool)": "infinite"
							},
							"internal": {
								"_getRevertMsg(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 255,
									"end": 1925,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 1925,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf47649cb32ac7ddb8a89b81730f11f48475f563346d0c7270cf1812e91ce78f64736f6c634300060c0033",
									".code": [
										{
											"begin": 255,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "D2423B51"
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1728,
											"end": 1740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1815,
											"end": 1907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1907,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1815,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1711,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1708,
											"end": 1711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 477,
											"end": 964,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 477,
											"end": 964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 689,
											"end": 700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 689,
											"end": 707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 689,
											"end": 712,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 685,
											"end": 752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 685,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 685,
											"end": 752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 714,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 714,
											"end": 752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "5472616E73616374696F6E2072657665727465642073696C656E746C79000000"
										},
										{
											"begin": 714,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 714,
											"end": 752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 714,
											"end": 752,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 685,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 856,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 835,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 820,
											"end": 857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 820,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 883,
											"end": 916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 883,
											"end": 916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 883,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 883,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 876,
											"end": 916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 477,
											"end": 964,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 477,
											"end": 964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 477,
											"end": 964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 477,
											"end": 964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 477,
											"end": 964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 477,
											"end": 964,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 976,
											"end": 1514,
											"name": "tag",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 976,
											"end": 1514,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1514,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1514,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1514,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1115,
											"end": 1138,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1146,
											"end": 1158,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "tag",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 1221,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1191,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1240,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1231,
											"end": 1261,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1228,
											"end": 1230,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1228,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 1228,
											"end": 1230,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1264,
											"end": 1276,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1228,
											"end": 1230,
											"name": "tag",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 1228,
											"end": 1230,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1376,
											"end": 1382,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1361,
											"end": 1383,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1361,
											"end": 1383,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1361,
											"end": 1383,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 162,
											"end": 165,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 139,
											"end": 166,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 129,
											"end": 131,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 129,
											"end": 131,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 170,
											"end": 182,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 129,
											"end": 131,
											"name": "tag",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 129,
											"end": 131,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 213,
											"end": 219,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 200,
											"end": 220,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 232,
											"end": 238,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 229,
											"end": 259,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 226,
											"end": 228,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 226,
											"end": 228,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 226,
											"end": 228,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 262,
											"end": 274,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 226,
											"end": 228,
											"name": "tag",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 226,
											"end": 228,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 357,
											"end": 360,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 306,
											"end": 310,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 310,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 341,
											"end": 347,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 337,
											"end": 354,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 298,
											"end": 304,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 323,
											"end": 355,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 323,
											"end": 355,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 320,
											"end": 361,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 317,
											"end": 319,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 317,
											"end": 319,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 317,
											"end": 319,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 364,
											"end": 376,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 317,
											"end": 319,
											"name": "tag",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 317,
											"end": 319,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 306,
											"end": 310,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1393,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1488,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1488,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 4825,
											"end": 4838,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4825,
											"end": 4838,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4839,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5475,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5475,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5479,
											"end": 5491,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "tag",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1498,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1498,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1498,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1498,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1102,
											"end": 1514,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1102,
											"end": 1514,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1102,
											"end": 1514,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1102,
											"end": 1514,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1102,
											"end": 1514,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1102,
											"end": 1514,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1521,
											"end": 1883,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 1521,
											"end": 1883,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1521,
											"end": 1883,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1625,
											"end": 1632,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1621,
											"end": 1644,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1617,
											"end": 1649,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "38"
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1652,
											"end": 1664,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "tag",
											"source": -1,
											"value": "38"
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1703,
											"end": 1720,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1741,
											"end": 1759,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1741,
											"end": 1759,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1760,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1729,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 1727,
											"end": 1729,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1775,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1729,
											"name": "tag",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 1727,
											"end": 1729,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1839,
											"end": 1848,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1835,
											"end": 1857,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1835,
											"end": 1857,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1835,
											"end": 1857,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 640,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 630,
											"end": 634,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 618,
											"end": 635,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 614,
											"end": 641,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 604,
											"end": 606,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 606,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 645,
											"end": 657,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 604,
											"end": 606,
											"name": "tag",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 606,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 685,
											"end": 691,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 679,
											"end": 692,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1741,
											"end": 1759,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4109,
											"end": 4139,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "tag",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3775,
											"end": 3777,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 4215,
											"end": 4224,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 4196,
											"end": 4213,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4196,
											"end": 4213,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4225,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 3895,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 3895,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 3895,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3858,
											"end": 3920,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "tag",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3775,
											"end": 3777,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 3964,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 778,
											"end": 799,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 778,
											"end": 799,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 778,
											"end": 799,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 878,
											"end": 894,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 878,
											"end": 894,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 878,
											"end": 894,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 894,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 875,
											"end": 900,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 872,
											"end": 874,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 872,
											"end": 874,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 872,
											"end": 874,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 903,
											"end": 915,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 872,
											"end": 874,
											"name": "tag",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 872,
											"end": 874,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 923,
											"end": 962,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 859,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 850,
											"end": 866,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 820,
											"end": 826,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 816,
											"end": 833,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 923,
											"end": 962,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 923,
											"end": 962,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 923,
											"end": 962,
											"name": "tag",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 923,
											"end": 962,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1783,
											"end": 1867,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 1608,
											"end": 1883,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1608,
											"end": 1883,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 2585,
											"end": 2876,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 2585,
											"end": 2876,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2585,
											"end": 2876,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4939,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4928,
											"end": 4931,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4926,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 4971,
											"end": 4987,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4971,
											"end": 4987,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4964,
											"end": 4991,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4964,
											"end": 4991,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4964,
											"end": 4991,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4971,
											"end": 4987,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 2876,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 2876,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 2883,
											"end": 3193,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 2883,
											"end": 3193,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2883,
											"end": 3193,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3032,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3068,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3044,
											"end": 3091,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2376,
											"end": 2381,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 4703,
											"end": 4709,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3030,
											"end": 3032,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4691,
											"end": 4710,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4745,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4745,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3030,
											"end": 3032,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "tag",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4215,
											"end": 4224,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 5350,
											"end": 5364,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5374,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2573,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2573,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2573,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2573,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4745,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2573,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2573,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3193,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3193,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3200,
											"end": 3706,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 3200,
											"end": 3706,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3200,
											"end": 3706,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3706,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3346,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3322,
											"end": 3347,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 3386,
											"end": 3434,
											"name": "PUSH",
											"source": -1,
											"value": "1E"
										},
										{
											"begin": 3386,
											"end": 3434,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3410,
											"end": 3418,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3394,
											"end": 3408,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3419,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3386,
											"end": 3434,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3362,
											"end": 3435,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 3352,
											"end": 3354,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3439,
											"end": 3451,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3354,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 3352,
											"end": 3354,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3466,
											"end": 3499,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3466,
											"end": 3499,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3558,
											"end": 3576,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3580,
											"end": 3592,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "tag",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3425,
											"end": 3429,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3621,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3608,
											"end": 3621,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3394,
											"end": 3408,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 3640,
											"end": 3678,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3640,
											"end": 3678,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3640,
											"end": 3678,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3630,
											"end": 3679,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3630,
											"end": 3679,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3694,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "tag",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3290,
											"end": 3706,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3290,
											"end": 3706,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3290,
											"end": 3706,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3290,
											"end": 3706,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3290,
											"end": 3706,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3290,
											"end": 3706,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5006,
											"end": 5274,
											"name": "tag",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 5006,
											"end": 5274,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5072,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5179,
											"name": "tag",
											"source": -1,
											"value": "54"
										},
										{
											"begin": 5078,
											"end": 5179,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5092,
											"end": 5098,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5086,
											"end": 5099,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 5078,
											"end": 5179,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5078,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 5078,
											"end": 5179,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 5159,
											"end": 5170,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5159,
											"end": 5170,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5159,
											"end": 5170,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5151,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5151,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5151,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5133,
											"end": 5172,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5114,
											"end": 5116,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5107,
											"end": 5117,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5078,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "54"
										},
										{
											"begin": 5078,
											"end": 5179,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5078,
											"end": 5179,
											"name": "tag",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 5078,
											"end": 5179,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5194,
											"end": 5200,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 5191,
											"end": 5192,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5188,
											"end": 5201,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5185,
											"end": 5187,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5185,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "9"
										},
										{
											"begin": 5185,
											"end": 5187,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5072,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5257,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5241,
											"end": 5257,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5234,
											"end": 5261,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5055,
											"end": 5274,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"batch(bytes[],bool)": "d2423b51"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"revertOnFail\",\"type\":\"bool\"}],\"name\":\"batch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batch(bytes[],bool)\":{\"params\":{\"calls\":\"An array of inputs for each call.\",\"revertOnFail\":\"If True then reverts after a failed call and stops doing further calls.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batch(bytes[],bool)\":{\"notice\":\"Allows batched call to self (this contract).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":\"BaseBoringBatchable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":{\"keccak256\":\"0xd1cb717800df6519b350eba78c2df2b700cbf6f32b3c0a4b6f40a218a00afd89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://027c89de99f7c870c1555704da07d614cce84a8f05ce688d5aff197e2404ed7d\",\"dweb:/ipfs/QmVvxzsgXELRJuvR3j2s25NgZ5X4ErUtJPUvzSXJUxPi5z\"]},\"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xf0da35541d6ae9e3c12fdd7c8d5d9584c56f9ac50d062efb8ca353ebd6ffd47d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8670101b72310d2c5e9b3e216e15ccb46de879acb9d3e2260952f331dad86301\",\"dweb:/ipfs/QmPzbTvPqhjo2bqxyoDasCBPtGUK41BrWvf5BJ5UmiUgAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"batch(bytes[],bool)": {
								"notice": "Allows batched call to self (this contract)."
							}
						},
						"version": 1
					}
				},
				"BoringBatchable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "calls",
									"type": "bytes[]"
								},
								{
									"internalType": "bool",
									"name": "revertOnFail",
									"type": "bool"
								}
							],
							"name": "batch",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permitToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"batch(bytes[],bool)": {
								"params": {
									"calls": "An array of inputs for each call.",
									"revertOnFail": "If True then reverts after a failed call and stops doing further calls."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1927:2580  contract BoringBatchable is BaseBoringBatchable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1927:2580  contract BoringBatchable is BaseBoringBatchable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7c516e94\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd2423b51\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2309:2578  function permitToken(... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1585:1923  function batch(bytes[] calldata calls, bool revertOnFail) external payable {... */\n    tag_3:\n      tag_5\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2309:2578  function permitToken(... */\n    tag_8:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2522:2571  token.permit(from, to, amount, deadline, v, r, s) */\n      mload(0x40)\n      shl(0xe0, 0xd505accf)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2522:2534  token.permit */\n      dup10\n      and\n      swap1\n      0xd505accf\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2522:2571  token.permit(from, to, amount, deadline, v, r, s) */\n      tag_14\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2535:2539  from */\n      dup11\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2541:2543  to */\n      dup11\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2545:2551  amount */\n      dup11\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2553:2561  deadline */\n      dup11\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2563:2564  v */\n      dup11\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2566:2567  r */\n      dup11\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2569:2570  s */\n      dup11\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2522:2571  token.permit(from, to, amount, deadline, v, r, s) */\n      0x04\n      add\n      tag_15\n      jump\t// in\n    tag_14:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":2309:2578  function permitToken(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1585:1923  function batch(bytes[] calldata calls, bool revertOnFail) external payable {... */\n    tag_12:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1675:1684  uint256 i */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1670:1917  for (uint256 i = 0; i < calls.length; i++) {... */\n    tag_20:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1690:1706  i < calls.length */\n      dup3\n      dup2\n      lt\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1670:1917  for (uint256 i = 0; i < calls.length; i++) {... */\n      iszero\n      tag_21\n      jumpi\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1728:1740  bool success */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1742:1761  bytes memory result */\n      0x60\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1773:1777  this */\n      address\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1792:1797  calls */\n      dup7\n      dup7\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1798:1799  i */\n      dup6\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1792:1800  calls[i] */\n      dup2\n      dup2\n      lt\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1765:1801  address(this).delegatecall(calls[i]) */\n      mload(0x40)\n      tag_26\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_30\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_29)\n    tag_30:\n      0x60\n      swap2\n      pop\n    tag_29:\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1727:1801  (bool success, bytes memory result) = address(this).delegatecall(calls[i]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1820:1827  success */\n      dup2\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1819:1827  !success */\n      iszero\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1819:1843  !success && revertOnFail */\n      dup1\n      iszero\n      tag_31\n      jumpi\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1831:1843  revertOnFail */\n      dup4\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1819:1843  !success && revertOnFail */\n    tag_31:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1815:1907  if (!success && revertOnFail) {... */\n      iszero\n      tag_32\n      jumpi\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1870:1891  _getRevertMsg(result) */\n      tag_33\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1884:1890  result */\n      dup2\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1870:1883  _getRevertMsg */\n      tag_34\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1870:1891  _getRevertMsg(result) */\n      jump\t// in\n    tag_33:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1863:1892  revert(_getRevertMsg(result)) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1815:1907  if (!success && revertOnFail) {... */\n    tag_32:\n      pop\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1708:1711  i++ */\n      0x01\n      add\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1670:1917  for (uint256 i = 0; i < calls.length; i++) {... */\n      jump(tag_20)\n    tag_21:\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":1585:1923  function batch(bytes[] calldata calls, bool revertOnFail) external payable {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":477:964  function _getRevertMsg(bytes memory _returnData) internal pure returns (string memory) {... */\n    tag_34:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":549:562  string memory */\n      0x60\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":710:712  68 */\n      0x44\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":689:700  _returnData */\n      dup3\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":689:707  _returnData.length */\n      mload\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":689:712  _returnData.length < 68 */\n      lt\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":685:752  if (_returnData.length < 68) return \"Transaction reverted silently\" */\n      iszero\n      tag_38\n      jumpi\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":714:752  return \"Transaction reverted silently\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x5472616e73616374696f6e2072657665727465642073696c656e746c79000000\n      0x20\n      dup3\n      add\n      mstore\n      jump(tag_37)\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":685:752  if (_returnData.length < 68) return \"Transaction reverted silently\" */\n    tag_38:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":852:856  0x04 */\n      0x04\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":839:850  _returnData */\n      dup3\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":835:857  add(_returnData, 0x04) */\n      add\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":820:857  _returnData := add(_returnData, 0x04) */\n      swap2\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":894:905  _returnData */\n      dup2\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":883:916  abi.decode(_returnData, (string)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":876:916  return abi.decode(_returnData, (string)) */\n      swap1\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":477:964  function _getRevertMsg(bytes memory _returnData) internal pure returns (string memory) {... */\n    tag_37:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":1685:2223   */\n    tag_11:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":1849:1851   */\n      0x40\n        /* \"--CODEGEN--\":1837:1846   */\n      dup5\n        /* \"--CODEGEN--\":1828:1835   */\n      dup7\n        /* \"--CODEGEN--\":1824:1847   */\n      sub\n        /* \"--CODEGEN--\":1820:1852   */\n      slt\n        /* \"--CODEGEN--\":1817:1819   */\n      iszero\n      tag_43\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":1855:1867   */\n      revert\n        /* \"--CODEGEN--\":1817:1819   */\n    tag_43:\n        /* \"--CODEGEN--\":1913:1930   */\n      dup4\n        /* \"--CODEGEN--\":1900:1931   */\n      calldataload\n        /* \"--CODEGEN--\":1951:1969   */\n      0xffffffffffffffff\n      dup1\n        /* \"--CODEGEN--\":1943:1949   */\n      dup3\n        /* \"--CODEGEN--\":1940:1970   */\n      gt\n        /* \"--CODEGEN--\":1937:1939   */\n      iszero\n      tag_44\n      jumpi\n      dup5\n      dup6\n        /* \"--CODEGEN--\":1973:1985   */\n      revert\n        /* \"--CODEGEN--\":1937:1939   */\n    tag_44:\n        /* \"--CODEGEN--\":2085:2091   */\n      dup2\n        /* \"--CODEGEN--\":2074:2083   */\n      dup7\n        /* \"--CODEGEN--\":2070:2092   */\n      add\n      swap2\n      pop\n        /* \"--CODEGEN--\":299:302   */\n      dup7\n        /* \"--CODEGEN--\":292:296   */\n      0x1f\n        /* \"--CODEGEN--\":284:290   */\n      dup4\n        /* \"--CODEGEN--\":280:297   */\n      add\n        /* \"--CODEGEN--\":276:303   */\n      slt\n        /* \"--CODEGEN--\":266:268   */\n      tag_45\n      jumpi\n      dup5\n      dup6\n        /* \"--CODEGEN--\":307:319   */\n      revert\n        /* \"--CODEGEN--\":266:268   */\n    tag_45:\n        /* \"--CODEGEN--\":350:356   */\n      dup2\n        /* \"--CODEGEN--\":337:357   */\n      calldataload\n        /* \"--CODEGEN--\":1951:1969   */\n      dup2\n        /* \"--CODEGEN--\":369:375   */\n      dup2\n        /* \"--CODEGEN--\":366:396   */\n      gt\n        /* \"--CODEGEN--\":363:365   */\n      iszero\n      tag_46\n      jumpi\n      dup6\n      dup7\n        /* \"--CODEGEN--\":399:411   */\n      revert\n        /* \"--CODEGEN--\":363:365   */\n    tag_46:\n        /* \"--CODEGEN--\":494:497   */\n      dup8\n        /* \"--CODEGEN--\":443:447   */\n      0x20\n      dup1\n        /* \"--CODEGEN--\":478:484   */\n      dup4\n        /* \"--CODEGEN--\":474:491   */\n      mul\n        /* \"--CODEGEN--\":435:441   */\n      dup6\n        /* \"--CODEGEN--\":460:492   */\n      add\n      add\n        /* \"--CODEGEN--\":457:498   */\n      gt\n        /* \"--CODEGEN--\":454:456   */\n      iszero\n      tag_47\n      jumpi\n      dup6\n      dup7\n        /* \"--CODEGEN--\":501:513   */\n      revert\n        /* \"--CODEGEN--\":454:456   */\n    tag_47:\n        /* \"--CODEGEN--\":443:447   */\n      0x20\n        /* \"--CODEGEN--\":431:448   */\n      swap3\n      dup4\n      add\n      swap6\n      pop\n        /* \"--CODEGEN--\":1993:2102   */\n      swap4\n      pop\n      pop\n        /* \"--CODEGEN--\":2175:2197   */\n      dup5\n      add\n        /* \"--CODEGEN--\":593:613   */\n      calldataload\n        /* \"--CODEGEN--\":8149:8162   */\n      dup1\n      iszero\n        /* \"--CODEGEN--\":8142:8163   */\n      iszero\n        /* \"--CODEGEN--\":9377:9409   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":9367:9369   */\n      tag_48\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":9413:9425   */\n      revert\n        /* \"--CODEGEN--\":9367:9369   */\n    tag_48:\n        /* \"--CODEGEN--\":2147:2207   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":1811:2223   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"--CODEGEN--\":2230:3375   */\n    tag_7:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":2465:2468   */\n      0x0100\n        /* \"--CODEGEN--\":2453:2462   */\n      dup10\n        /* \"--CODEGEN--\":2444:2451   */\n      dup12\n        /* \"--CODEGEN--\":2440:2463   */\n      sub\n        /* \"--CODEGEN--\":2436:2469   */\n      slt\n        /* \"--CODEGEN--\":2433:2435   */\n      iszero\n      tag_50\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":2472:2484   */\n      revert\n        /* \"--CODEGEN--\":2433:2435   */\n    tag_50:\n        /* \"--CODEGEN--\":891:897   */\n      dup9\n        /* \"--CODEGEN--\":878:898   */\n      calldataload\n        /* \"--CODEGEN--\":903:950   */\n      tag_51\n        /* \"--CODEGEN--\":944:949   */\n      dup2\n        /* \"--CODEGEN--\":903:950   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"--CODEGEN--\":2524:2601   */\n      swap8\n      pop\n        /* \"--CODEGEN--\":2638:2640   */\n      0x20\n        /* \"--CODEGEN--\":2677:2699   */\n      dup10\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_53\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_52\n      jump\t// in\n    tag_53:\n        /* \"--CODEGEN--\":2646:2709   */\n      swap7\n      pop\n        /* \"--CODEGEN--\":2746:2748   */\n      0x40\n        /* \"--CODEGEN--\":2785:2807   */\n      dup10\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_54\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_52\n      jump\t// in\n    tag_54:\n        /* \"--CODEGEN--\":2754:2817   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":2854:2856   */\n      0x60\n        /* \"--CODEGEN--\":2893:2915   */\n      dup10\n      add\n        /* \"--CODEGEN--\":1482:1502   */\n      calldataload\n      swap5\n      pop\n        /* \"--CODEGEN--\":2962:2965   */\n      0x80\n        /* \"--CODEGEN--\":3002:3024   */\n      dup10\n      add\n        /* \"--CODEGEN--\":1482:1502   */\n      calldataload\n      swap4\n      pop\n        /* \"--CODEGEN--\":3071:3074   */\n      0xa0\n        /* \"--CODEGEN--\":3109:3131   */\n      dup10\n      add\n        /* \"--CODEGEN--\":1617:1637   */\n      calldataload\n        /* \"--CODEGEN--\":8644:8648   */\n      0xff\n        /* \"--CODEGEN--\":8633:8649   */\n      dup2\n      and\n        /* \"--CODEGEN--\":9896:9929   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":9886:9888   */\n      tag_55\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":9933:9945   */\n      revert\n        /* \"--CODEGEN--\":9886:9888   */\n    tag_55:\n        /* \"--CODEGEN--\":2427:3375   */\n      swap8\n      swap11\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"--CODEGEN--\":3080:3141   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":3178:3181   */\n      0xc0\n        /* \"--CODEGEN--\":3218:3240   */\n      dup3\n      add\n        /* \"--CODEGEN--\":727:747   */\n      calldataload\n      swap2\n        /* \"--CODEGEN--\":3287:3290   */\n      0xe0\n        /* \"--CODEGEN--\":3327:3349   */\n      add\n        /* \"--CODEGEN--\":727:747   */\n      calldataload\n      swap1\n        /* \"--CODEGEN--\":2427:3375   */\n      jump\t// out\n        /* \"--CODEGEN--\":3382:3744   */\n    tag_40:\n      0x00\n        /* \"--CODEGEN--\":3507:3509   */\n      0x20\n        /* \"--CODEGEN--\":3495:3504   */\n      dup3\n        /* \"--CODEGEN--\":3486:3493   */\n      dup5\n        /* \"--CODEGEN--\":3482:3505   */\n      sub\n        /* \"--CODEGEN--\":3478:3510   */\n      slt\n        /* \"--CODEGEN--\":3475:3477   */\n      iszero\n      tag_57\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3513:3525   */\n      revert\n        /* \"--CODEGEN--\":3475:3477   */\n    tag_57:\n        /* \"--CODEGEN--\":3564:3581   */\n      dup2\n        /* \"--CODEGEN--\":3558:3582   */\n      mload\n        /* \"--CODEGEN--\":3602:3620   */\n      0xffffffffffffffff\n      dup1\n        /* \"--CODEGEN--\":3594:3600   */\n      dup3\n        /* \"--CODEGEN--\":3591:3621   */\n      gt\n        /* \"--CODEGEN--\":3588:3590   */\n      iszero\n      tag_58\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":3624:3636   */\n      revert\n        /* \"--CODEGEN--\":3588:3590   */\n    tag_58:\n        /* \"--CODEGEN--\":3711:3717   */\n      dup2\n        /* \"--CODEGEN--\":3700:3709   */\n      dup5\n        /* \"--CODEGEN--\":3696:3718   */\n      add\n      swap2\n      pop\n        /* \"--CODEGEN--\":1076:1079   */\n      dup5\n        /* \"--CODEGEN--\":1069:1073   */\n      0x1f\n        /* \"--CODEGEN--\":1061:1067   */\n      dup4\n        /* \"--CODEGEN--\":1057:1074   */\n      add\n        /* \"--CODEGEN--\":1053:1080   */\n      slt\n        /* \"--CODEGEN--\":1043:1045   */\n      tag_59\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":1084:1096   */\n      revert\n        /* \"--CODEGEN--\":1043:1045   */\n    tag_59:\n        /* \"--CODEGEN--\":1124:1130   */\n      dup2\n        /* \"--CODEGEN--\":1118:1131   */\n      mload\n        /* \"--CODEGEN--\":3602:3620   */\n      dup2\n        /* \"--CODEGEN--\":7338:7344   */\n      dup2\n        /* \"--CODEGEN--\":7335:7365   */\n      gt\n        /* \"--CODEGEN--\":7332:7334   */\n      iszero\n      tag_60\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":7368:7380   */\n      revert\n        /* \"--CODEGEN--\":7332:7334   */\n    tag_60:\n        /* \"--CODEGEN--\":7001:7003   */\n      0x40\n        /* \"--CODEGEN--\":6995:7004   */\n      mload\n        /* \"--CODEGEN--\":7441:7450   */\n      0x1f\n        /* \"--CODEGEN--\":7422:7439   */\n      dup3\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":7418:7451   */\n      and\n        /* \"--CODEGEN--\":7027:7044   */\n      dup2\n      add\n        /* \"--CODEGEN--\":3507:3509   */\n      0x20\n        /* \"--CODEGEN--\":7027:7044   */\n      add\n        /* \"--CODEGEN--\":7087:7121   */\n      dup4\n      dup2\n      gt\n        /* \"--CODEGEN--\":7123:7145   */\n      dup3\n      dup3\n      lt\n        /* \"--CODEGEN--\":7084:7146   */\n      or\n        /* \"--CODEGEN--\":7081:7083   */\n      iszero\n      tag_61\n      jumpi\n      dup6\n      dup7\n        /* \"--CODEGEN--\":7149:7161   */\n      revert\n        /* \"--CODEGEN--\":7081:7083   */\n    tag_61:\n        /* \"--CODEGEN--\":7001:7003   */\n      0x40\n        /* \"--CODEGEN--\":7168:7190   */\n      mstore\n        /* \"--CODEGEN--\":1217:1238   */\n      dup2\n      dup2\n      mstore\n        /* \"--CODEGEN--\":1317:1333   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":3507:3509   */\n      0x20\n        /* \"--CODEGEN--\":1317:1333   */\n      add\n        /* \"--CODEGEN--\":1314:1339   */\n      dup8\n      lt\n        /* \"--CODEGEN--\":1311:1313   */\n      iszero\n      tag_62\n      jumpi\n      dup5\n      dup6\n        /* \"--CODEGEN--\":1342:1354   */\n      revert\n        /* \"--CODEGEN--\":1311:1313   */\n    tag_62:\n        /* \"--CODEGEN--\":1362:1401   */\n      tag_63\n        /* \"--CODEGEN--\":1394:1400   */\n      dup3\n        /* \"--CODEGEN--\":3507:3509   */\n      0x20\n        /* \"--CODEGEN--\":1293:1298   */\n      dup4\n        /* \"--CODEGEN--\":1289:1305   */\n      add\n        /* \"--CODEGEN--\":3507:3509   */\n      0x20\n        /* \"--CODEGEN--\":1259:1265   */\n      dup8\n        /* \"--CODEGEN--\":1255:1272   */\n      add\n        /* \"--CODEGEN--\":1362:1401   */\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"--CODEGEN--\":3644:3728   */\n      swap7\n        /* \"--CODEGEN--\":3469:3744   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":4920:5211   */\n    tag_27:\n      0x00\n        /* \"--CODEGEN--\":8743:8749   */\n      dup3\n        /* \"--CODEGEN--\":8738:8741   */\n      dup5\n        /* \"--CODEGEN--\":8733:8736   */\n      dup4\n        /* \"--CODEGEN--\":8720:8750   */\n      calldatacopy\n        /* \"--CODEGEN--\":8781:8797   */\n      swap2\n      add\n        /* \"--CODEGEN--\":8774:8801   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":8781:8797   */\n      swap2\n        /* \"--CODEGEN--\":5064:5211   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5218:6102   */\n    tag_15:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":8428:8482   */\n      swap8\n      dup9\n      and\n        /* \"--CODEGEN--\":3822:3859   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":8428:8482   */\n      swap6\n      swap1\n      swap7\n      and\n        /* \"--CODEGEN--\":5674:5676   */\n      0x20\n        /* \"--CODEGEN--\":5659:5677   */\n      dup7\n      add\n        /* \"--CODEGEN--\":3822:3859   */\n      mstore\n        /* \"--CODEGEN--\":5757:5759   */\n      0x40\n        /* \"--CODEGEN--\":5742:5760   */\n      dup6\n      add\n        /* \"--CODEGEN--\":3942:3979   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"--CODEGEN--\":5840:5842   */\n      0x60\n        /* \"--CODEGEN--\":5825:5843   */\n      dup5\n      add\n        /* \"--CODEGEN--\":3942:3979   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":8644:8648   */\n      0xff\n        /* \"--CODEGEN--\":8633:8649   */\n      and\n        /* \"--CODEGEN--\":5919:5922   */\n      0x80\n        /* \"--CODEGEN--\":5904:5923   */\n      dup4\n      add\n        /* \"--CODEGEN--\":4873:4908   */\n      mstore\n        /* \"--CODEGEN--\":8439:8481   */\n      0xa0\n        /* \"--CODEGEN--\":5988:6007   */\n      dup3\n      add\n        /* \"--CODEGEN--\":3942:3979   */\n      mstore\n        /* \"--CODEGEN--\":6087:6090   */\n      0xc0\n        /* \"--CODEGEN--\":6072:6091   */\n      dup2\n      add\n        /* \"--CODEGEN--\":3942:3979   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":5509:5512   */\n      0xe0\n        /* \"--CODEGEN--\":5494:5513   */\n      add\n      swap1\n        /* \"--CODEGEN--\":5480:6102   */\n      jump\t// out\n        /* \"--CODEGEN--\":6109:6419   */\n    tag_36:\n      0x00\n        /* \"--CODEGEN--\":6256:6258   */\n      0x20\n        /* \"--CODEGEN--\":6277:6294   */\n      dup3\n        /* \"--CODEGEN--\":6270:6317   */\n      mstore\n        /* \"--CODEGEN--\":4477:4482   */\n      dup3\n        /* \"--CODEGEN--\":7619:7631   */\n      mload\n        /* \"--CODEGEN--\":7929:7935   */\n      dup1\n        /* \"--CODEGEN--\":6256:6258   */\n      0x20\n        /* \"--CODEGEN--\":6245:6254   */\n      dup5\n        /* \"--CODEGEN--\":6241:6259   */\n      add\n        /* \"--CODEGEN--\":7917:7936   */\n      mstore\n        /* \"--CODEGEN--\":4571:4623   */\n      tag_68\n        /* \"--CODEGEN--\":4616:4622   */\n      dup2\n        /* \"--CODEGEN--\":7957:7971   */\n      0x40\n        /* \"--CODEGEN--\":6245:6254   */\n      dup6\n        /* \"--CODEGEN--\":7957:7971   */\n      add\n        /* \"--CODEGEN--\":6256:6258   */\n      0x20\n        /* \"--CODEGEN--\":4597:4602   */\n      dup8\n        /* \"--CODEGEN--\":4593:4609   */\n      add\n        /* \"--CODEGEN--\":4571:4623   */\n      tag_64\n      jump\t// in\n    tag_68:\n        /* \"--CODEGEN--\":7441:7450   */\n      0x1f\n        /* \"--CODEGEN--\":9160:9174   */\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":9156:9184   */\n      and\n        /* \"--CODEGEN--\":4635:4674   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":7957:7971   */\n      0x40\n        /* \"--CODEGEN--\":4635:4674   */\n      add\n      swap3\n        /* \"--CODEGEN--\":6227:6419   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6426:6932   */\n    tag_25:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":6561:6572   */\n      dup4\n        /* \"--CODEGEN--\":6548:6573   */\n      calldataload\n        /* \"--CODEGEN--\":6612:6660   */\n      not(0x1e)\n        /* \"--CODEGEN--\":6636:6644   */\n      dup5\n        /* \"--CODEGEN--\":6620:6634   */\n      calldatasize\n        /* \"--CODEGEN--\":6616:6645   */\n      sub\n        /* \"--CODEGEN--\":6612:6660   */\n      add\n        /* \"--CODEGEN--\":6592:6610   */\n      dup2\n        /* \"--CODEGEN--\":6588:6661   */\n      slt\n        /* \"--CODEGEN--\":6578:6580   */\n      tag_70\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":6665:6677   */\n      revert\n        /* \"--CODEGEN--\":6578:6580   */\n    tag_70:\n        /* \"--CODEGEN--\":6692:6725   */\n      dup4\n      add\n        /* \"--CODEGEN--\":6746:6764   */\n      dup1\n      calldataload\n      swap2\n      pop\n        /* \"--CODEGEN--\":6784:6802   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":6773:6803   */\n      dup3\n      gt\n        /* \"--CODEGEN--\":6770:6772   */\n      iszero\n      tag_71\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":6806:6818   */\n      revert\n        /* \"--CODEGEN--\":6770:6772   */\n    tag_71:\n        /* \"--CODEGEN--\":6651:6655   */\n      0x20\n        /* \"--CODEGEN--\":6834:6847   */\n      add\n      swap2\n      pop\n        /* \"--CODEGEN--\":6620:6634   */\n      calldatasize\n        /* \"--CODEGEN--\":6866:6904   */\n      dup2\n      swap1\n      sub\n        /* \"--CODEGEN--\":6856:6905   */\n      dup3\n      sgt\n        /* \"--CODEGEN--\":6853:6855   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":6918:6919   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":6908:6920   */\n      revert\n        /* \"--CODEGEN--\":6853:6855   */\n    tag_72:\n        /* \"--CODEGEN--\":6516:6932   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":8816:9084   */\n    tag_64:\n        /* \"--CODEGEN--\":8881:8882   */\n      0x00\n        /* \"--CODEGEN--\":8888:8989   */\n    tag_74:\n        /* \"--CODEGEN--\":8902:8908   */\n      dup4\n        /* \"--CODEGEN--\":8899:8900   */\n      dup2\n        /* \"--CODEGEN--\":8896:8909   */\n      lt\n        /* \"--CODEGEN--\":8888:8989   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":8969:8980   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":8963:8981   */\n      mload\n        /* \"--CODEGEN--\":8950:8961   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":8943:8982   */\n      mstore\n        /* \"--CODEGEN--\":8924:8926   */\n      0x20\n        /* \"--CODEGEN--\":8917:8927   */\n      add\n        /* \"--CODEGEN--\":8888:8989   */\n      jump(tag_74)\n    tag_76:\n        /* \"--CODEGEN--\":9004:9010   */\n      dup4\n        /* \"--CODEGEN--\":9001:9002   */\n      dup2\n        /* \"--CODEGEN--\":8998:9011   */\n      gt\n        /* \"--CODEGEN--\":8995:8997   */\n      iszero\n      tag_21\n      jumpi\n      pop\n      pop\n        /* \"--CODEGEN--\":8881:8882   */\n      0x00\n        /* \"--CODEGEN--\":9051:9067   */\n      swap2\n      add\n        /* \"--CODEGEN--\":9044:9071   */\n      mstore\n        /* \"--CODEGEN--\":8865:9084   */\n      jump\t// out\n        /* \"--CODEGEN--\":9197:9314   */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":8428:8482   */\n      dup2\n      and\n        /* \"--CODEGEN--\":9256:9291   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":9246:9248   */\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":9305:9306   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":9295:9307   */\n      revert\n        /* \"--CODEGEN--\":9246:9248   */\n    tag_79:\n        /* \"--CODEGEN--\":9240:9314   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208f2bb5a8c4c079e6de606501bd39053068b61b0f25b5721df6ce8c4f8fbacdbb64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506104fb806100206000396000f3fe6080604052600436106100295760003560e01c80637c516e941461002e578063d2423b5114610050575b600080fd5b34801561003a57600080fd5b5061004e61004936600461028f565b610063565b005b61004e61005e36600461020b565b6100d7565b60405163d505accf60e01b81526001600160a01b0389169063d505accf9061009b908a908a908a908a908a908a908a906004016103c1565b600060405180830381600087803b1580156100b557600080fd5b505af11580156100c9573d6000803e3d6000fd5b505050505050505050505050565b60005b8281101561019d5760006060308686858181106100f357fe5b90506020028101906101059190610435565b6040516101139291906103b1565b600060405180830381855af49150503d806000811461014e576040519150601f19603f3d011682016040523d82523d6000602084013e610153565b606091505b5091509150811580156101635750835b1561019357610171816101a3565b60405162461bcd60e51b815260040161018a9190610402565b60405180910390fd5b50506001016100da565b50505050565b60606044825110156101e9575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006020820152610206565b600482019150818060200190518101906102039190610316565b90505b919050565b60008060006040848603121561021f578283fd5b833567ffffffffffffffff80821115610236578485fd5b818601915086601f830112610249578485fd5b813581811115610257578586fd5b876020808302850101111561026a578586fd5b602092830195509350508401358015158114610284578182fd5b809150509250925092565b600080600080600080600080610100898b0312156102ab578384fd5b88356102b6816104ad565b975060208901356102c6816104ad565b965060408901356102d6816104ad565b9550606089013594506080890135935060a089013560ff811681146102f9578384fd5b979a969950949793969295929450505060c08201359160e0013590565b600060208284031215610327578081fd5b815167ffffffffffffffff8082111561033e578283fd5b818401915084601f830112610351578283fd5b81518181111561035f578384fd5b604051601f8201601f19168101602001838111828210171561037f578586fd5b604052818152838201602001871015610396578485fd5b6103a7826020830160208701610481565b9695505050505050565b6000828483379101908152919050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6000602082528251806020840152610421816040850160208701610481565b601f01601f19169190910160400192915050565b6000808335601e1984360301811261044b578283fd5b83018035915067ffffffffffffffff821115610465578283fd5b60200191503681900382131561047a57600080fd5b9250929050565b60005b8381101561049c578181015183820152602001610484565b8381111561019d5750506000910152565b6001600160a01b03811681146104c257600080fd5b5056fea26469706673582212208f2bb5a8c4c079e6de606501bd39053068b61b0f25b5721df6ce8c4f8fbacdbb64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C516E94 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xD2423B51 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x20B JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xD505ACCF SWAP1 PUSH2 0x9B SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 PUSH1 0x60 ADDRESS DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xF3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP3 SWAP2 SWAP1 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x153 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x163 JUMPI POP DUP4 JUMPDEST ISZERO PUSH2 0x193 JUMPI PUSH2 0x171 DUP2 PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xDA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x1E9 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x206 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x236 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x257 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x26A JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x284 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2AB JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2B6 DUP2 PUSH2 0x4AD JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2C6 DUP2 PUSH2 0x4AD JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2D6 DUP2 PUSH2 0x4AD JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2F9 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0xC0 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0xE0 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x327 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x33E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x351 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x35F JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x37F JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x396 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x3A7 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x481 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP6 SWAP1 SWAP7 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x421 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x481 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x44B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x465 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x49C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x484 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x19D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x2B 0xB5 0xA8 0xC4 0xC0 PUSH26 0xE6DE606501BD39053068B61B0F25B5721DF6CE8C4F8FBACDBB64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "1927:653:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80637c516e941461002e578063d2423b5114610050575b600080fd5b34801561003a57600080fd5b5061004e61004936600461028f565b610063565b005b61004e61005e36600461020b565b6100d7565b60405163d505accf60e01b81526001600160a01b0389169063d505accf9061009b908a908a908a908a908a908a908a906004016103c1565b600060405180830381600087803b1580156100b557600080fd5b505af11580156100c9573d6000803e3d6000fd5b505050505050505050505050565b60005b8281101561019d5760006060308686858181106100f357fe5b90506020028101906101059190610435565b6040516101139291906103b1565b600060405180830381855af49150503d806000811461014e576040519150601f19603f3d011682016040523d82523d6000602084013e610153565b606091505b5091509150811580156101635750835b1561019357610171816101a3565b60405162461bcd60e51b815260040161018a9190610402565b60405180910390fd5b50506001016100da565b50505050565b60606044825110156101e9575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006020820152610206565b600482019150818060200190518101906102039190610316565b90505b919050565b60008060006040848603121561021f578283fd5b833567ffffffffffffffff80821115610236578485fd5b818601915086601f830112610249578485fd5b813581811115610257578586fd5b876020808302850101111561026a578586fd5b602092830195509350508401358015158114610284578182fd5b809150509250925092565b600080600080600080600080610100898b0312156102ab578384fd5b88356102b6816104ad565b975060208901356102c6816104ad565b965060408901356102d6816104ad565b9550606089013594506080890135935060a089013560ff811681146102f9578384fd5b979a969950949793969295929450505060c08201359160e0013590565b600060208284031215610327578081fd5b815167ffffffffffffffff8082111561033e578283fd5b818401915084601f830112610351578283fd5b81518181111561035f578384fd5b604051601f8201601f19168101602001838111828210171561037f578586fd5b604052818152838201602001871015610396578485fd5b6103a7826020830160208701610481565b9695505050505050565b6000828483379101908152919050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6000602082528251806020840152610421816040850160208701610481565b601f01601f19169190910160400192915050565b6000808335601e1984360301811261044b578283fd5b83018035915067ffffffffffffffff821115610465578283fd5b60200191503681900382131561047a57600080fd5b9250929050565b60005b8381101561049c578181015183820152602001610484565b8381111561019d5750506000910152565b6001600160a01b03811681146104c257600080fd5b5056fea26469706673582212208f2bb5a8c4c079e6de606501bd39053068b61b0f25b5721df6ce8c4f8fbacdbb64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C516E94 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xD2423B51 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x20B JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xD505ACCF SWAP1 PUSH2 0x9B SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 PUSH1 0x60 ADDRESS DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xF3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP3 SWAP2 SWAP1 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x153 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x163 JUMPI POP DUP4 JUMPDEST ISZERO PUSH2 0x193 JUMPI PUSH2 0x171 DUP2 PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xDA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x1E9 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x206 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x236 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x257 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x26A JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x284 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2AB JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2B6 DUP2 PUSH2 0x4AD JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2C6 DUP2 PUSH2 0x4AD JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2D6 DUP2 PUSH2 0x4AD JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2F9 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0xC0 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0xE0 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x327 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x33E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x351 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x35F JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x37F JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x396 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x3A7 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x481 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP6 SWAP1 SWAP7 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x421 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x481 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x44B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x465 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x49C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x484 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x19D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x2B 0xB5 0xA8 0xC4 0xC0 PUSH26 0xE6DE606501BD39053068B61B0F25B5721DF6CE8C4F8FBACDBB64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "1927:653:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;2309:269;;;;;;;;;;-1:-1:-1;2309:269:0;;;;;:::i;:::-;;:::i;:::-;;1585:338;;;;;;:::i;:::-;;:::i;2309:269::-;2522:49;;-1:-1:-1;;;2522:49:0;;-1:-1:-1;;;;;2522:12:0;;;;;:49;;2535:4;;2541:2;;2545:6;;2553:8;;2563:1;;2566;;2569;;2522:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2309:269;;;;;;;;:::o;1585:338::-;1675:9;1670:247;1690:16;;;1670:247;;;1728:12;1742:19;1773:4;1792:5;;1798:1;1792:8;;;;;;;;;;;;;;;;;;:::i;:::-;1765:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:74;;;;1820:7;1819:8;:24;;;;;1831:12;1819:24;1815:92;;;1870:21;1884:6;1870:13;:21::i;:::-;1863:29;;-1:-1:-1;;;1863:29:0;;;;;;;;:::i;:::-;;;;;;;;1815:92;-1:-1:-1;;1708:3:0;;1670:247;;;;1585:338;;;:::o;477:487::-;549:13;710:2;689:11;:18;:23;685:67;;;-1:-1:-1;714:38:0;;;;;;;;;;;;;;;;;;;685:67;852:4;839:11;835:22;820:37;;894:11;883:33;;;;;;;;;;;;:::i;:::-;876:40;;477:487;;;;:::o;1685:538:-1:-;;;;1849:2;1837:9;1828:7;1824:23;1820:32;1817:2;;;-1:-1;;1855:12;1817:2;1913:17;1900:31;1951:18;;1943:6;1940:30;1937:2;;;-1:-1;;1973:12;1937:2;2085:6;2074:9;2070:22;;;299:3;292:4;284:6;280:17;276:27;266:2;;-1:-1;;307:12;266:2;350:6;337:20;1951:18;369:6;366:30;363:2;;;-1:-1;;399:12;363:2;494:3;443:4;;478:6;474:17;435:6;460:32;;457:41;454:2;;;-1:-1;;501:12;454:2;443:4;431:17;;;;-1:-1;1993:109;-1:-1;;2175:22;;593:20;8149:13;;8142:21;9377:32;;9367:2;;-1:-1;;9413:12;9367:2;2147:60;;;;1811:412;;;;;:::o;2230:1145::-;;;;;;;;;2465:3;2453:9;2444:7;2440:23;2436:33;2433:2;;;-1:-1;;2472:12;2433:2;891:6;878:20;903:47;944:5;903:47;:::i;:::-;2524:77;-1:-1;2638:2;2677:22;;72:20;97:33;72:20;97:33;:::i;:::-;2646:63;-1:-1;2746:2;2785:22;;72:20;97:33;72:20;97:33;:::i;:::-;2754:63;-1:-1;2854:2;2893:22;;1482:20;;-1:-1;2962:3;3002:22;;1482:20;;-1:-1;3071:3;3109:22;;1617:20;8644:4;8633:16;;9896:33;;9886:2;;-1:-1;;9933:12;9886:2;2427:948;;;;-1:-1;2427:948;;;;;;3080:61;;-1:-1;;;3178:3;3218:22;;727:20;;3287:3;3327:22;727:20;;2427:948::o;3382:362::-;;3507:2;3495:9;3486:7;3482:23;3478:32;3475:2;;;-1:-1;;3513:12;3475:2;3564:17;3558:24;3602:18;;3594:6;3591:30;3588:2;;;-1:-1;;3624:12;3588:2;3711:6;3700:9;3696:22;;;1076:3;1069:4;1061:6;1057:17;1053:27;1043:2;;-1:-1;;1084:12;1043:2;1124:6;1118:13;3602:18;7338:6;7335:30;7332:2;;;-1:-1;;7368:12;7332:2;7001;6995:9;7441;7422:17;;-1:-1;;7418:33;7027:17;;3507:2;7027:17;7087:34;;;7123:22;;;7084:62;7081:2;;;-1:-1;;7149:12;7081:2;7001;7168:22;1217:21;;;1317:16;;;3507:2;1317:16;1314:25;-1:-1;1311:2;;;-1:-1;;1342:12;1311:2;1362:39;1394:6;3507:2;1293:5;1289:16;3507:2;1259:6;1255:17;1362:39;:::i;:::-;3644:84;3469:275;-1:-1;;;;;;3469:275::o;4920:291::-;;8743:6;8738:3;8733;8720:30;8781:16;;8774:27;;;8781:16;5064:147;-1:-1;5064:147::o;5218:884::-;-1:-1;;;;;8428:54;;;3822:37;;8428:54;;;;5674:2;5659:18;;3822:37;5757:2;5742:18;;3942:37;;;;5840:2;5825:18;;3942:37;;;;8644:4;8633:16;5919:3;5904:19;;4873:35;8439:42;5988:19;;3942:37;6087:3;6072:19;;3942:37;;;;5509:3;5494:19;;5480:622::o;6109:310::-;;6256:2;6277:17;6270:47;4477:5;7619:12;7929:6;6256:2;6245:9;6241:18;7917:19;4571:52;4616:6;7957:14;6245:9;7957:14;6256:2;4597:5;4593:16;4571:52;:::i;:::-;7441:9;9160:14;-1:-1;;9156:28;4635:39;;;;7957:14;4635:39;;6227:192;-1:-1;;6227:192::o;6426:506::-;;;6561:11;6548:25;6612:48;;6636:8;6620:14;6616:29;6612:48;6592:18;6588:73;6578:2;;-1:-1;;6665:12;6578:2;6692:33;;6746:18;;;-1:-1;6784:18;6773:30;;6770:2;;;-1:-1;;6806:12;6770:2;6651:4;6834:13;;-1:-1;6620:14;6866:38;;;6856:49;;6853:2;;;6918:1;;6908:12;6853:2;6516:416;;;;;:::o;8816:268::-;8881:1;8888:101;8902:6;8899:1;8896:13;8888:101;;;8969:11;;;8963:18;8950:11;;;8943:39;8924:2;8917:10;8888:101;;;9004:6;9001:1;8998:13;8995:2;;;-1:-1;;8881:1;9051:16;;9044:27;8865:219::o;9197:117::-;-1:-1;;;;;8428:54;;9256:35;;9246:2;;9305:1;;9295:12;9246:2;9240:74;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "255000",
								"executionCost": "294",
								"totalCost": "255294"
							},
							"external": {
								"batch(bytes[],bool)": "infinite",
								"permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1927,
									"end": 2580,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1927,
									"end": 2580,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f2bb5a8c4c079e6de606501bd39053068b61b0f25b5721df6ce8c4f8fbacdbb64736f6c634300060c0033",
									".code": [
										{
											"begin": 1927,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "7C516E94"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "D2423B51"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 2580,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D505ACCF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2539,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2543,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2561,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2564,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2567,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2578,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1728,
											"end": 1740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1815,
											"end": 1907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1907,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1815,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1711,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1708,
											"end": 1711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1923,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 477,
											"end": 964,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 477,
											"end": 964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 689,
											"end": 700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 689,
											"end": 707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 689,
											"end": 712,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 685,
											"end": 752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 685,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 685,
											"end": 752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 714,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 714,
											"end": 752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "5472616E73616374696F6E2072657665727465642073696C656E746C79000000"
										},
										{
											"begin": 714,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 714,
											"end": 752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 714,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 714,
											"end": 752,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 685,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 856,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 835,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 820,
											"end": 857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 820,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 883,
											"end": 916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 883,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 883,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 883,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 876,
											"end": 916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 477,
											"end": 964,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 477,
											"end": 964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 477,
											"end": 964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 477,
											"end": 964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 477,
											"end": 964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 477,
											"end": 964,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1685,
											"end": 2223,
											"name": "tag",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 1685,
											"end": 2223,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 2223,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 2223,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 2223,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1846,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1835,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1847,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1819,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 1817,
											"end": 1819,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 1867,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1819,
											"name": "tag",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 1817,
											"end": 1819,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 1931,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 1970,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1937,
											"end": 1939,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1937,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 1937,
											"end": 1939,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1973,
											"end": 1985,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1937,
											"end": 1939,
											"name": "tag",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 1937,
											"end": 1939,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2091,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2083,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2092,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2092,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2092,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 299,
											"end": 302,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 280,
											"end": 297,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 276,
											"end": 303,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 266,
											"end": 268,
											"name": "tag",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 350,
											"end": 356,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 337,
											"end": 357,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 366,
											"end": 396,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 363,
											"end": 365,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 363,
											"end": 365,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 363,
											"end": 365,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 399,
											"end": 411,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 363,
											"end": 365,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 363,
											"end": 365,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 494,
											"end": 497,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 443,
											"end": 447,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 443,
											"end": 447,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 474,
											"end": 491,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 460,
											"end": 492,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 460,
											"end": 492,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 457,
											"end": 498,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 454,
											"end": 456,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 454,
											"end": 456,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 454,
											"end": 456,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 501,
											"end": 513,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 454,
											"end": 456,
											"name": "tag",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 454,
											"end": 456,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 443,
											"end": 447,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 448,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 431,
											"end": 448,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 431,
											"end": 448,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 431,
											"end": 448,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1993,
											"end": 2102,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 593,
											"end": 613,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 8149,
											"end": 8162,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 8149,
											"end": 8162,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8142,
											"end": 8163,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 9377,
											"end": 9409,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 9377,
											"end": 9409,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 9367,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 9367,
											"end": 9369,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9413,
											"end": 9425,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 9367,
											"end": 9369,
											"name": "tag",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 9367,
											"end": 9369,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2147,
											"end": 2207,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2147,
											"end": 2207,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2147,
											"end": 2207,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2147,
											"end": 2207,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 2223,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 2223,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 2223,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 2223,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 2223,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 2223,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 2230,
											"end": 3375,
											"name": "tag",
											"source": -1,
											"value": "7"
										},
										{
											"begin": 2230,
											"end": 3375,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 3375,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 3375,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 3375,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 3375,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 3375,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 3375,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 3375,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 3375,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2465,
											"end": 2468,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "DUP12",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2463,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2436,
											"end": 2469,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2433,
											"end": 2435,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2433,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 2433,
											"end": 2435,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2472,
											"end": 2484,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2433,
											"end": 2435,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 2433,
											"end": 2435,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 878,
											"end": 898,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 903,
											"end": 950,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 944,
											"end": 949,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 903,
											"end": 950,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 903,
											"end": 950,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 950,
											"name": "tag",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 903,
											"end": 950,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2524,
											"end": 2601,
											"name": "SWAP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2746,
											"end": 2748,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 2785,
											"end": 2807,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "54"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "54"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2754,
											"end": 2817,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2854,
											"end": 2856,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 2893,
											"end": 2915,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 2893,
											"end": 2915,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1502,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1502,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 3002,
											"end": 3024,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3024,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1502,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1502,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 3109,
											"end": 3131,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 3109,
											"end": 3131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1617,
											"end": 1637,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": 8633,
											"end": 8649,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8633,
											"end": 8649,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 9896,
											"end": 9929,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 9896,
											"end": 9929,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 9886,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "55"
										},
										{
											"begin": 9886,
											"end": 9888,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 9886,
											"end": 9888,
											"name": "tag",
											"source": -1,
											"value": "55"
										},
										{
											"begin": 9886,
											"end": 9888,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 3375,
											"name": "SWAP8",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 3375,
											"name": "SWAP11",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 3375,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 3375,
											"name": "SWAP10",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 3375,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 3375,
											"name": "SWAP8",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 3375,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 3375,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 3375,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 3375,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 3080,
											"end": 3141,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3080,
											"end": 3141,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3178,
											"end": 3181,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": 3218,
											"end": 3240,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3218,
											"end": 3240,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 727,
											"end": 747,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 727,
											"end": 747,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 3327,
											"end": 3349,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 727,
											"end": 747,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 727,
											"end": 747,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 3375,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3382,
											"end": 3744,
											"name": "tag",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3744,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3382,
											"end": 3744,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3495,
											"end": 3504,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3482,
											"end": 3505,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3478,
											"end": 3510,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3475,
											"end": 3477,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3475,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "57"
										},
										{
											"begin": 3475,
											"end": 3477,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3525,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3475,
											"end": 3477,
											"name": "tag",
											"source": -1,
											"value": "57"
										},
										{
											"begin": 3475,
											"end": 3477,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3564,
											"end": 3581,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3558,
											"end": 3582,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3594,
											"end": 3600,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3591,
											"end": 3621,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3624,
											"end": 3636,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3718,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3718,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3718,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1076,
											"end": 1079,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1069,
											"end": 1073,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 1061,
											"end": 1067,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1057,
											"end": 1074,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "59"
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1084,
											"end": 1096,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "tag",
											"source": -1,
											"value": "59"
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1130,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7338,
											"end": 7344,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7335,
											"end": 7365,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7332,
											"end": 7334,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 7332,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 7332,
											"end": 7334,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 7368,
											"end": 7380,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 7332,
											"end": 7334,
											"name": "tag",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 7332,
											"end": 7334,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7001,
											"end": 7003,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 6995,
											"end": 7004,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 7441,
											"end": 7450,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 7422,
											"end": 7439,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7422,
											"end": 7439,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7418,
											"end": 7451,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 7027,
											"end": 7044,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7027,
											"end": 7044,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 7027,
											"end": 7044,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7121,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7121,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7123,
											"end": 7145,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7123,
											"end": 7145,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7123,
											"end": 7145,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 7084,
											"end": 7146,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 7149,
											"end": 7161,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "tag",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7001,
											"end": 7003,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1317,
											"end": 1333,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1317,
											"end": 1333,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1317,
											"end": 1333,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1333,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1339,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1311,
											"end": 1313,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1311,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 1311,
											"end": 1313,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1311,
											"end": 1313,
											"name": "tag",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 1311,
											"end": 1313,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 1394,
											"end": 1400,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1298,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1305,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 1255,
											"end": 1272,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 1362,
											"end": 1401,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1401,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 1362,
											"end": 1401,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3644,
											"end": 3728,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 3469,
											"end": 3744,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3469,
											"end": 3744,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 4920,
											"end": 5211,
											"name": "tag",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 4920,
											"end": 5211,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4920,
											"end": 5211,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8743,
											"end": 8749,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8738,
											"end": 8741,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 8733,
											"end": 8736,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8720,
											"end": 8750,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 8781,
											"end": 8797,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8781,
											"end": 8797,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8774,
											"end": 8801,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8774,
											"end": 8801,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8774,
											"end": 8801,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8781,
											"end": 8797,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5064,
											"end": 5211,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5064,
											"end": 5211,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5218,
											"end": 6102,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 5218,
											"end": 6102,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8482,
											"name": "SWAP8",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8482,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8482,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 3822,
											"end": 3859,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3822,
											"end": 3859,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8482,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8482,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8482,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8482,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3822,
											"end": 3859,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5757,
											"end": 5759,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5840,
											"end": 5842,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 5825,
											"end": 5843,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5825,
											"end": 5843,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": 8633,
											"end": 8649,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 5904,
											"end": 5923,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 5904,
											"end": 5923,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4873,
											"end": 4908,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8439,
											"end": 8481,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6087,
											"end": 6090,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": 6072,
											"end": 6091,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6072,
											"end": 6091,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5509,
											"end": 5512,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 5494,
											"end": 5513,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5494,
											"end": 5513,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5480,
											"end": 6102,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 6109,
											"end": 6419,
											"name": "tag",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 6109,
											"end": 6419,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6419,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6256,
											"end": 6258,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6270,
											"end": 6317,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4477,
											"end": 4482,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7619,
											"end": 7631,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 7929,
											"end": 7935,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6256,
											"end": 6258,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6245,
											"end": 6254,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6241,
											"end": 6259,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7917,
											"end": 7936,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4571,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "68"
										},
										{
											"begin": 4616,
											"end": 4622,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7957,
											"end": 7971,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 6245,
											"end": 6254,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 7957,
											"end": 7971,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6256,
											"end": 6258,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 4593,
											"end": 4609,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4571,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 4571,
											"end": 4623,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4571,
											"end": 4623,
											"name": "tag",
											"source": -1,
											"value": "68"
										},
										{
											"begin": 4571,
											"end": 4623,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7441,
											"end": 7450,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 9160,
											"end": 9174,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9156,
											"end": 9184,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 4635,
											"end": 4674,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4635,
											"end": 4674,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4635,
											"end": 4674,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4635,
											"end": 4674,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7957,
											"end": 7971,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4674,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4635,
											"end": 4674,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6227,
											"end": 6419,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6227,
											"end": 6419,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 6426,
											"end": 6932,
											"name": "tag",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 6426,
											"end": 6932,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6426,
											"end": 6932,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6932,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6561,
											"end": 6572,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6573,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 6612,
											"end": 6660,
											"name": "PUSH",
											"source": -1,
											"value": "1E"
										},
										{
											"begin": 6612,
											"end": 6660,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6636,
											"end": 6644,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6620,
											"end": 6634,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 6616,
											"end": 6645,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6612,
											"end": 6660,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6588,
											"end": 6661,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 6578,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "70"
										},
										{
											"begin": 6578,
											"end": 6580,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6665,
											"end": 6677,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6578,
											"end": 6580,
											"name": "tag",
											"source": -1,
											"value": "70"
										},
										{
											"begin": 6578,
											"end": 6580,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6692,
											"end": 6725,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6692,
											"end": 6725,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6802,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6773,
											"end": 6803,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6773,
											"end": 6803,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 6770,
											"end": 6772,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6770,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 6770,
											"end": 6772,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6806,
											"end": 6818,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6770,
											"end": 6772,
											"name": "tag",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 6770,
											"end": 6772,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6651,
											"end": 6655,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6847,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6847,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6620,
											"end": 6634,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6904,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6904,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6904,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6856,
											"end": 6905,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6856,
											"end": 6905,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "72"
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6908,
											"end": 6920,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "tag",
											"source": -1,
											"value": "72"
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 6932,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 6932,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 6932,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 6932,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 6932,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 6932,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 8816,
											"end": 9084,
											"name": "tag",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 8816,
											"end": 9084,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8881,
											"end": 8882,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8989,
											"name": "tag",
											"source": -1,
											"value": "74"
										},
										{
											"begin": 8888,
											"end": 8989,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8902,
											"end": 8908,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8900,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8896,
											"end": 8909,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8888,
											"end": 8989,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8888,
											"end": 8989,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "76"
										},
										{
											"begin": 8888,
											"end": 8989,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 8969,
											"end": 8980,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8969,
											"end": 8980,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8969,
											"end": 8980,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8963,
											"end": 8981,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 8950,
											"end": 8961,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8950,
											"end": 8961,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8950,
											"end": 8961,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8943,
											"end": 8982,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8924,
											"end": 8926,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8917,
											"end": 8927,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8888,
											"end": 8989,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "74"
										},
										{
											"begin": 8888,
											"end": 8989,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8888,
											"end": 8989,
											"name": "tag",
											"source": -1,
											"value": "76"
										},
										{
											"begin": 8888,
											"end": 8989,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9001,
											"end": 9002,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8998,
											"end": 9011,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8995,
											"end": 8997,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8995,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8995,
											"end": 8997,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8881,
											"end": 8882,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9051,
											"end": 9067,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 9051,
											"end": 9067,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9044,
											"end": 9071,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8865,
											"end": 9084,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 9197,
											"end": 9314,
											"name": "tag",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 9197,
											"end": 9314,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8482,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8482,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 9256,
											"end": 9291,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 9256,
											"end": 9291,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 9246,
											"end": 9248,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 9246,
											"end": 9248,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 9305,
											"end": 9306,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9306,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 9295,
											"end": 9307,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 9246,
											"end": 9248,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 9246,
											"end": 9248,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9240,
											"end": 9314,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9240,
											"end": 9314,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"batch(bytes[],bool)": "d2423b51",
							"permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "7c516e94"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"revertOnFail\",\"type\":\"bool\"}],\"name\":\"batch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batch(bytes[],bool)\":{\"params\":{\"calls\":\"An array of inputs for each call.\",\"revertOnFail\":\"If True then reverts after a failed call and stops doing further calls.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batch(bytes[],bool)\":{\"notice\":\"Allows batched call to self (this contract).\"},\"permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":\"BoringBatchable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":{\"keccak256\":\"0xd1cb717800df6519b350eba78c2df2b700cbf6f32b3c0a4b6f40a218a00afd89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://027c89de99f7c870c1555704da07d614cce84a8f05ce688d5aff197e2404ed7d\",\"dweb:/ipfs/QmVvxzsgXELRJuvR3j2s25NgZ5X4ErUtJPUvzSXJUxPi5z\"]},\"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xf0da35541d6ae9e3c12fdd7c8d5d9584c56f9ac50d062efb8ca353ebd6ffd47d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8670101b72310d2c5e9b3e216e15ccb46de879acb9d3e2260952f331dad86301\",\"dweb:/ipfs/QmPzbTvPqhjo2bqxyoDasCBPtGUK41BrWvf5BJ5UmiUgAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"batch(bytes[],bool)": {
								"notice": "Allows batched call to self (this contract)."
							},
							"permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`."
							}
						},
						"version": 1
					}
				}
			},
			"@boringcrypto/boring-solidity/contracts/Domain.sol": {
				"Domain": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":307:2110  contract Domain {... */\n  mstore(0x40, 0xc0)\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1068:1245  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1137:1146  chainid() */\n  chainid\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1202:1237  DOMAIN_SEPARATOR_CHAIN_ID = chainId */\n  0xa0\n  dup2\n  swap1\n  mstore\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1176:1238  _calculateDomainSeparator(DOMAIN_SEPARATOR_CHAIN_ID = chainId) */\n  tag_4\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1137:1146  chainid() */\n  dup2\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1176:1201  _calculateDomainSeparator */\n  tag_5\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1176:1238  _calculateDomainSeparator(DOMAIN_SEPARATOR_CHAIN_ID = chainId) */\n  jump\t// in\ntag_4:\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1156:1238  _DOMAIN_SEPARATOR = _calculateDomainSeparator(DOMAIN_SEPARATOR_CHAIN_ID = chainId) */\n  0x80\n  mstore\n  pop\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":307:2110  contract Domain {... */\n  jump(tag_6)\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":793:1062  function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {... */\ntag_5:\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":916:1045  abi.encode(... */\n  0x40\n  dup1\n  mload\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":388:456  keccak256(\"EIP712Domain(uint256 chainId,address verifyingContract)\") */\n  0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":916:1045  abi.encode(... */\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  dup4\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1026:1030  this */\n  address\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":916:1045  abi.encode(... */\n  0x60\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup3\n  mload\n  dup1\n  dup4\n  sub\n  swap1\n  swap2\n  add\n  dup2\n  mstore\n  0x80\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  mstore\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":893:1055  keccak256(... */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n  swap1\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":793:1062  function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {... */\n  jump\t// out\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":307:2110  contract Domain {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x24036ccf201a67256250eabe66d3f9fd72f9c4d022f225a8ee964be060dcb993\")\n  assignImmutable(\"0x7dbef654fd5c6145f82b72cd5dbbfc6d48fd276b8a7a4371a61d55985b9d6d8b\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":307:2110  contract Domain {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a24fba1d3e21f32104d6014ee5c358c1e75aa274c20d086ce95b618122405f6b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60c0604052348015600f57600080fd5b504660a0819052601d816025565b60805250607e565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020808301919091528183019390935230606080830191909152825180830390910181526080909101909152805191012090565b60805160a051603f60946000395050603f6000f3fe6080604052600080fdfea2646970667358221220a24fba1d3e21f32104d6014ee5c358c1e75aa274c20d086ce95b618122405f6b64736f6c634300060c0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CHAINID PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x1D DUP2 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x80 MSTORE POP PUSH1 0x7E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0x3F PUSH1 0x94 PUSH1 0x0 CODECOPY POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0x4F 0xBA SAR RETURNDATACOPY 0x21 RETURN 0x21 DIV 0xD6 ADD 0x4E 0xE5 0xC3 PC 0xC1 0xE7 GAS LOG2 PUSH21 0xC20D086CE95B618122405F6B64736F6C634300060C STOP CALLER ",
							"sourceMap": "307:1803:1:-:0;;;1068:177;;;;;;;;;-1:-1:-1;1137:9:1;1202:35;;;;1176:62;1137:9;1176:25;:62::i;:::-;1156:82;;-1:-1:-1;307:1803:1;;793:269;916:129;;;388:68;916:129;;;;;;;;;;;;;;;1026:4;916:129;;;;;;;;;;;;;;;;;;;;;;;;;893:162;;;;;;793:269::o;307:1803::-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220a24fba1d3e21f32104d6014ee5c358c1e75aa274c20d086ce95b618122405f6b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0x4F 0xBA SAR RETURNDATACOPY 0x21 RETURN 0x21 DIV 0xD6 ADD 0x4E 0xE5 0xC3 PC 0xC1 0xE7 GAS LOG2 PUSH21 0xC20D086CE95B618122405F6B64736F6C634300060C STOP CALLER ",
							"sourceMap": "307:1803:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_calculateDomainSeparator(uint256)": "infinite",
								"_domainSeparator()": "infinite",
								"_getDigest(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 307,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1068,
									"end": 1245,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1068,
									"end": 1245,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1068,
									"end": 1245,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1068,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1068,
									"end": 1245,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1068,
									"end": 1245,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1068,
									"end": 1245,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1068,
									"end": 1245,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1068,
									"end": 1245,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1068,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1137,
									"end": 1146,
									"name": "CHAINID",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1137,
									"end": 1146,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1156,
									"end": 1238,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1156,
									"end": 1238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 388,
									"end": 456,
									"name": "PUSH",
									"source": 1,
									"value": "47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1026,
									"end": 1030,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 2110,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a24fba1d3e21f32104d6014ee5c358c1e75aa274c20d086ce95b618122405f6b64736f6c634300060c0033",
									".code": [
										{
											"begin": 307,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 307,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 2110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 307,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 2110,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 307,
											"end": 2110,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/Domain.sol\":\"Domain\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/Domain.sol\":{\"keccak256\":\"0xe5215010c5a07b4b2fb1a2347b2106377678fea3d6f9ed656677c0570de2f6aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d7d2b184772d1524e61160790a8c7968c7b9fa6879545764f8a243ae52db84\",\"dweb:/ipfs/QmQTHA2gtm1zfK9GfrrZk5X2A7725RNSLNZFPn8CAMSf4v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@boringcrypto/boring-solidity/contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"params": {
									"amount": "The maximum collective amount that `spender` can draw.",
									"spender": "Address of the party that can draw from msg.sender's account."
								},
								"returns": {
									"_0": "(bool) Returns True if approved."
								}
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "This permit must be redeemed before this deadline (UTC timestamp in seconds).",
									"owner_": "Address of the owner.",
									"spender": "The address of the spender that gets approved to draw from `owner_`.",
									"value": "The maximum collective amount that `spender` can draw."
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "of the tokens to move.",
									"to": "The address to move the tokens."
								},
								"returns": {
									"_0": "(bool) Returns True if succeeded."
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The token amount to move.",
									"from": "Address to draw tokens from.",
									"to": "The address to move the tokens."
								},
								"returns": {
									"_0": "(bool) Returns True if succeeded."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"amount\":\"The maximum collective amount that `spender` can draw.\",\"spender\":\"Address of the party that can draw from msg.sender's account.\"},\"returns\":{\"_0\":\"(bool) Returns True if approved.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"This permit must be redeemed before this deadline (UTC timestamp in seconds).\",\"owner_\":\"Address of the owner.\",\"spender\":\"The address of the spender that gets approved to draw from `owner_`.\",\"value\":\"The maximum collective amount that `spender` can draw.\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"of the tokens to move.\",\"to\":\"The address to move the tokens.\"},\"returns\":{\"_0\":\"(bool) Returns True if succeeded.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The token amount to move.\",\"from\":\"Address to draw tokens from.\",\"to\":\"The address to move the tokens.\"},\"returns\":{\"_0\":\"(bool) Returns True if succeeded.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"owner > spender > allowance mapping.\"},\"approve(address,uint256)\":{\"notice\":\"Approves `amount` from sender to be spend by `spender`.\"},\"balanceOf(address)\":{\"notice\":\"owner > balance mapping.\"},\"nonces(address)\":{\"notice\":\"owner > nonce mapping. Used in `permit`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approves `value` from `owner_` to be spend by `spender`.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `msg.sender` to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `from` to `to`. Caller needs approval for `from`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/Domain.sol\":{\"keccak256\":\"0xe5215010c5a07b4b2fb1a2347b2106377678fea3d6f9ed656677c0570de2f6aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d7d2b184772d1524e61160790a8c7968c7b9fa6879545764f8a243ae52db84\",\"dweb:/ipfs/QmQTHA2gtm1zfK9GfrrZk5X2A7725RNSLNZFPn8CAMSf4v\"]},\"@boringcrypto/boring-solidity/contracts/ERC20.sol\":{\"keccak256\":\"0x215d98f2006287eb309c79fcfebd5a25cf26e60ccf28923d203de07b6f671658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e19b72bd3e27113efec8111083dec06697d2d18b46c04fc7c7a0e9d6d6172e\",\"dweb:/ipfs/QmNoUEdjTryBBFhHqpf7JFWsMyFt72BQHV7DmsWNvgg4kn\"]},\"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xf0da35541d6ae9e3c12fdd7c8d5d9584c56f9ac50d062efb8ca353ebd6ffd47d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8670101b72310d2c5e9b3e216e15ccb46de879acb9d3e2260952f331dad86301\",\"dweb:/ipfs/QmPzbTvPqhjo2bqxyoDasCBPtGUK41BrWvf5BJ5UmiUgAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 238,
								"contract": "@boringcrypto/boring-solidity/contracts/ERC20.sol:ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 246,
								"contract": "@boringcrypto/boring-solidity/contracts/ERC20.sol:ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 251,
								"contract": "@boringcrypto/boring-solidity/contracts/ERC20.sol:ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "owner > spender > allowance mapping."
							},
							"approve(address,uint256)": {
								"notice": "Approves `amount` from sender to be spend by `spender`."
							},
							"balanceOf(address)": {
								"notice": "owner > balance mapping."
							},
							"nonces(address)": {
								"notice": "owner > nonce mapping. Used in `permit`."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approves `value` from `owner_` to be spend by `spender`."
							},
							"transfer(address,uint256)": {
								"notice": "Transfers `amount` tokens from `msg.sender` to `to`."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `from` to `to`. Caller needs approval for `from`."
							}
						},
						"version": 1
					}
				},
				"ERC20Data": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":266:606  contract ERC20Data {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":266:606  contract ERC20Data {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":332:376  mapping(address => uint256) public balanceOf */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_8\n      jump\t// in\n    tag_6:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":562:603  mapping(address => uint256) public nonces */\n    tag_4:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_11\n      jump\t// in\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":435:499  mapping(address => mapping(address => uint256)) public allowance */\n    tag_5:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_14\n      jump\t// in\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":332:376  mapping(address => uint256) public balanceOf */\n    tag_8:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":562:603  mapping(address => uint256) public nonces */\n    tag_11:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":435:499  mapping(address => mapping(address => uint256)) public allowance */\n    tag_14:\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n\n    auxdata: 0xa264697066735822122002149ca4b9cf0e3cbf159f3896ac578806f50311c64c0802449d2640b814994064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610149806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806370a08231146100465780637ecebe001461007e578063dd62ed3e146100a4575b600080fd5b61006c6004803603602081101561005c57600080fd5b50356001600160a01b03166100d2565b60408051918252519081900360200190f35b61006c6004803603602081101561009457600080fd5b50356001600160a01b03166100e4565b61006c600480360360408110156100ba57600080fd5b506001600160a01b03813581169160200135166100f6565b60006020819052908152604090205481565b60026020526000908152604090205481565b60016020908152600092835260408084209091529082529020548156fea264697066735822122002149ca4b9cf0e3cbf159f3896ac578806f50311c64c0802449d2640b814994064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL EQ SWAP13 LOG4 0xB9 0xCF 0xE EXTCODECOPY 0xBF ISZERO SWAP16 CODESIZE SWAP7 0xAC JUMPI DUP9 MOD CREATE2 SUB GT 0xC6 0x4C ADDMOD MUL DIFFICULTY SWAP14 0x26 BLOCKHASH 0xB8 EQ SWAP10 BLOCKHASH PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "266:340:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806370a08231146100465780637ecebe001461007e578063dd62ed3e146100a4575b600080fd5b61006c6004803603602081101561005c57600080fd5b50356001600160a01b03166100d2565b60408051918252519081900360200190f35b61006c6004803603602081101561009457600080fd5b50356001600160a01b03166100e4565b61006c600480360360408110156100ba57600080fd5b506001600160a01b03813581169160200135166100f6565b60006020819052908152604090205481565b60026020526000908152604090205481565b60016020908152600092835260408084209091529082529020548156fea264697066735822122002149ca4b9cf0e3cbf159f3896ac578806f50311c64c0802449d2640b814994064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL EQ SWAP13 LOG4 0xB9 0xCF 0xE EXTCODECOPY 0xBF ISZERO SWAP16 CODESIZE SWAP7 0xAC JUMPI DUP9 MOD CREATE2 SUB GT 0xC6 0x4C ADDMOD MUL DIFFICULTY SWAP14 0x26 BLOCKHASH 0xB8 EQ SWAP10 BLOCKHASH PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "266:340:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;332:44;;;;;;;;;;;;;;;;-1:-1:-1;332:44:2;-1:-1:-1;;;;;332:44:2;;:::i;:::-;;;;;;;;;;;;;;;;562:41;;;;;;;;;;;;;;;;-1:-1:-1;562:41:2;-1:-1:-1;;;;;562:41:2;;:::i;435:64::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;435:64:2;;;;;;;;;;:::i;332:44::-;;;;;;;;;;;;;;:::o;562:41::-;;;;;;;;;;;;;:::o;435:64::-;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "65800",
								"executionCost": "117",
								"totalCost": "65917"
							},
							"external": {
								"allowance(address,address)": "1239",
								"balanceOf(address)": "1105",
								"nonces(address)": "1124"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 266,
									"end": 606,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 266,
									"end": 606,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 266,
									"end": 606,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 266,
									"end": 606,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 266,
									"end": 606,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 266,
									"end": 606,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 266,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 266,
									"end": 606,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 266,
									"end": 606,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 606,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 266,
									"end": 606,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 266,
									"end": 606,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 266,
									"end": 606,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 266,
									"end": 606,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 266,
									"end": 606,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 606,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 266,
									"end": 606,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 606,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 606,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 266,
									"end": 606,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 606,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002149ca4b9cf0e3cbf159f3896ac578806f50311c64c0802449d2640b814994064736f6c634300060c0033",
									".code": [
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH",
											"source": 2,
											"value": "7ECEBE00"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 266,
											"end": 606,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 332,
											"end": 376,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 332,
											"end": 376,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 562,
											"end": 603,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 562,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 435,
											"end": 499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 332,
											"end": 376,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 562,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 499,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 435,
											"end": 499,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"balanceOf(address)": "70a08231",
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"owner > spender > allowance mapping.\"},\"balanceOf(address)\":{\"notice\":\"owner > balance mapping.\"},\"nonces(address)\":{\"notice\":\"owner > nonce mapping. Used in `permit`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/ERC20.sol\":\"ERC20Data\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/Domain.sol\":{\"keccak256\":\"0xe5215010c5a07b4b2fb1a2347b2106377678fea3d6f9ed656677c0570de2f6aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d7d2b184772d1524e61160790a8c7968c7b9fa6879545764f8a243ae52db84\",\"dweb:/ipfs/QmQTHA2gtm1zfK9GfrrZk5X2A7725RNSLNZFPn8CAMSf4v\"]},\"@boringcrypto/boring-solidity/contracts/ERC20.sol\":{\"keccak256\":\"0x215d98f2006287eb309c79fcfebd5a25cf26e60ccf28923d203de07b6f671658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e19b72bd3e27113efec8111083dec06697d2d18b46c04fc7c7a0e9d6d6172e\",\"dweb:/ipfs/QmNoUEdjTryBBFhHqpf7JFWsMyFt72BQHV7DmsWNvgg4kn\"]},\"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xf0da35541d6ae9e3c12fdd7c8d5d9584c56f9ac50d062efb8ca353ebd6ffd47d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8670101b72310d2c5e9b3e216e15ccb46de879acb9d3e2260952f331dad86301\",\"dweb:/ipfs/QmPzbTvPqhjo2bqxyoDasCBPtGUK41BrWvf5BJ5UmiUgAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 215,
								"contract": "@boringcrypto/boring-solidity/contracts/ERC20.sol:ERC20Data",
								"label": "balanceOf",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 222,
								"contract": "@boringcrypto/boring-solidity/contracts/ERC20.sol:ERC20Data",
								"label": "allowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 227,
								"contract": "@boringcrypto/boring-solidity/contracts/ERC20.sol:ERC20Data",
								"label": "nonces",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "owner > spender > allowance mapping."
							},
							"balanceOf(address)": {
								"notice": "owner > balance mapping."
							},
							"nonces(address)": {
								"notice": "owner > nonce mapping. Used in `permit`."
							}
						},
						"version": 1
					}
				},
				"ERC20WithSupply": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"params": {
									"amount": "The maximum collective amount that `spender` can draw.",
									"spender": "Address of the party that can draw from msg.sender's account."
								},
								"returns": {
									"_0": "(bool) Returns True if approved."
								}
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "This permit must be redeemed before this deadline (UTC timestamp in seconds).",
									"owner_": "Address of the owner.",
									"spender": "The address of the spender that gets approved to draw from `owner_`.",
									"value": "The maximum collective amount that `spender` can draw."
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "of the tokens to move.",
									"to": "The address to move the tokens."
								},
								"returns": {
									"_0": "(bool) Returns True if succeeded."
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The token amount to move.",
									"from": "Address to draw tokens from.",
									"to": "The address to move the tokens."
								},
								"returns": {
									"_0": "(bool) Returns True if succeeded."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5428:5966  contract ERC20WithSupply is IERC20, ERC20 {... */\n  mstore(0x40, 0xc0)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1137:1146  chainid() */\n  chainid\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1202:1237  DOMAIN_SEPARATOR_CHAIN_ID = chainId */\n  0xa0\n  dup2\n  swap1\n  mstore\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1176:1238  _calculateDomainSeparator(DOMAIN_SEPARATOR_CHAIN_ID = chainId) */\n  tag_4\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1137:1146  chainid() */\n  dup2\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1176:1201  _calculateDomainSeparator */\n  tag_5\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1176:1238  _calculateDomainSeparator(DOMAIN_SEPARATOR_CHAIN_ID = chainId) */\n  jump\t// in\ntag_4:\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1156:1238  _DOMAIN_SEPARATOR = _calculateDomainSeparator(DOMAIN_SEPARATOR_CHAIN_ID = chainId) */\n  0x80\n  mstore\n  pop\n    /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5428:5966  contract ERC20WithSupply is IERC20, ERC20 {... */\n  jump(tag_6)\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":793:1062  function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {... */\ntag_5:\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":916:1045  abi.encode(... */\n  0x40\n  dup1\n  mload\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":388:456  keccak256(\"EIP712Domain(uint256 chainId,address verifyingContract)\") */\n  0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":916:1045  abi.encode(... */\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  dup4\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1026:1030  this */\n  address\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":916:1045  abi.encode(... */\n  0x60\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup3\n  mload\n  dup1\n  dup4\n  sub\n  swap1\n  swap2\n  add\n  dup2\n  mstore\n  0x80\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  mstore\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":893:1055  keccak256(... */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n  swap1\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":793:1062  function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {... */\n  jump\t// out\n    /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5428:5966  contract ERC20WithSupply is IERC20, ERC20 {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x24036ccf201a67256250eabe66d3f9fd72f9c4d022f225a8ee964be060dcb993\")\n  assignImmutable(\"0x7dbef654fd5c6145f82b72cd5dbbfc6d48fd276b8a7a4371a61d55985b9d6d8b\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5428:5966  contract ERC20WithSupply is IERC20, ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3778:3988  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_15\n      jump\t// in\n    tag_13:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5476:5511  uint256 public override totalSupply */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2363:3489  function transferFrom(... */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_20\n      jump\t// in\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4047:4149  function DOMAIN_SEPARATOR() external view returns (bytes32) {... */\n    tag_6:\n      tag_16\n      tag_22\n      jump\t// in\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":697:750  mapping(address => uint256) public override balanceOf */\n    tag_7:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_25\n      jump\t// in\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":945:986  mapping(address => uint256) public nonces */\n    tag_8:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_28\n      jump\t// in\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1374:2063  function transfer(address to, uint256 amount) public returns (bool) {... */\n    tag_9:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_31\n      jump\t// in\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4768:5424  function permit(... */\n    tag_10:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":809:882  mapping(address => mapping(address => uint256)) public override allowance */\n    tag_11:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_37\n      jump\t// in\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3778:3988  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_15:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3879:3889  msg.sender */\n      caller\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3853:3857  bool */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3869:3890  allowance[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3869:3878  allowance */\n      0x01\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3869:3890  allowance[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3869:3899  allowance[msg.sender][spender] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3869:3908  allowance[msg.sender][spender] = amount */\n      dup7\n      swap1\n      sstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3923:3960  Approval(msg.sender, spender, amount) */\n      dup2\n      mload\n      dup7\n      dup2\n      mstore\n      swap2\n      mload\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3853:3857  bool */\n      swap4\n      swap5\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3869:3899  allowance[msg.sender][spender] */\n      swap1\n      swap4\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3879:3889  msg.sender */\n      swap1\n      swap3\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3923:3960  Approval(msg.sender, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3977:3981  true */\n      0x01\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3778:3988  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5476:5511  uint256 public override totalSupply */\n    tag_17:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2363:3489  function transferFrom(... */\n    tag_20:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2473:2477  bool */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2556:2567  amount != 0 */\n      dup2\n      iszero\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2552:3421  if (amount != 0) {... */\n      tag_40\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2604:2619  balanceOf[from] */\n      dup5\n      and\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2583:2601  uint256 srcBalance */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2604:2619  balanceOf[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2641:2661  srcBalance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2633:2688  require(srcBalance >= amount, \"ERC20: balance too low\") */\n      tag_41\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x50, 0x45524332303a2062616c616e636520746f6f206c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_41:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2715:2717  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2707:2717  from != to */\n      and\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2707:2711  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2707:2717  from != to */\n      and\n      eq\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2703:3411  if (from != to) {... */\n      tag_42\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2764:2779  allowance[from] */\n      dup6\n      and\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2737:2761  uint256 spenderAllowance */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2764:2779  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2764:2773  allowance */\n      0x01\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2764:2779  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2780:2790  msg.sender */\n      caller\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2764:2791  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      not(0x00)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2913:2950  spenderAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2909:3157  if (spenderAllowance != type(uint256).max) {... */\n      tag_43\n      jumpi\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3002:3008  amount */\n      dup4\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2982:2998  spenderAllowance */\n      dup2\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2982:3008  spenderAllowance >= amount */\n      lt\n      iszero\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2974:3037  require(spenderAllowance >= amount, \"ERC20: allowance too low\") */\n      tag_44\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a20616c6c6f77616e636520746f6f206c6f770000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3059:3074  allowance[from] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3059:3068  allowance */\n      0x01\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3059:3074  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3075:3085  msg.sender */\n      caller\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3059:3086  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3089:3114  spenderAllowance - amount */\n      dup5\n      dup3\n      sub\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3059:3114  allowance[from][msg.sender] = spenderAllowance - amount */\n      swap1\n      sstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2909:3157  if (spenderAllowance != type(uint256).max) {... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3182:3198  to != address(0) */\n      dup6\n      and\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3174:3225  require(to != address(0), \"ERC20: no zero address\") */\n      tag_45\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x50, 0x45524332303a206e6f207a65726f2061646472657373)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_45:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3294:3309  balanceOf[from] */\n      dup1\n      dup7\n      and\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3294:3303  balanceOf */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3294:3309  balanceOf[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3312:3331  srcBalance - amount */\n      dup7\n      dup6\n      sub\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3294:3331  balanceOf[from] = srcBalance - amount */\n      swap1\n      sstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3373:3386  balanceOf[to] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3373:3396  balanceOf[to] += amount */\n      dup1\n      sload\n      dup5\n      add\n      swap1\n      sstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2703:3411  if (from != to) {... */\n    tag_42:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2552:3421  if (amount != 0) {... */\n      pop\n    tag_40:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3450:3452  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3435:3461  Transfer(from, to, amount) */\n      and\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3444:3448  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3435:3461  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3454:3460  amount */\n      dup5\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3435:3461  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":3478:3482  true */\n      0x01\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2363:3489  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4047:4149  function DOMAIN_SEPARATOR() external view returns (bytes32) {... */\n    tag_22:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4098:4105  bytes32 */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4124:4142  _domainSeparator() */\n      tag_47\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4124:4140  _domainSeparator */\n      tag_48\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4124:4142  _domainSeparator() */\n      jump\t// in\n    tag_47:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4117:4142  return _domainSeparator() */\n      swap1\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4047:4149  function DOMAIN_SEPARATOR() external view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":697:750  mapping(address => uint256) public override balanceOf */\n    tag_25:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":945:986  mapping(address => uint256) public nonces */\n    tag_28:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1374:2063  function transfer(address to, uint256 amount) public returns (bool) {... */\n    tag_31:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1436:1440  bool */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1525:1536  amount != 0 */\n      dup2\n      iszero\n      iszero\n      dup1\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1525:1556  amount != 0 || msg.sender == to */\n      tag_50\n      jumpi\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1540:1550  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1540:1556  msg.sender == to */\n      dup5\n      and\n      eq\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1525:1556  amount != 0 || msg.sender == to */\n    tag_50:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1521:1989  if (amount != 0 || msg.sender == to) {... */\n      iszero\n      tag_51\n      jumpi\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1603:1613  msg.sender */\n      caller\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1572:1590  uint256 srcBalance */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1593:1614  balanceOf[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1636:1656  srcBalance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1628:1683  require(srcBalance >= amount, \"ERC20: balance too low\") */\n      tag_52\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x50, 0x45524332303a2062616c616e636520746f6f206c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_52:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1701:1711  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1701:1717  msg.sender != to */\n      dup6\n      and\n      eq\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1697:1979  if (msg.sender != to) {... */\n      tag_53\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1745:1761  to != address(0) */\n      dup5\n      and\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1737:1788  require(to != address(0), \"ERC20: no zero address\") */\n      tag_54\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x50, 0x45524332303a206e6f207a65726f2061646472657373)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_54:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1866:1876  msg.sender */\n      caller\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1856:1865  balanceOf */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1856:1877  balanceOf[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1880:1899  srcBalance - amount */\n      dup6\n      dup5\n      sub\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1856:1899  balanceOf[msg.sender] = srcBalance - amount */\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1941:1954  balanceOf[to] */\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1941:1964  balanceOf[to] += amount */\n      dup1\n      sload\n      dup5\n      add\n      swap1\n      sstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1697:1979  if (msg.sender != to) {... */\n    tag_53:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1521:1989  if (amount != 0 || msg.sender == to) {... */\n      pop\n    tag_51:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2003:2035  Transfer(msg.sender, to, amount) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap2\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2012:2022  msg.sender */\n      caller\n      swap2\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2003:2035  Transfer(msg.sender, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":2052:2056  true */\n      0x01\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":1374:2063  function transfer(address to, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4768:5424  function permit(... */\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4979:4999  owner_ != address(0) */\n      dup8\n      and\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4971:5028  require(owner_ != address(0), \"ERC20: Owner cannot be 0\") */\n      tag_56\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a204f776e65722063616e6e6f7420626520300000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_56:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5064:5072  deadline */\n      dup4\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5046:5061  block.timestamp */\n      timestamp\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5046:5072  block.timestamp < deadline */\n      lt\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5038:5091  require(block.timestamp < deadline, \"ERC20: Expired\") */\n      tag_57\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x115490cc8c0e88115e1c1a5c9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5122:5276  ecrecover(_getDigest(keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline))), v, r, s) ==... */\n      dup1\n      dup9\n      and\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5164:5185  PERMIT_SIGNATURE_HASH */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5211:5225  nonces[owner_] */\n      dup2\n      dup2\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5211:5217  nonces */\n      0x02\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5211:5225  nonces[owner_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5211:5227  nonces[owner_]++ */\n      dup1\n      sload\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5122:5250  ecrecover(_getDigest(keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline))), v, r, s) */\n      0x01\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5211:5227  nonces[owner_]++ */\n      dup2\n      dup2\n      add\n      swap1\n      swap3\n      sstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5153:5238  abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline) */\n      dup4\n      mload\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4308:4374  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5153:5238  abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline) */\n      dup2\n      dup6\n      add\n      mstore\n      dup1\n      dup6\n      add\n      dup7\n      swap1\n      mstore\n      swap6\n      dup13\n      and\n      0x60\n      dup8\n      add\n      mstore\n      0x80\n      dup7\n      add\n      dup12\n      swap1\n      mstore\n      0xa0\n      dup7\n      add\n      mstore\n      0xc0\n      dup1\n      dup7\n      add\n      dup11\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup8\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0xe0\n      swap1\n      swap6\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5143:5239  keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline)) */\n      dup4\n      mload\n      swap4\n      add\n      swap3\n      swap1\n      swap3\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5122:5276  ecrecover(_getDigest(keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline))), v, r, s) ==... */\n      swap1\n      swap2\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5122:5250  ecrecover(_getDigest(keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline))), v, r, s) */\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5132:5240  _getDigest(keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline))) */\n      tag_58\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5132:5142  _getDigest */\n      tag_59\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5132:5240  _getDigest(keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline))) */\n      jump\t// in\n    tag_58:\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5242:5243  v */\n      dup6\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5245:5246  r */\n      dup6\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5248:5249  s */\n      dup6\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5122:5250  ecrecover(_getDigest(keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline))), v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5122:5276  ecrecover(_getDigest(keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline))), v, r, s) ==... */\n      and\n      eq\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5101:5326  require(... */\n      tag_62\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a20496e76616c6964205369676e61747572650000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5336:5353  allowance[owner_] */\n      dup1\n      dup9\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5336:5345  allowance */\n      0x01\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5336:5353  allowance[owner_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5336:5362  allowance[owner_][spender] */\n      swap5\n      dup12\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5336:5370  allowance[owner_][spender] = value */\n      dup10\n      swap1\n      sstore\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":5385:5417  Approval(owner_, spender, value) */\n      dup2\n      mload\n      dup10\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":4768:5424  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/ERC20.sol\":809:882  mapping(address => mapping(address => uint256)) public override allowance */\n    tag_37:\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1546:1780  function _domainSeparator() internal view returns (bytes32) {... */\n    tag_48:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1597:1604  bytes32 */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1654:1663  chainid() */\n      chainid\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1691:1716  DOMAIN_SEPARATOR_CHAIN_ID */\n      immutable(\"0x24036ccf201a67256250eabe66d3f9fd72f9c4d022f225a8ee964be060dcb993\")\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1680:1716  chainId == DOMAIN_SEPARATOR_CHAIN_ID */\n      dup2\n      eq\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1680:1773  chainId == DOMAIN_SEPARATOR_CHAIN_ID ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId) */\n      tag_64\n      jumpi\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1739:1773  _calculateDomainSeparator(chainId) */\n      tag_65\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1765:1772  chainId */\n      dup2\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1739:1764  _calculateDomainSeparator */\n      tag_66\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1739:1773  _calculateDomainSeparator(chainId) */\n      jump\t// in\n    tag_65:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1680:1773  chainId == DOMAIN_SEPARATOR_CHAIN_ID ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId) */\n      jump(tag_67)\n    tag_64:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1719:1736  _DOMAIN_SEPARATOR */\n      immutable(\"0x7dbef654fd5c6145f82b72cd5dbbfc6d48fd276b8a7a4371a61d55985b9d6d8b\")\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1680:1773  chainId == DOMAIN_SEPARATOR_CHAIN_ID ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId) */\n    tag_67:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1673:1773  return chainId == DOMAIN_SEPARATOR_CHAIN_ID ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId) */\n      swap2\n      pop\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1546:1780  function _domainSeparator() internal view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1786:2108  function _getDigest(bytes32 dataHash) internal view returns (bytes32 digest) {... */\n    tag_59:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1847:1861  bytes32 digest */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1959:1999  EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x1901)\n      dup2\n      mstore\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":2021:2039  _domainSeparator() */\n      tag_69\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":2021:2037  _domainSeparator */\n      tag_48\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":2021:2039  _domainSeparator() */\n      jump\t// in\n    tag_69:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":2061:2069  dataHash */\n      dup4\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1921:2087  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_70:\n      0x20\n      dup4\n      lt\n      tag_72\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_70)\n    tag_72:\n      mload\n      dup2\n      mload\n      0x20\n      swap4\n      dup5\n      sub\n      0x0100\n      exp\n      not(0x00)\n      add\n      dup1\n      not\n      swap1\n      swap3\n      and\n      swap2\n      and\n      or\n      swap1\n      mstore\n      swap3\n      add\n      swap5\n      dup6\n      mstore\n      pop\n      dup4\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup5\n      sub\n      dup4\n      add\n      dup2\n      mstore\n      swap3\n      dup2\n      add\n      swap1\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1894:2101  keccak256(... */\n      dup2\n      mload\n      swap2\n      add\n      keccak256\n      swap4\n      swap3\n      pop\n      pop\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1786:2108  function _getDigest(bytes32 dataHash) internal view returns (bytes32 digest) {... */\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":793:1062  function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {... */\n    tag_66:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":916:1045  abi.encode(... */\n      0x40\n      dup1\n      mload\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":388:456  keccak256(\"EIP712Domain(uint256 chainId,address verifyingContract)\") */\n      0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":916:1045  abi.encode(... */\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1026:1030  this */\n      address\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":916:1045  abi.encode(... */\n      0x60\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x80\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":893:1055  keccak256(... */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":793:1062  function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {... */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122066669cb64fcdb343571868a4302d6a1d0580290c47649c4d12fdd700e0027a1964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60c060405234801561001057600080fd5b504660a081905261002081610029565b60805250610082565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020808301919091528183019390935230606080830191909152825180830390910181526080909101909152805191012090565b60805160a051610a276100a5600039806108a15250806108d65250610a276000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a08231146101305780637ecebe0014610156578063a9059cbb1461017c578063d505accf146101a8578063dd62ed3e146101fb57610093565b8063095ea7b31461009857806318160ddd146100d857806323b872dd146100f25780633644e51514610128575b600080fd5b6100c4600480360360408110156100ae57600080fd5b506001600160a01b038135169060200135610229565b604080519115158252519081900360200190f35b6100e061028f565b60408051918252519081900360200190f35b6100c46004803603606081101561010857600080fd5b506001600160a01b03813581169160208101359091169060400135610295565b6100e06104a0565b6100e06004803603602081101561014657600080fd5b50356001600160a01b03166104af565b6100e06004803603602081101561016c57600080fd5b50356001600160a01b03166104c1565b6100c46004803603604081101561019257600080fd5b506001600160a01b0381351690602001356104d3565b6101f9600480360360e08110156101be57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610627565b005b6100e06004803603604081101561021157600080fd5b506001600160a01b038135811691602001351661087f565b3360008181526001602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60035481565b6000811561044b576001600160a01b03841660009081526020819052604090205482811015610304576040805162461bcd60e51b815260206004820152601660248201527545524332303a2062616c616e636520746f6f206c6f7760501b604482015290519081900360640190fd5b836001600160a01b0316856001600160a01b031614610449576001600160a01b038516600090815260016020908152604080832033845290915290205460001981146103c8578381101561039f576040805162461bcd60e51b815260206004820152601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f770000000000000000604482015290519081900360640190fd5b6001600160a01b0386166000908152600160209081526040808320338452909152902084820390555b6001600160a01b03851661041c576040805162461bcd60e51b815260206004820152601660248201527545524332303a206e6f207a65726f206164647265737360501b604482015290519081900360640190fd5b506001600160a01b0380861660009081526020819052604080822086850390559186168152208054840190555b505b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35060019392505050565b60006104aa61089c565b905090565b60006020819052908152604090205481565b60026020526000908152604090205481565b6000811515806104eb5750336001600160a01b038416145b156105de57336000908152602081905260409020548281101561054e576040805162461bcd60e51b815260206004820152601660248201527545524332303a2062616c616e636520746f6f206c6f7760501b604482015290519081900360640190fd5b336001600160a01b038516146105dc576001600160a01b0384166105b2576040805162461bcd60e51b815260206004820152601660248201527545524332303a206e6f207a65726f206164647265737360501b604482015290519081900360640190fd5b3360009081526020819052604080822085840390556001600160a01b038616825290208054840190555b505b6040805183815290516001600160a01b0385169133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b6001600160a01b038716610682576040805162461bcd60e51b815260206004820152601860248201527f45524332303a204f776e65722063616e6e6f7420626520300000000000000000604482015290519081900360640190fd5b8342106106c7576040805162461bcd60e51b815260206004820152600e60248201526d115490cc8c0e88115e1c1a5c995960921b604482015290519081900360640190fd5b6001600160a01b038088166000818152600260209081526040918290208054600181810190925583517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981850152808501869052958c166060870152608086018b905260a086015260c08086018a90528351808703909101815260e0909501909252835193019290922090919061075d906108fc565b85858560405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156107b4573d6000803e3d6000fd5b505050602060405103516001600160a01b031614610819576040805162461bcd60e51b815260206004820152601860248201527f45524332303a20496e76616c6964205369676e61747572650000000000000000604482015290519081900360640190fd5b6001600160a01b038088166000818152600160209081526040808320948b1680845294825291829020899055815189815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350505050505050565b600160209081526000928352604080842090915290825290205481565b6000467f000000000000000000000000000000000000000000000000000000000000000081146108d4576108cf81610998565b6108f6565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b600060405180604001604052806002815260200161190160f01b81525061092161089c565b836040516020018084805190602001908083835b602083106109545780518252601f199092019160209182019101610935565b51815160209384036101000a600019018019909216911617905292019485525083810192909252506040805180840383018152928101905281519101209392505050565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218602080830191909152818301939093523060608083019190915282518083039091018152608090910190915280519101209056fea264697066735822122066669cb64fcdb343571868a4302d6a1d0580290c47649c4d12fdd700e0027a1964736f6c634300060c0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CHAINID PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH2 0x20 DUP2 PUSH2 0x29 JUMP JUMPDEST PUSH1 0x80 MSTORE POP PUSH2 0x82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xA27 PUSH2 0xA5 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x8A1 MSTORE POP DUP1 PUSH2 0x8D6 MSTORE POP PUSH2 0xA27 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1FB JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x128 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x295 JUMP JUMPDEST PUSH2 0xE0 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4AF JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x627 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x87F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x44B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x304 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45524332303A2062616C616E636520746F6F206C6F77 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x449 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3C8 JUMPI DUP4 DUP2 LT ISZERO PUSH2 0x39F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20616C6C6F77616E636520746F6F206C6F770000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP5 DUP3 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x41C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45524332303A206E6F207A65726F2061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP6 SUB SWAP1 SSTORE SWAP2 DUP7 AND DUP2 MSTORE KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AA PUSH2 0x89C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO DUP1 PUSH2 0x4EB JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ JUMPDEST ISZERO PUSH2 0x5DE JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x54E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45524332303A2062616C616E636520746F6F206C6F77 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x5DC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45524332303A206E6F207A65726F2061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP5 SUB SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x682 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A204F776E65722063616E6E6F7420626520300000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 TIMESTAMP LT PUSH2 0x6C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x115490CC8C0E88115E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE DUP4 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP6 ADD MSTORE DUP1 DUP6 ADD DUP7 SWAP1 MSTORE SWAP6 DUP13 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP7 ADD DUP11 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP8 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP6 ADD SWAP1 SWAP3 MSTORE DUP4 MLOAD SWAP4 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 SWAP1 PUSH2 0x75D SWAP1 PUSH2 0x8FC JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x819 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20496E76616C6964205369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP12 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP10 SWAP1 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CHAINID PUSH32 0x0 DUP2 EQ PUSH2 0x8D4 JUMPI PUSH2 0x8CF DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0x921 PUSH2 0x89C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x954 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x935 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP DUP4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE SWAP3 DUP2 ADD SWAP1 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x669CB64FCDB343 JUMPI XOR PUSH9 0xA4302D6A1D0580290C SELFBALANCE PUSH5 0x9C4D12FDD7 STOP 0xE0 MUL PUSH27 0x1964736F6C634300060C0033000000000000000000000000000000 ",
							"sourceMap": "5428:538:2:-:0;;;;;;;;;;;;-1:-1:-1;1137:9:1;1202:35;;;;1176:62;1137:9;1176:25;:62::i;:::-;1156:82;;-1:-1:-1;5428:538:2;;793:269:1;916:129;;;388:68;916:129;;;;;;;;;;;;;;;1026:4;916:129;;;;;;;;;;;;;;;;;;;;;;;;;893:162;;;;;;793:269::o;5428:538:2:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"126": [
									{
										"length": 32,
										"start": 2262
									}
								],
								"128": [
									{
										"length": 32,
										"start": 2209
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a08231146101305780637ecebe0014610156578063a9059cbb1461017c578063d505accf146101a8578063dd62ed3e146101fb57610093565b8063095ea7b31461009857806318160ddd146100d857806323b872dd146100f25780633644e51514610128575b600080fd5b6100c4600480360360408110156100ae57600080fd5b506001600160a01b038135169060200135610229565b604080519115158252519081900360200190f35b6100e061028f565b60408051918252519081900360200190f35b6100c46004803603606081101561010857600080fd5b506001600160a01b03813581169160208101359091169060400135610295565b6100e06104a0565b6100e06004803603602081101561014657600080fd5b50356001600160a01b03166104af565b6100e06004803603602081101561016c57600080fd5b50356001600160a01b03166104c1565b6100c46004803603604081101561019257600080fd5b506001600160a01b0381351690602001356104d3565b6101f9600480360360e08110156101be57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610627565b005b6100e06004803603604081101561021157600080fd5b506001600160a01b038135811691602001351661087f565b3360008181526001602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60035481565b6000811561044b576001600160a01b03841660009081526020819052604090205482811015610304576040805162461bcd60e51b815260206004820152601660248201527545524332303a2062616c616e636520746f6f206c6f7760501b604482015290519081900360640190fd5b836001600160a01b0316856001600160a01b031614610449576001600160a01b038516600090815260016020908152604080832033845290915290205460001981146103c8578381101561039f576040805162461bcd60e51b815260206004820152601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f770000000000000000604482015290519081900360640190fd5b6001600160a01b0386166000908152600160209081526040808320338452909152902084820390555b6001600160a01b03851661041c576040805162461bcd60e51b815260206004820152601660248201527545524332303a206e6f207a65726f206164647265737360501b604482015290519081900360640190fd5b506001600160a01b0380861660009081526020819052604080822086850390559186168152208054840190555b505b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35060019392505050565b60006104aa61089c565b905090565b60006020819052908152604090205481565b60026020526000908152604090205481565b6000811515806104eb5750336001600160a01b038416145b156105de57336000908152602081905260409020548281101561054e576040805162461bcd60e51b815260206004820152601660248201527545524332303a2062616c616e636520746f6f206c6f7760501b604482015290519081900360640190fd5b336001600160a01b038516146105dc576001600160a01b0384166105b2576040805162461bcd60e51b815260206004820152601660248201527545524332303a206e6f207a65726f206164647265737360501b604482015290519081900360640190fd5b3360009081526020819052604080822085840390556001600160a01b038616825290208054840190555b505b6040805183815290516001600160a01b0385169133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b6001600160a01b038716610682576040805162461bcd60e51b815260206004820152601860248201527f45524332303a204f776e65722063616e6e6f7420626520300000000000000000604482015290519081900360640190fd5b8342106106c7576040805162461bcd60e51b815260206004820152600e60248201526d115490cc8c0e88115e1c1a5c995960921b604482015290519081900360640190fd5b6001600160a01b038088166000818152600260209081526040918290208054600181810190925583517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981850152808501869052958c166060870152608086018b905260a086015260c08086018a90528351808703909101815260e0909501909252835193019290922090919061075d906108fc565b85858560405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156107b4573d6000803e3d6000fd5b505050602060405103516001600160a01b031614610819576040805162461bcd60e51b815260206004820152601860248201527f45524332303a20496e76616c6964205369676e61747572650000000000000000604482015290519081900360640190fd5b6001600160a01b038088166000818152600160209081526040808320948b1680845294825291829020899055815189815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350505050505050565b600160209081526000928352604080842090915290825290205481565b6000467f000000000000000000000000000000000000000000000000000000000000000081146108d4576108cf81610998565b6108f6565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b600060405180604001604052806002815260200161190160f01b81525061092161089c565b836040516020018084805190602001908083835b602083106109545780518252601f199092019160209182019101610935565b51815160209384036101000a600019018019909216911617905292019485525083810192909252506040805180840383018152928101905281519101209392505050565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218602080830191909152818301939093523060608083019190915282518083039091018152608090910190915280519101209056fea264697066735822122066669cb64fcdb343571868a4302d6a1d0580290c47649c4d12fdd700e0027a1964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1FB JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x128 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x295 JUMP JUMPDEST PUSH2 0xE0 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4AF JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x627 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x87F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x44B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x304 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45524332303A2062616C616E636520746F6F206C6F77 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x449 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3C8 JUMPI DUP4 DUP2 LT ISZERO PUSH2 0x39F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20616C6C6F77616E636520746F6F206C6F770000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP5 DUP3 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x41C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45524332303A206E6F207A65726F2061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP6 SUB SWAP1 SSTORE SWAP2 DUP7 AND DUP2 MSTORE KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AA PUSH2 0x89C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO DUP1 PUSH2 0x4EB JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ JUMPDEST ISZERO PUSH2 0x5DE JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x54E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45524332303A2062616C616E636520746F6F206C6F77 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x5DC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45524332303A206E6F207A65726F2061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP5 SUB SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x682 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A204F776E65722063616E6E6F7420626520300000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 TIMESTAMP LT PUSH2 0x6C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x115490CC8C0E88115E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE DUP4 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP6 ADD MSTORE DUP1 DUP6 ADD DUP7 SWAP1 MSTORE SWAP6 DUP13 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP7 ADD DUP11 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP8 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP6 ADD SWAP1 SWAP3 MSTORE DUP4 MLOAD SWAP4 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 SWAP1 PUSH2 0x75D SWAP1 PUSH2 0x8FC JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x819 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20496E76616C6964205369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP12 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP10 SWAP1 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CHAINID PUSH32 0x0 DUP2 EQ PUSH2 0x8D4 JUMPI PUSH2 0x8CF DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0x921 PUSH2 0x89C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x954 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x935 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP DUP4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE SWAP3 DUP2 ADD SWAP1 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x669CB64FCDB343 JUMPI XOR PUSH9 0xA4302D6A1D0580290C SELFBALANCE PUSH5 0x9C4D12FDD7 STOP 0xE0 MUL PUSH27 0x1964736F6C634300060C0033000000000000000000000000000000 ",
							"sourceMap": "5428:538:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3778:210;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3778:210:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5476:35;;;:::i;:::-;;;;;;;;;;;;;;;;2363:1126;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2363:1126:2;;;;;;;;;;;;;;;;;:::i;4047:102::-;;;:::i;697:53::-;;;;;;;;;;;;;;;;-1:-1:-1;697:53:2;-1:-1:-1;;;;;697:53:2;;:::i;945:41::-;;;;;;;;;;;;;;;;-1:-1:-1;945:41:2;-1:-1:-1;;;;;945:41:2;;:::i;1374:689::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1374:689:2;;;;;;;;:::i;4768:656::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4768:656:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;809:73;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;809:73:2;;;;;;;;;;:::i;3778:210::-;3879:10;3853:4;3869:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;3869:30:2;;;;;;;;;;;:39;;;3923:37;;;;;;;3853:4;;3869:30;;3879:10;;3923:37;;;;;;;;-1:-1:-1;3977:4:2;3778:210;;;;:::o;5476:35::-;;;;:::o;2363:1126::-;2473:4;2556:11;;2552:869;;-1:-1:-1;;;;;2604:15:2;;2583:18;2604:15;;;;;;;;;;;2641:20;;;;2633:55;;;;;-1:-1:-1;;;2633:55:2;;;;;;;;;;;;-1:-1:-1;;;2633:55:2;;;;;;;;;;;;;;;2715:2;-1:-1:-1;;;;;2707:10:2;:4;-1:-1:-1;;;;;2707:10:2;;2703:708;;-1:-1:-1;;;;;2764:15:2;;2737:24;2764:15;;;:9;:15;;;;;;;;2780:10;2764:27;;;;;;;;-1:-1:-1;;2913:37:2;;2909:248;;3002:6;2982:16;:26;;2974:63;;;;;-1:-1:-1;;;2974:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3059:15:2;;;;;;:9;:15;;;;;;;;3075:10;3059:27;;;;;;;3089:25;;;3059:55;;2909:248;-1:-1:-1;;;;;3182:16:2;;3174:51;;;;;-1:-1:-1;;;3174:51:2;;;;;;;;;;;;-1:-1:-1;;;3174:51:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3294:15:2;;;:9;:15;;;;;;;;;;;3312:19;;;3294:37;;3373:13;;;;;;:23;;;;;;2703:708;2552:869;;3450:2;-1:-1:-1;;;;;3435:26:2;3444:4;-1:-1:-1;;;;;3435:26:2;;3454:6;3435:26;;;;;;;;;;;;;;;;;;-1:-1:-1;3478:4:2;2363:1126;;;;;:::o;4047:102::-;4098:7;4124:18;:16;:18::i;:::-;4117:25;;4047:102;:::o;697:53::-;;;;;;;;;;;;;;:::o;945:41::-;;;;;;;;;;;;;:::o;1374:689::-;1436:4;1525:11;;;;:31;;-1:-1:-1;1540:10:2;-1:-1:-1;;;;;1540:16:2;;;1525:31;1521:468;;;1603:10;1572:18;1593:21;;;;;;;;;;;1636:20;;;;1628:55;;;;;-1:-1:-1;;;1628:55:2;;;;;;;;;;;;-1:-1:-1;;;1628:55:2;;;;;;;;;;;;;;;1701:10;-1:-1:-1;;;;;1701:16:2;;;1697:282;;-1:-1:-1;;;;;1745:16:2;;1737:51;;;;;-1:-1:-1;;;1737:51:2;;;;;;;;;;;;-1:-1:-1;;;1737:51:2;;;;;;;;;;;;;;;1866:10;1856:9;:21;;;;;;;;;;;1880:19;;;1856:43;;-1:-1:-1;;;;;1941:13:2;;;;;;:23;;;;;;1697:282;1521:468;;2003:32;;;;;;;;-1:-1:-1;;;;;2003:32:2;;;2012:10;;2003:32;;;;;;;;;-1:-1:-1;2052:4:2;1374:689;;;;:::o;4768:656::-;-1:-1:-1;;;;;4979:20:2;;4971:57;;;;;-1:-1:-1;;;4971:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;5064:8;5046:15;:26;5038:53;;;;;-1:-1:-1;;;5038:53:2;;;;;;;;;;;;-1:-1:-1;;;5038:53:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;5122:154:2;;;5164:21;5211:14;;;:6;:14;;;;;;;;;:16;;5122:128;5211:16;;;;;;5153:85;;4308:66;5153:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5143:96;;;;;;;;5122:154;;:128;5132:108;;:10;:108::i;:::-;5242:1;5245;5248;5122:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5122:154:2;;5101:225;;;;;-1:-1:-1;;;5101:225:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5336:17:2;;;;;;;:9;:17;;;;;;;;:26;;;;;;;;;;;;;:34;;;5385:32;;;;;;;;;;;;;;;;;4768:656;;;;;;;:::o;809:73::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1546:234:1:-;1597:7;1654:9;1691:25;1680:36;;:93;;1739:34;1765:7;1739:25;:34::i;:::-;1680:93;;;1719:17;1680:93;1673:100;;;1546:234;:::o;1786:322::-;1847:14;1959:40;;;;;;;;;;;;;-1:-1:-1;;;1959:40:1;;;2021:18;:16;:18::i;:::-;2061:8;1921:166;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1921:166:1;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1921:166:1;;;;;;;;;;;;;;;;-1:-1:-1;1921:166:1;;;;;;;-1:-1:-1;1921:166:1;;;;;;;;;;;;;;;1894:207;;;;;;;-1:-1:-1;;;1786:322:1:o;793:269::-;916:129;;;388:68;916:129;;;;;;;;;;;;;;;1026:4;916:129;;;;;;;;;;;;;;;;;;;;;;;;;893:162;;;;;;793:269::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "519800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22278",
								"balanceOf(address)": "1127",
								"nonces(address)": "1146",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"totalSupply()": "1021",
								"transfer(address,uint256)": "44189",
								"transferFrom(address,address,uint256)": "65421"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1137,
									"end": 1146,
									"name": "CHAINID",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1137,
									"end": 1146,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1156,
									"end": 1238,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1156,
									"end": 1238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 388,
									"end": 456,
									"name": "PUSH",
									"source": 1,
									"value": "47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1026,
									"end": 1030,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "126"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5428,
									"end": 5966,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066669cb64fcdb343571868a4302d6a1d0580290c47649c4d12fdd700e0027a1964736f6c634300060c0033",
									".code": [
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "7ECEBE00"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "D505ACCF"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "3644E515"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5966,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4047,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4047,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4047,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4047,
											"end": 4149,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 697,
											"end": 750,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 697,
											"end": 750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 986,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 945,
											"end": 986,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 809,
											"end": 882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3889,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3878,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3908,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3908,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3899,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3889,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3977,
											"end": 3981,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3988,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5511,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2477,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2552,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2661,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2661,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45524332303A2062616C616E636520746F6F206C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2633,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2707,
											"end": 2717,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2711,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2707,
											"end": 2717,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2717,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2703,
											"end": 3411,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2779,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2791,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2791,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2791,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2913,
											"end": 2950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2909,
											"end": 3157,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3008,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3008,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3008,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20616C6C6F77616E636520746F6F206C6F770000000000000000"
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2974,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3085,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3086,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3086,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3086,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3086,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3086,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3114,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3114,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3114,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3114,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3157,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2909,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3182,
											"end": 3198,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3198,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45524332303A206E6F207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3174,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3331,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3331,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3331,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3331,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3386,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3386,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3386,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3386,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3386,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3386,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 3411,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2703,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2552,
											"end": 3421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2552,
											"end": 3421,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3461,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3478,
											"end": 3482,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 3489,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4047,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4047,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4098,
											"end": 4105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4124,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4149,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 697,
											"end": 750,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 945,
											"end": 986,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1536,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1536,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1536,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1550,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1989,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1521,
											"end": 1989,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1613,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1656,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1656,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45524332303A2062616C616E636520746F6F206C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1628,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1711,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1717,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1717,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1717,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1697,
											"end": 1979,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45524332303A206E6F207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1737,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1877,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1899,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 1954,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1954,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1954,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1954,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1954,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1954,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1979,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1697,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1989,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1521,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2022,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 2063,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4979,
											"end": 4999,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 4999,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A204F776E65722063616E6E6F7420626520300000000000000000"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5072,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5046,
											"end": 5061,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 5046,
											"end": 5072,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CC8C0E88115E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5038,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5122,
											"end": 5276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5276,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5276,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5164,
											"end": 5185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5225,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5211,
											"end": 5227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5227,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5227,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4308,
											"end": 4374,
											"name": "PUSH",
											"source": 2,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5239,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5239,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5239,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5239,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5239,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5132,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5132,
											"end": 5240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5132,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5132,
											"end": 5240,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5132,
											"end": 5240,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5132,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5246,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5248,
											"end": 5249,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5122,
											"end": 5276,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5276,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "PUSH",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20496E76616C6964205369676E61747572650000000000000000"
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5101,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5370,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5370,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5417,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 5424,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 809,
											"end": 882,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1546,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1546,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1663,
											"name": "CHAINID",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1716,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1680,
											"end": 1716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1765,
											"end": 1772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1739,
											"end": 1773,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1739,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1739,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1736,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1780,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1786,
											"end": 2108,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1786,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2021,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2069,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 2108,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 793,
											"end": 1062,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 793,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218"
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1030,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 893,
											"end": 1055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 893,
											"end": 1055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 893,
											"end": 1055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 893,
											"end": 1055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 893,
											"end": 1055,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 893,
											"end": 1055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 793,
											"end": 1062,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"amount\":\"The maximum collective amount that `spender` can draw.\",\"spender\":\"Address of the party that can draw from msg.sender's account.\"},\"returns\":{\"_0\":\"(bool) Returns True if approved.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"This permit must be redeemed before this deadline (UTC timestamp in seconds).\",\"owner_\":\"Address of the owner.\",\"spender\":\"The address of the spender that gets approved to draw from `owner_`.\",\"value\":\"The maximum collective amount that `spender` can draw.\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"of the tokens to move.\",\"to\":\"The address to move the tokens.\"},\"returns\":{\"_0\":\"(bool) Returns True if succeeded.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The token amount to move.\",\"from\":\"Address to draw tokens from.\",\"to\":\"The address to move the tokens.\"},\"returns\":{\"_0\":\"(bool) Returns True if succeeded.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"owner > spender > allowance mapping.\"},\"approve(address,uint256)\":{\"notice\":\"Approves `amount` from sender to be spend by `spender`.\"},\"balanceOf(address)\":{\"notice\":\"owner > balance mapping.\"},\"nonces(address)\":{\"notice\":\"owner > nonce mapping. Used in `permit`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approves `value` from `owner_` to be spend by `spender`.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `msg.sender` to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `from` to `to`. Caller needs approval for `from`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/ERC20.sol\":\"ERC20WithSupply\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/Domain.sol\":{\"keccak256\":\"0xe5215010c5a07b4b2fb1a2347b2106377678fea3d6f9ed656677c0570de2f6aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d7d2b184772d1524e61160790a8c7968c7b9fa6879545764f8a243ae52db84\",\"dweb:/ipfs/QmQTHA2gtm1zfK9GfrrZk5X2A7725RNSLNZFPn8CAMSf4v\"]},\"@boringcrypto/boring-solidity/contracts/ERC20.sol\":{\"keccak256\":\"0x215d98f2006287eb309c79fcfebd5a25cf26e60ccf28923d203de07b6f671658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e19b72bd3e27113efec8111083dec06697d2d18b46c04fc7c7a0e9d6d6172e\",\"dweb:/ipfs/QmNoUEdjTryBBFhHqpf7JFWsMyFt72BQHV7DmsWNvgg4kn\"]},\"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xf0da35541d6ae9e3c12fdd7c8d5d9584c56f9ac50d062efb8ca353ebd6ffd47d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8670101b72310d2c5e9b3e216e15ccb46de879acb9d3e2260952f331dad86301\",\"dweb:/ipfs/QmPzbTvPqhjo2bqxyoDasCBPtGUK41BrWvf5BJ5UmiUgAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 238,
								"contract": "@boringcrypto/boring-solidity/contracts/ERC20.sol:ERC20WithSupply",
								"label": "balanceOf",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 246,
								"contract": "@boringcrypto/boring-solidity/contracts/ERC20.sol:ERC20WithSupply",
								"label": "allowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 251,
								"contract": "@boringcrypto/boring-solidity/contracts/ERC20.sol:ERC20WithSupply",
								"label": "nonces",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 575,
								"contract": "@boringcrypto/boring-solidity/contracts/ERC20.sol:ERC20WithSupply",
								"label": "totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "owner > spender > allowance mapping."
							},
							"approve(address,uint256)": {
								"notice": "Approves `amount` from sender to be spend by `spender`."
							},
							"balanceOf(address)": {
								"notice": "owner > balance mapping."
							},
							"nonces(address)": {
								"notice": "owner > nonce mapping. Used in `permit`."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approves `value` from `owner_` to be spend by `spender`."
							},
							"transfer(address,uint256)": {
								"notice": "Transfers `amount` tokens from `msg.sender` to `to`."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `from` to `to`. Caller needs approval for `from`."
							}
						},
						"version": 1
					}
				}
			},
			"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"EIP 2612\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xf0da35541d6ae9e3c12fdd7c8d5d9584c56f9ac50d062efb8ca353ebd6ffd47d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8670101b72310d2c5e9b3e216e15ccb46de879acb9d3e2260952f331dad86301\",\"dweb:/ipfs/QmPzbTvPqhjo2bqxyoDasCBPtGUK41BrWvf5BJ5UmiUgAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "EIP 2612"
							}
						},
						"version": 1
					}
				}
			},
			"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol": {
				"BoringERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":134:3750  library BoringERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":134:3750  library BoringERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0226106229f221951380668e2054f16189e1e5e3aa64798c621dab5f924860464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0226106229f221951380668e2054f16189e1e5e3aa64798c621dab5f924860464736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x22 PUSH2 0x622 SWAP16 0x22 NOT MLOAD CODESIZE MOD PUSH9 0xE2054F16189E1E5E3A 0xA6 SELFBALANCE SWAP9 0xC6 0x21 0xDA 0xB5 0xF9 0x24 DUP7 DIV PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "134:3616:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0226106229f221951380668e2054f16189e1e5e3aa64798c621dab5f924860464736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x22 PUSH2 0x622 SWAP16 0x22 NOT MLOAD CODESIZE MOD PUSH9 0xE2054F16189E1E5E3A 0xA6 SELFBALANCE SWAP9 0xC6 0x21 0xDA 0xB5 0xF9 0x24 DUP7 DIV PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "134:3616:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"returnDataToString(bytes memory)": "infinite",
								"safeDecimals(contract IERC20)": "infinite",
								"safeName(contract IERC20)": "infinite",
								"safeSymbol(contract IERC20)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 3750,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 134,
									"end": 3750,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0226106229f221951380668e2054f16189e1e5e3aa64798c621dab5f924860464736f6c634300060c0033",
									".code": [
										{
											"begin": 134,
											"end": 3750,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 134,
											"end": 3750,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 134,
											"end": 3750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 134,
											"end": 3750,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 3750,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 3750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 134,
											"end": 3750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 3750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 134,
											"end": 3750,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":\"BoringERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xf0da35541d6ae9e3c12fdd7c8d5d9584c56f9ac50d062efb8ca353ebd6ffd47d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8670101b72310d2c5e9b3e216e15ccb46de879acb9d3e2260952f331dad86301\",\"dweb:/ipfs/QmPzbTvPqhjo2bqxyoDasCBPtGUK41BrWvf5BJ5UmiUgAd\"]},\"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":{\"keccak256\":\"0x08491b0b0af82e0d3c54a1274e745d95bd65c7638d240a83479121c6808bfc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ff10b2639d9d4ca7b4d7ab62c37c510a026b45aef035b73c33bf255144e4f81\",\"dweb:/ipfs/QmdpaE4CRNyzaYkj8CHfJ17E2N1q9tcv8ynV5xT4o4WMBg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol": {
				"BoringMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":208:1157  library BoringMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":208:1157  library BoringMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208b48a9d665b5b98df6bde61d1a32b4b5884a4980cf8ca62f49767926f417cc3964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b48a9d665b5b98df6bde61d1a32b4b5884a4980cf8ca62f49767926f417cc3964736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0x48 0xA9 0xD6 PUSH6 0xB5B98DF6BDE6 SAR BYTE ORIGIN 0xB4 0xB5 DUP9 0x4A 0x49 DUP1 0xCF DUP13 0xA6 0x2F 0x49 PUSH23 0x7926F417CC3964736F6C634300060C0033000000000000 ",
							"sourceMap": "208:949:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b48a9d665b5b98df6bde61d1a32b4b5884a4980cf8ca62f49767926f417cc3964736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0x48 0xA9 0xD6 PUSH6 0xB5B98DF6BDE6 SAR BYTE ORIGIN 0xB4 0xB5 DUP9 0x4A 0x49 DUP1 0xCF DUP13 0xA6 0x2F 0x49 PUSH23 0x7926F417CC3964736F6C634300060C0033000000000000 ",
							"sourceMap": "208:949:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"to128(uint256)": "infinite",
								"to32(uint256)": "infinite",
								"to64(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 208,
									"end": 1157,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 208,
									"end": 1157,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208b48a9d665b5b98df6bde61d1a32b4b5884a4980cf8ca62f49767926f417cc3964736f6c634300060c0033",
									".code": [
										{
											"begin": 208,
											"end": 1157,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 208,
											"end": 1157,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 208,
											"end": 1157,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 208,
											"end": 1157,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 208,
											"end": 1157,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 1157,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 208,
											"end": 1157,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 1157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 1157,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing overflow-/underflow-safe math, updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":\"BoringMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":{\"keccak256\":\"0x6bc52950e23c70a90a5b039697b77ba76360b62da6a06a61d3a1714b9c6c26b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://507b01278ba8ce200337e21122c8912c39b7a583d821fde847f47e36fd26c598\",\"dweb:/ipfs/Qmcm7G94MBdSPm7fS743fV86yMX2kMeE3a9QXjTpTAj6zW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for performing overflow-/underflow-safe math, updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).",
						"version": 1
					}
				},
				"BoringMath128": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":1258:1569  library BoringMath128 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":1258:1569  library BoringMath128 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205b655acbd70f447fe5ef77f87aab4e3a0409c8ebedc432c3edea3f590b227d6964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205b655acbd70f447fe5ef77f87aab4e3a0409c8ebedc432c3edea3f590b227d6964736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST PUSH6 0x5ACBD70F447F 0xE5 0xEF PUSH24 0xF87AAB4E3A0409C8EBEDC432C3EDEA3F590B227D6964736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "1258:311:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205b655acbd70f447fe5ef77f87aab4e3a0409c8ebedc432c3edea3f590b227d6964736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST PUSH6 0x5ACBD70F447F 0xE5 0xEF PUSH24 0xF87AAB4E3A0409C8EBEDC432C3EDEA3F590B227D6964736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "1258:311:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint128,uint128)": "infinite",
								"sub(uint128,uint128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1258,
									"end": 1569,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1258,
									"end": 1569,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b655acbd70f447fe5ef77f87aab4e3a0409c8ebedc432c3edea3f590b227d6964736f6c634300060c0033",
									".code": [
										{
											"begin": 1258,
											"end": 1569,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1569,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1569,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1569,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1258,
											"end": 1569,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1258,
											"end": 1569,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1569,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1569,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1569,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing overflow-/underflow-safe addition and subtraction on uint128.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":\"BoringMath128\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":{\"keccak256\":\"0x6bc52950e23c70a90a5b039697b77ba76360b62da6a06a61d3a1714b9c6c26b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://507b01278ba8ce200337e21122c8912c39b7a583d821fde847f47e36fd26c598\",\"dweb:/ipfs/Qmcm7G94MBdSPm7fS743fV86yMX2kMeE3a9QXjTpTAj6zW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for performing overflow-/underflow-safe addition and subtraction on uint128.",
						"version": 1
					}
				},
				"BoringMath32": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":2073:2377  library BoringMath32 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":2073:2377  library BoringMath32 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ebd152dd82a33b5bb94aa9948b137ba83a122d475eb73fdac4be256cce41bd064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ebd152dd82a33b5bb94aa9948b137ba83a122d475eb73fdac4be256cce41bd064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xBD ISZERO 0x2D 0xD8 0x2A CALLER 0xB5 0xBB SWAP5 0xAA SWAP10 0x48 0xB1 CALLDATACOPY 0xBA DUP4 LOG1 0x22 0xD4 PUSH22 0xEB73FDAC4BE256CCE41BD064736F6C634300060C0033 ",
							"sourceMap": "2073:304:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ebd152dd82a33b5bb94aa9948b137ba83a122d475eb73fdac4be256cce41bd064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xBD ISZERO 0x2D 0xD8 0x2A CALLER 0xB5 0xBB SWAP5 0xAA SWAP10 0x48 0xB1 CALLDATACOPY 0xBA DUP4 LOG1 0x22 0xD4 PUSH22 0xEB73FDAC4BE256CCE41BD064736F6C634300060C0033 ",
							"sourceMap": "2073:304:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint32,uint32)": "infinite",
								"sub(uint32,uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2073,
									"end": 2377,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2377,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ebd152dd82a33b5bb94aa9948b137ba83a122d475eb73fdac4be256cce41bd064736f6c634300060c0033",
									".code": [
										{
											"begin": 2073,
											"end": 2377,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2377,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2377,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2377,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2073,
											"end": 2377,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2073,
											"end": 2377,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2377,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2377,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing overflow-/underflow-safe addition and subtraction on uint32.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":\"BoringMath32\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":{\"keccak256\":\"0x6bc52950e23c70a90a5b039697b77ba76360b62da6a06a61d3a1714b9c6c26b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://507b01278ba8ce200337e21122c8912c39b7a583d821fde847f47e36fd26c598\",\"dweb:/ipfs/Qmcm7G94MBdSPm7fS743fV86yMX2kMeE3a9QXjTpTAj6zW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for performing overflow-/underflow-safe addition and subtraction on uint32.",
						"version": 1
					}
				},
				"BoringMath64": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":1669:1973  library BoringMath64 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":1669:1973  library BoringMath64 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205c33e6189a282e5de48beb9bcce14a22641a1ef54fccab67d4664dd863e8bcc064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c33e6189a282e5de48beb9bcce14a22641a1ef54fccab67d4664dd863e8bcc064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C CALLER 0xE6 XOR SWAP11 0x28 0x2E 0x5D 0xE4 DUP12 0xEB SWAP12 0xCC 0xE1 0x4A 0x22 PUSH5 0x1A1EF54FCC 0xAB PUSH8 0xD4664DD863E8BCC0 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1669:304:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c33e6189a282e5de48beb9bcce14a22641a1ef54fccab67d4664dd863e8bcc064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C CALLER 0xE6 XOR SWAP11 0x28 0x2E 0x5D 0xE4 DUP12 0xEB SWAP12 0xCC 0xE1 0x4A 0x22 PUSH5 0x1A1EF54FCC 0xAB PUSH8 0xD4664DD863E8BCC0 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1669:304:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint64,uint64)": "infinite",
								"sub(uint64,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1669,
									"end": 1973,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1973,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c33e6189a282e5de48beb9bcce14a22641a1ef54fccab67d4664dd863e8bcc064736f6c634300060c0033",
									".code": [
										{
											"begin": 1669,
											"end": 1973,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1973,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1973,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1973,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1669,
											"end": 1973,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1973,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1973,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1973,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing overflow-/underflow-safe addition and subtraction on uint64.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":\"BoringMath64\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":{\"keccak256\":\"0x6bc52950e23c70a90a5b039697b77ba76360b62da6a06a61d3a1714b9c6c26b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://507b01278ba8ce200337e21122c8912c39b7a583d821fde847f47e36fd26c598\",\"dweb:/ipfs/Qmcm7G94MBdSPm7fS743fV86yMX2kMeE3a9QXjTpTAj6zW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for performing overflow-/underflow-safe addition and subtraction on uint64.",
						"version": 1
					}
				}
			},
			"contracts/sseaERC20.sol": {
				"sSeaERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LOCK_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_LOCK_TIME",
									"type": "uint256"
								}
							],
							"name": "setLOCK_TIME",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "balance",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "lockedUntil",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"params": {
									"amount": "The maximum collective amount that `spender` can draw.",
									"spender": "Address of the party that can draw from msg.sender's account."
								},
								"returns": {
									"_0": "(bool) Returns True if approved."
								}
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "This permit must be redeemed before this deadline (UTC timestamp in seconds).",
									"owner_": "Address of the owner.",
									"spender": "The address of the spender that gets approved to draw from `owner_`.",
									"value": "The maximum collective amount that `spender` can draw."
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"shares": "of the tokens to move.",
									"to": "The address to move the tokens."
								},
								"returns": {
									"_0": "(bool) Returns True if succeeded."
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"from": "Address to draw tokens from.",
									"shares": "The token shares to move.",
									"to": "The address to move the tokens."
								},
								"returns": {
									"_0": "(bool) Returns True if succeeded."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sseaERC20.sol\":564:8841  contract sSeaERC20 is IERC20, Domain {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/sseaERC20.sol\":921:929  24 hours */\n  0x015180\n    /* \"contracts/sseaERC20.sol\":894:929  uint256 public LOCK_TIME = 24 hours */\n  0x01\n  sstore\n    /* \"contracts/sseaERC20.sol\":998:1092  constructor(IERC20 _token) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1137:1146  chainid() */\n  chainid\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1202:1237  DOMAIN_SEPARATOR_CHAIN_ID = chainId */\n  0xa0\n  dup2\n  swap1\n  mstore\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1176:1238  _calculateDomainSeparator(DOMAIN_SEPARATOR_CHAIN_ID = chainId) */\n  tag_7\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1137:1146  chainid() */\n  dup2\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1176:1201  _calculateDomainSeparator */\n  tag_8\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1176:1238  _calculateDomainSeparator(DOMAIN_SEPARATOR_CHAIN_ID = chainId) */\n  jump\t// in\ntag_7:\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1156:1238  _DOMAIN_SEPARATOR = _calculateDomainSeparator(DOMAIN_SEPARATOR_CHAIN_ID = chainId) */\n  0x80\n  mstore\n  pop\n    /* \"contracts/sseaERC20.sol\":1042:1056  token = _token */\n  0x60\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  0xc0\n  mstore\n    /* \"contracts/sseaERC20.sol\":1066:1072  _owner */\n  0x02\n    /* \"contracts/sseaERC20.sol\":1066:1085  _owner = msg.sender */\n  dup1\n  sload\n    /* \"contracts/sseaERC20.sol\":1075:1085  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/sseaERC20.sol\":1066:1085  _owner = msg.sender */\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/sseaERC20.sol\":564:8841  contract sSeaERC20 is IERC20, Domain {... */\n  jump(tag_14)\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":793:1062  function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {... */\ntag_8:\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":867:874  bytes32 */\n  0x00\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":388:456  keccak256(\"EIP712Domain(uint256 chainId,address verifyingContract)\") */\n  0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":993:1000  chainId */\n  dup3\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1026:1030  this */\n  address\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":916:1045  abi.encode(... */\n  add(0x20, mload(0x40))\n  tag_12\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":893:1055  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":886:1055  return keccak256(... */\n  swap1\n  pop\n    /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":793:1062  function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":174:465   */\ntag_3:\n  0x00\n    /* \"--CODEGEN--\":303:305   */\n  0x20\n    /* \"--CODEGEN--\":291:300   */\n  dup3\n    /* \"--CODEGEN--\":282:289   */\n  dup5\n    /* \"--CODEGEN--\":278:301   */\n  sub\n    /* \"--CODEGEN--\":274:306   */\n  slt\n    /* \"--CODEGEN--\":271:273   */\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup2\n    /* \"--CODEGEN--\":309:321   */\n  revert\n    /* \"--CODEGEN--\":271:273   */\ntag_16:\n    /* \"--CODEGEN--\":97:110   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"--CODEGEN--\":1634:1688   */\n  dup2\n  and\n    /* \"--CODEGEN--\":1852:1901   */\n  dup2\n  eq\n    /* \"--CODEGEN--\":1842:1844   */\n  tag_17\n  jumpi\n  dup2\n  dup3\n    /* \"--CODEGEN--\":1905:1917   */\n  revert\n    /* \"--CODEGEN--\":1842:1844   */\ntag_17:\n    /* \"--CODEGEN--\":361:449   */\n  swap4\n    /* \"--CODEGEN--\":265:465   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":832:1276   */\ntag_13:\n    /* \"--CODEGEN--\":663:700   */\n  swap3\n  dup4\n  mstore\n    /* \"--CODEGEN--\":1179:1181   */\n  0x20\n    /* \"--CODEGEN--\":1164:1182   */\n  dup4\n  add\n    /* \"--CODEGEN--\":663:700   */\n  swap2\n  swap1\n  swap2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"--CODEGEN--\":1634:1688   */\n  and\n    /* \"--CODEGEN--\":1262:1264   */\n  0x40\n    /* \"--CODEGEN--\":1247:1265   */\n  dup3\n  add\n    /* \"--CODEGEN--\":543:580   */\n  mstore\n    /* \"--CODEGEN--\":1015:1017   */\n  0x60\n    /* \"--CODEGEN--\":1000:1018   */\n  add\n  swap1\n    /* \"--CODEGEN--\":986:1276   */\n  jump\t// out\ntag_14:\n    /* \"contracts/sseaERC20.sol\":564:8841  contract sSeaERC20 is IERC20, Domain {... */\n  mload(0x80)\n  mload(0xa0)\n  shr(0x60, mload(0xc0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n  assignImmutable(\"0x24036ccf201a67256250eabe66d3f9fd72f9c4d022f225a8ee964be060dcb993\")\n  assignImmutable(\"0x7dbef654fd5c6145f82b72cd5dbbfc6d48fd276b8a7a4371a61d55985b9d6d8b\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/sseaERC20.sol\":564:8841  contract sSeaERC20 is IERC20, Domain {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9dc29fac\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xd505accf\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe3f0dfe7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xec60bcf3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x9dc29fac\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa87430ba\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb2bdfa7b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x3644e515\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x413d9c3a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sseaERC20.sol\":757:806  string public constant name = \"Staked SEA Tokens\" */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sseaERC20.sol\":5068:5306  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":853:888  uint256 public override totalSupply */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":4561:4779  function transferFrom(... */\n    tag_6:\n      tag_32\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":812:847  uint8 public constant decimals = 18 */\n    tag_7:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":5365:5467  function DOMAIN_SEPARATOR() external view returns (bytes32) {... */\n    tag_8:\n      tag_38\n      tag_52\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":894:929  uint256 public LOCK_TIME = 24 hours */\n    tag_9:\n      tag_38\n      tag_56\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":2423:2582  function balanceOf(address user)... */\n    tag_10:\n      tag_38\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":1450:1491  mapping(address => uint256) public nonces */\n    tag_11:\n      tag_38\n      tag_64\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":1695:1780  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":713:751  string public constant symbol = \"sSEA\" */\n    tag_13:\n      tag_28\n      tag_72\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":8492:8623  function burn(address to, uint256 shares) public returns (bool) {... */\n    tag_14:\n      tag_32\n      tag_75\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":7260:7918  function mint(uint256 amount) public returns (bool) {... */\n    tag_15:\n      tag_32\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":1218:1255  mapping(address => User) public users */\n    tag_16:\n      tag_83\n      tag_84\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_30\n      swap3\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":4122:4261  function transfer(address to, uint256 shares) public returns (bool) {... */\n    tag_17:\n      tag_32\n      tag_89\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":935:956  address public _owner */\n    tag_18:\n      tag_67\n      tag_93\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":6094:7056  function permit(... */\n    tag_19:\n      tag_95\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/sseaERC20.sol\":1314:1387  mapping(address => mapping(address => uint256)) public override allowance */\n    tag_20:\n      tag_38\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":2283:2417  function setLOCK_TIME(uint256 _LOCK_TIME) public onlyOwner returns (bool) {... */\n    tag_21:\n      tag_32\n      tag_105\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":8629:8839  function burnFrom(... */\n    tag_22:\n      tag_32\n      tag_109\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":1907:2139  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_95\n      tag_113\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":962:991  IERC20 public immutable token */\n    tag_24:\n      tag_67\n      tag_116\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":757:806  string public constant name = \"Staked SEA Tokens\" */\n    tag_29:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      shl(0x78, 0x5374616b65642053454120546f6b656e73)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":5068:5306  function approve(address spender, uint256 amount)... */\n    tag_35:\n        /* \"contracts/sseaERC20.sol\":5197:5207  msg.sender */\n      caller\n        /* \"contracts/sseaERC20.sol\":5167:5171  bool */\n      0x00\n        /* \"contracts/sseaERC20.sol\":5187:5208  allowance[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":5187:5196  allowance */\n      0x04\n        /* \"contracts/sseaERC20.sol\":5187:5208  allowance[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":5187:5217  allowance[msg.sender][spender] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sseaERC20.sol\":5187:5226  allowance[msg.sender][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/sseaERC20.sol\":5241:5278  Approval(msg.sender, spender, amount) */\n      mload\n        /* \"contracts/sseaERC20.sol\":5167:5171  bool */\n      swap2\n      swap3\n        /* \"contracts/sseaERC20.sol\":5187:5217  allowance[msg.sender][spender] */\n      swap1\n      swap2\n        /* \"contracts/sseaERC20.sol\":5241:5278  Approval(msg.sender, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_120\n      swap1\n        /* \"contracts/sseaERC20.sol\":5220:5226  amount */\n      dup7\n      swap1\n        /* \"contracts/sseaERC20.sol\":5241:5278  Approval(msg.sender, spender, amount) */\n      tag_54\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/sseaERC20.sol\":5295:5299  true */\n      0x01\n        /* \"contracts/sseaERC20.sol\":5068:5306  function approve(address spender, uint256 amount)... */\n    tag_119:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":853:888  uint256 public override totalSupply */\n    tag_39:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":4561:4779  function transferFrom(... */\n    tag_45:\n        /* \"contracts/sseaERC20.sol\":4671:4675  bool */\n      0x00\n        /* \"contracts/sseaERC20.sol\":4687:4714  _useAllowance(from, shares) */\n      tag_122\n        /* \"contracts/sseaERC20.sol\":4701:4705  from */\n      dup5\n        /* \"contracts/sseaERC20.sol\":4707:4713  shares */\n      dup4\n        /* \"contracts/sseaERC20.sol\":4687:4700  _useAllowance */\n      tag_123\n        /* \"contracts/sseaERC20.sol\":4687:4714  _useAllowance(from, shares) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/sseaERC20.sol\":4724:4751  _transfer(from, to, shares) */\n      tag_124\n        /* \"contracts/sseaERC20.sol\":4734:4738  from */\n      dup5\n        /* \"contracts/sseaERC20.sol\":4740:4742  to */\n      dup5\n        /* \"contracts/sseaERC20.sol\":4744:4750  shares */\n      dup5\n        /* \"contracts/sseaERC20.sol\":4724:4733  _transfer */\n      tag_125\n        /* \"contracts/sseaERC20.sol\":4724:4751  _transfer(from, to, shares) */\n      jump\t// in\n    tag_124:\n      pop\n        /* \"contracts/sseaERC20.sol\":4768:4772  true */\n      0x01\n        /* \"contracts/sseaERC20.sol\":4561:4779  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":812:847  uint8 public constant decimals = 18 */\n    tag_48:\n        /* \"contracts/sseaERC20.sol\":845:847  18 */\n      0x12\n        /* \"contracts/sseaERC20.sol\":812:847  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":5365:5467  function DOMAIN_SEPARATOR() external view returns (bytes32) {... */\n    tag_52:\n        /* \"contracts/sseaERC20.sol\":5416:5423  bytes32 */\n      0x00\n        /* \"contracts/sseaERC20.sol\":5442:5460  _domainSeparator() */\n      tag_127\n        /* \"contracts/sseaERC20.sol\":5442:5458  _domainSeparator */\n      tag_128\n        /* \"contracts/sseaERC20.sol\":5442:5460  _domainSeparator() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/sseaERC20.sol\":5435:5460  return _domainSeparator() */\n      swap1\n      pop\n        /* \"contracts/sseaERC20.sol\":5365:5467  function DOMAIN_SEPARATOR() external view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":894:929  uint256 public LOCK_TIME = 24 hours */\n    tag_56:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":2423:2582  function balanceOf(address user)... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":2556:2567  users[user] */\n      and\n        /* \"contracts/sseaERC20.sol\":2518:2533  uint256 balance */\n      0x00\n        /* \"contracts/sseaERC20.sol\":2556:2567  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":2556:2561  users */\n      0x03\n        /* \"contracts/sseaERC20.sol\":2556:2567  users[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/sseaERC20.sol\":2556:2575  users[user].balance */\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/sseaERC20.sol\":2423:2582  function balanceOf(address user)... */\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":1450:1491  mapping(address => uint256) public nonces */\n    tag_65:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":1695:1780  function owner() public view virtual returns (address) {... */\n    tag_68:\n        /* \"contracts/sseaERC20.sol\":1767:1773  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/sseaERC20.sol\":1695:1780  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":713:751  string public constant symbol = \"sSEA\" */\n    tag_72:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe0, 0x73534541)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":8492:8623  function burn(address to, uint256 shares) public returns (bool) {... */\n    tag_76:\n        /* \"contracts/sseaERC20.sol\":8550:8554  bool */\n      0x00\n        /* \"contracts/sseaERC20.sol\":8566:8595  _burn(msg.sender, to, shares) */\n      tag_132\n        /* \"contracts/sseaERC20.sol\":8572:8582  msg.sender */\n      caller\n        /* \"contracts/sseaERC20.sol\":8584:8586  to */\n      dup5\n        /* \"contracts/sseaERC20.sol\":8588:8594  shares */\n      dup5\n        /* \"contracts/sseaERC20.sol\":8566:8571  _burn */\n      tag_133\n        /* \"contracts/sseaERC20.sol\":8566:8595  _burn(msg.sender, to, shares) */\n      jump\t// in\n    tag_132:\n      pop\n        /* \"contracts/sseaERC20.sol\":8612:8616  true */\n      0x01\n        /* \"contracts/sseaERC20.sol\":8492:8623  function burn(address to, uint256 shares) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":7260:7918  function mint(uint256 amount) public returns (bool) {... */\n    tag_81:\n        /* \"contracts/sseaERC20.sol\":7306:7310  bool */\n      0x00\n        /* \"contracts/sseaERC20.sol\":7330:7340  msg.sender */\n      caller\n        /* \"contracts/sseaERC20.sol\":7322:7371  require(msg.sender != address(0), \"Zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/sseaERC20.sol\":7381:7397  User memory user */\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      pop\n        /* \"contracts/sseaERC20.sol\":7406:7416  msg.sender */\n      caller\n        /* \"contracts/sseaERC20.sol\":7400:7417  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":7400:7405  users */\n      0x03\n        /* \"contracts/sseaERC20.sol\":7400:7417  users[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sseaERC20.sol\":7381:7417  User memory user = users[msg.sender] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      dup4\n      mstore\n      swap1\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      dup4\n      mstore\n      shl(0x80, 0x01)\n      swap1\n      swap2\n      div\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/sseaERC20.sol\":7450:7480  token.balanceOf(address(this)) */\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":7381:7417  User memory user = users[msg.sender] */\n      swap1\n      swap2\n        /* \"contracts/sseaERC20.sol\":7400:7417  users[msg.sender] */\n      swap1\n        /* \"contracts/sseaERC20.sol\":7450:7455  token */\n      immutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":7450:7465  token.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/sseaERC20.sol\":7450:7480  token.balanceOf(address(this)) */\n      tag_140\n      swap1\n        /* \"contracts/sseaERC20.sol\":7474:7478  this */\n      address\n      swap1\n        /* \"contracts/sseaERC20.sol\":7450:7480  token.balanceOf(address(this)) */\n      0x04\n      add\n      tag_70\n      jump\t// in\n    tag_140:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"contracts/sseaERC20.sol\":7428:7480  uint256 totalTokens = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/sseaERC20.sol\":7490:7504  uint256 shares */\n      0x00\n        /* \"contracts/sseaERC20.sol\":7507:7518  totalSupply */\n      dup1\n      sload\n        /* \"contracts/sseaERC20.sol\":7522:7523  0 */\n      0x00\n        /* \"contracts/sseaERC20.sol\":7507:7523  totalSupply == 0 */\n      eq\n        /* \"contracts/sseaERC20.sol\":7507:7595  totalSupply == 0... */\n      tag_146\n      jumpi\n        /* \"contracts/sseaERC20.sol\":7584:7595  totalTokens */\n      dup2\n        /* \"contracts/sseaERC20.sol\":7569:7580  totalSupply */\n      sload(0x00)\n        /* \"contracts/sseaERC20.sol\":7560:7566  amount */\n      dup7\n        /* \"contracts/sseaERC20.sol\":7560:7580  amount * totalSupply */\n      mul\n        /* \"contracts/sseaERC20.sol\":7559:7595  (amount * totalSupply) / totalTokens */\n      dup2\n      tag_147\n      jumpi\n      invalid\n    tag_147:\n      div\n        /* \"contracts/sseaERC20.sol\":7507:7595  totalSupply == 0... */\n      jump(tag_148)\n    tag_146:\n        /* \"contracts/sseaERC20.sol\":7538:7544  amount */\n      dup5\n        /* \"contracts/sseaERC20.sol\":7507:7595  totalSupply == 0... */\n    tag_148:\n        /* \"contracts/sseaERC20.sol\":7490:7595  uint256 shares = totalSupply == 0... */\n      swap1\n      pop\n        /* \"contracts/sseaERC20.sol\":7621:7635  shares.to128() */\n      tag_149\n        /* \"contracts/sseaERC20.sol\":7621:7627  shares */\n      dup2\n        /* \"contracts/sseaERC20.sol\":7621:7633  shares.to128 */\n      tag_150\n        /* \"contracts/sseaERC20.sol\":7621:7635  shares.to128() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/sseaERC20.sol\":7605:7635  user.balance += shares.to128() */\n      dup4\n      mload\n      add\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup4\n      mstore\n        /* \"contracts/sseaERC20.sol\":7683:7692  LOCK_TIME */\n      sload(0x01)\n        /* \"contracts/sseaERC20.sol\":7664:7701  (block.timestamp + LOCK_TIME).to128() */\n      tag_151\n      swap1\n        /* \"contracts/sseaERC20.sol\":7665:7680  block.timestamp */\n      timestamp\n        /* \"contracts/sseaERC20.sol\":7665:7692  block.timestamp + LOCK_TIME */\n      add\n        /* \"contracts/sseaERC20.sol\":7664:7699  (block.timestamp + LOCK_TIME).to128 */\n      tag_150\n        /* \"contracts/sseaERC20.sol\":7664:7701  (block.timestamp + LOCK_TIME).to128() */\n      jump\t// in\n    tag_151:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":7645:7701  user.lockedUntil = (block.timestamp + LOCK_TIME).to128() */\n      swap1\n      dup2\n      and\n        /* \"contracts/sseaERC20.sol\":7645:7661  user.lockedUntil */\n      0x20\n      dup1\n      dup7\n      add\n        /* \"contracts/sseaERC20.sol\":7645:7701  user.lockedUntil = (block.timestamp + LOCK_TIME).to128() */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/sseaERC20.sol\":7717:7727  msg.sender */\n      caller\n        /* \"contracts/sseaERC20.sol\":7711:7728  users[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":7711:7716  users */\n      0x03\n        /* \"contracts/sseaERC20.sol\":7711:7728  users[msg.sender] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/sseaERC20.sol\":7711:7735  users[msg.sender] = user */\n      dup8\n      mload\n      dup2\n      sload\n      swap5\n      mload\n      dup7\n      and\n      shl(0x80, 0x01)\n      mul\n      swap1\n      dup7\n      and\n      not(sub(shl(0x80, 0x01), 0x01))\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap5\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/sseaERC20.sol\":7745:7766  totalSupply += shares */\n      dup2\n      sload\n      dup4\n      add\n      swap1\n      swap2\n      sstore\n        /* \"contracts/sseaERC20.sol\":7777:7834  token.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_152\n      swap1\n        /* \"contracts/sseaERC20.sol\":7777:7782  token */\n      immutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":7777:7799  token.safeTransferFrom */\n      and\n      swap1\n        /* \"contracts/sseaERC20.sol\":7820:7824  this */\n      address\n        /* \"contracts/sseaERC20.sol\":7827:7833  amount */\n      dup9\n        /* \"contracts/sseaERC20.sol\":7777:7799  token.safeTransferFrom */\n      tag_153\n        /* \"contracts/sseaERC20.sol\":7777:7834  token.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/sseaERC20.sol\":7850:7890  Transfer(address(0), msg.sender, shares) */\n      mload(0x40)\n        /* \"contracts/sseaERC20.sol\":7871:7881  msg.sender */\n      caller\n      swap1\n        /* \"contracts/sseaERC20.sol\":7867:7868  0 */\n      0x00\n      swap1\n        /* \"contracts/sseaERC20.sol\":7850:7890  Transfer(address(0), msg.sender, shares) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_154\n      swap1\n        /* \"contracts/sseaERC20.sol\":7883:7889  shares */\n      dup6\n      swap1\n        /* \"contracts/sseaERC20.sol\":7850:7890  Transfer(address(0), msg.sender, shares) */\n      tag_54\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/sseaERC20.sol\":7907:7911  true */\n      0x01\n      swap5\n        /* \"contracts/sseaERC20.sol\":7260:7918  function mint(uint256 amount) public returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":1218:1255  mapping(address => User) public users */\n    tag_85:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x80, 0x01)\n      swap1\n      div\n      and\n      dup3\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":4122:4261  function transfer(address to, uint256 shares) public returns (bool) {... */\n    tag_90:\n        /* \"contracts/sseaERC20.sol\":4184:4188  bool */\n      0x00\n        /* \"contracts/sseaERC20.sol\":4200:4233  _transfer(msg.sender, to, shares) */\n      tag_132\n        /* \"contracts/sseaERC20.sol\":4210:4220  msg.sender */\n      caller\n        /* \"contracts/sseaERC20.sol\":4222:4224  to */\n      dup5\n        /* \"contracts/sseaERC20.sol\":4226:4232  shares */\n      dup5\n        /* \"contracts/sseaERC20.sol\":4200:4209  _transfer */\n      tag_125\n        /* \"contracts/sseaERC20.sol\":4200:4233  _transfer(msg.sender, to, shares) */\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":935:956  address public _owner */\n    tag_93:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":6094:7056  function permit(... */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":6305:6325  owner_ != address(0) */\n      dup8\n      and\n        /* \"contracts/sseaERC20.sol\":6297:6340  require(owner_ != address(0), \"Zero owner\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_160\n      jump\t// in\n    tag_158:\n        /* \"contracts/sseaERC20.sol\":6376:6384  deadline */\n      dup4\n        /* \"contracts/sseaERC20.sol\":6358:6373  block.timestamp */\n      timestamp\n        /* \"contracts/sseaERC20.sol\":6358:6384  block.timestamp < deadline */\n      lt\n        /* \"contracts/sseaERC20.sol\":6350:6396  require(block.timestamp < deadline, \"Expired\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_163\n      jump\t// in\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":6427:6921  ecrecover(... */\n      dup8\n      and\n        /* \"contracts/sseaERC20.sol\":6561:6582  PERMIT_SIGNATURE_HASH */\n      0x00\n        /* \"contracts/sseaERC20.sol\":6720:6734  nonces[owner_] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":6720:6726  nonces */\n      0x05\n        /* \"contracts/sseaERC20.sol\":6720:6734  nonces[owner_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/sseaERC20.sol\":6720:6736  nonces[owner_]++ */\n      dup1\n      sload\n        /* \"contracts/sseaERC20.sol\":6427:6911  ecrecover(... */\n      0x01\n        /* \"contracts/sseaERC20.sol\":6720:6736  nonces[owner_]++ */\n      dup2\n      dup2\n      add\n      swap1\n      swap3\n      sstore\n        /* \"contracts/sseaERC20.sol\":6521:6800  abi.encode(... */\n      swap3\n      mload\n        /* \"contracts/sseaERC20.sol\":6427:6911  ecrecover(... */\n      swap1\n      swap3\n        /* \"contracts/sseaERC20.sol\":6454:6840  _getDigest(... */\n      tag_164\n      swap3\n        /* \"contracts/sseaERC20.sol\":6521:6800  abi.encode(... */\n      tag_165\n      swap3\n        /* \"contracts/sseaERC20.sol\":5634:5700  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n      swap3\n        /* \"contracts/sseaERC20.sol\":6915:6921  owner_ */\n      dup15\n      swap3\n        /* \"contracts/sseaERC20.sol\":6648:6655  spender */\n      dup15\n      swap3\n        /* \"contracts/sseaERC20.sol\":6685:6690  value */\n      dup15\n      swap3\n        /* \"contracts/sseaERC20.sol\":6720:6736  nonces[owner_]++ */\n      swap2\n        /* \"contracts/sseaERC20.sol\":6766:6774  deadline */\n      dup15\n      swap2\n        /* \"contracts/sseaERC20.sol\":6521:6800  abi.encode(... */\n      add\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/sseaERC20.sol\":6486:6822  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/sseaERC20.sol\":6454:6464  _getDigest */\n      tag_167\n        /* \"contracts/sseaERC20.sol\":6454:6840  _getDigest(... */\n      jump\t// in\n    tag_164:\n        /* \"contracts/sseaERC20.sol\":6858:6859  v */\n      dup6\n        /* \"contracts/sseaERC20.sol\":6877:6878  r */\n      dup6\n        /* \"contracts/sseaERC20.sol\":6896:6897  s */\n      dup6\n        /* \"contracts/sseaERC20.sol\":6427:6911  ecrecover(... */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_168\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":6427:6921  ecrecover(... */\n      and\n      eq\n        /* \"contracts/sseaERC20.sol\":6406:6958  require(... */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_174\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":6968:6985  allowance[owner_] */\n      dup1\n      dup9\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":6968:6977  allowance */\n      0x04\n        /* \"contracts/sseaERC20.sol\":6968:6985  allowance[owner_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sseaERC20.sol\":6968:6994  allowance[owner_][spender] */\n      swap5\n      dup12\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/sseaERC20.sol\":6968:7002  allowance[owner_][spender] = value */\n      dup9\n      swap1\n      sstore\n        /* \"contracts/sseaERC20.sol\":7017:7049  Approval(owner_, spender, value) */\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_175\n      swap1\n        /* \"contracts/sseaERC20.sol\":6997:7002  value */\n      dup10\n      swap1\n        /* \"contracts/sseaERC20.sol\":7017:7049  Approval(owner_, spender, value) */\n      tag_54\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sseaERC20.sol\":6094:7056  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":1314:1387  mapping(address => mapping(address => uint256)) public override allowance */\n    tag_102:\n      0x04\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":2283:2417  function setLOCK_TIME(uint256 _LOCK_TIME) public onlyOwner returns (bool) {... */\n    tag_106:\n        /* \"contracts/sseaERC20.sol\":2351:2355  bool */\n      0x00\n        /* \"contracts/sseaERC20.sol\":1836:1846  msg.sender */\n      caller\n        /* \"contracts/sseaERC20.sol\":1825:1832  owner() */\n      tag_177\n        /* \"contracts/sseaERC20.sol\":1825:1830  owner */\n      tag_68\n        /* \"contracts/sseaERC20.sol\":1825:1832  owner() */\n      jump\t// in\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":1825:1846  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/sseaERC20.sol\":1817:1883  require(owner() == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_180\n      jump\t// in\n    tag_178:\n      pop\n        /* \"contracts/sseaERC20.sol\":2367:2376  LOCK_TIME */\n      0x01\n        /* \"contracts/sseaERC20.sol\":2367:2389  LOCK_TIME = _LOCK_TIME */\n      swap1\n      dup2\n      sstore\n        /* \"contracts/sseaERC20.sol\":2367:2376  LOCK_TIME */\n      swap1\n        /* \"contracts/sseaERC20.sol\":2283:2417  function setLOCK_TIME(uint256 _LOCK_TIME) public onlyOwner returns (bool) {... */\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":8629:8839  function burnFrom(... */\n    tag_110:\n        /* \"contracts/sseaERC20.sol\":8735:8739  bool */\n      0x00\n        /* \"contracts/sseaERC20.sol\":8751:8778  _useAllowance(from, shares) */\n      tag_183\n        /* \"contracts/sseaERC20.sol\":8765:8769  from */\n      dup5\n        /* \"contracts/sseaERC20.sol\":8771:8777  shares */\n      dup4\n        /* \"contracts/sseaERC20.sol\":8751:8764  _useAllowance */\n      tag_123\n        /* \"contracts/sseaERC20.sol\":8751:8778  _useAllowance(from, shares) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/sseaERC20.sol\":8788:8811  _burn(from, to, shares) */\n      tag_124\n        /* \"contracts/sseaERC20.sol\":8794:8798  from */\n      dup5\n        /* \"contracts/sseaERC20.sol\":8800:8802  to */\n      dup5\n        /* \"contracts/sseaERC20.sol\":8804:8810  shares */\n      dup5\n        /* \"contracts/sseaERC20.sol\":8788:8793  _burn */\n      tag_133\n        /* \"contracts/sseaERC20.sol\":8788:8811  _burn(from, to, shares) */\n      jump\t// in\n        /* \"contracts/sseaERC20.sol\":1907:2139  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_114:\n        /* \"contracts/sseaERC20.sol\":1836:1846  msg.sender */\n      caller\n        /* \"contracts/sseaERC20.sol\":1825:1832  owner() */\n      tag_186\n        /* \"contracts/sseaERC20.sol\":1825:1830  owner */\n      tag_68\n        /* \"contracts/sseaERC20.sol\":1825:1832  owner() */\n      jump\t// in\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":1825:1846  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/sseaERC20.sol\":1817:1883  require(owner() == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_180\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":2008:2030  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/sseaERC20.sol\":1987:2094  require(... */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_192\n      jump\t// in\n    tag_190:\n        /* \"contracts/sseaERC20.sol\":2104:2132  _transferOwnership(newOwner) */\n      tag_193\n        /* \"contracts/sseaERC20.sol\":2123:2131  newOwner */\n      dup2\n        /* \"contracts/sseaERC20.sol\":2104:2122  _transferOwnership */\n      tag_194\n        /* \"contracts/sseaERC20.sol\":2104:2132  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/sseaERC20.sol\":1907:2139  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":962:991  IERC20 public immutable token */\n    tag_116:\n      immutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n      dup2\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":3391:3902  function _useAllowance(address from, uint256 shares) internal {... */\n    tag_123:\n        /* \"contracts/sseaERC20.sol\":3467:3477  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":3467:3485  msg.sender == from */\n      dup4\n      and\n      eq\n        /* \"contracts/sseaERC20.sol\":3463:3518  if (msg.sender == from) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"contracts/sseaERC20.sol\":3501:3508  return; */\n      jump(tag_195)\n        /* \"contracts/sseaERC20.sol\":3463:3518  if (msg.sender == from) {... */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":3554:3569  allowance[from] */\n      dup3\n      and\n        /* \"contracts/sseaERC20.sol\":3527:3551  uint256 spenderAllowance */\n      0x00\n        /* \"contracts/sseaERC20.sol\":3554:3569  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":3554:3563  allowance */\n      0x04\n        /* \"contracts/sseaERC20.sol\":3554:3569  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sseaERC20.sol\":3570:3580  msg.sender */\n      caller\n        /* \"contracts/sseaERC20.sol\":3554:3581  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/sseaERC20.sol\":3687:3724  spenderAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"contracts/sseaERC20.sol\":3683:3896  if (spenderAllowance != type(uint256).max) {... */\n      tag_197\n      jumpi\n        /* \"contracts/sseaERC20.sol\":3768:3774  shares */\n      dup2\n        /* \"contracts/sseaERC20.sol\":3748:3764  spenderAllowance */\n      dup2\n        /* \"contracts/sseaERC20.sol\":3748:3774  spenderAllowance >= shares */\n      lt\n      iszero\n        /* \"contracts/sseaERC20.sol\":3740:3792  require(spenderAllowance >= shares, \"Low allowance\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_200\n      jump\t// in\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":3806:3821  allowance[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":3806:3815  allowance */\n      0x04\n        /* \"contracts/sseaERC20.sol\":3806:3821  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sseaERC20.sol\":3822:3832  msg.sender */\n      caller\n        /* \"contracts/sseaERC20.sol\":3806:3833  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/sseaERC20.sol\":3836:3861  spenderAllowance - shares */\n      dup3\n      dup3\n      sub\n        /* \"contracts/sseaERC20.sol\":3806:3861  allowance[from][msg.sender] = spenderAllowance - shares */\n      swap1\n      sstore\n        /* \"contracts/sseaERC20.sol\":3683:3896  if (spenderAllowance != type(uint256).max) {... */\n    tag_197:\n        /* \"contracts/sseaERC20.sol\":3391:3902  function _useAllowance(address from, uint256 shares) internal {... */\n      pop\n    tag_195:\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":2588:3385  function _transfer(... */\n    tag_125:\n        /* \"contracts/sseaERC20.sol\":2698:2718  User memory fromUser */\n      tag_202\n      tag_139\n      jump\t// in\n    tag_202:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":2721:2732  users[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":2721:2726  users */\n      0x03\n        /* \"contracts/sseaERC20.sol\":2721:2732  users[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/sseaERC20.sol\":2698:2732  User memory fromUser = users[from] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      dup5\n      mstore\n      shl(0x80, 0x01)\n      swap1\n      swap2\n      div\n      and\n      swap1\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/sseaERC20.sol\":2750:2765  block.timestamp */\n      timestamp\n        /* \"contracts/sseaERC20.sol\":2750:2789  block.timestamp >= fromUser.lockedUntil */\n      lt\n      iszero\n        /* \"contracts/sseaERC20.sol\":2742:2800  require(block.timestamp >= fromUser.lockedUntil, \"Locked\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_205\n      jump\t// in\n    tag_203:\n        /* \"contracts/sseaERC20.sol\":2814:2825  shares != 0 */\n      dup2\n      iszero\n        /* \"contracts/sseaERC20.sol\":2810:3338  if (shares != 0) {... */\n      tag_210\n      jumpi\n        /* \"contracts/sseaERC20.sol\":2849:2865  fromUser.balance */\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":2849:2875  fromUser.balance >= shares */\n      and\n      dup3\n      gt\n      iszero\n        /* \"contracts/sseaERC20.sol\":2841:2891  require(fromUser.balance >= shares, \"Low balance\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_209\n      jump\t// in\n    tag_207:\n        /* \"contracts/sseaERC20.sol\":2917:2919  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":2909:2919  from != to */\n      and\n        /* \"contracts/sseaERC20.sol\":2909:2913  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":2909:2919  from != to */\n      and\n      eq\n        /* \"contracts/sseaERC20.sol\":2905:3328  if (from != to) {... */\n      tag_210\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":2947:2963  to != address(0) */\n      dup4\n      and\n        /* \"contracts/sseaERC20.sol\":2939:2980  require(to != address(0), \"Zero address\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_211:\n        /* \"contracts/sseaERC20.sol\":3048:3066  User memory toUser */\n      tag_213\n      tag_139\n      jump\t// in\n    tag_213:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":3069:3078  users[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":3069:3074  users */\n      0x03\n        /* \"contracts/sseaERC20.sol\":3069:3078  users[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/sseaERC20.sol\":3048:3078  User memory toUser = users[to] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      dup5\n      mstore\n      shl(0x80, 0x01)\n      swap1\n      swap2\n      div\n      and\n      swap1\n      dup3\n      add\n      mstore\n        /* \"contracts/sseaERC20.sol\":3137:3151  shares.to128() */\n      tag_214\n        /* \"contracts/sseaERC20.sol\":3137:3143  shares */\n      dup4\n        /* \"contracts/sseaERC20.sol\":3137:3149  shares.to128 */\n      tag_150\n        /* \"contracts/sseaERC20.sol\":3137:3151  shares.to128() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/sseaERC20.sol\":3118:3134  fromUser.balance */\n      dup3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":3096:3107  users[from] */\n      dup8\n      and\n        /* \"contracts/sseaERC20.sol\":3118:3134  fromUser.balance */\n      0x00\n        /* \"contracts/sseaERC20.sol\":3096:3107  users[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":3096:3101  users */\n      0x03\n        /* \"contracts/sseaERC20.sol\":3096:3107  users[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/sseaERC20.sol\":3096:3151  users[from].balance = fromUser.balance - shares.to128() */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      and\n        /* \"contracts/sseaERC20.sol\":3118:3151  fromUser.balance - shares.to128() */\n      swap3\n      swap1\n      swap2\n      sub\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":3096:3151  users[from].balance = fromUser.balance - shares.to128() */\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/sseaERC20.sol\":3230:3244  shares.to128() */\n      tag_215\n        /* \"contracts/sseaERC20.sol\":3230:3236  shares */\n      dup4\n        /* \"contracts/sseaERC20.sol\":3230:3242  shares.to128 */\n      tag_150\n        /* \"contracts/sseaERC20.sol\":3230:3244  shares.to128() */\n      jump\t// in\n    tag_215:\n        /* \"contracts/sseaERC20.sol\":3213:3227  toUser.balance */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":3193:3202  users[to] */\n      dup6\n      and\n        /* \"contracts/sseaERC20.sol\":3213:3227  toUser.balance */\n      0x00\n        /* \"contracts/sseaERC20.sol\":3193:3202  users[to] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":3193:3198  users */\n      0x03\n        /* \"contracts/sseaERC20.sol\":3193:3202  users[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/sseaERC20.sol\":3193:3244  users[to].balance = toUser.balance + shares.to128() */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      and\n        /* \"contracts/sseaERC20.sol\":3213:3244  toUser.balance + shares.to128() */\n      swap2\n      swap1\n      swap3\n      add\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":3193:3244  users[to].balance = toUser.balance + shares.to128() */\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/sseaERC20.sol\":2905:3328  if (from != to) {... */\n    tag_210:\n        /* \"contracts/sseaERC20.sol\":3367:3369  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":3352:3378  Transfer(from, to, shares) */\n      and\n        /* \"contracts/sseaERC20.sol\":3361:3365  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":3352:3378  Transfer(from, to, shares) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sseaERC20.sol\":3371:3377  shares */\n      dup5\n        /* \"contracts/sseaERC20.sol\":3352:3378  Transfer(from, to, shares) */\n      mload(0x40)\n      tag_216\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sseaERC20.sol\":2588:3385  function _transfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1546:1780  function _domainSeparator() internal view returns (bytes32) {... */\n    tag_128:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1597:1604  bytes32 */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1654:1663  chainid() */\n      chainid\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1691:1716  DOMAIN_SEPARATOR_CHAIN_ID */\n      immutable(\"0x24036ccf201a67256250eabe66d3f9fd72f9c4d022f225a8ee964be060dcb993\")\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1680:1716  chainId == DOMAIN_SEPARATOR_CHAIN_ID */\n      dup2\n      eq\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1680:1773  chainId == DOMAIN_SEPARATOR_CHAIN_ID ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId) */\n      tag_218\n      jumpi\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1739:1773  _calculateDomainSeparator(chainId) */\n      tag_219\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1765:1772  chainId */\n      dup2\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1739:1764  _calculateDomainSeparator */\n      tag_220\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1739:1773  _calculateDomainSeparator(chainId) */\n      jump\t// in\n    tag_219:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1680:1773  chainId == DOMAIN_SEPARATOR_CHAIN_ID ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId) */\n      jump(tag_221)\n    tag_218:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1719:1736  _DOMAIN_SEPARATOR */\n      immutable(\"0x7dbef654fd5c6145f82b72cd5dbbfc6d48fd276b8a7a4371a61d55985b9d6d8b\")\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1680:1773  chainId == DOMAIN_SEPARATOR_CHAIN_ID ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId) */\n    tag_221:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1673:1773  return chainId == DOMAIN_SEPARATOR_CHAIN_ID ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId) */\n      swap2\n      pop\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1546:1780  function _domainSeparator() internal view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":7924:8486  function _burn(... */\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":8038:8054  to != address(0) */\n      dup3\n      and\n        /* \"contracts/sseaERC20.sol\":8030:8071  require(to != address(0), \"Zero address\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_223:\n        /* \"contracts/sseaERC20.sol\":8081:8097  User memory user */\n      tag_225\n      tag_139\n      jump\t// in\n    tag_225:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":8100:8111  users[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":8100:8105  users */\n      0x03\n        /* \"contracts/sseaERC20.sol\":8100:8111  users[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/sseaERC20.sol\":8081:8111  User memory user = users[from] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      dup5\n      mstore\n      shl(0x80, 0x01)\n      swap1\n      swap2\n      div\n      and\n      swap1\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/sseaERC20.sol\":8129:8144  block.timestamp */\n      timestamp\n        /* \"contracts/sseaERC20.sol\":8129:8164  block.timestamp >= user.lockedUntil */\n      lt\n      iszero\n        /* \"contracts/sseaERC20.sol\":8121:8175  require(block.timestamp >= user.lockedUntil, \"Locked\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_205\n      jump\t// in\n    tag_226:\n        /* \"contracts/sseaERC20.sol\":8185:8199  uint256 amount */\n      0x00\n        /* \"contracts/sseaERC20.sol\":8258:8269  totalSupply */\n      dup1\n      sload\n        /* \"contracts/sseaERC20.sol\":8212:8242  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":8212:8217  token */\n      immutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n        /* \"contracts/sseaERC20.sol\":8212:8227  token.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/sseaERC20.sol\":8212:8242  token.balanceOf(address(this)) */\n      tag_228\n      swap1\n        /* \"contracts/sseaERC20.sol\":8236:8240  this */\n      address\n      swap1\n        /* \"contracts/sseaERC20.sol\":8212:8242  token.balanceOf(address(this)) */\n      0x04\n      add\n      tag_70\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_232\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_232:\n        /* \"contracts/sseaERC20.sol\":8203:8209  shares */\n      dup5\n        /* \"contracts/sseaERC20.sol\":8203:8242  shares * token.balanceOf(address(this)) */\n      mul\n        /* \"contracts/sseaERC20.sol\":8202:8269  (shares * token.balanceOf(address(this))) /... */\n      dup2\n      tag_233\n      jumpi\n      invalid\n    tag_233:\n      div\n        /* \"contracts/sseaERC20.sol\":8185:8269  uint256 amount = (shares * token.balanceOf(address(this))) /... */\n      swap1\n      pop\n        /* \"contracts/sseaERC20.sol\":8301:8333  user.balance.sub(shares.to128()) */\n      tag_234\n        /* \"contracts/sseaERC20.sol\":8318:8332  shares.to128() */\n      tag_235\n        /* \"contracts/sseaERC20.sol\":8318:8324  shares */\n      dup5\n        /* \"contracts/sseaERC20.sol\":8318:8330  shares.to128 */\n      tag_150\n        /* \"contracts/sseaERC20.sol\":8318:8332  shares.to128() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/sseaERC20.sol\":8301:8313  user.balance */\n      dup4\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":8301:8317  user.balance.sub */\n      and\n      swap1\n      tag_236\n        /* \"contracts/sseaERC20.sol\":8301:8333  user.balance.sub(shares.to128()) */\n      jump\t// in\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":8279:8290  users[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sseaERC20.sol\":8279:8284  users */\n      0x03\n        /* \"contracts/sseaERC20.sol\":8279:8290  users[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/sseaERC20.sol\":8279:8333  users[from].balance = user.balance.sub(shares.to128()) */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      swap5\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/sseaERC20.sol\":8367:8388  totalSupply -= shares */\n      dup2\n      sload\n      dup6\n      swap1\n      sub\n      swap1\n      swap2\n      sstore\n        /* \"contracts/sseaERC20.sol\":8399:8429  token.safeTransfer(to, amount) */\n      tag_237\n      swap1\n        /* \"contracts/sseaERC20.sol\":8399:8404  token */\n      immutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n        /* \"contracts/sseaERC20.sol\":8399:8417  token.safeTransfer */\n      and\n        /* \"contracts/sseaERC20.sol\":8418:8420  to */\n      dup6\n        /* \"contracts/sseaERC20.sol\":8422:8428  amount */\n      dup4\n        /* \"contracts/sseaERC20.sol\":8399:8417  token.safeTransfer */\n      tag_238\n        /* \"contracts/sseaERC20.sol\":8399:8429  token.safeTransfer(to, amount) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/sseaERC20.sol\":8468:8469  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":8445:8479  Transfer(from, address(0), shares) */\n      and\n        /* \"contracts/sseaERC20.sol\":8454:8458  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sseaERC20.sol\":8445:8479  Transfer(from, address(0), shares) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sseaERC20.sol\":8472:8478  shares */\n      dup6\n        /* \"contracts/sseaERC20.sol\":8445:8479  Transfer(from, address(0), shares) */\n      mload(0x40)\n      tag_239\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sseaERC20.sol\":7924:8486  function _burn(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":679:837  function to128(uint256 a) internal pure returns (uint128 c) {... */\n    tag_150:\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":728:737  uint128 c */\n      0x00\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":757:773  a <= uint128(-1) */\n      dup3\n      gt\n      iszero\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":749:806  require(a <= uint128(-1), \"BoringMath: uint128 Overflow\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_243\n      jump\t// in\n    tag_241:\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":828:829  a */\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":679:837  function to128(uint256 a) internal pure returns (uint128 c) {... */\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3374:3748  function safeTransferFrom(... */\n    tag_153:\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3514:3526  bool success */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3528:3545  bytes memory data */\n      0x60\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3557:3562  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3549:3568  address(token).call */\n      and\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":483:493  0x23b872dd */\n      0x23b872dd\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3592:3609  SIG_TRANSFER_FROM */\n      0xe0\n      shl\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3611:3615  from */\n      dup7\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3617:3619  to */\n      dup7\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3621:3627  amount */\n      dup7\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3569:3628  abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount) */\n      add(0x24, mload(0x40))\n      tag_245\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3549:3629  address(token).call(abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount)) */\n      swap1\n      mload\n      tag_247\n      swap2\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3569:3628  abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount) */\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3549:3629  address(token).call(abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount)) */\n      tag_248\n      jump\t// in\n    tag_247:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_251\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_250)\n    tag_251:\n      0x60\n      swap2\n      pop\n    tag_250:\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3513:3629  (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3647:3654  success */\n      dup2\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3647:3704  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_254\n      jumpi\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3659:3670  data.length */\n      dup1\n      mload\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3659:3675  data.length == 0 */\n      iszero\n      dup1\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3659:3703  data.length == 0 || abi.decode(data, (bool)) */\n      tag_254\n      jumpi\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3690:3694  data */\n      dup1\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3679:3703  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3639:3741  require(success && (data.length == 0 || abi.decode(data, (bool))), \"BoringERC20: TransferFrom failed\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_258\n      jump\t// in\n    tag_256:\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3374:3748  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1786:2108  function _getDigest(bytes32 dataHash) internal view returns (bytes32 digest) {... */\n    tag_167:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1847:1861  bytes32 digest */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1959:1999  EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x1901)\n      dup2\n      mstore\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":2021:2039  _domainSeparator() */\n      tag_260\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":2021:2037  _domainSeparator */\n      tag_128\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":2021:2039  _domainSeparator() */\n      jump\t// in\n    tag_260:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":2061:2069  dataHash */\n      dup4\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1921:2087  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_261\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1894:2101  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1873:2101  digest =... */\n      swap1\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1786:2108  function _getDigest(bytes32 dataHash) internal view returns (bytes32 digest) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sseaERC20.sol\":2145:2277  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_194:\n        /* \"contracts/sseaERC20.sol\":2237:2243  _owner */\n      0x02\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"contracts/sseaERC20.sol\":2253:2270  _owner = newOwner */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/sseaERC20.sol\":2145:2277  function _transferOwnership(address newOwner) internal virtual {... */\n      jump\t// out\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":793:1062  function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {... */\n    tag_220:\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":867:874  bytes32 */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":388:456  keccak256(\"EIP712Domain(uint256 chainId,address verifyingContract)\") */\n      0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":993:1000  chainId */\n      dup3\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":1026:1030  this */\n      address\n        /* \"@boringcrypto/boring-solidity/contracts/Domain.sol\":916:1045  abi.encode(... */\n      add(0x20, mload(0x40))\n      tag_261\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":1431:1567  function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {... */\n    tag_236:\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":1523:1528  a - b */\n      dup1\n      dup3\n      sub\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":1518:1534  (c = a - b) <= a */\n      dup1\n      dup5\n      and\n      swap1\n      dup3\n      and\n      gt\n      iszero\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":1510:1560  require((c = a - b) <= a, \"BoringMath: Underflow\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_270\n      jump\t// in\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2726:3059  function safeTransfer(... */\n    tag_238:\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2840:2852  bool success */\n      0x00\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2854:2871  bytes memory data */\n      0x60\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2883:2888  token */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2875:2894  address(token).call */\n      and\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":394:404  0xa9059cbb */\n      0xa9059cbb\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2918:2930  SIG_TRANSFER */\n      0xe0\n      shl\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2932:2934  to */\n      dup6\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2936:2942  amount */\n      dup6\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2895:2943  abi.encodeWithSelector(SIG_TRANSFER, to, amount) */\n      add(0x24, mload(0x40))\n      tag_272\n      swap3\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      mstore\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2875:2944  address(token).call(abi.encodeWithSelector(SIG_TRANSFER, to, amount)) */\n      swap1\n      mload\n      tag_274\n      swap2\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2895:2943  abi.encodeWithSelector(SIG_TRANSFER, to, amount) */\n      swap1\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2875:2944  address(token).call(abi.encodeWithSelector(SIG_TRANSFER, to, amount)) */\n      tag_248\n      jump\t// in\n    tag_274:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_277\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_276)\n    tag_277:\n      0x60\n      swap2\n      pop\n    tag_276:\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2839:2944  (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER, to, amount)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2962:2969  success */\n      dup2\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2962:3019  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_280\n      jumpi\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2974:2985  data.length */\n      dup1\n      mload\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2974:2990  data.length == 0 */\n      iszero\n      dup1\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2974:3018  data.length == 0 || abi.decode(data, (bool)) */\n      tag_280\n      jumpi\n      pop\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":3005:3009  data */\n      dup1\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2994:3018  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_280\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_280:\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2954:3052  require(success && (data.length == 0 || abi.decode(data, (bool))), \"BoringERC20: Transfer failed\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_283\n      jump\t// in\n    tag_281:\n        /* \"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":2726:3059  function safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_139:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":5:135   */\n    tag_285:\n        /* \"--CODEGEN--\":72:92   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":22654:22708   */\n      dup2\n      and\n        /* \"--CODEGEN--\":23694:23729   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":23684:23686   */\n      tag_119\n      jumpi\n        /* \"--CODEGEN--\":23743:23744   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":23733:23745   */\n      revert\n        /* \"--CODEGEN--\":825:1066   */\n    tag_60:\n      0x00\n        /* \"--CODEGEN--\":929:931   */\n      0x20\n        /* \"--CODEGEN--\":917:926   */\n      dup3\n        /* \"--CODEGEN--\":908:915   */\n      dup5\n        /* \"--CODEGEN--\":904:927   */\n      sub\n        /* \"--CODEGEN--\":900:932   */\n      slt\n        /* \"--CODEGEN--\":897:899   */\n      iszero\n      tag_289\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":935:947   */\n      revert\n        /* \"--CODEGEN--\":897:899   */\n    tag_289:\n        /* \"--CODEGEN--\":997:1050   */\n      tag_290\n        /* \"--CODEGEN--\":1042:1049   */\n      dup4\n        /* \"--CODEGEN--\":1018:1040   */\n      dup4\n        /* \"--CODEGEN--\":997:1050   */\n      tag_285\n      jump\t// in\n    tag_290:\n        /* \"--CODEGEN--\":987:1050   */\n      swap4\n        /* \"--CODEGEN--\":891:1066   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":1073:1439   */\n    tag_101:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1194:1196   */\n      0x40\n        /* \"--CODEGEN--\":1182:1191   */\n      dup4\n        /* \"--CODEGEN--\":1173:1180   */\n      dup6\n        /* \"--CODEGEN--\":1169:1192   */\n      sub\n        /* \"--CODEGEN--\":1165:1197   */\n      slt\n        /* \"--CODEGEN--\":1162:1164   */\n      iszero\n      tag_292\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":1200:1212   */\n      revert\n        /* \"--CODEGEN--\":1162:1164   */\n    tag_292:\n        /* \"--CODEGEN--\":1262:1315   */\n      tag_293\n        /* \"--CODEGEN--\":1307:1314   */\n      dup5\n        /* \"--CODEGEN--\":1283:1305   */\n      dup5\n        /* \"--CODEGEN--\":1262:1315   */\n      tag_285\n      jump\t// in\n    tag_293:\n        /* \"--CODEGEN--\":1252:1315   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1370:1423   */\n      tag_294\n        /* \"--CODEGEN--\":1415:1422   */\n      dup5\n        /* \"--CODEGEN--\":1352:1354   */\n      0x20\n        /* \"--CODEGEN--\":1395:1404   */\n      dup6\n        /* \"--CODEGEN--\":1391:1413   */\n      add\n        /* \"--CODEGEN--\":1370:1423   */\n      tag_285\n      jump\t// in\n    tag_294:\n        /* \"--CODEGEN--\":1360:1423   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1156:1439   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":1446:1937   */\n    tag_44:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":1584:1586   */\n      0x60\n        /* \"--CODEGEN--\":1572:1581   */\n      dup5\n        /* \"--CODEGEN--\":1563:1570   */\n      dup7\n        /* \"--CODEGEN--\":1559:1582   */\n      sub\n        /* \"--CODEGEN--\":1555:1587   */\n      slt\n        /* \"--CODEGEN--\":1552:1554   */\n      iszero\n      tag_296\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":1590:1602   */\n      revert\n        /* \"--CODEGEN--\":1552:1554   */\n    tag_296:\n        /* \"--CODEGEN--\":85:91   */\n      dup4\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_297\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"--CODEGEN--\":1642:1705   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1742:1744   */\n      0x20\n        /* \"--CODEGEN--\":1781:1803   */\n      dup5\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_299\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_298\n      jump\t// in\n    tag_299:\n        /* \"--CODEGEN--\":1546:1937   */\n      swap3\n      swap6\n        /* \"--CODEGEN--\":1750:1813   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":1850:1852   */\n      0x40\n        /* \"--CODEGEN--\":1889:1911   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":481:501   */\n      calldataload\n      swap1\n        /* \"--CODEGEN--\":1546:1937   */\n      jump\t// out\n        /* \"--CODEGEN--\":1944:2935   */\n    tag_97:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":2148:2151   */\n      0xe0\n        /* \"--CODEGEN--\":2136:2145   */\n      dup9\n        /* \"--CODEGEN--\":2127:2134   */\n      dup11\n        /* \"--CODEGEN--\":2123:2146   */\n      sub\n        /* \"--CODEGEN--\":2119:2152   */\n      slt\n        /* \"--CODEGEN--\":2116:2118   */\n      iszero\n      tag_301\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":2155:2167   */\n      revert\n        /* \"--CODEGEN--\":2116:2118   */\n    tag_301:\n        /* \"--CODEGEN--\":2217:2270   */\n      tag_302\n        /* \"--CODEGEN--\":2262:2269   */\n      dup10\n        /* \"--CODEGEN--\":2238:2260   */\n      dup10\n        /* \"--CODEGEN--\":2217:2270   */\n      tag_285\n      jump\t// in\n    tag_302:\n        /* \"--CODEGEN--\":2207:2270   */\n      swap7\n      pop\n        /* \"--CODEGEN--\":2325:2378   */\n      tag_303\n        /* \"--CODEGEN--\":2370:2377   */\n      dup10\n        /* \"--CODEGEN--\":2307:2309   */\n      0x20\n        /* \"--CODEGEN--\":2350:2359   */\n      dup11\n        /* \"--CODEGEN--\":2346:2368   */\n      add\n        /* \"--CODEGEN--\":2325:2378   */\n      tag_285\n      jump\t// in\n    tag_303:\n        /* \"--CODEGEN--\":2315:2378   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":2415:2417   */\n      0x40\n        /* \"--CODEGEN--\":2458:2467   */\n      dup9\n        /* \"--CODEGEN--\":2454:2476   */\n      add\n        /* \"--CODEGEN--\":481:501   */\n      calldataload\n        /* \"--CODEGEN--\":2423:2486   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":2523:2525   */\n      0x60\n        /* \"--CODEGEN--\":2566:2575   */\n      dup9\n        /* \"--CODEGEN--\":2562:2584   */\n      add\n        /* \"--CODEGEN--\":481:501   */\n      calldataload\n        /* \"--CODEGEN--\":2531:2594   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":2631:2634   */\n      0x80\n        /* \"--CODEGEN--\":2673:2682   */\n      dup9\n        /* \"--CODEGEN--\":2669:2691   */\n      add\n        /* \"--CODEGEN--\":757:777   */\n      calldataload\n        /* \"--CODEGEN--\":22870:22874   */\n      0xff\n        /* \"--CODEGEN--\":24208:24213   */\n      dup2\n        /* \"--CODEGEN--\":22859:22875   */\n      and\n        /* \"--CODEGEN--\":24185:24190   */\n      dup2\n        /* \"--CODEGEN--\":24182:24215   */\n      eq\n        /* \"--CODEGEN--\":24172:24174   */\n      tag_304\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":24219:24231   */\n      revert\n        /* \"--CODEGEN--\":24172:24174   */\n    tag_304:\n        /* \"--CODEGEN--\":2110:2935   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"--CODEGEN--\":2640:2701   */\n      swap5\n        /* \"--CODEGEN--\":2738:2741   */\n      0xa0\n        /* \"--CODEGEN--\":2778:2800   */\n      dup5\n      add\n        /* \"--CODEGEN--\":344:364   */\n      calldataload\n      swap5\n      pop\n        /* \"--CODEGEN--\":2847:2850   */\n      0xc0\n        /* \"--CODEGEN--\":2887:2909   */\n      swap1\n      swap4\n      add\n        /* \"--CODEGEN--\":344:364   */\n      calldataload\n      swap3\n        /* \"--CODEGEN--\":2110:2935   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":2942:3308   */\n    tag_34:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":3063:3065   */\n      0x40\n        /* \"--CODEGEN--\":3051:3060   */\n      dup4\n        /* \"--CODEGEN--\":3042:3049   */\n      dup6\n        /* \"--CODEGEN--\":3038:3061   */\n      sub\n        /* \"--CODEGEN--\":3034:3066   */\n      slt\n        /* \"--CODEGEN--\":3031:3033   */\n      iszero\n      tag_306\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":3069:3081   */\n      revert\n        /* \"--CODEGEN--\":3031:3033   */\n    tag_306:\n        /* \"--CODEGEN--\":3131:3184   */\n      tag_307\n        /* \"--CODEGEN--\":3176:3183   */\n      dup5\n        /* \"--CODEGEN--\":3152:3174   */\n      dup5\n        /* \"--CODEGEN--\":3131:3184   */\n      tag_285\n      jump\t// in\n    tag_307:\n        /* \"--CODEGEN--\":3121:3184   */\n      swap5\n        /* \"--CODEGEN--\":3221:3223   */\n      0x20\n        /* \"--CODEGEN--\":3260:3282   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"--CODEGEN--\":481:501   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":3025:3308   */\n      jump\t// out\n        /* \"--CODEGEN--\":3315:3572   */\n    tag_255:\n      0x00\n        /* \"--CODEGEN--\":3427:3429   */\n      0x20\n        /* \"--CODEGEN--\":3415:3424   */\n      dup3\n        /* \"--CODEGEN--\":3406:3413   */\n      dup5\n        /* \"--CODEGEN--\":3402:3425   */\n      sub\n        /* \"--CODEGEN--\":3398:3430   */\n      slt\n        /* \"--CODEGEN--\":3395:3397   */\n      iszero\n      tag_309\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3433:3445   */\n      revert\n        /* \"--CODEGEN--\":3395:3397   */\n    tag_309:\n        /* \"--CODEGEN--\":223:229   */\n      dup2\n        /* \"--CODEGEN--\":217:230   */\n      mload\n        /* \"--CODEGEN--\":23840:23845   */\n      dup1\n        /* \"--CODEGEN--\":22367:22380   */\n      iszero\n        /* \"--CODEGEN--\":22360:22381   */\n      iszero\n        /* \"--CODEGEN--\":23818:23823   */\n      dup2\n        /* \"--CODEGEN--\":23815:23847   */\n      eq\n        /* \"--CODEGEN--\":23805:23807   */\n      tag_290\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":23851:23863   */\n      revert\n        /* \"--CODEGEN--\":3579:3820   */\n    tag_80:\n      0x00\n        /* \"--CODEGEN--\":3683:3685   */\n      0x20\n        /* \"--CODEGEN--\":3671:3680   */\n      dup3\n        /* \"--CODEGEN--\":3662:3669   */\n      dup5\n        /* \"--CODEGEN--\":3658:3681   */\n      sub\n        /* \"--CODEGEN--\":3654:3686   */\n      slt\n        /* \"--CODEGEN--\":3651:3653   */\n      iszero\n      tag_312\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3689:3701   */\n      revert\n        /* \"--CODEGEN--\":3651:3653   */\n    tag_312:\n      pop\n        /* \"--CODEGEN--\":481:501   */\n      calldataload\n      swap2\n        /* \"--CODEGEN--\":3645:3820   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3827:4090   */\n    tag_145:\n      0x00\n        /* \"--CODEGEN--\":3942:3944   */\n      0x20\n        /* \"--CODEGEN--\":3930:3939   */\n      dup3\n        /* \"--CODEGEN--\":3921:3928   */\n      dup5\n        /* \"--CODEGEN--\":3917:3940   */\n      sub\n        /* \"--CODEGEN--\":3913:3945   */\n      slt\n        /* \"--CODEGEN--\":3910:3912   */\n      iszero\n      tag_314\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3948:3960   */\n      revert\n        /* \"--CODEGEN--\":3910:3912   */\n    tag_314:\n      pop\n        /* \"--CODEGEN--\":629:642   */\n      mload\n      swap2\n        /* \"--CODEGEN--\":3904:4090   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":10507:10778   */\n    tag_248:\n      0x00\n        /* \"--CODEGEN--\":4767:4772   */\n      dup3\n        /* \"--CODEGEN--\":21554:21566   */\n      mload\n        /* \"--CODEGEN--\":4878:4930   */\n      tag_316\n        /* \"--CODEGEN--\":4923:4929   */\n      dup2\n        /* \"--CODEGEN--\":4918:4921   */\n      dup5\n        /* \"--CODEGEN--\":4911:4915   */\n      0x20\n        /* \"--CODEGEN--\":4904:4909   */\n      dup8\n        /* \"--CODEGEN--\":4900:4916   */\n      add\n        /* \"--CODEGEN--\":4878:4930   */\n      tag_317\n      jump\t// in\n    tag_316:\n        /* \"--CODEGEN--\":4942:4958   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"--CODEGEN--\":10641:10778   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":10785:11338   */\n    tag_262:\n      0x00\n        /* \"--CODEGEN--\":4767:4772   */\n      dup5\n        /* \"--CODEGEN--\":21554:21566   */\n      mload\n        /* \"--CODEGEN--\":4878:4930   */\n      tag_319\n        /* \"--CODEGEN--\":4923:4929   */\n      dup2\n        /* \"--CODEGEN--\":4918:4921   */\n      dup5\n        /* \"--CODEGEN--\":4911:4915   */\n      0x20\n        /* \"--CODEGEN--\":4904:4909   */\n      dup10\n        /* \"--CODEGEN--\":4900:4916   */\n      add\n        /* \"--CODEGEN--\":4878:4930   */\n      tag_317\n      jump\t// in\n    tag_319:\n        /* \"--CODEGEN--\":4942:4958   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":4399:4436   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"--CODEGEN--\":4911:4915   */\n      0x20\n        /* \"--CODEGEN--\":11190:11202   */\n      dup3\n      add\n        /* \"--CODEGEN--\":4399:4436   */\n      mstore\n        /* \"--CODEGEN--\":11301:11313   */\n      0x40\n      add\n      swap2\n        /* \"--CODEGEN--\":10977:11338   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":11345:11567   */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":22654:22708   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":4168:4205   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":11472:11474   */\n      0x20\n        /* \"--CODEGEN--\":11457:11475   */\n      add\n      swap1\n        /* \"--CODEGEN--\":11443:11567   */\n      jump\t// out\n        /* \"--CODEGEN--\":11574:12018   */\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":22654:22708   */\n      swap4\n      dup5\n      and\n        /* \"--CODEGEN--\":4168:4205   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":22654:22708   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":11921:11923   */\n      0x20\n        /* \"--CODEGEN--\":11906:11924   */\n      dup3\n      add\n        /* \"--CODEGEN--\":4168:4205   */\n      mstore\n        /* \"--CODEGEN--\":12004:12006   */\n      0x40\n        /* \"--CODEGEN--\":11989:12007   */\n      dup2\n      add\n        /* \"--CODEGEN--\":4399:4436   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":11757:11759   */\n      0x60\n        /* \"--CODEGEN--\":11742:11760   */\n      add\n      swap1\n        /* \"--CODEGEN--\":11728:12018   */\n      jump\t// out\n        /* \"--CODEGEN--\":12025:12358   */\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":22654:22708   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":4168:4205   */\n      dup3\n      mstore\n        /* \"--CODEGEN--\":12344:12346   */\n      0x20\n        /* \"--CODEGEN--\":12329:12347   */\n      dup3\n      add\n        /* \"--CODEGEN--\":4399:4436   */\n      mstore\n        /* \"--CODEGEN--\":12180:12182   */\n      0x40\n        /* \"--CODEGEN--\":12165:12183   */\n      add\n      swap1\n        /* \"--CODEGEN--\":12151:12358   */\n      jump\t// out\n        /* \"--CODEGEN--\":12365:12575   */\n    tag_37:\n        /* \"--CODEGEN--\":22367:22380   */\n      swap1\n      iszero\n        /* \"--CODEGEN--\":22360:22381   */\n      iszero\n        /* \"--CODEGEN--\":4282:4316   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":12486:12488   */\n      0x20\n        /* \"--CODEGEN--\":12471:12489   */\n      add\n      swap1\n        /* \"--CODEGEN--\":12457:12575   */\n      jump\t// out\n        /* \"--CODEGEN--\":12582:12804   */\n    tag_54:\n        /* \"--CODEGEN--\":4399:4436   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":12709:12711   */\n      0x20\n        /* \"--CODEGEN--\":12694:12712   */\n      add\n      swap1\n        /* \"--CODEGEN--\":12680:12804   */\n      jump\t// out\n        /* \"--CODEGEN--\":12811:13591   */\n    tag_166:\n        /* \"--CODEGEN--\":4399:4436   */\n      swap6\n      dup7\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":22654:22708   */\n      swap5\n      dup6\n      and\n        /* \"--CODEGEN--\":13243:13245   */\n      0x20\n        /* \"--CODEGEN--\":13228:13246   */\n      dup8\n      add\n        /* \"--CODEGEN--\":4168:4205   */\n      mstore\n        /* \"--CODEGEN--\":22654:22708   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"--CODEGEN--\":13326:13328   */\n      0x40\n        /* \"--CODEGEN--\":13311:13329   */\n      dup6\n      add\n        /* \"--CODEGEN--\":4168:4205   */\n      mstore\n        /* \"--CODEGEN--\":13409:13411   */\n      0x60\n        /* \"--CODEGEN--\":13394:13412   */\n      dup5\n      add\n        /* \"--CODEGEN--\":4399:4436   */\n      mstore\n        /* \"--CODEGEN--\":13492:13495   */\n      0x80\n        /* \"--CODEGEN--\":13477:13496   */\n      dup4\n      add\n        /* \"--CODEGEN--\":4399:4436   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":22665:22707   */\n      0xa0\n        /* \"--CODEGEN--\":13561:13580   */\n      dup3\n      add\n        /* \"--CODEGEN--\":4399:4436   */\n      mstore\n        /* \"--CODEGEN--\":13078:13081   */\n      0xc0\n        /* \"--CODEGEN--\":13063:13082   */\n      add\n      swap1\n        /* \"--CODEGEN--\":13049:13591   */\n      jump\t// out\n        /* \"--CODEGEN--\":13598:14042   */\n    tag_266:\n        /* \"--CODEGEN--\":4399:4436   */\n      swap3\n      dup4\n      mstore\n        /* \"--CODEGEN--\":13945:13947   */\n      0x20\n        /* \"--CODEGEN--\":13930:13948   */\n      dup4\n      add\n        /* \"--CODEGEN--\":4399:4436   */\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":22654:22708   */\n      and\n        /* \"--CODEGEN--\":14028:14030   */\n      0x40\n        /* \"--CODEGEN--\":14013:14031   */\n      dup3\n      add\n        /* \"--CODEGEN--\":4168:4205   */\n      mstore\n        /* \"--CODEGEN--\":13781:13783   */\n      0x60\n        /* \"--CODEGEN--\":13766:13784   */\n      add\n      swap1\n        /* \"--CODEGEN--\":13752:14042   */\n      jump\t// out\n        /* \"--CODEGEN--\":14049:14597   */\n    tag_169:\n        /* \"--CODEGEN--\":4399:4436   */\n      swap4\n      dup5\n      mstore\n        /* \"--CODEGEN--\":22870:22874   */\n      0xff\n        /* \"--CODEGEN--\":22859:22875   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":14417:14419   */\n      0x20\n        /* \"--CODEGEN--\":14402:14420   */\n      dup5\n      add\n        /* \"--CODEGEN--\":10460:10495   */\n      mstore\n        /* \"--CODEGEN--\":14500:14502   */\n      0x40\n        /* \"--CODEGEN--\":14485:14503   */\n      dup4\n      add\n        /* \"--CODEGEN--\":4399:4436   */\n      mstore\n        /* \"--CODEGEN--\":14583:14585   */\n      0x60\n        /* \"--CODEGEN--\":14568:14586   */\n      dup3\n      add\n        /* \"--CODEGEN--\":4399:4436   */\n      mstore\n        /* \"--CODEGEN--\":14256:14259   */\n      0x80\n        /* \"--CODEGEN--\":14241:14260   */\n      add\n      swap1\n        /* \"--CODEGEN--\":14227:14597   */\n      jump\t// out\n        /* \"--CODEGEN--\":14861:15171   */\n    tag_31:\n      0x00\n        /* \"--CODEGEN--\":15008:15010   */\n      0x20\n        /* \"--CODEGEN--\":15029:15046   */\n      dup3\n        /* \"--CODEGEN--\":15022:15069   */\n      mstore\n        /* \"--CODEGEN--\":5276:5281   */\n      dup3\n        /* \"--CODEGEN--\":21554:21566   */\n      mload\n        /* \"--CODEGEN--\":21993:21999   */\n      dup1\n        /* \"--CODEGEN--\":15008:15010   */\n      0x20\n        /* \"--CODEGEN--\":14997:15006   */\n      dup5\n        /* \"--CODEGEN--\":14993:15011   */\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n        /* \"--CODEGEN--\":5370:5422   */\n      tag_330\n        /* \"--CODEGEN--\":5415:5421   */\n      dup2\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n        /* \"--CODEGEN--\":14997:15006   */\n      dup6\n        /* \"--CODEGEN--\":22021:22035   */\n      add\n        /* \"--CODEGEN--\":15008:15010   */\n      0x20\n        /* \"--CODEGEN--\":5396:5401   */\n      dup8\n        /* \"--CODEGEN--\":5392:5408   */\n      add\n        /* \"--CODEGEN--\":5370:5422   */\n      tag_317\n      jump\t// in\n    tag_330:\n        /* \"--CODEGEN--\":23614:23621   */\n      0x1f\n        /* \"--CODEGEN--\":23598:23612   */\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":23594:23622   */\n      and\n        /* \"--CODEGEN--\":5434:5473   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n        /* \"--CODEGEN--\":5434:5473   */\n      add\n      swap3\n        /* \"--CODEGEN--\":14979:15171   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":15178:15594   */\n    tag_270:\n        /* \"--CODEGEN--\":15378:15380   */\n      0x20\n        /* \"--CODEGEN--\":15392:15439   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":6077:6079   */\n      0x15\n        /* \"--CODEGEN--\":15363:15381   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n      shl(0x58, 0x426f72696e674d6174683a20556e646572666c6f77)\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":6093:6137   */\n      mstore\n        /* \"--CODEGEN--\":6156:6168   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":15349:15594   */\n      jump\t// out\n        /* \"--CODEGEN--\":15601:16017   */\n    tag_205:\n        /* \"--CODEGEN--\":15801:15803   */\n      0x20\n        /* \"--CODEGEN--\":15815:15862   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":6407:6408   */\n      0x06\n        /* \"--CODEGEN--\":15786:15804   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n      shl(0xd2, 0x131bd8dad959)\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":6422:6451   */\n      mstore\n        /* \"--CODEGEN--\":6470:6482   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":15772:16017   */\n      jump\t// out\n        /* \"--CODEGEN--\":16024:16440   */\n    tag_283:\n        /* \"--CODEGEN--\":16224:16226   */\n      0x20\n        /* \"--CODEGEN--\":16238:16285   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":6721:6723   */\n      0x1c\n        /* \"--CODEGEN--\":16209:16227   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n        /* \"--CODEGEN--\":6757:6787   */\n      0x426f72696e6745524332303a205472616e73666572206661696c656400000000\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":6737:6788   */\n      mstore\n        /* \"--CODEGEN--\":6807:6819   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":16195:16440   */\n      jump\t// out\n        /* \"--CODEGEN--\":16447:16863   */\n    tag_192:\n        /* \"--CODEGEN--\":16647:16649   */\n      0x20\n        /* \"--CODEGEN--\":16661:16708   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":7058:7060   */\n      0x26\n        /* \"--CODEGEN--\":16632:16650   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n        /* \"--CODEGEN--\":7094:7128   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":7074:7129   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"--CODEGEN--\":7149:7161   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":7142:7172   */\n      mstore\n        /* \"--CODEGEN--\":7191:7203   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":16618:16863   */\n      jump\t// out\n        /* \"--CODEGEN--\":16870:17286   */\n    tag_200:\n        /* \"--CODEGEN--\":17070:17072   */\n      0x20\n        /* \"--CODEGEN--\":17084:17131   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":7442:7444   */\n      0x0d\n        /* \"--CODEGEN--\":17055:17073   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n      shl(0x98, 0x4c6f7720616c6c6f77616e6365)\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":7458:7494   */\n      mstore\n        /* \"--CODEGEN--\":7513:7525   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":17041:17286   */\n      jump\t// out\n        /* \"--CODEGEN--\":17293:17709   */\n    tag_209:\n        /* \"--CODEGEN--\":17493:17495   */\n      0x20\n        /* \"--CODEGEN--\":17507:17554   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":7764:7766   */\n      0x0b\n        /* \"--CODEGEN--\":17478:17496   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n      shl(0xa8, 0x4c6f772062616c616e6365)\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":7780:7814   */\n      mstore\n        /* \"--CODEGEN--\":7833:7845   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":17464:17709   */\n      jump\t// out\n        /* \"--CODEGEN--\":17716:18132   */\n    tag_137:\n        /* \"--CODEGEN--\":17916:17918   */\n      0x20\n        /* \"--CODEGEN--\":17930:17977   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":8084:8086   */\n      0x0c\n        /* \"--CODEGEN--\":17901:17919   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n      shl(0xa0, 0x5a65726f2061646472657373)\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":8100:8135   */\n      mstore\n        /* \"--CODEGEN--\":8154:8166   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":17887:18132   */\n      jump\t// out\n        /* \"--CODEGEN--\":18139:18555   */\n    tag_243:\n        /* \"--CODEGEN--\":18339:18341   */\n      0x20\n        /* \"--CODEGEN--\":18353:18400   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":8405:8407   */\n      0x1c\n        /* \"--CODEGEN--\":18324:18342   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n        /* \"--CODEGEN--\":8441:8471   */\n      0x426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":8421:8472   */\n      mstore\n        /* \"--CODEGEN--\":8491:8503   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":18310:18555   */\n      jump\t// out\n        /* \"--CODEGEN--\":18562:18978   */\n    tag_180:\n        /* \"--CODEGEN--\":18762:18764   */\n      0x20\n        /* \"--CODEGEN--\":18776:18823   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":18747:18765   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n        /* \"--CODEGEN--\":8778:8812   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":8758:8813   */\n      mstore\n        /* \"--CODEGEN--\":8832:8844   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":18733:18978   */\n      jump\t// out\n        /* \"--CODEGEN--\":18985:19401   */\n    tag_174:\n        /* \"--CODEGEN--\":19185:19187   */\n      0x20\n        /* \"--CODEGEN--\":19199:19246   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":9083:9085   */\n      0x0b\n        /* \"--CODEGEN--\":19170:19188   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n      shl(0xa8, 0x496e76616c696420536967)\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":9099:9133   */\n      mstore\n        /* \"--CODEGEN--\":9152:9164   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":19156:19401   */\n      jump\t// out\n        /* \"--CODEGEN--\":19408:19824   */\n    tag_258:\n        /* \"--CODEGEN--\":19608:19610   */\n      0x20\n        /* \"--CODEGEN--\":19622:19669   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":19593:19611   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n        /* \"--CODEGEN--\":9439:9473   */\n      0x426f72696e6745524332303a205472616e7366657246726f6d206661696c6564\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":9419:9474   */\n      mstore\n        /* \"--CODEGEN--\":9493:9505   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":19579:19824   */\n      jump\t// out\n        /* \"--CODEGEN--\":19831:20247   */\n    tag_160:\n        /* \"--CODEGEN--\":20031:20033   */\n      0x20\n        /* \"--CODEGEN--\":20045:20092   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":9744:9746   */\n      0x0a\n        /* \"--CODEGEN--\":20016:20034   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n      shl(0xb1, 0x2d32b9379037bbb732b9)\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":9760:9793   */\n      mstore\n        /* \"--CODEGEN--\":9812:9824   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":20002:20247   */\n      jump\t// out\n        /* \"--CODEGEN--\":20254:20670   */\n    tag_163:\n        /* \"--CODEGEN--\":20454:20456   */\n      0x20\n        /* \"--CODEGEN--\":20468:20515   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10063:10064   */\n      0x07\n        /* \"--CODEGEN--\":20439:20457   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":21981:22000   */\n      mstore\n      shl(0xca, 0x115e1c1a5c9959)\n        /* \"--CODEGEN--\":22021:22035   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":10078:10108   */\n      mstore\n        /* \"--CODEGEN--\":10127:10139   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":20425:20670   */\n      jump\t// out\n        /* \"--CODEGEN--\":20677:21010   */\n    tag_87:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"--CODEGEN--\":22534:22580   */\n      swap3\n      dup4\n      and\n        /* \"--CODEGEN--\":10224:10261   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":22534:22580   */\n      swap2\n      and\n        /* \"--CODEGEN--\":20996:20998   */\n      0x20\n        /* \"--CODEGEN--\":20981:20999   */\n      dup3\n      add\n        /* \"--CODEGEN--\":10224:10261   */\n      mstore\n        /* \"--CODEGEN--\":20832:20834   */\n      0x40\n        /* \"--CODEGEN--\":20817:20835   */\n      add\n      swap1\n        /* \"--CODEGEN--\":20803:21010   */\n      jump\t// out\n        /* \"--CODEGEN--\":21246:21460   */\n    tag_50:\n        /* \"--CODEGEN--\":22870:22874   */\n      0xff\n        /* \"--CODEGEN--\":22859:22875   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":10460:10495   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":21369:21371   */\n      0x20\n        /* \"--CODEGEN--\":21354:21372   */\n      add\n      swap1\n        /* \"--CODEGEN--\":21340:21460   */\n      jump\t// out\n        /* \"--CODEGEN--\":23173:23441   */\n    tag_317:\n        /* \"--CODEGEN--\":23238:23239   */\n      0x00\n        /* \"--CODEGEN--\":23245:23346   */\n    tag_348:\n        /* \"--CODEGEN--\":23259:23265   */\n      dup4\n        /* \"--CODEGEN--\":23256:23257   */\n      dup2\n        /* \"--CODEGEN--\":23253:23266   */\n      lt\n        /* \"--CODEGEN--\":23245:23346   */\n      iszero\n      tag_350\n      jumpi\n        /* \"--CODEGEN--\":23326:23337   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":23320:23338   */\n      mload\n        /* \"--CODEGEN--\":23307:23318   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":23300:23339   */\n      mstore\n        /* \"--CODEGEN--\":23281:23283   */\n      0x20\n        /* \"--CODEGEN--\":23274:23284   */\n      add\n        /* \"--CODEGEN--\":23245:23346   */\n      jump(tag_348)\n    tag_350:\n        /* \"--CODEGEN--\":23361:23367   */\n      dup4\n        /* \"--CODEGEN--\":23358:23359   */\n      dup2\n        /* \"--CODEGEN--\":23355:23368   */\n      gt\n        /* \"--CODEGEN--\":23352:23354   */\n      iszero\n      tag_351\n      jumpi\n        /* \"--CODEGEN--\":23238:23239   */\n      0x00\n        /* \"--CODEGEN--\":23417:23423   */\n      dup5\n        /* \"--CODEGEN--\":23412:23415   */\n      dup5\n        /* \"--CODEGEN--\":23408:23424   */\n      add\n        /* \"--CODEGEN--\":23401:23428   */\n      mstore\n        /* \"--CODEGEN--\":23352:23354   */\n    tag_351:\n      pop\n        /* \"--CODEGEN--\":23222:23441   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":23635:23752   */\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":22654:22708   */\n      dup2\n      and\n        /* \"--CODEGEN--\":23694:23729   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":23684:23686   */\n      tag_193\n      jumpi\n        /* \"--CODEGEN--\":23743:23744   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":23733:23745   */\n      revert\n\n    auxdata: 0xa26469706673582212201c87ac96469fc929fef27b2a5ae34df6261559d99c48322ba4fa17bbb6a0434a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH3 0x15180 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1863 CODESIZE SUB DUP1 PUSH3 0x1863 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x38 SWAP2 PUSH2 0xC8 JUMP JUMPDEST CHAINID PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH2 0x47 DUP2 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x80 MSTORE POP PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0xC0 MSTORE PUSH1 0x2 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x115 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218 DUP3 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEF JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH2 0x170A PUSH3 0x159 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x4AD MSTORE DUP1 PUSH2 0x5DD MSTORE DUP1 PUSH2 0x909 MSTORE DUP1 PUSH2 0xCBA MSTORE DUP1 PUSH2 0xDAE MSTORE POP DUP1 PUSH2 0xBB5 MSTORE POP DUP1 PUSH2 0xBEA MSTORE POP PUSH2 0x170A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DC29FAC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE3F0DFE7 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xEC60BCF3 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2D8 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x26F JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x413D9C3A EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x37E JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x200 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x178 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH2 0x178 PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP3 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH2 0x200 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E5 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1171 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH2 0x28A PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x5374616B65642053454120546F6B656E73 PUSH1 0x78 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x366 SWAP1 DUP7 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A DUP5 DUP4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x395 DUP5 DUP5 DUP5 PUSH2 0x9BD JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x73534541 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B CALLER DUP5 DUP5 PUSH2 0xC10 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x464 PUSH2 0x1121 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x4EA SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x0 EQ PUSH2 0x55A JUMPI DUP2 PUSH1 0x0 SLOAD DUP7 MUL DUP2 PUSH2 0x554 JUMPI INVALID JUMPDEST DIV PUSH2 0x55C JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP PUSH2 0x567 DUP2 PUSH2 0xE28 JUMP JUMPDEST DUP4 MLOAD ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 MSTORE PUSH1 0x1 SLOAD PUSH2 0x583 SWAP1 TIMESTAMP ADD PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP8 MLOAD DUP2 SLOAD SWAP5 MLOAD DUP7 AND PUSH1 0x1 PUSH1 0x80 SHL MUL SWAP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP4 ADD SWAP1 SWAP2 SSTORE PUSH2 0x60D SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP9 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x642 SWAP1 DUP6 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B CALLER DUP5 DUP5 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1622 JUMP JUMPDEST DUP4 TIMESTAMP LT PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE SWAP3 MLOAD SWAP1 SWAP3 PUSH2 0x75A SWAP3 PUSH2 0x73F SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP3 DUP15 SWAP3 DUP15 SWAP3 DUP15 SWAP3 SWAP2 DUP15 SWAP2 ADD PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xF4E JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x77A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP12 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP9 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x827 SWAP1 DUP10 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x860 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1593 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 DUP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89B DUP5 DUP4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x395 DUP5 DUP5 DUP5 PUSH2 0xC10 JUMP JUMPDEST CALLER PUSH2 0x8AF PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x904 DUP2 PUSH2 0xFA3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x941 JUMPI PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9B7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP3 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9C5 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE TIMESTAMP LT ISZERO PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x144D JUMP JUMPDEST DUP2 ISZERO PUSH2 0xB5F JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 GT ISZERO PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1511 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB5F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0xA9D PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND SWAP1 DUP3 ADD MSTORE PUSH2 0xAE6 DUP4 PUSH2 0xE28 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xB28 DUP4 PUSH2 0xE28 JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND OR SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CHAINID PUSH32 0x0 DUP2 EQ PUSH2 0xBE8 JUMPI PUSH2 0xBE3 DUP2 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0xC3E PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE TIMESTAMP LT ISZERO PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xCEF SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST DUP5 MUL DUP2 PUSH2 0xD48 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0xD68 PUSH2 0xD57 DUP5 PUSH2 0xE28 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE PUSH2 0xDD5 SWAP1 PUSH32 0x0 AND DUP6 DUP4 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 GT ISZERO PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x155C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xEBE SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEFB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xF2A JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xF2A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF2A SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x15ED JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0xF73 PUSH2 0xBB0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218 DUP3 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13AE JUMP JUMPDEST DUP1 DUP3 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND SWAP1 DUP3 AND GT ISZERO PUSH2 0x372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x141E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1054 SWAP3 SWAP2 SWAP1 PUSH2 0x134D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1092 SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10CF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x10FE JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x10FE JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x111A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x146D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1160 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x116A DUP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1183 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x118D DUP5 DUP5 PUSH2 0x1138 JUMP JUMPDEST SWAP2 POP PUSH2 0x119C DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x1138 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11B9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x11C4 DUP2 PUSH2 0x16BF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x11D4 DUP2 PUSH2 0x16BF JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x11FF JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1209 DUP10 DUP10 PUSH2 0x1138 JUMP JUMPDEST SWAP7 POP PUSH2 0x1218 DUP10 PUSH1 0x20 DUP11 ADD PUSH2 0x1138 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x123B JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x126A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1274 DUP5 DUP5 PUSH2 0x1138 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1293 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x116A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12CB JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x12E4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x168F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x1300 DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x168F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 DUP4 MSTORE POP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x140A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x168F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x426F72696E674D6174683A20556E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x6 SWAP1 DUP3 ADD MSTORE PUSH6 0x131BD8DAD959 PUSH1 0xD2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E6745524332303A205472616E73666572206661696C656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x4C6F7720616C6C6F77616E6365 PUSH1 0x98 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x4C6F772062616C616E6365 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E74313238204F766572666C6F7700000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x496E76616C696420536967 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x426F72696E6745524332303A205472616E7366657246726F6D206661696C6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x2D32B9379037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x115E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16AA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1692 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16B9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DUP8 0xAC SWAP7 CHAINID SWAP16 0xC9 0x29 INVALID CALLCODE PUSH28 0x2A5AE34DF6261559D99C48322BA4FA17BBB6A0434A64736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "564:8277:6:-:0;;;921:8;894:35;;998:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1137:9:1;1202:35;;;;1176:62;1137:9;1176:25;:62::i;:::-;1156:82;;-1:-1:-1;1042:14:6;;-1:-1:-1;;;;;;1042:14:6;;;1066:6;:19;;1075:10;-1:-1:-1;;;;;;1066:19:6;;;;;;564:8277;;793:269:1;867:7;388:68;993:7;1026:4;916:129;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;893:162;;;;;;886:169;;793:269;;;:::o;174:291:-1:-;;303:2;291:9;282:7;278:23;274:32;271:2;;;-1:-1;;309:12;271:2;97:13;;-1:-1;;;;;1634:54;;1852:49;;1842:2;;-1:-1;;1905:12;1842:2;361:88;265:200;-1:-1;;;265:200::o;832:444::-;663:37;;;1179:2;1164:18;;663:37;;;;-1:-1;;;;;1634:54;1262:2;1247:18;;543:37;1015:2;1000:18;;986:290::o;:::-;564:8277:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"126": [
									{
										"length": 32,
										"start": 3050
									}
								],
								"128": [
									{
										"length": 32,
										"start": 2997
									}
								],
								"1338": [
									{
										"length": 32,
										"start": 1197
									},
									{
										"length": 32,
										"start": 1501
									},
									{
										"length": 32,
										"start": 2313
									},
									{
										"length": 32,
										"start": 3258
									},
									{
										"length": 32,
										"start": 3502
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DC29FAC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE3F0DFE7 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xEC60BCF3 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2D8 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x26F JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x413D9C3A EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x37E JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x200 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x178 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH2 0x178 PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP3 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH2 0x200 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E5 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1171 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH2 0x28A PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x5374616B65642053454120546F6B656E73 PUSH1 0x78 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x366 SWAP1 DUP7 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A DUP5 DUP4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x395 DUP5 DUP5 DUP5 PUSH2 0x9BD JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x73534541 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B CALLER DUP5 DUP5 PUSH2 0xC10 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x464 PUSH2 0x1121 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x4EA SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x0 EQ PUSH2 0x55A JUMPI DUP2 PUSH1 0x0 SLOAD DUP7 MUL DUP2 PUSH2 0x554 JUMPI INVALID JUMPDEST DIV PUSH2 0x55C JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP PUSH2 0x567 DUP2 PUSH2 0xE28 JUMP JUMPDEST DUP4 MLOAD ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 MSTORE PUSH1 0x1 SLOAD PUSH2 0x583 SWAP1 TIMESTAMP ADD PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP8 MLOAD DUP2 SLOAD SWAP5 MLOAD DUP7 AND PUSH1 0x1 PUSH1 0x80 SHL MUL SWAP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP4 ADD SWAP1 SWAP2 SSTORE PUSH2 0x60D SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP9 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x642 SWAP1 DUP6 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B CALLER DUP5 DUP5 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1622 JUMP JUMPDEST DUP4 TIMESTAMP LT PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE SWAP3 MLOAD SWAP1 SWAP3 PUSH2 0x75A SWAP3 PUSH2 0x73F SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP3 DUP15 SWAP3 DUP15 SWAP3 DUP15 SWAP3 SWAP2 DUP15 SWAP2 ADD PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xF4E JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x77A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP12 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP9 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x827 SWAP1 DUP10 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x860 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1593 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 DUP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89B DUP5 DUP4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x395 DUP5 DUP5 DUP5 PUSH2 0xC10 JUMP JUMPDEST CALLER PUSH2 0x8AF PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x904 DUP2 PUSH2 0xFA3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x941 JUMPI PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9B7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP3 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9C5 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE TIMESTAMP LT ISZERO PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x144D JUMP JUMPDEST DUP2 ISZERO PUSH2 0xB5F JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 GT ISZERO PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1511 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB5F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0xA9D PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND SWAP1 DUP3 ADD MSTORE PUSH2 0xAE6 DUP4 PUSH2 0xE28 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xB28 DUP4 PUSH2 0xE28 JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND OR SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CHAINID PUSH32 0x0 DUP2 EQ PUSH2 0xBE8 JUMPI PUSH2 0xBE3 DUP2 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0xC3E PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE TIMESTAMP LT ISZERO PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xCEF SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST DUP5 MUL DUP2 PUSH2 0xD48 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0xD68 PUSH2 0xD57 DUP5 PUSH2 0xE28 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE PUSH2 0xDD5 SWAP1 PUSH32 0x0 AND DUP6 DUP4 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 GT ISZERO PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x155C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xEBE SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEFB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xF2A JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xF2A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF2A SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x15ED JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0xF73 PUSH2 0xBB0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218 DUP3 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13AE JUMP JUMPDEST DUP1 DUP3 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND SWAP1 DUP3 AND GT ISZERO PUSH2 0x372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x141E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1054 SWAP3 SWAP2 SWAP1 PUSH2 0x134D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1092 SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10CF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x10FE JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x10FE JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x111A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x146D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1160 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x116A DUP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1183 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x118D DUP5 DUP5 PUSH2 0x1138 JUMP JUMPDEST SWAP2 POP PUSH2 0x119C DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x1138 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11B9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x11C4 DUP2 PUSH2 0x16BF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x11D4 DUP2 PUSH2 0x16BF JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x11FF JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1209 DUP10 DUP10 PUSH2 0x1138 JUMP JUMPDEST SWAP7 POP PUSH2 0x1218 DUP10 PUSH1 0x20 DUP11 ADD PUSH2 0x1138 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x123B JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x126A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1274 DUP5 DUP5 PUSH2 0x1138 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1293 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x116A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12CB JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x12E4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x168F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x1300 DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x168F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 DUP4 MSTORE POP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x140A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x168F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x426F72696E674D6174683A20556E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x6 SWAP1 DUP3 ADD MSTORE PUSH6 0x131BD8DAD959 PUSH1 0xD2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E6745524332303A205472616E73666572206661696C656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x4C6F7720616C6C6F77616E6365 PUSH1 0x98 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x4C6F772062616C616E6365 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E74313238204F766572666C6F7700000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x496E76616C696420536967 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x426F72696E6745524332303A205472616E7366657246726F6D206661696C6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x2D32B9379037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x115E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16AA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1692 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16B9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DUP8 0xAC SWAP7 CHAINID SWAP16 0xC9 0x29 INVALID CALLCODE PUSH28 0x2A5AE34DF6261559D99C48322BA4FA17BBB6A0434A64736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "564:8277:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5068:238;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;853:35::-;;;:::i;:::-;;;;;;;:::i;4561:218::-;;;;;;:::i;:::-;;:::i;812:35::-;;;:::i;:::-;;;;;;;:::i;5365:102::-;;;:::i;894:35::-;;;:::i;2423:159::-;;;;;;:::i;:::-;;:::i;1450:41::-;;;;;;:::i;:::-;;:::i;1695:85::-;;;:::i;:::-;;;;;;;:::i;713:38::-;;;:::i;8492:131::-;;;;;;:::i;:::-;;:::i;7260:658::-;;;;;;:::i;:::-;;:::i;1218:37::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4122:139::-;;;;;;:::i;:::-;;:::i;935:21::-;;;:::i;6094:962::-;;;;;;:::i;:::-;;:::i;:::-;;1314:73;;;;;;:::i;:::-;;:::i;2283:134::-;;;;;;:::i;:::-;;:::i;8629:210::-;;;;;;:::i;:::-;;:::i;1907:232::-;;;;;;:::i;:::-;;:::i;962:29::-;;;:::i;757:49::-;;;;;;;;;;;;;;-1:-1:-1;;;757:49:6;;;;:::o;5068:238::-;5197:10;5167:4;5187:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;5187:30:6;;;;;;;;;;:39;;;5241:37;5167:4;;5187:30;;5241:37;;;;5220:6;;5241:37;:::i;:::-;;;;;;;;-1:-1:-1;5295:4:6;5068:238;;;;;:::o;853:35::-;;;;:::o;4561:218::-;4671:4;4687:27;4701:4;4707:6;4687:13;:27::i;:::-;4724;4734:4;4740:2;4744:6;4724:9;:27::i;:::-;-1:-1:-1;4768:4:6;4561:218;;;;;:::o;812:35::-;845:2;812:35;:::o;5365:102::-;5416:7;5442:18;:16;:18::i;:::-;5435:25;;5365:102;:::o;894:35::-;;;;:::o;2423:159::-;-1:-1:-1;;;;;2556:11:6;2518:15;2556:11;;;:5;:11;;;;;:19;-1:-1:-1;;;;;2556:19:6;;2423:159::o;1450:41::-;;;;;;;;;;;;;:::o;1695:85::-;1767:6;;-1:-1:-1;;;;;1767:6:6;1695:85;:::o;713:38::-;;;;;;;;;;;;;;-1:-1:-1;;;713:38:6;;;;:::o;8492:131::-;8550:4;8566:29;8572:10;8584:2;8588:6;8566:5;:29::i;:::-;-1:-1:-1;8612:4:6;8492:131;;;;:::o;7260:658::-;7306:4;7330:10;7322:49;;;;-1:-1:-1;;;7322:49:6;;;;;;;:::i;:::-;;;;;;;;;7381:16;;:::i;:::-;-1:-1:-1;7406:10:6;7400:17;;;;:5;:17;;;;;;;;7381:36;;;;;;;;;-1:-1:-1;;;;;7381:36:6;;;;;-1:-1:-1;;;7381:36:6;;;;;;;;;;;7450:30;-1:-1:-1;;;7450:30:6;;7381:36;;7400:17;7450:5;-1:-1:-1;;;;;7450:15:6;;;;:30;;7474:4;;7450:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7428:52;;7490:14;7507:11;;7522:1;7507:16;:88;;7584:11;7569;;7560:6;:20;7559:36;;;;;;7507:88;;;7538:6;7507:88;7490:105;;7621:14;:6;:12;:14::i;:::-;7605:30;;;-1:-1:-1;;;;;7605:30:6;;;7683:9;;7664:37;;7665:15;:27;7664:35;:37::i;:::-;-1:-1:-1;;;;;7645:56:6;;;:16;;;;:56;;;7717:10;7711:17;;;;:5;:17;;;;;;:24;;;;;;;;-1:-1:-1;;;7711:24:6;;;;-1:-1:-1;;;;;;7711:24:6;;;;;;;;;;;;;;;;;7745:21;;;;;;;7777:57;;:5;-1:-1:-1;;;;;7777:22:6;;7820:4;7827:6;7777:22;:57::i;:::-;7850:40;;7871:10;;7867:1;;7850:40;;;;7883:6;;7850:40;:::i;:::-;;;;;;;;-1:-1:-1;7907:4:6;;7260:658;-1:-1:-1;;;;7260:658:6:o;1218:37::-;;;;;;;;;;;;-1:-1:-1;;;;;1218:37:6;;;;-1:-1:-1;;;1218:37:6;;;;:::o;4122:139::-;4184:4;4200:33;4210:10;4222:2;4226:6;4200:9;:33::i;935:21::-;;;-1:-1:-1;;;;;935:21:6;;:::o;6094:962::-;-1:-1:-1;;;;;6305:20:6;;6297:43;;;;-1:-1:-1;;;6297:43:6;;;;;;;:::i;:::-;6376:8;6358:15;:26;6350:46;;;;-1:-1:-1;;;6350:46:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;6427:494:6;;6561:21;6720:14;;;:6;:14;;;;;;;;;:16;;6427:484;6720:16;;;;;;6521:279;;6427:484;;6454:386;;6521:279;;5634:66;;6915:6;;6648:7;;6685:5;;6720:16;6766:8;;6521:279;;:::i;:::-;;;;;;;;;;;;;6486:336;;;;;;6454:10;:386::i;:::-;6858:1;6877;6896;6427:484;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6427:494:6;;6406:552;;;;-1:-1:-1;;;6406:552:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;6968:17:6;;;;;;;:9;:17;;;;;;;;:26;;;;;;;;;;;;;;:34;;;7017:32;;;;;6997:5;;7017:32;:::i;:::-;;;;;;;;6094:962;;;;;;;:::o;1314:73::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;2283:134::-;2351:4;1836:10;1825:7;:5;:7::i;:::-;-1:-1:-1;;;;;1825:21:6;;1817:66;;;;-1:-1:-1;;;1817:66:6;;;;;;;:::i;:::-;-1:-1:-1;2367:9:6::1;:22:::0;;;:9;2283:134::o;8629:210::-;8735:4;8751:27;8765:4;8771:6;8751:13;:27::i;:::-;8788:23;8794:4;8800:2;8804:6;8788:5;:23::i;1907:232::-;1836:10;1825:7;:5;:7::i;:::-;-1:-1:-1;;;;;1825:21:6;;1817:66;;;;-1:-1:-1;;;1817:66:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;2008:22:6;::::1;1987:107;;;;-1:-1:-1::0;;;1987:107:6::1;;;;;;;:::i;:::-;2104:28;2123:8;2104:18;:28::i;:::-;1907:232:::0;:::o;962:29::-;;;:::o;3391:511::-;3467:10;-1:-1:-1;;;;;3467:18:6;;;3463:55;;;3501:7;;3463:55;-1:-1:-1;;;;;3554:15:6;;3527:24;3554:15;;;:9;:15;;;;;;;;3570:10;3554:27;;;;;;;;-1:-1:-1;;3687:37:6;;3683:213;;3768:6;3748:16;:26;;3740:52;;;;-1:-1:-1;;;3740:52:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;3806:15:6;;;;;;:9;:15;;;;;;;;3822:10;3806:27;;;;;;;3836:25;;;3806:55;;3683:213;3391:511;;;;:::o;2588:797::-;2698:20;;:::i;:::-;-1:-1:-1;;;;;;2721:11:6;;;;;;:5;:11;;;;;;;;;2698:34;;;;;;;;;-1:-1:-1;;;;;2698:34:6;;;;;-1:-1:-1;;;2698:34:6;;;;;;;;;;2750:15;:39;;2742:58;;;;-1:-1:-1;;;2742:58:6;;;;;;;:::i;:::-;2814:11;;2810:528;;2849:16;;-1:-1:-1;;;;;2849:26:6;;-1:-1:-1;2849:26:6;2841:50;;;;-1:-1:-1;;;2841:50:6;;;;;;;:::i;:::-;2917:2;-1:-1:-1;;;;;2909:10:6;:4;-1:-1:-1;;;;;2909:10:6;;2905:423;;-1:-1:-1;;;;;2947:16:6;;2939:41;;;;-1:-1:-1;;;2939:41:6;;;;;;;:::i;:::-;3048:18;;:::i;:::-;-1:-1:-1;;;;;;3069:9:6;;;;;;:5;:9;;;;;;;;;3048:30;;;;;;;;;-1:-1:-1;;;;;3048:30:6;;;;;-1:-1:-1;;;3048:30:6;;;;;;;;3137:14;:6;:12;:14::i;:::-;3118:16;;-1:-1:-1;;;;;3096:11:6;;3118:16;3096:11;;;:5;:11;;;;;:55;;-1:-1:-1;;;;;;3096:55:6;3118:33;;;;-1:-1:-1;;;;;3096:55:6;;;;;;;3230:14;:6;:12;:14::i;:::-;3213;;-1:-1:-1;;;;;3193:9:6;;3213:14;3193:9;;;:5;:9;;;;;:51;;-1:-1:-1;;;;;;3193:51:6;3213:31;;;;-1:-1:-1;;;;;3193:51:6;;;;2905:423;3367:2;-1:-1:-1;;;;;3352:26:6;3361:4;-1:-1:-1;;;;;3352:26:6;;3371:6;3352:26;;;;;;:::i;:::-;;;;;;;;2588:797;;;;:::o;1546:234:1:-;1597:7;1654:9;1691:25;1680:36;;:93;;1739:34;1765:7;1739:25;:34::i;:::-;1680:93;;;1719:17;1680:93;1673:100;;;1546:234;:::o;7924:562:6:-;-1:-1:-1;;;;;8038:16:6;;8030:41;;;;-1:-1:-1;;;8030:41:6;;;;;;;:::i;:::-;8081:16;;:::i;:::-;-1:-1:-1;;;;;;8100:11:6;;;;;;:5;:11;;;;;;;;;8081:30;;;;;;;;;-1:-1:-1;;;;;8081:30:6;;;;;-1:-1:-1;;;8081:30:6;;;;;;;;;;8129:15;:35;;8121:54;;;;-1:-1:-1;;;8121:54:6;;;;;;;:::i;:::-;8185:14;8258:11;;8212:30;;-1:-1:-1;;;8212:30:6;;-1:-1:-1;;;;;8212:5:6;:15;;;;:30;;8236:4;;8212:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8203:6;:39;8202:67;;;;;;8185:84;;8301:32;8318:14;:6;:12;:14::i;:::-;8301:12;;-1:-1:-1;;;;;8301:16:6;;;:32::i;:::-;-1:-1:-1;;;;;8279:11:6;;;;;;;:5;:11;;;;;:54;;-1:-1:-1;;;;;;8279:54:6;-1:-1:-1;;;;;8279:54:6;;;;;;;;;;;8367:21;;;;;;;;8399:30;;:5;:18;8418:2;8422:6;8399:18;:30::i;:::-;8468:1;-1:-1:-1;;;;;8445:34:6;8454:4;-1:-1:-1;;;;;8445:34:6;;8472:6;8445:34;;;;;;:::i;:::-;;;;;;;;7924:562;;;;;:::o;679:158:5:-;728:9;-1:-1:-1;;;;;757:16:5;;;749:57;;;;-1:-1:-1;;;749:57:5;;;;;;;:::i;:::-;-1:-1:-1;828:1:5;679:158::o;3374:374:4:-;3514:12;3528:17;3557:5;-1:-1:-1;;;;;3549:19:4;483:10;3592:17;;3611:4;3617:2;3621:6;3569:59;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3569:59:4;;;;;;;;;;;;;;-1:-1:-1;;;;;3569:59:4;-1:-1:-1;;;;;;3569:59:4;;;;;;;;;;3549:80;;;;3569:59;3549:80;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3513:116;;;;3647:7;:57;;;;-1:-1:-1;3659:11:4;;:16;;:44;;;3690:4;3679:24;;;;;;;;;;;;:::i;:::-;3639:102;;;;-1:-1:-1;;;3639:102:4;;;;;;;:::i;:::-;3374:374;;;;;;:::o;1786:322:1:-;1847:14;1959:40;;;;;;;;;;;;;-1:-1:-1;;;1959:40:1;;;2021:18;:16;:18::i;:::-;2061:8;1921:166;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1894:207;;;;;;1873:228;;1786:322;;;:::o;2145:132:6:-;2237:6;;;-1:-1:-1;;;;;;2253:17:6;-1:-1:-1;;;;;2253:17:6;;;;;;;;;;2145:132::o;793:269:1:-;867:7;388:68;993:7;1026:4;916:129;;;;;;;;;;:::i;1431:136:5:-;1523:5;;;-1:-1:-1;;;;;1518:16:5;;;;;;;;1510:50;;;;-1:-1:-1;;;1510:50:5;;;;;;;:::i;2726:333:4:-;2840:12;2854:17;2883:5;-1:-1:-1;;;;;2875:19:4;394:10;2918:12;;2932:2;2936:6;2895:48;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2895:48:4;;;;;;;;;;;;;;-1:-1:-1;;;;;2895:48:4;-1:-1:-1;;;;;;2895:48:4;;;;;;;;;;2875:69;;;;2895:48;2875:69;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2839:105;;;;2962:7;:57;;;;-1:-1:-1;2974:11:4;;:16;;:44;;;3005:4;2994:24;;;;;;;;;;;;:::i;:::-;2954:98;;;;-1:-1:-1;;;2954:98:4;;;;;;;:::i;:::-;2726:333;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;-1:-1;;;;;22654:54;;23694:35;;23684:2;;23743:1;;23733:12;825:241;;929:2;917:9;908:7;904:23;900:32;897:2;;;-1:-1;;935:12;897:2;997:53;1042:7;1018:22;997:53;:::i;:::-;987:63;891:175;-1:-1;;;891:175::o;1073:366::-;;;1194:2;1182:9;1173:7;1169:23;1165:32;1162:2;;;-1:-1;;1200:12;1162:2;1262:53;1307:7;1283:22;1262:53;:::i;:::-;1252:63;;1370:53;1415:7;1352:2;1395:9;1391:22;1370:53;:::i;:::-;1360:63;;1156:283;;;;;:::o;1446:491::-;;;;1584:2;1572:9;1563:7;1559:23;1555:32;1552:2;;;-1:-1;;1590:12;1552:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1642:63;-1:-1;1742:2;1781:22;;72:20;97:33;72:20;97:33;:::i;:::-;1546:391;;1750:63;;-1:-1;;;1850:2;1889:22;;;;481:20;;1546:391::o;1944:991::-;;;;;;;;2148:3;2136:9;2127:7;2123:23;2119:33;2116:2;;;-1:-1;;2155:12;2116:2;2217:53;2262:7;2238:22;2217:53;:::i;:::-;2207:63;;2325:53;2370:7;2307:2;2350:9;2346:22;2325:53;:::i;:::-;2315:63;;2415:2;2458:9;2454:22;481:20;2423:63;;2523:2;2566:9;2562:22;481:20;2531:63;;2631:3;2673:9;2669:22;757:20;22870:4;24208:5;22859:16;24185:5;24182:33;24172:2;;-1:-1;;24219:12;24172:2;2110:825;;;;-1:-1;2110:825;;;;2640:61;2738:3;2778:22;;344:20;;-1:-1;2847:3;2887:22;;;344:20;;2110:825;-1:-1;;2110:825::o;2942:366::-;;;3063:2;3051:9;3042:7;3038:23;3034:32;3031:2;;;-1:-1;;3069:12;3031:2;3131:53;3176:7;3152:22;3131:53;:::i;:::-;3121:63;3221:2;3260:22;;;;481:20;;-1:-1;;;3025:283::o;3315:257::-;;3427:2;3415:9;3406:7;3402:23;3398:32;3395:2;;;-1:-1;;3433:12;3395:2;223:6;217:13;23840:5;22367:13;22360:21;23818:5;23815:32;23805:2;;-1:-1;;23851:12;3579:241;;3683:2;3671:9;3662:7;3658:23;3654:32;3651:2;;;-1:-1;;3689:12;3651:2;-1:-1;481:20;;3645:175;-1:-1;3645:175::o;3827:263::-;;3942:2;3930:9;3921:7;3917:23;3913:32;3910:2;;;-1:-1;;3948:12;3910:2;-1:-1;629:13;;3904:186;-1:-1;3904:186::o;10507:271::-;;4767:5;21554:12;4878:52;4923:6;4918:3;4911:4;4904:5;4900:16;4878:52;:::i;:::-;4942:16;;;;;10641:137;-1:-1;;10641:137::o;10785:553::-;;4767:5;21554:12;4878:52;4923:6;4918:3;4911:4;4904:5;4900:16;4878:52;:::i;:::-;4942:16;;;;4399:37;;;-1:-1;4911:4;11190:12;;4399:37;11301:12;;;10977:361;-1:-1;10977:361::o;11345:222::-;-1:-1;;;;;22654:54;;;;4168:37;;11472:2;11457:18;;11443:124::o;11574:444::-;-1:-1;;;;;22654:54;;;4168:37;;22654:54;;;;11921:2;11906:18;;4168:37;12004:2;11989:18;;4399:37;;;;11757:2;11742:18;;11728:290::o;12025:333::-;-1:-1;;;;;22654:54;;;;4168:37;;12344:2;12329:18;;4399:37;12180:2;12165:18;;12151:207::o;12365:210::-;22367:13;;22360:21;4282:34;;12486:2;12471:18;;12457:118::o;12582:222::-;4399:37;;;12709:2;12694:18;;12680:124::o;12811:780::-;4399:37;;;-1:-1;;;;;22654:54;;;13243:2;13228:18;;4168:37;22654:54;;;;13326:2;13311:18;;4168:37;13409:2;13394:18;;4399:37;13492:3;13477:19;;4399:37;;;;22665:42;13561:19;;4399:37;13078:3;13063:19;;13049:542::o;13598:444::-;4399:37;;;13945:2;13930:18;;4399:37;;;;-1:-1;;;;;22654:54;14028:2;14013:18;;4168:37;13781:2;13766:18;;13752:290::o;14049:548::-;4399:37;;;22870:4;22859:16;;;;14417:2;14402:18;;10460:35;14500:2;14485:18;;4399:37;14583:2;14568:18;;4399:37;14256:3;14241:19;;14227:370::o;14861:310::-;;15008:2;15029:17;15022:47;5276:5;21554:12;21993:6;15008:2;14997:9;14993:18;21981:19;5370:52;5415:6;22021:14;14997:9;22021:14;15008:2;5396:5;5392:16;5370:52;:::i;:::-;23614:7;23598:14;-1:-1;;23594:28;5434:39;;;;22021:14;5434:39;;14979:192;-1:-1;;14979:192::o;15178:416::-;15378:2;15392:47;;;6077:2;15363:18;;;21981:19;-1:-1;;;22021:14;;;6093:44;6156:12;;;15349:245::o;15601:416::-;15801:2;15815:47;;;6407:1;15786:18;;;21981:19;-1:-1;;;22021:14;;;6422:29;6470:12;;;15772:245::o;16024:416::-;16224:2;16238:47;;;6721:2;16209:18;;;21981:19;6757:30;22021:14;;;6737:51;6807:12;;;16195:245::o;16447:416::-;16647:2;16661:47;;;7058:2;16632:18;;;21981:19;7094:34;22021:14;;;7074:55;-1:-1;;;7149:12;;;7142:30;7191:12;;;16618:245::o;16870:416::-;17070:2;17084:47;;;7442:2;17055:18;;;21981:19;-1:-1;;;22021:14;;;7458:36;7513:12;;;17041:245::o;17293:416::-;17493:2;17507:47;;;7764:2;17478:18;;;21981:19;-1:-1;;;22021:14;;;7780:34;7833:12;;;17464:245::o;17716:416::-;17916:2;17930:47;;;8084:2;17901:18;;;21981:19;-1:-1;;;22021:14;;;8100:35;8154:12;;;17887:245::o;18139:416::-;18339:2;18353:47;;;8405:2;18324:18;;;21981:19;8441:30;22021:14;;;8421:51;8491:12;;;18310:245::o;18562:416::-;18762:2;18776:47;;;18747:18;;;21981:19;8778:34;22021:14;;;8758:55;8832:12;;;18733:245::o;18985:416::-;19185:2;19199:47;;;9083:2;19170:18;;;21981:19;-1:-1;;;22021:14;;;9099:34;9152:12;;;19156:245::o;19408:416::-;19608:2;19622:47;;;19593:18;;;21981:19;9439:34;22021:14;;;9419:55;9493:12;;;19579:245::o;19831:416::-;20031:2;20045:47;;;9744:2;20016:18;;;21981:19;-1:-1;;;22021:14;;;9760:33;9812:12;;;20002:245::o;20254:416::-;20454:2;20468:47;;;10063:1;20439:18;;;21981:19;-1:-1;;;22021:14;;;10078:30;10127:12;;;20425:245::o;20677:333::-;-1:-1;;;;;22534:46;;;10224:37;;22534:46;;20996:2;20981:18;;10224:37;20832:2;20817:18;;20803:207::o;21246:214::-;22870:4;22859:16;;;;10460:35;;21369:2;21354:18;;21340:120::o;23173:268::-;23238:1;23245:101;23259:6;23256:1;23253:13;23245:101;;;23326:11;;;23320:18;23307:11;;;23300:39;23281:2;23274:10;23245:101;;;23361:6;23358:1;23355:13;23352:2;;;23238:1;23417:6;23412:3;23408:16;23401:27;23352:2;;23222:219;;;:::o;23635:117::-;-1:-1;;;;;22654:54;;23694:35;;23684:2;;23743:1;;23733:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1179600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"LOCK_TIME()": "1073",
								"_owner()": "1181",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1360",
								"burn(address,uint256)": "infinite",
								"burnFrom(address,address,uint256)": "infinite",
								"decimals()": "352",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1346",
								"owner()": "1181",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"setLOCK_TIME(uint256)": "21273",
								"symbol()": "infinite",
								"token()": "infinite",
								"totalSupply()": "1096",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "22235",
								"users(address)": "1416"
							},
							"internal": {
								"_burn(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferOwnership(address)": "20878",
								"_useAllowance(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 921,
									"end": 929,
									"name": "PUSH",
									"source": 6,
									"value": "15180"
								},
								{
									"begin": 894,
									"end": 929,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 894,
									"end": 929,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 998,
									"end": 1092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1146,
									"name": "CHAINID",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1237,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1137,
									"end": 1146,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1156,
									"end": 1238,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1156,
									"end": 1238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1042,
									"end": 1056,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1042,
									"end": 1056,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1042,
									"end": 1056,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1042,
									"end": 1056,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 1042,
									"end": 1056,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1072,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1066,
									"end": 1085,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1085,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1066,
									"end": 1085,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1085,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1085,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1085,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1085,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1085,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 867,
									"end": 874,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 456,
									"name": "PUSH",
									"source": 1,
									"value": "47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218"
								},
								{
									"begin": 993,
									"end": 1000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1026,
									"end": 1030,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 916,
									"end": 1045,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 893,
									"end": 1055,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 886,
									"end": 1055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 886,
									"end": 1055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 793,
									"end": 1062,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 174,
									"end": 465,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 174,
									"end": 465,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 174,
									"end": 465,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 305,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 291,
									"end": 300,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 282,
									"end": 289,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 278,
									"end": 301,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 274,
									"end": 306,
									"name": "SLT",
									"source": -1
								},
								{
									"begin": 271,
									"end": 273,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 271,
									"end": 273,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "16"
								},
								{
									"begin": 271,
									"end": 273,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 309,
									"end": 321,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 271,
									"end": 273,
									"name": "tag",
									"source": -1,
									"value": "16"
								},
								{
									"begin": 271,
									"end": 273,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 97,
									"end": 110,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 97,
									"end": 110,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1634,
									"end": 1688,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 1634,
									"end": 1688,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 1852,
									"end": 1901,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 1852,
									"end": 1901,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 1842,
									"end": 1844,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "17"
								},
								{
									"begin": 1842,
									"end": 1844,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1905,
									"end": 1917,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 1842,
									"end": 1844,
									"name": "tag",
									"source": -1,
									"value": "17"
								},
								{
									"begin": 1842,
									"end": 1844,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 361,
									"end": 449,
									"name": "SWAP4",
									"source": -1
								},
								{
									"begin": 265,
									"end": 465,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 265,
									"end": 465,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 832,
									"end": 1276,
									"name": "tag",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 832,
									"end": 1276,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 663,
									"end": 700,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 663,
									"end": 700,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 663,
									"end": 700,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1179,
									"end": 1181,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 1164,
									"end": 1182,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 1164,
									"end": 1182,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 663,
									"end": 700,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 663,
									"end": 700,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 663,
									"end": 700,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 663,
									"end": 700,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1634,
									"end": 1688,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 1247,
									"end": 1265,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1247,
									"end": 1265,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 543,
									"end": 580,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1015,
									"end": 1017,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 986,
									"end": 1276,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 986,
									"end": 1276,
									"name": "tag",
									"source": -1,
									"value": "14"
								},
								{
									"begin": 986,
									"end": 1276,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "1338"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 8841,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c87ac96469fc929fef27b2a5ae34df6261559d99c48322ba4fa17bbb6a0434a64736f6c634300060c0033",
									".code": [
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "9DC29FAC"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "D505ACCF"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "D505ACCF"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "E3F0DFE7"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "EC60BCF3"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "FC0C546A"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "9DC29FAC"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "A0712D68"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "A87430BA"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "B2BDFA7B"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "3644E515"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "3644E515"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "413D9C3A"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "7ECEBE00"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 8841,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 853,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 853,
											"end": 888,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 853,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 853,
											"end": 888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 853,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 812,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 812,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 812,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 812,
											"end": 847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 812,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5365,
											"end": 5467,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5365,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 5365,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 5365,
											"end": 5467,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 929,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 894,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 894,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 894,
											"end": 929,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 713,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 713,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 713,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 713,
											"end": 751,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5374616B65642053454120546F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 757,
											"end": 806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5197,
											"end": 5207,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5196,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5226,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5226,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5171,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5217,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5226,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5295,
											"end": 5299,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5306,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 853,
											"end": 888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 888,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 853,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 853,
											"end": 888,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4671,
											"end": 4675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4701,
											"end": 4705,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 4713,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4687,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4687,
											"end": 4714,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4687,
											"end": 4714,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4687,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4724,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4734,
											"end": 4738,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4744,
											"end": 4750,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4724,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4724,
											"end": 4751,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4724,
											"end": 4751,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4724,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4768,
											"end": 4772,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4779,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 845,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 812,
											"end": 847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 812,
											"end": 847,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5365,
											"end": 5467,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 5365,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5442,
											"end": 5460,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5442,
											"end": 5460,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5442,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 894,
											"end": 929,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 894,
											"end": 929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 894,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 894,
											"end": 929,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 894,
											"end": 929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 894,
											"end": 929,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2561,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2575,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2556,
											"end": 2575,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2582,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1780,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 713,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 713,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 751,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73534541"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 713,
											"end": 751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 751,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8550,
											"end": 8554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8566,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 8572,
											"end": 8582,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8586,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8588,
											"end": 8594,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 8566,
											"end": 8595,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8566,
											"end": 8595,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 8566,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8612,
											"end": 8616,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8623,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7310,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7322,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7381,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 7381,
											"end": 7397,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7381,
											"end": 7397,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7381,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7406,
											"end": 7416,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7405,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7455,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1338"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7450,
											"end": 7465,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 7450,
											"end": 7465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7490,
											"end": 7504,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7507,
											"end": 7518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7507,
											"end": 7518,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7522,
											"end": 7523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7507,
											"end": 7523,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7507,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 7507,
											"end": 7595,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7584,
											"end": 7595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7569,
											"end": 7580,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7560,
											"end": 7566,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7559,
											"end": 7595,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7595,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7595,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7559,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7595,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7507,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 7507,
											"end": 7595,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7507,
											"end": 7595,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 7507,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7538,
											"end": 7544,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7507,
											"end": 7595,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 7507,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7490,
											"end": 7595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7490,
											"end": 7595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7621,
											"end": 7627,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7621,
											"end": 7635,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7621,
											"end": 7635,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7621,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7605,
											"end": 7635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7605,
											"end": 7635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7605,
											"end": 7635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7605,
											"end": 7635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7605,
											"end": 7635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7605,
											"end": 7635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7683,
											"end": 7692,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7683,
											"end": 7692,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7664,
											"end": 7701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7665,
											"end": 7680,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7665,
											"end": 7692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7664,
											"end": 7701,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7664,
											"end": 7701,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7664,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7645,
											"end": 7701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7701,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7661,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7645,
											"end": 7661,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7661,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7701,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7717,
											"end": 7727,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7716,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7735,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7766,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7766,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7766,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7766,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7766,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7777,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7777,
											"end": 7834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7777,
											"end": 7782,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1338"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7777,
											"end": 7799,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7777,
											"end": 7799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7820,
											"end": 7824,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7777,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7777,
											"end": 7834,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7777,
											"end": 7834,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7777,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7881,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7867,
											"end": 7868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7867,
											"end": 7868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7889,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7890,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7260,
											"end": 7918,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4210,
											"end": 4220,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4222,
											"end": 4224,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4200,
											"end": 4233,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 935,
											"end": 956,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 935,
											"end": 956,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6305,
											"end": 6325,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6325,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6297,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6358,
											"end": 6373,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6358,
											"end": 6384,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6350,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6427,
											"end": 6921,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6921,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6561,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6726,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6734,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6736,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6720,
											"end": 6736,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6736,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6736,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6736,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6454,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6454,
											"end": 6840,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5700,
											"name": "PUSH",
											"source": 6,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 5634,
											"end": 5700,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6915,
											"end": 6921,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 6915,
											"end": 6921,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6655,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6655,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6690,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6690,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6774,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6800,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6822,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6822,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6486,
											"end": 6822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6822,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6454,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6454,
											"end": 6840,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6454,
											"end": 6840,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6454,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6858,
											"end": 6859,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6877,
											"end": 6878,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6911,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6427,
											"end": 6921,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6921,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6406,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6977,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6985,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6994,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6997,
											"end": 7002,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6997,
											"end": 7002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 7056,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1387,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2355,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1846,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1825,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1846,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1846,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2376,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2417,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 8629,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8735,
											"end": 8739,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8751,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8765,
											"end": 8769,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8771,
											"end": 8777,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8751,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 8751,
											"end": 8778,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8751,
											"end": 8778,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8751,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8788,
											"end": 8811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 8794,
											"end": 8798,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8800,
											"end": 8802,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8804,
											"end": 8810,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8788,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 8788,
											"end": 8811,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1836,
											"end": 1846,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1825,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1846,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1846,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1817,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2008,
											"end": 2030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1987,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2123,
											"end": 2131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 2139,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1338"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3391,
											"end": 3902,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3391,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3477,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3467,
											"end": 3485,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3485,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3485,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3501,
											"end": 3508,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3580,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3581,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3581,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3581,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3687,
											"end": 3724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3724,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3683,
											"end": 3896,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3774,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3774,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3815,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3833,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3833,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3861,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3861,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3896,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3683,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3902,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3391,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3902,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2588,
											"end": 3385,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2588,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2698,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2698,
											"end": 2718,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2718,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2698,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2726,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2732,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2789,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2789,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2742,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2825,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2825,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2810,
											"end": 3338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2865,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2849,
											"end": 2875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2849,
											"end": 2875,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2913,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2905,
											"end": 3328,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2947,
											"end": 2963,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2963,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2939,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3074,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3137,
											"end": 3143,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3134,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3151,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3151,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3096,
											"end": 3151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3096,
											"end": 3151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3151,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3151,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3151,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3151,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3230,
											"end": 3236,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3227,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3198,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3244,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3193,
											"end": 3244,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3244,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3244,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3193,
											"end": 3244,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3244,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3244,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 3328,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2905,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3365,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 3385,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1546,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1546,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1663,
											"name": "CHAINID",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1716,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1680,
											"end": 1716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1765,
											"end": 1772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1739,
											"end": 1773,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1739,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1739,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1736,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1680,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1780,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7924,
											"end": 8486,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7924,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8038,
											"end": 8054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8038,
											"end": 8054,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 8030,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 8081,
											"end": 8097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8081,
											"end": 8097,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8081,
											"end": 8097,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 8081,
											"end": 8097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8105,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8129,
											"end": 8144,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 8121,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8269,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1338"
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8236,
											"end": 8240,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8236,
											"end": 8240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8203,
											"end": 8209,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8203,
											"end": 8242,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8202,
											"end": 8269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8202,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8202,
											"end": 8269,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8202,
											"end": 8269,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 8202,
											"end": 8269,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8202,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8202,
											"end": 8269,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8301,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 8318,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 8318,
											"end": 8324,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 8318,
											"end": 8332,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8318,
											"end": 8332,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 8318,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8301,
											"end": 8317,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8301,
											"end": 8317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8301,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 8301,
											"end": 8333,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8301,
											"end": 8333,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 8301,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8284,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8290,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8279,
											"end": 8333,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8388,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8388,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8388,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8388,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8388,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8399,
											"end": 8404,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1338"
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8420,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8422,
											"end": 8428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8468,
											"end": 8469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8454,
											"end": 8458,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8472,
											"end": 8478,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8486,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 679,
											"end": 837,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 679,
											"end": 837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 728,
											"end": 737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 757,
											"end": 773,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 757,
											"end": 773,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 757,
											"end": 773,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 749,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 749,
											"end": 806,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 749,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 806,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 749,
											"end": 806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 749,
											"end": 806,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 749,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 749,
											"end": 806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 749,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 749,
											"end": 806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 749,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 749,
											"end": 806,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 806,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 749,
											"end": 806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 828,
											"end": 829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 679,
											"end": 837,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3374,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3374,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3514,
											"end": 3526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3549,
											"end": 3568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 483,
											"end": 493,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 3592,
											"end": 3609,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3592,
											"end": 3609,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3611,
											"end": 3615,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3619,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3621,
											"end": 3627,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3704,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3647,
											"end": 3704,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3659,
											"end": 3670,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3659,
											"end": 3670,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3659,
											"end": 3675,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3659,
											"end": 3675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3659,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3659,
											"end": 3703,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3659,
											"end": 3703,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 3639,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3374,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3374,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3374,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3374,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3374,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3374,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3374,
											"end": 3748,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1786,
											"end": 2108,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1786,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2021,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2069,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2101,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 2101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 2101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 2108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 2108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 2108,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 2108,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2145,
											"end": 2277,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2145,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2277,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 793,
											"end": 1062,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 793,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 867,
											"end": 874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218"
										},
										{
											"begin": 993,
											"end": 1000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1030,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 916,
											"end": 1045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1431,
											"end": 1567,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 1431,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1528,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1528,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 1510,
											"end": 1560,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2726,
											"end": 3059,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2726,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2840,
											"end": 2852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2871,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2883,
											"end": 2888,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 394,
											"end": 404,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 2942,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 2969,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 3019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 3019,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 2962,
											"end": 3019,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 2990,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 2990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 2974,
											"end": 3018,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 2954,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 3059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 3059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 3059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 3059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 3059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 3059,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "139"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "tag",
											"source": -1,
											"value": "285"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 23694,
											"end": 23729,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23694,
											"end": 23729,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 23684,
											"end": 23686,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "119"
										},
										{
											"begin": 23684,
											"end": 23686,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 23743,
											"end": 23744,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23743,
											"end": 23744,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 23733,
											"end": 23745,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 825,
											"end": 1066,
											"name": "tag",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 825,
											"end": 1066,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 825,
											"end": 1066,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 917,
											"end": 926,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 908,
											"end": 915,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 904,
											"end": 927,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 900,
											"end": 932,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 897,
											"end": 899,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 897,
											"end": 899,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "289"
										},
										{
											"begin": 897,
											"end": 899,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 935,
											"end": 947,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 897,
											"end": 899,
											"name": "tag",
											"source": -1,
											"value": "289"
										},
										{
											"begin": 897,
											"end": 899,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 997,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "290"
										},
										{
											"begin": 1042,
											"end": 1049,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1018,
											"end": 1040,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 997,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "285"
										},
										{
											"begin": 997,
											"end": 1050,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1050,
											"name": "tag",
											"source": -1,
											"value": "290"
										},
										{
											"begin": 997,
											"end": 1050,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1050,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 891,
											"end": 1066,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 891,
											"end": 1066,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1073,
											"end": 1439,
											"name": "tag",
											"source": -1,
											"value": "101"
										},
										{
											"begin": 1073,
											"end": 1439,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1073,
											"end": 1439,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1439,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 1196,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1191,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1180,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1169,
											"end": 1192,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1197,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "292"
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "tag",
											"source": -1,
											"value": "292"
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "293"
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1305,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "285"
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "tag",
											"source": -1,
											"value": "293"
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1252,
											"end": 1315,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1252,
											"end": 1315,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "294"
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1354,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1404,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "285"
										},
										{
											"begin": 1370,
											"end": 1423,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1370,
											"end": 1423,
											"name": "tag",
											"source": -1,
											"value": "294"
										},
										{
											"begin": 1370,
											"end": 1423,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1423,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1423,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1156,
											"end": 1439,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1156,
											"end": 1439,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1156,
											"end": 1439,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1156,
											"end": 1439,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1156,
											"end": 1439,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1156,
											"end": 1439,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1446,
											"end": 1937,
											"name": "tag",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 1446,
											"end": 1937,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1446,
											"end": 1937,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1937,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1446,
											"end": 1937,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1586,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 1572,
											"end": 1581,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1559,
											"end": 1582,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1552,
											"end": 1554,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1552,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "296"
										},
										{
											"begin": 1552,
											"end": 1554,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1590,
											"end": 1602,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1552,
											"end": 1554,
											"name": "tag",
											"source": -1,
											"value": "296"
										},
										{
											"begin": 1552,
											"end": 1554,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "297"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "298"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "297"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1642,
											"end": 1705,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 1744,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1803,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1781,
											"end": 1803,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "299"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "298"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "299"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1546,
											"end": 1937,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1546,
											"end": 1937,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 1813,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 1813,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1911,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1889,
											"end": 1911,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1889,
											"end": 1911,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1889,
											"end": 1911,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 481,
											"end": 501,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 481,
											"end": 501,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1546,
											"end": 1937,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1944,
											"end": 2935,
											"name": "tag",
											"source": -1,
											"value": "97"
										},
										{
											"begin": 1944,
											"end": 2935,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 2935,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 2935,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 2935,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 2935,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 2935,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 2935,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 2935,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2151,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 2136,
											"end": 2145,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 2127,
											"end": 2134,
											"name": "DUP11",
											"source": -1
										},
										{
											"begin": 2123,
											"end": 2146,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2116,
											"end": 2118,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2116,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": 2116,
											"end": 2118,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2155,
											"end": 2167,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2116,
											"end": 2118,
											"name": "tag",
											"source": -1,
											"value": "301"
										},
										{
											"begin": 2116,
											"end": 2118,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2217,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "302"
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2260,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 2217,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "285"
										},
										{
											"begin": 2217,
											"end": 2270,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2217,
											"end": 2270,
											"name": "tag",
											"source": -1,
											"value": "302"
										},
										{
											"begin": 2217,
											"end": 2270,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2270,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2270,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "303"
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP11",
											"source": -1
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "285"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "tag",
											"source": -1,
											"value": "303"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2378,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2378,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2417,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 2454,
											"end": 2476,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 481,
											"end": 501,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 2423,
											"end": 2486,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 2423,
											"end": 2486,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2523,
											"end": 2525,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 2562,
											"end": 2584,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 481,
											"end": 501,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 2531,
											"end": 2594,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 2531,
											"end": 2594,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2631,
											"end": 2634,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 2669,
											"end": 2691,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 757,
											"end": 777,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 22870,
											"end": 22874,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": 24208,
											"end": 24213,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22859,
											"end": 22875,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 24185,
											"end": 24190,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24182,
											"end": 24215,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 24172,
											"end": 24174,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "304"
										},
										{
											"begin": 24172,
											"end": 24174,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 24219,
											"end": 24231,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 24172,
											"end": 24174,
											"name": "tag",
											"source": -1,
											"value": "304"
										},
										{
											"begin": 24172,
											"end": 24174,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2935,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2935,
											"name": "SWAP10",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2935,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2935,
											"name": "SWAP9",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2935,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2935,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2935,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2935,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 2640,
											"end": 2701,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 2778,
											"end": 2800,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2778,
											"end": 2800,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 344,
											"end": 364,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 344,
											"end": 364,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2847,
											"end": 2850,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 344,
											"end": 364,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 344,
											"end": 364,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2935,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2935,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 2942,
											"end": 3308,
											"name": "tag",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 2942,
											"end": 3308,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2942,
											"end": 3308,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 3308,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3065,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3060,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3042,
											"end": 3049,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3038,
											"end": 3061,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "306"
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3069,
											"end": 3081,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "tag",
											"source": -1,
											"value": "306"
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "307"
										},
										{
											"begin": 3176,
											"end": 3183,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3152,
											"end": 3174,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "285"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "tag",
											"source": -1,
											"value": "307"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3121,
											"end": 3184,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 3221,
											"end": 3223,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3260,
											"end": 3282,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 3260,
											"end": 3282,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3260,
											"end": 3282,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 3260,
											"end": 3282,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 481,
											"end": 501,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 481,
											"end": 501,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3025,
											"end": 3308,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3315,
											"end": 3572,
											"name": "tag",
											"source": -1,
											"value": "255"
										},
										{
											"begin": 3315,
											"end": 3572,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3572,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3424,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3413,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3402,
											"end": 3425,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3398,
											"end": 3430,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3395,
											"end": 3397,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3395,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "309"
										},
										{
											"begin": 3395,
											"end": 3397,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3433,
											"end": 3445,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3395,
											"end": 3397,
											"name": "tag",
											"source": -1,
											"value": "309"
										},
										{
											"begin": 3395,
											"end": 3397,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 223,
											"end": 229,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 217,
											"end": 230,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 23840,
											"end": 23845,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22367,
											"end": 22380,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 22360,
											"end": 22381,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 23818,
											"end": 23823,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23815,
											"end": 23847,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 23805,
											"end": 23807,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "290"
										},
										{
											"begin": 23805,
											"end": 23807,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23851,
											"end": 23863,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3820,
											"name": "tag",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 3579,
											"end": 3820,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3820,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3685,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3680,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3662,
											"end": 3669,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3658,
											"end": 3681,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3654,
											"end": 3686,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3653,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "312"
										},
										{
											"begin": 3651,
											"end": 3653,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3689,
											"end": 3701,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3653,
											"name": "tag",
											"source": -1,
											"value": "312"
										},
										{
											"begin": 3651,
											"end": 3653,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 481,
											"end": 501,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 481,
											"end": 501,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3645,
											"end": 3820,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3645,
											"end": 3820,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3827,
											"end": 4090,
											"name": "tag",
											"source": -1,
											"value": "145"
										},
										{
											"begin": 3827,
											"end": 4090,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3827,
											"end": 4090,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "314"
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3948,
											"end": 3960,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "tag",
											"source": -1,
											"value": "314"
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 629,
											"end": 642,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 629,
											"end": 642,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 4090,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 4090,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 10507,
											"end": 10778,
											"name": "tag",
											"source": -1,
											"value": "248"
										},
										{
											"begin": 10507,
											"end": 10778,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10507,
											"end": 10778,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4772,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21554,
											"end": 21566,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 4878,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "316"
										},
										{
											"begin": 4923,
											"end": 4929,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4918,
											"end": 4921,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4911,
											"end": 4915,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4909,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 4900,
											"end": 4916,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4878,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "317"
										},
										{
											"begin": 4878,
											"end": 4930,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4878,
											"end": 4930,
											"name": "tag",
											"source": -1,
											"value": "316"
										},
										{
											"begin": 4878,
											"end": 4930,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 10641,
											"end": 10778,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10641,
											"end": 10778,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 10785,
											"end": 11338,
											"name": "tag",
											"source": -1,
											"value": "262"
										},
										{
											"begin": 10785,
											"end": 11338,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10785,
											"end": 11338,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4772,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 21554,
											"end": 21566,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 4878,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "319"
										},
										{
											"begin": 4923,
											"end": 4929,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4918,
											"end": 4921,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4911,
											"end": 4915,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4909,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 4900,
											"end": 4916,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4878,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "317"
										},
										{
											"begin": 4878,
											"end": 4930,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4878,
											"end": 4930,
											"name": "tag",
											"source": -1,
											"value": "319"
										},
										{
											"begin": 4878,
											"end": 4930,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4911,
											"end": 4915,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 11190,
											"end": 11202,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11190,
											"end": 11202,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 10977,
											"end": 11338,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10977,
											"end": 11338,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 11345,
											"end": 11567,
											"name": "tag",
											"source": -1,
											"value": "70"
										},
										{
											"begin": 11345,
											"end": 11567,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11472,
											"end": 11474,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 11457,
											"end": 11475,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11457,
											"end": 11475,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11443,
											"end": 11567,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 11574,
											"end": 12018,
											"name": "tag",
											"source": -1,
											"value": "246"
										},
										{
											"begin": 11574,
											"end": 12018,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 11921,
											"end": 11923,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 11906,
											"end": 11924,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11906,
											"end": 11924,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12004,
											"end": 12006,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 11989,
											"end": 12007,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11989,
											"end": 12007,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11757,
											"end": 11759,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11742,
											"end": 11760,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11742,
											"end": 11760,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11728,
											"end": 12018,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 12025,
											"end": 12358,
											"name": "tag",
											"source": -1,
											"value": "273"
										},
										{
											"begin": 12025,
											"end": 12358,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12344,
											"end": 12346,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 12329,
											"end": 12347,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12329,
											"end": 12347,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12180,
											"end": 12182,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12151,
											"end": 12358,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 12365,
											"end": 12575,
											"name": "tag",
											"source": -1,
											"value": "37"
										},
										{
											"begin": 12365,
											"end": 12575,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22367,
											"end": 22380,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22367,
											"end": 22380,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 22360,
											"end": 22381,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4282,
											"end": 4316,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4282,
											"end": 4316,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12486,
											"end": 12488,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 12471,
											"end": 12489,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12471,
											"end": 12489,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12457,
											"end": 12575,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 12582,
											"end": 12804,
											"name": "tag",
											"source": -1,
											"value": "54"
										},
										{
											"begin": 12582,
											"end": 12804,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12709,
											"end": 12711,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 12694,
											"end": 12712,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12694,
											"end": 12712,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12680,
											"end": 12804,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 12811,
											"end": 13591,
											"name": "tag",
											"source": -1,
											"value": "166"
										},
										{
											"begin": 12811,
											"end": 13591,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 13243,
											"end": 13245,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 13326,
											"end": 13328,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 13311,
											"end": 13329,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 13311,
											"end": 13329,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13409,
											"end": 13411,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 13394,
											"end": 13412,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 13394,
											"end": 13412,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13492,
											"end": 13495,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 13477,
											"end": 13496,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 13477,
											"end": 13496,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22665,
											"end": 22707,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 13561,
											"end": 13580,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13561,
											"end": 13580,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13078,
											"end": 13081,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": 13063,
											"end": 13082,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13063,
											"end": 13082,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 13049,
											"end": 13591,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 13598,
											"end": 14042,
											"name": "tag",
											"source": -1,
											"value": "266"
										},
										{
											"begin": 13598,
											"end": 14042,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13945,
											"end": 13947,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 13930,
											"end": 13948,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 13930,
											"end": 13948,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 14028,
											"end": 14030,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 14013,
											"end": 14031,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14013,
											"end": 14031,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13781,
											"end": 13783,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 13752,
											"end": 14042,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14049,
											"end": 14597,
											"name": "tag",
											"source": -1,
											"value": "169"
										},
										{
											"begin": 14049,
											"end": 14597,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22870,
											"end": 22874,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": 22859,
											"end": 22875,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 22859,
											"end": 22875,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22859,
											"end": 22875,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 22859,
											"end": 22875,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 14417,
											"end": 14419,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 14402,
											"end": 14420,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 14402,
											"end": 14420,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10460,
											"end": 10495,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14500,
											"end": 14502,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 14485,
											"end": 14503,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14485,
											"end": 14503,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14583,
											"end": 14585,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 14568,
											"end": 14586,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14568,
											"end": 14586,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14256,
											"end": 14259,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 14241,
											"end": 14260,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14241,
											"end": 14260,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14227,
											"end": 14597,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14861,
											"end": 15171,
											"name": "tag",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 14861,
											"end": 15171,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14861,
											"end": 15171,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15008,
											"end": 15010,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 15029,
											"end": 15046,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15022,
											"end": 15069,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21554,
											"end": 21566,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 21993,
											"end": 21999,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 15008,
											"end": 15010,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 14997,
											"end": 15006,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 14993,
											"end": 15011,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5370,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "330"
										},
										{
											"begin": 5415,
											"end": 5421,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 14997,
											"end": 15006,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15008,
											"end": 15010,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5396,
											"end": 5401,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 5392,
											"end": 5408,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5370,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "317"
										},
										{
											"begin": 5370,
											"end": 5422,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 5370,
											"end": 5422,
											"name": "tag",
											"source": -1,
											"value": "330"
										},
										{
											"begin": 5370,
											"end": 5422,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23614,
											"end": 23621,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 23598,
											"end": 23612,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23594,
											"end": 23622,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 5434,
											"end": 5473,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5434,
											"end": 5473,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5434,
											"end": 5473,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5434,
											"end": 5473,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5434,
											"end": 5473,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5434,
											"end": 5473,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 14979,
											"end": 15171,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14979,
											"end": 15171,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 15178,
											"end": 15594,
											"name": "tag",
											"source": -1,
											"value": "270"
										},
										{
											"begin": 15178,
											"end": 15594,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15378,
											"end": 15380,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 15392,
											"end": 15439,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 15392,
											"end": 15439,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15392,
											"end": 15439,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6077,
											"end": 6079,
											"name": "PUSH",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "426F72696E674D6174683A20556E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6137,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6168,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 6156,
											"end": 6168,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6168,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15349,
											"end": 15594,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 15601,
											"end": 16017,
											"name": "tag",
											"source": -1,
											"value": "205"
										},
										{
											"begin": 15601,
											"end": 16017,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15801,
											"end": 15803,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 15815,
											"end": 15862,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 15815,
											"end": 15862,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15815,
											"end": 15862,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6407,
											"end": 6408,
											"name": "PUSH",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 15786,
											"end": 15804,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15786,
											"end": 15804,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15786,
											"end": 15804,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6422,
											"end": 6451,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6470,
											"end": 6482,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 6470,
											"end": 6482,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6470,
											"end": 6482,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15772,
											"end": 16017,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 16024,
											"end": 16440,
											"name": "tag",
											"source": -1,
											"value": "283"
										},
										{
											"begin": 16024,
											"end": 16440,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16224,
											"end": 16226,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16238,
											"end": 16285,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 16238,
											"end": 16285,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16238,
											"end": 16285,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6721,
											"end": 6723,
											"name": "PUSH",
											"source": -1,
											"value": "1C"
										},
										{
											"begin": 16209,
											"end": 16227,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16209,
											"end": 16227,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16209,
											"end": 16227,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6757,
											"end": 6787,
											"name": "PUSH",
											"source": -1,
											"value": "426F72696E6745524332303A205472616E73666572206661696C656400000000"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6737,
											"end": 6788,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6819,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 6807,
											"end": 6819,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6819,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16195,
											"end": 16440,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 16447,
											"end": 16863,
											"name": "tag",
											"source": -1,
											"value": "192"
										},
										{
											"begin": 16447,
											"end": 16863,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16647,
											"end": 16649,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16661,
											"end": 16708,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 16661,
											"end": 16708,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16661,
											"end": 16708,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7058,
											"end": 7060,
											"name": "PUSH",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 16632,
											"end": 16650,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16632,
											"end": 16650,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16632,
											"end": 16650,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7094,
											"end": 7128,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7074,
											"end": 7129,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7149,
											"end": 7161,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 7149,
											"end": 7161,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7149,
											"end": 7161,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7142,
											"end": 7172,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7203,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 7191,
											"end": 7203,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7203,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16618,
											"end": 16863,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 16870,
											"end": 17286,
											"name": "tag",
											"source": -1,
											"value": "200"
										},
										{
											"begin": 16870,
											"end": 17286,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17070,
											"end": 17072,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 17084,
											"end": 17131,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17084,
											"end": 17131,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17084,
											"end": 17131,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "PUSH",
											"source": -1,
											"value": "D"
										},
										{
											"begin": 17055,
											"end": 17073,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17055,
											"end": 17073,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17055,
											"end": 17073,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C6F7720616C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7458,
											"end": 7494,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7513,
											"end": 7525,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 7513,
											"end": 7525,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7513,
											"end": 7525,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17041,
											"end": 17286,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17293,
											"end": 17709,
											"name": "tag",
											"source": -1,
											"value": "209"
										},
										{
											"begin": 17293,
											"end": 17709,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17493,
											"end": 17495,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 17507,
											"end": 17554,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17507,
											"end": 17554,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17507,
											"end": 17554,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7764,
											"end": 7766,
											"name": "PUSH",
											"source": -1,
											"value": "B"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C6F772062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7780,
											"end": 7814,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7833,
											"end": 7845,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 7833,
											"end": 7845,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7833,
											"end": 7845,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17464,
											"end": 17709,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17716,
											"end": 18132,
											"name": "tag",
											"source": -1,
											"value": "137"
										},
										{
											"begin": 17716,
											"end": 18132,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17916,
											"end": 17918,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 17930,
											"end": 17977,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17930,
											"end": 17977,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17930,
											"end": 17977,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8084,
											"end": 8086,
											"name": "PUSH",
											"source": -1,
											"value": "C"
										},
										{
											"begin": 17901,
											"end": 17919,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17901,
											"end": 17919,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17901,
											"end": 17919,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8100,
											"end": 8135,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8154,
											"end": 8166,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8154,
											"end": 8166,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8154,
											"end": 8166,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17887,
											"end": 18132,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18139,
											"end": 18555,
											"name": "tag",
											"source": -1,
											"value": "243"
										},
										{
											"begin": 18139,
											"end": 18555,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18339,
											"end": 18341,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18353,
											"end": 18400,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 18353,
											"end": 18400,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18353,
											"end": 18400,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8405,
											"end": 8407,
											"name": "PUSH",
											"source": -1,
											"value": "1C"
										},
										{
											"begin": 18324,
											"end": 18342,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18324,
											"end": 18342,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18324,
											"end": 18342,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8441,
											"end": 8471,
											"name": "PUSH",
											"source": -1,
											"value": "426F72696E674D6174683A2075696E74313238204F766572666C6F7700000000"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8421,
											"end": 8472,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8491,
											"end": 8503,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8491,
											"end": 8503,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8491,
											"end": 8503,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18310,
											"end": 18555,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18562,
											"end": 18978,
											"name": "tag",
											"source": -1,
											"value": "180"
										},
										{
											"begin": 18562,
											"end": 18978,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18762,
											"end": 18764,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18776,
											"end": 18823,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 18776,
											"end": 18823,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18776,
											"end": 18823,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18747,
											"end": 18765,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 18747,
											"end": 18765,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 18747,
											"end": 18765,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8778,
											"end": 8812,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8758,
											"end": 8813,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8832,
											"end": 8844,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8832,
											"end": 8844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8832,
											"end": 8844,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18733,
											"end": 18978,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18985,
											"end": 19401,
											"name": "tag",
											"source": -1,
											"value": "174"
										},
										{
											"begin": 18985,
											"end": 19401,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19185,
											"end": 19187,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19199,
											"end": 19246,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19199,
											"end": 19246,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19199,
											"end": 19246,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9083,
											"end": 9085,
											"name": "PUSH",
											"source": -1,
											"value": "B"
										},
										{
											"begin": 19170,
											"end": 19188,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19170,
											"end": 19188,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19170,
											"end": 19188,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420536967"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9099,
											"end": 9133,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9152,
											"end": 9164,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 9152,
											"end": 9164,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9152,
											"end": 9164,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19156,
											"end": 19401,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19408,
											"end": 19824,
											"name": "tag",
											"source": -1,
											"value": "258"
										},
										{
											"begin": 19408,
											"end": 19824,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19608,
											"end": 19610,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19622,
											"end": 19669,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19622,
											"end": 19669,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19622,
											"end": 19669,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19593,
											"end": 19611,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19593,
											"end": 19611,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19593,
											"end": 19611,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9439,
											"end": 9473,
											"name": "PUSH",
											"source": -1,
											"value": "426F72696E6745524332303A205472616E7366657246726F6D206661696C6564"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9419,
											"end": 9474,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9493,
											"end": 9505,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 9493,
											"end": 9505,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9493,
											"end": 9505,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19579,
											"end": 19824,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19831,
											"end": 20247,
											"name": "tag",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 19831,
											"end": 20247,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20031,
											"end": 20033,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20045,
											"end": 20092,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 20045,
											"end": 20092,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20045,
											"end": 20092,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9744,
											"end": 9746,
											"name": "PUSH",
											"source": -1,
											"value": "A"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2D32B9379037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9760,
											"end": 9793,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9812,
											"end": 9824,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 9812,
											"end": 9824,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9812,
											"end": 9824,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20002,
											"end": 20247,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 20254,
											"end": 20670,
											"name": "tag",
											"source": -1,
											"value": "163"
										},
										{
											"begin": 20254,
											"end": 20670,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20454,
											"end": 20456,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20468,
											"end": 20515,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 20468,
											"end": 20515,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20468,
											"end": 20515,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10063,
											"end": 10064,
											"name": "PUSH",
											"source": -1,
											"value": "7"
										},
										{
											"begin": 20439,
											"end": 20457,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20439,
											"end": 20457,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20439,
											"end": 20457,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21981,
											"end": 22000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20425,
											"end": 20670,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 20677,
											"end": 21010,
											"name": "tag",
											"source": -1,
											"value": "87"
										},
										{
											"begin": 20677,
											"end": 21010,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22534,
											"end": 22580,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 22534,
											"end": 22580,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22534,
											"end": 22580,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 10224,
											"end": 10261,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 10224,
											"end": 10261,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22534,
											"end": 22580,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 22534,
											"end": 22580,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 20996,
											"end": 20998,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20981,
											"end": 20999,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20981,
											"end": 20999,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10224,
											"end": 10261,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 20832,
											"end": 20834,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 20817,
											"end": 20835,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 20817,
											"end": 20835,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20803,
											"end": 21010,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 21246,
											"end": 21460,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 21246,
											"end": 21460,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22870,
											"end": 22874,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": 22859,
											"end": 22875,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 22859,
											"end": 22875,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22859,
											"end": 22875,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 22859,
											"end": 22875,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 10460,
											"end": 10495,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 10460,
											"end": 10495,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 21369,
											"end": 21371,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21354,
											"end": 21372,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21354,
											"end": 21372,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21340,
											"end": 21460,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23173,
											"end": 23441,
											"name": "tag",
											"source": -1,
											"value": "317"
										},
										{
											"begin": 23173,
											"end": 23441,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23238,
											"end": 23239,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23245,
											"end": 23346,
											"name": "tag",
											"source": -1,
											"value": "348"
										},
										{
											"begin": 23245,
											"end": 23346,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23259,
											"end": 23265,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 23256,
											"end": 23257,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23253,
											"end": 23266,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 23245,
											"end": 23346,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 23245,
											"end": 23346,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "350"
										},
										{
											"begin": 23245,
											"end": 23346,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 23326,
											"end": 23337,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23326,
											"end": 23337,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23326,
											"end": 23337,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 23320,
											"end": 23338,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 23307,
											"end": 23318,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 23307,
											"end": 23318,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23307,
											"end": 23318,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 23300,
											"end": 23339,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 23281,
											"end": 23283,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 23274,
											"end": 23284,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 23245,
											"end": 23346,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "348"
										},
										{
											"begin": 23245,
											"end": 23346,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 23245,
											"end": 23346,
											"name": "tag",
											"source": -1,
											"value": "350"
										},
										{
											"begin": 23245,
											"end": 23346,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23361,
											"end": 23367,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 23358,
											"end": 23359,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23355,
											"end": 23368,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 23352,
											"end": 23354,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 23352,
											"end": 23354,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "351"
										},
										{
											"begin": 23352,
											"end": 23354,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 23238,
											"end": 23239,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23417,
											"end": 23423,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 23412,
											"end": 23415,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 23408,
											"end": 23424,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 23401,
											"end": 23428,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 23352,
											"end": 23354,
											"name": "tag",
											"source": -1,
											"value": "351"
										},
										{
											"begin": 23352,
											"end": 23354,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23352,
											"end": 23354,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23222,
											"end": 23441,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23222,
											"end": 23441,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23222,
											"end": 23441,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23222,
											"end": 23441,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23635,
											"end": 23752,
											"name": "tag",
											"source": -1,
											"value": "298"
										},
										{
											"begin": 23635,
											"end": 23752,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22654,
											"end": 22708,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 23694,
											"end": 23729,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23694,
											"end": 23729,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 23684,
											"end": 23686,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "193"
										},
										{
											"begin": 23684,
											"end": 23686,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 23743,
											"end": 23744,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23743,
											"end": 23744,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 23733,
											"end": 23745,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"LOCK_TIME()": "413d9c3a",
							"_owner()": "b2bdfa7b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"burnFrom(address,address,uint256)": "ec60bcf3",
							"decimals()": "313ce567",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"setLOCK_TIME(uint256)": "e3f0dfe7",
							"symbol()": "95d89b41",
							"token()": "fc0c546a",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"users(address)": "a87430ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOCK_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_LOCK_TIME\",\"type\":\"uint256\"}],\"name\":\"setLOCK_TIME\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"balance\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"lockedUntil\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"amount\":\"The maximum collective amount that `spender` can draw.\",\"spender\":\"Address of the party that can draw from msg.sender's account.\"},\"returns\":{\"_0\":\"(bool) Returns True if approved.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"This permit must be redeemed before this deadline (UTC timestamp in seconds).\",\"owner_\":\"Address of the owner.\",\"spender\":\"The address of the spender that gets approved to draw from `owner_`.\",\"value\":\"The maximum collective amount that `spender` can draw.\"}},\"transfer(address,uint256)\":{\"params\":{\"shares\":\"of the tokens to move.\",\"to\":\"The address to move the tokens.\"},\"returns\":{\"_0\":\"(bool) Returns True if succeeded.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"from\":\"Address to draw tokens from.\",\"shares\":\"The token shares to move.\",\"to\":\"The address to move the tokens.\"},\"returns\":{\"_0\":\"(bool) Returns True if succeeded.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"owner > spender > allowance mapping.\"},\"approve(address,uint256)\":{\"notice\":\"Approves `amount` from sender to be spend by `spender`.\"},\"mint(uint256)\":{\"notice\":\"math is ok, because amount, totalSupply and shares is always 0 <= amount <= 100.000.000 * 10^18 theoretically you can grow the amount/share ratio, but it's not practical and useless\"},\"nonces(address)\":{\"notice\":\"owner > nonce mapping. Used in `permit`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approves `value` from `owner_` to be spend by `spender`.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers `shares` tokens from `msg.sender` to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `shares` tokens from `from` to `to`. Caller needs approval for `from`.\"},\"users(address)\":{\"notice\":\"owner > balance mapping.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sseaERC20.sol\":\"sSeaERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol\":{\"keccak256\":\"0xd1cb717800df6519b350eba78c2df2b700cbf6f32b3c0a4b6f40a218a00afd89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://027c89de99f7c870c1555704da07d614cce84a8f05ce688d5aff197e2404ed7d\",\"dweb:/ipfs/QmVvxzsgXELRJuvR3j2s25NgZ5X4ErUtJPUvzSXJUxPi5z\"]},\"@boringcrypto/boring-solidity/contracts/Domain.sol\":{\"keccak256\":\"0xe5215010c5a07b4b2fb1a2347b2106377678fea3d6f9ed656677c0570de2f6aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d7d2b184772d1524e61160790a8c7968c7b9fa6879545764f8a243ae52db84\",\"dweb:/ipfs/QmQTHA2gtm1zfK9GfrrZk5X2A7725RNSLNZFPn8CAMSf4v\"]},\"@boringcrypto/boring-solidity/contracts/ERC20.sol\":{\"keccak256\":\"0x215d98f2006287eb309c79fcfebd5a25cf26e60ccf28923d203de07b6f671658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e19b72bd3e27113efec8111083dec06697d2d18b46c04fc7c7a0e9d6d6172e\",\"dweb:/ipfs/QmNoUEdjTryBBFhHqpf7JFWsMyFt72BQHV7DmsWNvgg4kn\"]},\"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xf0da35541d6ae9e3c12fdd7c8d5d9584c56f9ac50d062efb8ca353ebd6ffd47d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8670101b72310d2c5e9b3e216e15ccb46de879acb9d3e2260952f331dad86301\",\"dweb:/ipfs/QmPzbTvPqhjo2bqxyoDasCBPtGUK41BrWvf5BJ5UmiUgAd\"]},\"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":{\"keccak256\":\"0x08491b0b0af82e0d3c54a1274e745d95bd65c7638d240a83479121c6808bfc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ff10b2639d9d4ca7b4d7ab62c37c510a026b45aef035b73c33bf255144e4f81\",\"dweb:/ipfs/QmdpaE4CRNyzaYkj8CHfJ17E2N1q9tcv8ynV5xT4o4WMBg\"]},\"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol\":{\"keccak256\":\"0x6bc52950e23c70a90a5b039697b77ba76360b62da6a06a61d3a1714b9c6c26b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://507b01278ba8ce200337e21122c8912c39b7a583d821fde847f47e36fd26c598\",\"dweb:/ipfs/Qmcm7G94MBdSPm7fS743fV86yMX2kMeE3a9QXjTpTAj6zW\"]},\"contracts/sseaERC20.sol\":{\"keccak256\":\"0x28d4d46ae06a0f622278bc8dff19ab488cb9c4ae512f897cf3fdde01f28de901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cd8bd475d78b6eba35e86a63467e7ee5ca00526197f7e5908396e725fce5692\",\"dweb:/ipfs/QmaWoRREXbWLkZXJ6pHbrWSjBBju7TCkq8LwwAy1m7VVSG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1331,
								"contract": "contracts/sseaERC20.sol:sSeaERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1334,
								"contract": "contracts/sseaERC20.sol:sSeaERC20",
								"label": "LOCK_TIME",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1336,
								"contract": "contracts/sseaERC20.sol:sSeaERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1363,
								"contract": "contracts/sseaERC20.sol:sSeaERC20",
								"label": "users",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(User)1358_storage)"
							},
							{
								"astId": 1371,
								"contract": "contracts/sseaERC20.sol:sSeaERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1376,
								"contract": "contracts/sseaERC20.sol:sSeaERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(User)1358_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct sSeaERC20.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)1358_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(User)1358_storage": {
								"encoding": "inplace",
								"label": "struct sSeaERC20.User",
								"members": [
									{
										"astId": 1355,
										"contract": "contracts/sseaERC20.sol:sSeaERC20",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 1357,
										"contract": "contracts/sseaERC20.sol:sSeaERC20",
										"label": "lockedUntil",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "owner > spender > allowance mapping."
							},
							"approve(address,uint256)": {
								"notice": "Approves `amount` from sender to be spend by `spender`."
							},
							"mint(uint256)": {
								"notice": "math is ok, because amount, totalSupply and shares is always 0 <= amount <= 100.000.000 * 10^18 theoretically you can grow the amount/share ratio, but it's not practical and useless"
							},
							"nonces(address)": {
								"notice": "owner > nonce mapping. Used in `permit`."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approves `value` from `owner_` to be spend by `spender`."
							},
							"transfer(address,uint256)": {
								"notice": "Transfers `shares` tokens from `msg.sender` to `to`."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `shares` tokens from `from` to `to`. Caller needs approval for `from`."
							},
							"users(address)": {
								"notice": "owner > balance mapping."
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "contracts/sseaERC20.sol:69:9: Warning: Unused local variable.\n        address oldOwner = _owner;\n        ^--------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2234,
					"file": "contracts/sseaERC20.sol",
					"start": 2218
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@boringcrypto/boring-solidity/contracts/BoringBatchable.sol": {
				"ast": {
					"absolutePath": "@boringcrypto/boring-solidity/contracts/BoringBatchable.sol",
					"exportedSymbols": {
						"BaseBoringBatchable": [
							78
						],
						"BoringBatchable": [
							114
						]
					},
					"id": 115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "56:33:0"
						},
						{
							"absolutePath": "@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 115,
							"sourceUnit": 702,
							"src": "220:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 78,
							"linearizedBaseContracts": [
								78
							],
							"name": "BaseBoringBatchable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "564:400:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 11,
															"name": "_returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "689:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "689:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3638",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "710:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_68_by_1",
															"typeString": "int_const 68"
														},
														"value": "68"
													},
													"src": "689:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 17,
												"nodeType": "IfStatement",
												"src": "685:67:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "5472616e73616374696f6e2072657665727465642073696c656e746c79",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "721:31:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_d0b1e7612ebe87924453e5d4581b9067879655587bae8a2dfee438433699b890",
															"typeString": "literal_string \"Transaction reverted silently\""
														},
														"value": "Transaction reverted silently"
													},
													"functionReturnParameters": 10,
													"id": 16,
													"nodeType": "Return",
													"src": "714:38:0"
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "772:95:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "820:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "_returnData",
																		"nodeType": "YulIdentifier",
																		"src": "839:11:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:4:0",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:22:0"
															},
															"variableNames": [
																{
																	"name": "_returnData",
																	"nodeType": "YulIdentifier",
																	"src": "820:11:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "820:11:0",
														"valueSize": 1
													},
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "839:11:0",
														"valueSize": 1
													}
												],
												"id": 18,
												"nodeType": "InlineAssembly",
												"src": "763:104:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 21,
															"name": "_returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "894:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"id": 23,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "908:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 22,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "908:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																}
															],
															"id": 24,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "907:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 19,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -1,
															"src": "883:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "883:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "883:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 10,
												"id": 26,
												"nodeType": "Return",
												"src": "876:40:0"
											}
										]
									},
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "290:182:0",
										"text": "@dev Helper function to extract a useful revert message from a failed call.\n If the returned data is malformed or not correctly abi encoded then this call can fail itself."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRevertMsg",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_returnData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "500:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 5,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "500:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "499:26:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "549:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "548:15:0"
									},
									"scope": 78,
									"src": "477:487:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1660:263:0",
										"statements": [
											{
												"body": {
													"id": 74,
													"nodeType": "Block",
													"src": "1713:204:0",
													"statements": [
														{
															"assignments": [
																49,
																51
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 49,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 74,
																	"src": "1728:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 48,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1728:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 51,
																	"mutability": "mutable",
																	"name": "result",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 74,
																	"src": "1742:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 50,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1742:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 61,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 57,
																			"name": "calls",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 32,
																			"src": "1792:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "bytes calldata[] calldata"
																			}
																		},
																		"id": 59,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 58,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 38,
																			"src": "1798:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1792:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 54,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "1773:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BaseBoringBatchable_$78",
																					"typeString": "contract BaseBoringBatchable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BaseBoringBatchable_$78",
																					"typeString": "contract BaseBoringBatchable"
																				}
																			],
																			"id": 53,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1765:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 52,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1765:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 55,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1765:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1765:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1765:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1727:74:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "1819:8:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 62,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "1820:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 64,
																	"name": "revertOnFail",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "1831:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1819:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 73,
															"nodeType": "IfStatement",
															"src": "1815:92:0",
															"trueBody": {
																"id": 72,
																"nodeType": "Block",
																"src": "1845:62:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 68,
																							"name": "result",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 51,
																							"src": "1884:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 67,
																						"name": "_getRevertMsg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 28,
																						"src": "1870:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (bytes memory) pure returns (string memory)"
																						}
																					},
																					"id": 69,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1870:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 66,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "1863:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 70,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1863:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 71,
																		"nodeType": "ExpressionStatement",
																		"src": "1863:29:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 41,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1690:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 42,
															"name": "calls",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1694:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "bytes calldata[] calldata"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1694:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1690:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"initializationExpression": {
													"assignments": [
														38
													],
													"declarations": [
														{
															"constant": false,
															"id": 38,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 75,
															"src": "1675:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 37,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1675:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 40,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1687:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1675:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1708:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 45,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "1708:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 47,
													"nodeType": "ExpressionStatement",
													"src": "1708:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1670:247:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "970:211:0",
										"text": "@notice Allows batched call to self (this contract).\n @param calls An array of inputs for each call.\n @param revertOnFail If True then reverts after a failed call and stops doing further calls."
									},
									"functionSelector": "d2423b51",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "calls",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 77,
												"src": "1600:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 30,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "1600:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 31,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "revertOnFail",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 77,
												"src": "1624:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 33,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1624:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1599:43:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1660:0:0"
									},
									"scope": 78,
									"src": "1585:338:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 115,
							"src": "255:1670:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 79,
										"name": "BaseBoringBatchable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 78,
										"src": "1955:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseBoringBatchable_$78",
											"typeString": "contract BaseBoringBatchable"
										}
									},
									"id": 80,
									"nodeType": "InheritanceSpecifier",
									"src": "1955:19:0"
								}
							],
							"contractDependencies": [
								78
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114,
								78
							],
							"name": "BoringBatchable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "2512:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2535:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "2541:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 105,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2545:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 106,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2553:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 107,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "2563:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 108,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2566:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 109,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "2569:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 100,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2522:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$701",
																"typeString": "contract IERC20"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 700,
														"src": "2522:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2522:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2522:49:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1981:97:0",
										"text": "@notice Call wrapper that performs `ERC20.permit` on `token`.\n Lookup `IERC20.permit`."
									},
									"functionSelector": "7c516e94",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitToken",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "2339:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$701",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 82,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 701,
													"src": "2339:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$701",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "2361:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "2383:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "2403:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "2427:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "2453:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 92,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2453:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "2470:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "2489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2329:175:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:0"
									},
									"scope": 114,
									"src": "2309:269:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 115,
							"src": "1927:653:0"
						}
					],
					"src": "32:2549:0"
				},
				"id": 0
			},
			"@boringcrypto/boring-solidity/contracts/Domain.sol": {
				"ast": {
					"absolutePath": "@boringcrypto/boring-solidity/contracts/Domain.sol",
					"exportedSymbols": {
						"Domain": [
							206
						]
					},
					"id": 207,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 116,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "243:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "Domain",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "DOMAIN_SEPARATOR_SIGNATURE_HASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 206,
									"src": "329:127:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 117,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e2875696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 119,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "398:57:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218",
													"typeString": "literal_string \"EIP712Domain(uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218",
													"typeString": "literal_string \"EIP712Domain(uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 118,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "388:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "388:68:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 124,
									"mutability": "constant",
									"name": "EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 206,
									"src": "512:77:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 122,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "512:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "1901",
										"id": 123,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "579:10:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
											"typeString": "literal_string \"\u0019\u0001\""
										},
										"value": "\u0019\u0001"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 126,
									"mutability": "immutable",
									"name": "_DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 206,
									"src": "638:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 125,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "638:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 128,
									"mutability": "immutable",
									"name": "DOMAIN_SEPARATOR_CHAIN_ID",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 206,
									"src": "687:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "876:186:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 139,
																	"name": "DOMAIN_SEPARATOR_SIGNATURE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "944:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 140,
																	"name": "chainId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 131,
																	"src": "993:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 143,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "1026:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Domain_$206",
																				"typeString": "contract Domain"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Domain_$206",
																				"typeString": "contract Domain"
																			}
																		],
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1018:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 141,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1018:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1018:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 137,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "916:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "916:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "916:129:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 136,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "893:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "893:162:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 135,
												"id": 147,
												"nodeType": "Return",
												"src": "886:169:1"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "749:39:1",
										"text": "@dev Calculate the DOMAIN_SEPARATOR"
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateDomainSeparator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "chainId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "828:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "827:17:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "867:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "866:9:1"
									},
									"scope": 206,
									"src": "793:269:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1089:156:1",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 164,
														"src": "1099:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1099:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 154,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1099:15:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1125:22:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1126:20:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "1137:7:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:9:1"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nodeType": "YulIdentifier",
																	"src": "1126:7:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 153,
														"isOffset": false,
														"isSlot": false,
														"src": "1126:7:1",
														"valueSize": 1
													}
												],
												"id": 155,
												"nodeType": "InlineAssembly",
												"src": "1116:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 156,
														"name": "_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1156:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 158,
																	"name": "DOMAIN_SEPARATOR_CHAIN_ID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "1202:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 159,
																	"name": "chainId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "1230:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1202:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 157,
															"name": "_calculateDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1176:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes32_$",
																"typeString": "function (uint256) view returns (bytes32)"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1176:62:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1156:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "1156:82:1"
											}
										]
									},
									"documentation": null,
									"id": 165,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:2:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1089:0:1"
									},
									"scope": 206,
									"src": "1068:177:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "1606:174:1",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 184,
														"src": "1616:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1616:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1616:15:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1642:22:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1643:20:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "1654:7:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1654:9:1"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nodeType": "YulIdentifier",
																	"src": "1643:7:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 172,
														"isOffset": false,
														"isSlot": false,
														"src": "1643:7:1",
														"valueSize": 1
													}
												],
												"id": 174,
												"nodeType": "InlineAssembly",
												"src": "1633:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 175,
															"name": "chainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "1680:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 176,
															"name": "DOMAIN_SEPARATOR_CHAIN_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1691:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1680:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 180,
																"name": "chainId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "1765:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 179,
															"name": "_calculateDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1739:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes32_$",
																"typeString": "function (uint256) view returns (bytes32)"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1739:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1680:93:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 178,
														"name": "_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1719:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 170,
												"id": 183,
												"nodeType": "Return",
												"src": "1673:100:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "1251:36:1",
										"text": "@dev Return the DOMAIN_SEPARATOR"
									},
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1571:2:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "1597:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1596:9:1"
									},
									"scope": 206,
									"src": "1546:234:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1863:245:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 192,
														"name": "digest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1873:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 196,
																		"name": "EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 124,
																		"src": "1959:40:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 197,
																			"name": "_domainSeparator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "2021:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																				"typeString": "function () view returns (bytes32)"
																			}
																		},
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2021:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 199,
																		"name": "dataHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2061:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 194,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "1921:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1921:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1921:166:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 193,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -8,
															"src": "1894:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1894:207:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1873:228:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "1873:228:1"
											}
										]
									},
									"documentation": null,
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getDigest",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "dataHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 205,
												"src": "1806:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 186,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1805:18:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "digest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 205,
												"src": "1847:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 189,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1846:16:1"
									},
									"scope": 206,
									"src": "1786:322:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 207,
							"src": "307:1803:1"
						}
					],
					"src": "243:1867:1"
				},
				"id": 1
			},
			"@boringcrypto/boring-solidity/contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "@boringcrypto/boring-solidity/contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							568
						],
						"ERC20Data": [
							228
						],
						"ERC20WithSupply": [
							634
						]
					},
					"id": 635,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 209,
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 702,
							"src": "56:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@boringcrypto/boring-solidity/contracts/Domain.sol",
							"file": "./Domain.sol",
							"id": 210,
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 207,
							"src": "90:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 228,
							"linearizedBaseContracts": [
								228
							],
							"name": "ERC20Data",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "291:36:2",
										"text": "@notice owner > balance mapping."
									},
									"functionSelector": "70a08231",
									"id": 215,
									"mutability": "mutable",
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 228,
									"src": "332:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 214,
										"keyType": {
											"id": 212,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "340:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "332:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 213,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "351:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "382:48:2",
										"text": "@notice owner > spender > allowance mapping."
									},
									"functionSelector": "dd62ed3e",
									"id": 222,
									"mutability": "mutable",
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 228,
									"src": "435:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 221,
										"keyType": {
											"id": 217,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "443:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "435:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 220,
											"keyType": {
												"id": 218,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "462:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "454:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 219,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "473:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "505:52:2",
										"text": "@notice owner > nonce mapping. Used in `permit`."
									},
									"functionSelector": "7ecebe00",
									"id": 227,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 228,
									"src": "562:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 226,
										"keyType": {
											"id": 224,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "570:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "562:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 225,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "581:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								}
							],
							"scope": 635,
							"src": "266:340:2"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 229,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 701,
										"src": "635:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$701",
											"typeString": "contract IERC20"
										}
									},
									"id": 230,
									"nodeType": "InheritanceSpecifier",
									"src": "635:6:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 231,
										"name": "Domain",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 206,
										"src": "643:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Domain_$206",
											"typeString": "contract Domain"
										}
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "643:6:2"
								}
							],
							"contractDependencies": [
								206,
								701
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 568,
							"linearizedBaseContracts": [
								568,
								206,
								701
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										648
									],
									"constant": false,
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "656:36:2",
										"text": "@notice owner > balance mapping."
									},
									"functionSelector": "70a08231",
									"id": 238,
									"mutability": "mutable",
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 237,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "732:8:2"
									},
									"scope": 568,
									"src": "697:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 236,
										"keyType": {
											"id": 234,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "705:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "697:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 235,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "716:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										657
									],
									"constant": false,
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "756:48:2",
										"text": "@notice owner > spender > allowance mapping."
									},
									"functionSelector": "dd62ed3e",
									"id": 246,
									"mutability": "mutable",
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 245,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "864:8:2"
									},
									"scope": 568,
									"src": "809:73:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 244,
										"keyType": {
											"id": 240,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "817:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "809:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 243,
											"keyType": {
												"id": 241,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "836:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "828:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 242,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "847:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "888:52:2",
										"text": "@notice owner > nonce mapping. Used in `permit`."
									},
									"functionSelector": "7ecebe00",
									"id": 251,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 568,
									"src": "945:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 250,
										"keyType": {
											"id": 248,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "953:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "945:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 249,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "964:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 259,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "1008:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "1031:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "1052:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1007:60:2"
									},
									"src": "993:75:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 267,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1088:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"indexed": true,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1112:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1138:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1087:66:2"
									},
									"src": "1073:81:2"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "1442:621:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 277,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "1525:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1535:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1525:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1540:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1540:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 282,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "1554:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1540:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1525:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 331,
												"nodeType": "IfStatement",
												"src": "1521:468:2",
												"trueBody": {
													"id": 330,
													"nodeType": "Block",
													"src": "1558:431:2",
													"statements": [
														{
															"assignments": [
																286
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 286,
																	"mutability": "mutable",
																	"name": "srcBalance",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 330,
																	"src": "1572:18:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 285,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1572:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 291,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 287,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "1593:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 290,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 288,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "1603:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1603:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1593:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1572:42:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 293,
																			"name": "srcBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "1636:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 294,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 272,
																			"src": "1650:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1636:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "45524332303a2062616c616e636520746f6f206c6f77",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1658:24:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e327826c8eca47459171f95e7adc9af4769338677d977d36c069bc4dc2707645",
																			"typeString": "literal_string \"ERC20: balance too low\""
																		},
																		"value": "ERC20: balance too low"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e327826c8eca47459171f95e7adc9af4769338677d977d36c069bc4dc2707645",
																			"typeString": "literal_string \"ERC20: balance too low\""
																		}
																	],
																	"id": 292,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "1628:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1628:55:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "ExpressionStatement",
															"src": "1628:55:2"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 299,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "1701:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1701:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 301,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "1715:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1701:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 329,
															"nodeType": "IfStatement",
															"src": "1697:282:2",
															"trueBody": {
																"id": 328,
																"nodeType": "Block",
																"src": "1719:260:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 304,
																						"name": "to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "1745:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "30",
																								"id": 307,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1759:1:2",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 306,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1751:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 305,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "1751:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": null,
																									"typeString": null
																								}
																							}
																						},
																						"id": 308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1751:10:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"src": "1745:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "45524332303a206e6f207a65726f2061646472657373",
																					"id": 310,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1763:24:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3adb72e007c4890ee721026a2f74db257566b13b80d954c8d30b87d4f922e5ce",
																						"typeString": "literal_string \"ERC20: no zero address\""
																					},
																					"value": "ERC20: no zero address"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3adb72e007c4890ee721026a2f74db257566b13b80d954c8d30b87d4f922e5ce",
																						"typeString": "literal_string \"ERC20: no zero address\""
																					}
																				],
																				"id": 303,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "1737:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1737:51:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 312,
																		"nodeType": "ExpressionStatement",
																		"src": "1737:51:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 313,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 238,
																					"src": "1856:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 316,
																				"indexExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 314,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -15,
																						"src": "1866:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 315,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "1866:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1856:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 317,
																					"name": "srcBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 286,
																					"src": "1880:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 318,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "1893:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1880:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1856:43:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 321,
																		"nodeType": "ExpressionStatement",
																		"src": "1856:43:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 322,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 238,
																					"src": "1941:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 324,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 323,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 270,
																					"src": "1951:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1941:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 325,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "1958:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1941:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 327,
																		"nodeType": "ExpressionStatement",
																		"src": "1941:23:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 333,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2012:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2012:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "2024:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "2028:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 332,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															259
														],
														"referencedDeclaration": 259,
														"src": "2003:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "1998:37:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2052:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 276,
												"id": 340,
												"nodeType": "Return",
												"src": "2045:11:2"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1160:209:2",
										"text": "@notice Transfers `amount` tokens from `msg.sender` to `to`.\n @param to The address to move the tokens.\n @param amount of the tokens to move.\n @return (bool) Returns True if succeeded."
									},
									"functionSelector": "a9059cbb",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "1392:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "1404:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1391:28:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "1436:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1436:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1435:6:2"
									},
									"scope": 568,
									"src": "1374:689:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2479:1010:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 354,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2556:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2566:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2556:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 436,
												"nodeType": "IfStatement",
												"src": "2552:869:2",
												"trueBody": {
													"id": 435,
													"nodeType": "Block",
													"src": "2569:852:2",
													"statements": [
														{
															"assignments": [
																358
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 358,
																	"mutability": "mutable",
																	"name": "srcBalance",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 435,
																	"src": "2583:18:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 357,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2583:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 362,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 359,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "2604:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 361,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 360,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "2614:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2604:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2583:36:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 364,
																			"name": "srcBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 358,
																			"src": "2641:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 365,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "2655:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2641:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "45524332303a2062616c616e636520746f6f206c6f77",
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2663:24:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e327826c8eca47459171f95e7adc9af4769338677d977d36c069bc4dc2707645",
																			"typeString": "literal_string \"ERC20: balance too low\""
																		},
																		"value": "ERC20: balance too low"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e327826c8eca47459171f95e7adc9af4769338677d977d36c069bc4dc2707645",
																			"typeString": "literal_string \"ERC20: balance too low\""
																		}
																	],
																	"id": 363,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "2633:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2633:55:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 369,
															"nodeType": "ExpressionStatement",
															"src": "2633:55:2"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 370,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "2707:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 371,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "2715:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2707:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 434,
															"nodeType": "IfStatement",
															"src": "2703:708:2",
															"trueBody": {
																"id": 433,
																"nodeType": "Block",
																"src": "2719:692:2",
																"statements": [
																	{
																		"assignments": [
																			374
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 374,
																				"mutability": "mutable",
																				"name": "spenderAllowance",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 433,
																				"src": "2737:24:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 373,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2737:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 381,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 375,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 246,
																					"src": "2764:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 377,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 376,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "2774:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2764:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 380,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 378,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "2780:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2780:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2764:27:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2737:54:2"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 382,
																				"name": "spenderAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 374,
																				"src": "2913:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 385,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2938:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 384,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "2938:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": null,
																									"typeString": null
																								}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							}
																						],
																						"id": 383,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -27,
																						"src": "2933:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2933:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint256",
																						"typeString": "type(uint256)"
																					}
																				},
																				"id": 387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2933:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2913:37:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 408,
																		"nodeType": "IfStatement",
																		"src": "2909:248:2",
																		"trueBody": {
																			"id": 407,
																			"nodeType": "Block",
																			"src": "2952:205:2",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 392,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 390,
																									"name": "spenderAllowance",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 374,
																									"src": "2982:16:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">=",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 391,
																									"name": "amount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 349,
																									"src": "3002:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "2982:26:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"hexValue": "45524332303a20616c6c6f77616e636520746f6f206c6f77",
																								"id": 393,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3010:26:2",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_84bef4fe58fa50e7896dbe599e2e3d0c2b8b9a0137970b3df150554a1dad01a9",
																									"typeString": "literal_string \"ERC20: allowance too low\""
																								},
																								"value": "ERC20: allowance too low"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_84bef4fe58fa50e7896dbe599e2e3d0c2b8b9a0137970b3df150554a1dad01a9",
																									"typeString": "literal_string \"ERC20: allowance too low\""
																								}
																							],
																							"id": 389,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								-18,
																								-18
																							],
																							"referencedDeclaration": -18,
																							"src": "2974:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 394,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2974:63:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 395,
																					"nodeType": "ExpressionStatement",
																					"src": "2974:63:2"
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 405,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"baseExpression": {
																									"argumentTypes": null,
																									"id": 396,
																									"name": "allowance",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 246,
																									"src": "3059:9:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																										"typeString": "mapping(address => mapping(address => uint256))"
																									}
																								},
																								"id": 400,
																								"indexExpression": {
																									"argumentTypes": null,
																									"id": 397,
																									"name": "from",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 345,
																									"src": "3069:4:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3059:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 401,
																							"indexExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 398,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": -15,
																									"src": "3075:3:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 399,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "3075:10:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "3059:27:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 404,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 402,
																								"name": "spenderAllowance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 374,
																								"src": "3089:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 403,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 349,
																								"src": "3108:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3089:25:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3059:55:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 406,
																					"nodeType": "ExpressionStatement",
																					"src": "3059:55:2"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 415,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 410,
																						"name": "to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 347,
																						"src": "3182:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "30",
																								"id": 413,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3196:1:2",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 412,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3188:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 411,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3188:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": null,
																									"typeString": null
																								}
																							}
																						},
																						"id": 414,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3188:10:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"src": "3182:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "45524332303a206e6f207a65726f2061646472657373",
																					"id": 416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3200:24:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3adb72e007c4890ee721026a2f74db257566b13b80d954c8d30b87d4f922e5ce",
																						"typeString": "literal_string \"ERC20: no zero address\""
																					},
																					"value": "ERC20: no zero address"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3adb72e007c4890ee721026a2f74db257566b13b80d954c8d30b87d4f922e5ce",
																						"typeString": "literal_string \"ERC20: no zero address\""
																					}
																				],
																				"id": 409,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "3174:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3174:51:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 418,
																		"nodeType": "ExpressionStatement",
																		"src": "3174:51:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 419,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 238,
																					"src": "3294:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 421,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 420,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "3304:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3294:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 422,
																					"name": "srcBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 358,
																					"src": "3312:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 423,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 349,
																					"src": "3325:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3312:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3294:37:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 426,
																		"nodeType": "ExpressionStatement",
																		"src": "3294:37:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 427,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 238,
																					"src": "3373:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 429,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 428,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 347,
																					"src": "3383:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3373:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 430,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 349,
																				"src": "3390:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3373:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 432,
																		"nodeType": "ExpressionStatement",
																		"src": "3373:23:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 438,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "3444:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 439,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "3450:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 440,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "3454:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 437,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															259
														],
														"referencedDeclaration": 259,
														"src": "3435:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3435:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "EmitStatement",
												"src": "3430:31:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3478:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 353,
												"id": 444,
												"nodeType": "Return",
												"src": "3471:11:2"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "2069:289:2",
										"text": "@notice Transfers `amount` tokens from `from` to `to`. Caller needs approval for `from`.\n @param from Address to draw tokens from.\n @param to The address to move the tokens.\n @param amount The token amount to move.\n @return (bool) Returns True if succeeded."
									},
									"functionSelector": "23b872dd",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "2394:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "2416:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2416:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "2436:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2436:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2384:72:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "2473:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2473:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2472:6:2"
									},
									"scope": 568,
									"src": "2363:1126:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										666
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "3859:129:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 457,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "3869:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 461,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 458,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3879:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3879:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3869:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 462,
														"indexExpression": {
															"argumentTypes": null,
															"id": 460,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3891:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3869:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 463,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "3902:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3869:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "3869:39:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 467,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3932:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3932:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3944:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3953:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 466,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															267
														],
														"referencedDeclaration": 267,
														"src": "3923:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "EmitStatement",
												"src": "3918:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3977:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 456,
												"id": 474,
												"nodeType": "Return",
												"src": "3970:11:2"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "3495:278:2",
										"text": "@notice Approves `amount` from sender to be spend by `spender`.\n @param spender Address of the party that can draw from msg.sender's account.\n @param amount The maximum collective amount that `spender` can draw.\n @return (bool) Returns True if approved."
									},
									"functionSelector": "095ea7b3",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 453,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3835:8:2"
									},
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 476,
												"src": "3795:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3795:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 476,
												"src": "3812:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3794:33:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 476,
												"src": "3853:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3853:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3852:6:2"
									},
									"scope": 568,
									"src": "3778:210:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "4107:42:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 481,
														"name": "_domainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "4124:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4124:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 480,
												"id": 483,
												"nodeType": "Return",
												"src": "4117:25:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3644e515",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4072:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "4098:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 478,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4098:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4097:9:2"
									},
									"scope": 568,
									"src": "4047:102:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": true,
									"id": 488,
									"mutability": "constant",
									"name": "PERMIT_SIGNATURE_HASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 568,
									"src": "4259:115:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 486,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4259:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 487,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4308:66:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										700
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "4961:463:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 508,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "4979:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4997:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4989:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 509,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4989:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4989:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4979:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a204f776e65722063616e6e6f742062652030",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5001:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d227bf0f09891e8f9d52e82638c5d3adc1c7a648bf155567088e9f930a17863a",
																"typeString": "literal_string \"ERC20: Owner cannot be 0\""
															},
															"value": "ERC20: Owner cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d227bf0f09891e8f9d52e82638c5d3adc1c7a648bf155567088e9f930a17863a",
																"typeString": "literal_string \"ERC20: Owner cannot be 0\""
															}
														],
														"id": 507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4971:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "4971:57:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 518,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "5046:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5046:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 520,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "5064:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5046:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a2045787069726564",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5074:16:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8de0f645c4c75b46fe87a70837d5917699eefc83d9e53d54aa5950eec20d9a99",
																"typeString": "literal_string \"ERC20: Expired\""
															},
															"value": "ERC20: Expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8de0f645c4c75b46fe87a70837d5917699eefc83d9e53d54aa5950eec20d9a99",
																"typeString": "literal_string \"ERC20: Expired\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5038:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5038:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "5038:53:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 531,
																								"name": "PERMIT_SIGNATURE_HASH",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 488,
																								"src": "5164:21:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 532,
																								"name": "owner_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 491,
																								"src": "5187:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 533,
																								"name": "spender",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 493,
																								"src": "5195:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 534,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 495,
																								"src": "5204:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 538,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "5211:16:2",
																								"subExpression": {
																									"argumentTypes": null,
																									"baseExpression": {
																										"argumentTypes": null,
																										"id": 535,
																										"name": "nonces",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 251,
																										"src": "5211:6:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																											"typeString": "mapping(address => uint256)"
																										}
																									},
																									"id": 537,
																									"indexExpression": {
																										"argumentTypes": null,
																										"id": 536,
																										"name": "owner_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 491,
																										"src": "5218:6:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "5211:14:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 539,
																								"name": "deadline",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 497,
																								"src": "5229:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 529,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -1,
																								"src": "5153:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 530,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "5153:10:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 540,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5153:85:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 528,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -8,
																					"src": "5143:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5143:96:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 527,
																			"name": "_getDigest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "5132:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
																				"typeString": "function (bytes32) view returns (bytes32)"
																			}
																		},
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5132:108:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 543,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "5242:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 544,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "5245:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 545,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "5248:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 526,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -6,
																	"src": "5122:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5122:128:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 547,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "5270:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5122:154:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20496e76616c6964205369676e6174757265",
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5290:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_feb3dbf96cfb7641ce579ad49b78afe793a6caf89893783c03a588ed7340adfe",
																"typeString": "literal_string \"ERC20: Invalid Signature\""
															},
															"value": "ERC20: Invalid Signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_feb3dbf96cfb7641ce579ad49b78afe793a6caf89893783c03a588ed7340adfe",
																"typeString": "literal_string \"ERC20: Invalid Signature\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5101:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5101:225:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "5101:225:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 552,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "5336:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 555,
															"indexExpression": {
																"argumentTypes": null,
																"id": 553,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "5346:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5336:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 556,
														"indexExpression": {
															"argumentTypes": null,
															"id": 554,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "5354:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5336:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 557,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "5365:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5336:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "5336:34:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 561,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "5394:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 562,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "5402:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 563,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "5411:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															267
														],
														"referencedDeclaration": 267,
														"src": "5385:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5385:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "EmitStatement",
												"src": "5380:37:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "4381:382:2",
										"text": "@notice Approves `value` from `owner_` to be spend by `spender`.\n @param owner_ Address of the owner.\n @param spender The address of the spender that gets approved to draw from `owner_`.\n @param value The maximum collective amount that `spender` can draw.\n @param deadline This permit must be redeemed before this deadline (UTC timestamp in seconds)."
									},
									"functionSelector": "d505accf",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 505,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4952:8:2"
									},
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4793:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4817:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4842:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4865:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4865:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4891:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 498,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4891:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4908:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 500,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4927:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4927:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4783:159:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4961:0:2"
									},
									"scope": 568,
									"src": "4768:656:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 635,
							"src": "608:4818:2"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 569,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 701,
										"src": "5456:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$701",
											"typeString": "contract IERC20"
										}
									},
									"id": 570,
									"nodeType": "InheritanceSpecifier",
									"src": "5456:6:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 571,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 568,
										"src": "5464:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$568",
											"typeString": "contract ERC20"
										}
									},
									"id": 572,
									"nodeType": "InheritanceSpecifier",
									"src": "5464:5:2"
								}
							],
							"contractDependencies": [
								206,
								568,
								701
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 634,
							"linearizedBaseContracts": [
								634,
								568,
								206,
								701
							],
							"name": "ERC20WithSupply",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										641
									],
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 575,
									"mutability": "mutable",
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 574,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5491:8:2"
									},
									"scope": 634,
									"src": "5476:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 573,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5476:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5571:200:2",
										"statements": [
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "newTotalSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 605,
														"src": "5581:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5581:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 584,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "5606:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 585,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "5620:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5606:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5581:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 589,
																"name": "newTotalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "5644:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 590,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "5662:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5644:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d696e74206f766572666c6f77",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:15:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_befb027765bdb781b8add02854db9579bcc0c9e265eab9aff7ae7e0a56cb1c4d",
																"typeString": "literal_string \"Mint overflow\""
															},
															"value": "Mint overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_befb027765bdb781b8add02854db9579bcc0c9e265eab9aff7ae7e0a56cb1c4d",
																"typeString": "literal_string \"Mint overflow\""
															}
														],
														"id": 588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5636:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5636:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "5636:55:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 595,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "5701:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 596,
														"name": "newTotalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "5715:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5701:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "5701:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 599,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "5739:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 601,
														"indexExpression": {
															"argumentTypes": null,
															"id": 600,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5749:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5739:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 602,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "5758:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5739:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "5739:25:2"
											}
										]
									},
									"documentation": null,
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "5533:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5533:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "5547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5532:30:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5571:0:2"
									},
									"scope": 634,
									"src": "5518:253:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "5830:134:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 614,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "5848:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 616,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 615,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "5858:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5848:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 617,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "5867:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5848:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4275726e20746f6f206d756368",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5875:15:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2fb2af5381cbc2fa5b6d94d1cebe7430ba1052401b06b512fda1207fd8cc644",
																"typeString": "literal_string \"Burn too much\""
															},
															"value": "Burn too much"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2fb2af5381cbc2fa5b6d94d1cebe7430ba1052401b06b512fda1207fd8cc644",
																"typeString": "literal_string \"Burn too much\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5840:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5840:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "5840:51:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 622,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "5901:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 623,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "5916:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5901:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "5901:21:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 626,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "5932:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 628,
														"indexExpression": {
															"argumentTypes": null,
															"id": 627,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5942:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5932:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 629,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "5951:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5932:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "5932:25:2"
											}
										]
									},
									"documentation": null,
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "5792:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5792:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "5806:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5806:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5791:30:2"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5830:0:2"
									},
									"scope": 634,
									"src": "5777:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 635,
							"src": "5428:538:2"
						}
					],
					"src": "32:5935:2"
				},
				"id": 2
			},
			"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							701
						]
					},
					"id": 702,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 636,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 701,
							"linearizedBaseContracts": [
								701
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "100:2:3"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 641,
												"src": "126:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "125:9:3"
									},
									"scope": 701,
									"src": "80:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "160:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "159:17:3"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "200:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "199:9:3"
									},
									"scope": 701,
									"src": "141:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 657,
												"src": "234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 657,
												"src": "249:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "233:32:3"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 657,
												"src": "289:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "288:9:3"
									},
									"scope": 701,
									"src": "215:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "095ea7b3",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "321:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "338:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "320:33:3"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "372:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 663,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "372:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "371:6:3"
									},
									"scope": 701,
									"src": "304:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 674,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "399:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "421:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "441:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "398:57:3"
									},
									"src": "384:72:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 682,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 682,
												"src": "476:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 682,
												"src": "499:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 682,
												"src": "524:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "475:63:3"
									},
									"src": "461:78:3"
								},
								{
									"body": null,
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "545:20:3",
										"text": "@notice EIP 2612"
									},
									"functionSelector": "d505accf",
									"id": 700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "595:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "618:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "643:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "666:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "692:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 692,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "692:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "709:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 694,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "728:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 696,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "585:158:3"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:0:3"
									},
									"scope": 701,
									"src": "570:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 702,
							"src": "57:698:3"
						}
					],
					"src": "32:724:3"
				},
				"id": 3
			},
			"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol": {
				"ast": {
					"absolutePath": "@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol",
					"exportedSymbols": {
						"BoringERC20": [
							1006
						]
					},
					"id": 1007,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 703,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 704,
							"nodeType": "ImportDirective",
							"scope": 1007,
							"sourceUnit": 702,
							"src": "56:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1006,
							"linearizedBaseContracts": [
								1006
							],
							"name": "BoringERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 707,
									"mutability": "constant",
									"name": "SIG_SYMBOL",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1006,
									"src": "160:47:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 705,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "160:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783935643839623431",
										"id": 706,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "197:10:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2514000705_by_1",
											"typeString": "int_const 2514000705"
										},
										"value": "0x95d89b41"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 710,
									"mutability": "constant",
									"name": "SIG_NAME",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1006,
									"src": "225:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 708,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "225:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783036666464653033",
										"id": 709,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "260:10:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_117300739_by_1",
											"typeString": "int_const 117300739"
										},
										"value": "0x06fdde03"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 713,
									"mutability": "constant",
									"name": "SIG_DECIMALS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1006,
									"src": "286:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 711,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "286:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783331336365353637",
										"id": 712,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "325:10:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_826074471_by_1",
											"typeString": "int_const 826074471"
										},
										"value": "0x313ce567"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 716,
									"mutability": "constant",
									"name": "SIG_TRANSFER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1006,
									"src": "355:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 714,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "355:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786139303539636262",
										"id": 715,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "394:10:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2835717307_by_1",
											"typeString": "int_const 2835717307"
										},
										"value": "0xa9059cbb"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 719,
									"mutability": "constant",
									"name": "SIG_TRANSFER_FROM",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1006,
									"src": "439:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 717,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "439:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783233623837326464",
										"id": 718,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "483:10:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_599290589_by_1",
											"typeString": "int_const 599290589"
										},
										"value": "0x23b872dd"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "626:485:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 726,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "640:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "640:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3634",
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "655:2:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "640:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 739,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "727:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "727:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "742:2:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "727:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 802,
														"nodeType": "Block",
														"src": "1068:37:4",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "3f3f3f",
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1089:5:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ad68b4dd5516c9b8c2050c111c09e315e44fd13499c6724a87c1b4642b615187",
																		"typeString": "literal_string \"???\""
																	},
																	"value": "???"
																},
																"functionReturnParameters": 725,
																"id": 801,
																"nodeType": "Return",
																"src": "1082:12:4"
															}
														]
													},
													"id": 803,
													"nodeType": "IfStatement",
													"src": "723:382:4",
													"trueBody": {
														"id": 799,
														"nodeType": "Block",
														"src": "746:316:4",
														"statements": [
															{
																"assignments": [
																	744
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 744,
																		"mutability": "mutable",
																		"name": "i",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 799,
																		"src": "760:7:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"typeName": {
																			"id": 743,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "760:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 746,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "770:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "760:11:4"
															},
															{
																"body": {
																	"id": 759,
																	"nodeType": "Block",
																	"src": "815:36:4",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "833:3:4",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 756,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "833:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"id": 758,
																			"nodeType": "ExpressionStatement",
																			"src": "833:3:4"
																		}
																	]
																},
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 747,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 744,
																			"src": "791:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "3332",
																			"id": 748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "795:2:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "791:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		},
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 750,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 721,
																				"src": "801:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 752,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 751,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 744,
																				"src": "806:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "801:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "812:1:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "801:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "791:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 760,
																"nodeType": "WhileStatement",
																"src": "785:66:4"
															},
															{
																"assignments": [
																	762
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 762,
																		"mutability": "mutable",
																		"name": "bytesArray",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 799,
																		"src": "864:23:4",
																		"stateVariable": false,
																		"storageLocation": "memory",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes"
																		},
																		"typeName": {
																			"id": 761,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "864:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 767,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 765,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 744,
																			"src": "900:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "NewExpression",
																		"src": "890:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (bytes memory)"
																		},
																		"typeName": {
																			"id": 763,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "894:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes"
																			}
																		}
																	},
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "890:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "864:38:4"
															},
															{
																"body": {
																	"id": 792,
																	"nodeType": "Block",
																	"src": "957:56:4",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 784,
																						"name": "bytesArray",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 762,
																						"src": "975:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 786,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 785,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 744,
																						"src": "986:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "975:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 787,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 721,
																						"src": "991:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 789,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 788,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 744,
																						"src": "996:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "991:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"src": "975:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"id": 791,
																			"nodeType": "ExpressionStatement",
																			"src": "975:23:4"
																		}
																	]
																},
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 772,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 744,
																			"src": "928:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "3332",
																			"id": 773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "932:2:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "928:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 775,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 721,
																				"src": "938:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 777,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 776,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 744,
																				"src": "943:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "938:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "949:1:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "938:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "928:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 793,
																"initializationExpression": {
																	"expression": {
																		"argumentTypes": null,
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 768,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 744,
																			"src": "921:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "925:1:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "921:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 771,
																	"nodeType": "ExpressionStatement",
																	"src": "921:5:4"
																},
																"loopExpression": {
																	"expression": {
																		"argumentTypes": null,
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "952:3:4",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 781,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 744,
																			"src": "952:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 783,
																	"nodeType": "ExpressionStatement",
																	"src": "952:3:4"
																},
																"nodeType": "ForStatement",
																"src": "916:97:4"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 796,
																			"name": "bytesArray",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "1040:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1033:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 794,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1033:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1033:18:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"functionReturnParameters": 725,
																"id": 798,
																"nodeType": "Return",
																"src": "1026:25:4"
															}
														]
													}
												},
												"id": 804,
												"nodeType": "IfStatement",
												"src": "636:469:4",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "659:58:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 732,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "691:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "698:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				},
																				"typeName": {
																					"id": 733,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "698:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			}
																		],
																		"id": 735,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "697:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 730,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "680:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "680:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "680:26:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 725,
															"id": 737,
															"nodeType": "Return",
															"src": "673:33:4"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "returnDataToString",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 806,
												"src": "569:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "569:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "568:19:4"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 806,
												"src": "611:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "611:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "610:15:4"
									},
									"scope": 1006,
									"src": "541:570:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "1384:173:4",
										"statements": [
											{
												"assignments": [
													815,
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 836,
														"src": "1395:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 814,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1395:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 836,
														"src": "1409:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 816,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1409:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 825,
																	"name": "SIG_SYMBOL",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "1479:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1456:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1456:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1456:34:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 820,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "1438:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$701",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$701",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1430:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 818,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1430:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1430:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1430:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1430:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1394:97:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"id": 829,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1508:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "3f3f3f",
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1545:5:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_ad68b4dd5516c9b8c2050c111c09e315e44fd13499c6724a87c1b4642b615187",
															"typeString": "literal_string \"???\""
														},
														"value": "???"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1508:42:4",
													"trueExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 831,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "1537:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 830,
															"name": "returnDataToString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "1518:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																"typeString": "function (bytes memory) pure returns (string memory)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1518:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 813,
												"id": 835,
												"nodeType": "Return",
												"src": "1501:49:4"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "1117:190:4",
										"text": "@notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\n @param token The address of the ERC-20 token contract.\n @return (string) Token symbol."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeSymbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 837,
												"src": "1332:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$701",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 808,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 701,
													"src": "1332:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$701",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:14:4"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 837,
												"src": "1369:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 811,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1369:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1368:15:4"
									},
									"scope": 1006,
									"src": "1312:245:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1824:171:4",
										"statements": [
											{
												"assignments": [
													846,
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 867,
														"src": "1835:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 845,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1835:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 867,
														"src": "1849:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 847,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1849:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 856,
																	"name": "SIG_NAME",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "1919:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 854,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1896:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1896:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1896:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 851,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "1878:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$701",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$701",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1870:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 849,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1870:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1870:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1870:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1834:95:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"id": 860,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "1946:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "3f3f3f",
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1983:5:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_ad68b4dd5516c9b8c2050c111c09e315e44fd13499c6724a87c1b4642b615187",
															"typeString": "literal_string \"???\""
														},
														"value": "???"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1946:42:4",
													"trueExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 862,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "1975:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 861,
															"name": "returnDataToString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "1956:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																"typeString": "function (bytes memory) pure returns (string memory)"
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1956:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 844,
												"id": 866,
												"nodeType": "Return",
												"src": "1939:49:4"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "1563:186:4",
										"text": "@notice Provides a safe ERC20.name version which returns '???' as fallback string.\n @param token The address of the ERC-20 token contract.\n @return (string) Token name."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeName",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 868,
												"src": "1772:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$701",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 839,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 701,
													"src": "1772:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$701",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1771:14:4"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 868,
												"src": "1809:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1809:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1808:15:4"
									},
									"scope": 1006,
									"src": "1754:241:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "2263:194:4",
										"statements": [
											{
												"assignments": [
													877,
													879
												],
												"declarations": [
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 907,
														"src": "2274:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 876,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2274:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 879,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 907,
														"src": "2288:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 878,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2288:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 887,
																	"name": "SIG_DECIMALS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "2358:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 885,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2335:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2335:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2335:36:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 882,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "2317:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$701",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$701",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2309:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 880,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2309:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2309:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2309:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2273:99:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 891,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "2389:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 892,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "2400:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2400:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3332",
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2415:2:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "2400:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2389:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2448:2:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2389:61:4",
													"trueExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 899,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "2431:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2438:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 900,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "2438:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	}
																],
																"id": 902,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2437:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 897,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -1,
																"src": "2420:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2420:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2420:25:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 875,
												"id": 906,
												"nodeType": "Return",
												"src": "2382:68:4"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "2001:191:4",
										"text": "@notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\n @param token The address of the ERC-20 token contract.\n @return (uint8) Token decimals."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 908,
												"src": "2219:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$701",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 870,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 701,
													"src": "2219:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$701",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2218:14:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 908,
												"src": "2256:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 873,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2256:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:7:4"
									},
									"scope": 1006,
									"src": "2197:260:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "2829:230:4",
										"statements": [
											{
												"assignments": [
													919,
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 954,
														"src": "2840:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 918,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2840:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 954,
														"src": "2854:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 920,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2854:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 929,
																	"name": "SIG_TRANSFER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "2918:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 930,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "2932:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 931,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "2936:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 927,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2895:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2895:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2895:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 924,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "2883:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$701",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$701",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2875:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 922,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2875:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2875:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2875:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2875:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2839:105:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 936,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "2962:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 937,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 921,
																					"src": "2974:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2974:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2989:1:4",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2974:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 943,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 921,
																					"src": "3005:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"id": 945,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3012:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 944,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "3012:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": null,
																									"typeString": null
																								}
																							}
																						}
																					],
																					"id": 946,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3011:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 941,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "2994:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2994:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2994:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2974:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 949,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2973:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2962:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e6745524332303a205472616e73666572206661696c6564",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3021:30:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a3f0851ddc9e157ae96e52ed9dfd71a8cb4b1cf2a73b26b9f3f9e0aa9469d27",
																"typeString": "literal_string \"BoringERC20: Transfer failed\""
															},
															"value": "BoringERC20: Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a3f0851ddc9e157ae96e52ed9dfd71a8cb4b1cf2a73b26b9f3f9e0aa9469d27",
																"typeString": "literal_string \"BoringERC20: Transfer failed\""
															}
														],
														"id": 935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2954:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2954:98:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "2954:98:4"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "2463:258:4",
										"text": "@notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\n Reverts on a failed transfer.\n @param token The address of the ERC-20 token.\n @param to Transfer tokens to.\n @param amount The token amount."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 955,
												"src": "2757:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$701",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 910,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 701,
													"src": "2757:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$701",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 955,
												"src": "2779:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 955,
												"src": "2799:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:72:4"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2829:0:4"
									},
									"scope": 1006,
									"src": "2726:333:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "3503:245:4",
										"statements": [
											{
												"assignments": [
													968,
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1004,
														"src": "3514:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 967,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3514:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1004,
														"src": "3528:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 969,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3528:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 984,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 978,
																	"name": "SIG_TRANSFER_FROM",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "3592:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 979,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "3611:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 980,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "3617:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 981,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "3621:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 976,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3569:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3569:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3569:59:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 973,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "3557:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$701",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$701",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3549:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 971,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3549:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3549:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3549:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3549:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3513:116:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 986,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "3647:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 987,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 970,
																					"src": "3659:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 988,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3659:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3674:1:4",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3659:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 993,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 970,
																					"src": "3690:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"id": 995,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3697:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 994,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "3697:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": null,
																									"typeString": null
																								}
																							}
																						}
																					],
																					"id": 996,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3696:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 991,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "3679:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3679:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3679:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3659:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 999,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3658:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3647:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e6745524332303a205472616e7366657246726f6d206661696c6564",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3706:34:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dffd2f381f9235cb5927387124071d63a91c90f587c3edae76629d7dc4794f26",
																"typeString": "literal_string \"BoringERC20: TransferFrom failed\""
															},
															"value": "BoringERC20: TransferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dffd2f381f9235cb5927387124071d63a91c90f587c3edae76629d7dc4794f26",
																"typeString": "literal_string \"BoringERC20: TransferFrom failed\""
															}
														],
														"id": 985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3639:102:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "3639:102:4"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "3065:304:4",
										"text": "@notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\n Reverts on a failed transfer.\n @param token The address of the ERC-20 token.\n @param from Transfer tokens from.\n @param to Transfer tokens to.\n @param amount The token amount."
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1005,
												"src": "3409:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$701",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 957,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 701,
													"src": "3409:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$701",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1005,
												"src": "3431:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1005,
												"src": "3453:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1005,
												"src": "3473:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3399:94:4"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3503:0:4"
									},
									"scope": 1006,
									"src": "3374:374:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1007,
							"src": "134:3616:4"
						}
					],
					"src": "32:3719:4"
				},
				"id": 4
			},
			"@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol": {
				"ast": {
					"absolutePath": "@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol",
					"exportedSymbols": {
						"BoringMath": [
							1160
						],
						"BoringMath128": [
							1206
						],
						"BoringMath32": [
							1298
						],
						"BoringMath64": [
							1252
						]
					},
					"id": 1299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1008,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1009,
								"nodeType": "StructuredDocumentation",
								"src": "57:151:5",
								"text": "@notice A library for performing overflow-/underflow-safe math,\n updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math)."
							},
							"fullyImplemented": true,
							"id": 1160,
							"linearizedBaseContracts": [
								1160
							],
							"name": "BoringMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "302:70:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1019,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "321:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1020,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1011,
																				"src": "325:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1021,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1013,
																				"src": "329:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "325:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "321:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1024,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "320:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1025,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "335:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "320:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a20416464204f766572666c6f77",
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "338:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf",
																"typeString": "literal_string \"BoringMath: Add Overflow\""
															},
															"value": "BoringMath: Add Overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf",
																"typeString": "literal_string \"BoringMath: Add Overflow\""
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "312:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "312:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "312:53:5"
											}
										]
									},
									"documentation": null,
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1031,
												"src": "246:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1031,
												"src": "257:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "245:22:5"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1031,
												"src": "291:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "290:11:5"
									},
									"scope": 1160,
									"src": "233:139:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "447:67:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1041,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1038,
																			"src": "466:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1042,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1033,
																				"src": "470:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1043,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1035,
																				"src": "474:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "470:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "466:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1046,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "465:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1047,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "480:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "465:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a20556e646572666c6f77",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "483:23:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa",
																"typeString": "literal_string \"BoringMath: Underflow\""
															},
															"value": "BoringMath: Underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa",
																"typeString": "literal_string \"BoringMath: Underflow\""
															}
														],
														"id": 1040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "457:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "457:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "457:50:5"
											}
										]
									},
									"documentation": null,
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1053,
												"src": "391:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1053,
												"src": "402:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "390:22:5"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1053,
												"src": "436:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "435:11:5"
									},
									"scope": 1160,
									"src": "378:136:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "589:84:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1063,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "607:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "612:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "607:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1066,
																					"name": "c",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1060,
																					"src": "618:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1069,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1067,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1055,
																						"src": "622:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 1068,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1057,
																						"src": "626:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "622:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "618:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1071,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "617:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1072,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "631:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "617:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1074,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "636:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "617:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "607:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a204d756c204f766572666c6f77",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "639:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e",
																"typeString": "literal_string \"BoringMath: Mul Overflow\""
															},
															"value": "BoringMath: Mul Overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e",
																"typeString": "literal_string \"BoringMath: Mul Overflow\""
															}
														],
														"id": 1062,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "599:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "599:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "599:67:5"
											}
										]
									},
									"documentation": null,
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "533:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "544:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "532:22:5"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "578:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "577:11:5"
									},
									"scope": 1160,
									"src": "520:153:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "739:98:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1089,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "757:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "770:2:5",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "771:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	],
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "762:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 1090,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "762:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "762:11:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "757:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a2075696e74313238204f766572666c6f77",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "775:30:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64196137e15a5be4f7488ecfa918cfa26a6c2051ae3fb739c5de9bf8431fe9a5",
																"typeString": "literal_string \"BoringMath: uint128 Overflow\""
															},
															"value": "BoringMath: uint128 Overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64196137e15a5be4f7488ecfa918cfa26a6c2051ae3fb739c5de9bf8431fe9a5",
																"typeString": "literal_string \"BoringMath: uint128 Overflow\""
															}
														],
														"id": 1088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "749:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "749:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "749:57:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1099,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "816:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1102,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "828:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "820:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 1100,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "820:7:5",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "820:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "816:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "816:14:5"
											}
										]
									},
									"documentation": null,
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "to128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1107,
												"src": "694:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "693:11:5"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1107,
												"src": "728:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1085,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:11:5"
									},
									"scope": 1160,
									"src": "679:158:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "901:95:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1115,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "919:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "931:2:5",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "932:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	],
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "924:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "924:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "924:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "919:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a2075696e743634204f766572666c6f77",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "936:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3c33265b589f76cafa7df00c0a28addc9a2c2003a13a1e0e4b875f58eb08764",
																"typeString": "literal_string \"BoringMath: uint64 Overflow\""
															},
															"value": "BoringMath: uint64 Overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3c33265b589f76cafa7df00c0a28addc9a2c2003a13a1e0e4b875f58eb08764",
																"typeString": "literal_string \"BoringMath: uint64 Overflow\""
															}
														],
														"id": 1114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "911:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "911:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "911:55:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1125,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "976:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1128,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "987:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "980:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1126,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "980:6:5",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "980:9:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "976:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "976:13:5"
											}
										]
									},
									"documentation": null,
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "to64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1133,
												"src": "857:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "856:11:5"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1133,
												"src": "891:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1111,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "891:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "890:10:5"
									},
									"scope": 1160,
									"src": "843:153:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "1060:95:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1141,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "1078:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1090:2:5",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1091:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	],
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1083:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 1142,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1083:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1083:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "1078:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a2075696e743332204f766572666c6f77",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1095:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8918cd18a3e78dc3bd01c63d310640381efda31e2d3ce751014519bc65013fc",
																"typeString": "literal_string \"BoringMath: uint32 Overflow\""
															},
															"value": "BoringMath: uint32 Overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8918cd18a3e78dc3bd01c63d310640381efda31e2d3ce751014519bc65013fc",
																"typeString": "literal_string \"BoringMath: uint32 Overflow\""
															}
														],
														"id": 1140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1070:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1070:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "1070:55:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1151,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "1135:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1154,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "1146:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1139:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 1152,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "1139:6:5",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1139:9:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1135:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "1135:13:5"
											}
										]
									},
									"documentation": null,
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "to32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1159,
												"src": "1016:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1015:11:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1159,
												"src": "1050:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1137,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1050:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1049:10:5"
									},
									"scope": 1160,
									"src": "1002:153:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1299,
							"src": "208:949:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1161,
								"nodeType": "StructuredDocumentation",
								"src": "1159:99:5",
								"text": "@notice A library for performing overflow-/underflow-safe addition and subtraction on uint128."
							},
							"fullyImplemented": true,
							"id": 1206,
							"linearizedBaseContracts": [
								1206
							],
							"name": "BoringMath128",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "1355:70:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1171,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1168,
																			"src": "1374:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			"id": 1174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1172,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1163,
																				"src": "1378:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1173,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1165,
																				"src": "1382:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "1378:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "1374:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"id": 1176,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1373:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1177,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "1388:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "1373:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a20416464204f766572666c6f77",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1391:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf",
																"typeString": "literal_string \"BoringMath: Add Overflow\""
															},
															"value": "BoringMath: Add Overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf",
																"typeString": "literal_string \"BoringMath: Add Overflow\""
															}
														],
														"id": 1170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1365:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1365:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "1365:53:5"
											}
										]
									},
									"documentation": null,
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1183,
												"src": "1299:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1162,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1183,
												"src": "1310:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1164,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1298:22:5"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1183,
												"src": "1344:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1167,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1343:11:5"
									},
									"scope": 1206,
									"src": "1286:139:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "1500:67:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1193,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1190,
																			"src": "1519:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1194,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1185,
																				"src": "1523:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1195,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "1527:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "1523:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "1519:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"id": 1198,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1518:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1199,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "1533:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "1518:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a20556e646572666c6f77",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1536:23:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa",
																"typeString": "literal_string \"BoringMath: Underflow\""
															},
															"value": "BoringMath: Underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa",
																"typeString": "literal_string \"BoringMath: Underflow\""
															}
														],
														"id": 1192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1510:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1510:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "1510:50:5"
											}
										]
									},
									"documentation": null,
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1205,
												"src": "1444:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1184,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1205,
												"src": "1455:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1186,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1443:22:5"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1205,
												"src": "1489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1189,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1488:11:5"
									},
									"scope": 1206,
									"src": "1431:136:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1299,
							"src": "1258:311:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1207,
								"nodeType": "StructuredDocumentation",
								"src": "1571:98:5",
								"text": "@notice A library for performing overflow-/underflow-safe addition and subtraction on uint64."
							},
							"fullyImplemented": true,
							"id": 1252,
							"linearizedBaseContracts": [
								1252
							],
							"name": "BoringMath64",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "1762:70:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1217,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1214,
																			"src": "1781:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			},
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1218,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1209,
																				"src": "1785:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1219,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1211,
																				"src": "1789:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"src": "1785:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"src": "1781:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"id": 1222,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1780:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1223,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "1795:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "1780:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a20416464204f766572666c6f77",
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1798:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf",
																"typeString": "literal_string \"BoringMath: Add Overflow\""
															},
															"value": "BoringMath: Add Overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf",
																"typeString": "literal_string \"BoringMath: Add Overflow\""
															}
														],
														"id": 1216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1772:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "1772:53:5"
											}
										]
									},
									"documentation": null,
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1229,
												"src": "1709:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1208,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1709:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1229,
												"src": "1719:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1210,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1719:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1708:20:5"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1229,
												"src": "1752:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1213,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1752:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1751:10:5"
									},
									"scope": 1252,
									"src": "1696:136:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "1904:67:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1239,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1236,
																			"src": "1923:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			},
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1240,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1231,
																				"src": "1927:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1241,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "1931:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"src": "1927:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"src": "1923:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"id": 1244,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1922:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1245,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "1937:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "1922:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a20556e646572666c6f77",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1940:23:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa",
																"typeString": "literal_string \"BoringMath: Underflow\""
															},
															"value": "BoringMath: Underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa",
																"typeString": "literal_string \"BoringMath: Underflow\""
															}
														],
														"id": 1238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1914:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1914:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "1914:50:5"
											}
										]
									},
									"documentation": null,
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1251,
												"src": "1851:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1230,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1851:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1251,
												"src": "1861:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1232,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1861:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1850:20:5"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1251,
												"src": "1894:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1235,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1894:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1893:10:5"
									},
									"scope": 1252,
									"src": "1838:133:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1299,
							"src": "1669:304:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1253,
								"nodeType": "StructuredDocumentation",
								"src": "1975:98:5",
								"text": "@notice A library for performing overflow-/underflow-safe addition and subtraction on uint32."
							},
							"fullyImplemented": true,
							"id": 1298,
							"linearizedBaseContracts": [
								1298
							],
							"name": "BoringMath32",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "2166:70:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1263,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "2185:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1264,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "2189:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1265,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1257,
																				"src": "2193:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"src": "2189:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"src": "2185:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"id": 1268,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2184:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1269,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "2199:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "2184:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a20416464204f766572666c6f77",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2202:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf",
																"typeString": "literal_string \"BoringMath: Add Overflow\""
															},
															"value": "BoringMath: Add Overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf",
																"typeString": "literal_string \"BoringMath: Add Overflow\""
															}
														],
														"id": 1262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2176:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "2176:53:5"
											}
										]
									},
									"documentation": null,
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1275,
												"src": "2113:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1254,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2113:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1275,
												"src": "2123:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1256,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2123:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2112:20:5"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1275,
												"src": "2156:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1259,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2156:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2155:10:5"
									},
									"scope": 1298,
									"src": "2100:136:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "2308:67:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1285,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1282,
																			"src": "2327:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1286,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1277,
																				"src": "2331:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1287,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1279,
																				"src": "2335:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"src": "2331:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"src": "2327:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"id": 1290,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2326:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1291,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "2341:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "2326:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426f72696e674d6174683a20556e646572666c6f77",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2344:23:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa",
																"typeString": "literal_string \"BoringMath: Underflow\""
															},
															"value": "BoringMath: Underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa",
																"typeString": "literal_string \"BoringMath: Underflow\""
															}
														],
														"id": 1284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2318:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2318:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "2318:50:5"
											}
										]
									},
									"documentation": null,
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1297,
												"src": "2255:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1276,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2255:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1297,
												"src": "2265:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1278,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2265:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2254:20:5"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1297,
												"src": "2298:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1281,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2298:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2297:10:5"
									},
									"scope": 1298,
									"src": "2242:133:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1299,
							"src": "2073:304:5"
						}
					],
					"src": "32:2346:5"
				},
				"id": 5
			},
			"contracts/sseaERC20.sol": {
				"ast": {
					"absolutePath": "contracts/sseaERC20.sol",
					"exportedSymbols": {
						"sSeaERC20": [
							2020
						]
					},
					"id": 2021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1300,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:6"
						},
						{
							"id": 1301,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "55:33:6"
						},
						{
							"absolutePath": "@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol",
							"file": "@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol",
							"id": 1302,
							"nodeType": "ImportDirective",
							"scope": 2021,
							"sourceUnit": 1299,
							"src": "90:74:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol",
							"file": "@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol",
							"id": 1303,
							"nodeType": "ImportDirective",
							"scope": 2021,
							"sourceUnit": 1007,
							"src": "165:75:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@boringcrypto/boring-solidity/contracts/Domain.sol",
							"file": "@boringcrypto/boring-solidity/contracts/Domain.sol",
							"id": 1304,
							"nodeType": "ImportDirective",
							"scope": 2021,
							"sourceUnit": 207,
							"src": "241:60:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@boringcrypto/boring-solidity/contracts/ERC20.sol",
							"file": "@boringcrypto/boring-solidity/contracts/ERC20.sol",
							"id": 1305,
							"nodeType": "ImportDirective",
							"scope": 2021,
							"sourceUnit": 635,
							"src": "302:59:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@boringcrypto/boring-solidity/contracts/BoringBatchable.sol",
							"file": "@boringcrypto/boring-solidity/contracts/BoringBatchable.sol",
							"id": 1306,
							"nodeType": "ImportDirective",
							"scope": 2021,
							"sourceUnit": 115,
							"src": "362:69:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1307,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 701,
										"src": "586:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$701",
											"typeString": "contract IERC20"
										}
									},
									"id": 1308,
									"nodeType": "InheritanceSpecifier",
									"src": "586:6:6"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1309,
										"name": "Domain",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 206,
										"src": "594:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Domain_$206",
											"typeString": "contract Domain"
										}
									},
									"id": 1310,
									"nodeType": "InheritanceSpecifier",
									"src": "594:6:6"
								}
							],
							"contractDependencies": [
								206,
								701
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2020,
							"linearizedBaseContracts": [
								2020,
								206,
								701
							],
							"name": "sSeaERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1313,
									"libraryName": {
										"contractScope": null,
										"id": 1311,
										"name": "BoringMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1160,
										"src": "613:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BoringMath_$1160",
											"typeString": "library BoringMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "607:29:6",
									"typeName": {
										"id": 1312,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1316,
									"libraryName": {
										"contractScope": null,
										"id": 1314,
										"name": "BoringMath128",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1206,
										"src": "647:13:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BoringMath128_$1206",
											"typeString": "library BoringMath128"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "641:32:6",
									"typeName": {
										"id": 1315,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "665:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									}
								},
								{
									"id": 1319,
									"libraryName": {
										"contractScope": null,
										"id": 1317,
										"name": "BoringERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1006,
										"src": "684:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BoringERC20_$1006",
											"typeString": "library BoringERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "678:29:6",
									"typeName": {
										"contractScope": null,
										"id": 1318,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 701,
										"src": "700:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$701",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 1322,
									"mutability": "constant",
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2020,
									"src": "713:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1320,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "713:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "73534541",
										"id": 1321,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "745:6:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2841117012d9e9c55dd89adc7ae05f95c01424e5f955a6fb4e934572c98566a7",
											"typeString": "literal_string \"sSEA\""
										},
										"value": "sSEA"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 1325,
									"mutability": "constant",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2020,
									"src": "757:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1323,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "757:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "5374616b65642053454120546f6b656e73",
										"id": 1324,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "787:19:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c2a0c5a044a5c7b41199c3034fb95ae5a840bde0a721ff9d9a6843c8bfb28b6f",
											"typeString": "literal_string \"Staked SEA Tokens\""
										},
										"value": "Staked SEA Tokens"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 1328,
									"mutability": "constant",
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2020,
									"src": "812:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1326,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "812:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 1327,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "845:2:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										641
									],
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 1331,
									"mutability": "mutable",
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1330,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "868:8:6"
									},
									"scope": 2020,
									"src": "853:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "853:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "413d9c3a",
									"id": 1334,
									"mutability": "mutable",
									"name": "LOCK_TIME",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2020,
									"src": "894:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1332,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "894:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3234",
										"id": 1333,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "921:8:6",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "24"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b2bdfa7b",
									"id": 1336,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2020,
									"src": "935:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1335,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "935:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1338,
									"mutability": "immutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2020,
									"src": "962:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$701",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 1337,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 701,
										"src": "962:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$701",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "1032:60:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1343,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "1042:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$701",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1344,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "1050:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$701",
															"typeString": "contract IERC20"
														}
													},
													"src": "1042:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$701",
														"typeString": "contract IERC20"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "1042:14:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1347,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "1066:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1348,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "1075:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1075:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1066:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "1066:19:6"
											}
										]
									},
									"documentation": null,
									"id": 1353,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1353,
												"src": "1010:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$701",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1339,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 701,
													"src": "1010:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$701",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1009:15:6"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1032:0:6"
									},
									"scope": 2020,
									"src": "998:94:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "sSeaERC20.User",
									"id": 1358,
									"members": [
										{
											"constant": false,
											"id": 1355,
											"mutability": "mutable",
											"name": "balance",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1358,
											"src": "1120:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1354,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1120:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1357,
											"mutability": "mutable",
											"name": "lockedUntil",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1358,
											"src": "1145:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1356,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1145:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "User",
									"nodeType": "StructDefinition",
									"scope": 2020,
									"src": "1098:73:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "1177:36:6",
										"text": "@notice owner > balance mapping."
									},
									"functionSelector": "a87430ba",
									"id": 1363,
									"mutability": "mutable",
									"name": "users",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2020,
									"src": "1218:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1358_storage_$",
										"typeString": "mapping(address => struct sSeaERC20.User)"
									},
									"typeName": {
										"id": 1362,
										"keyType": {
											"id": 1360,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1226:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1218:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1358_storage_$",
											"typeString": "mapping(address => struct sSeaERC20.User)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1361,
											"name": "User",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1358,
											"src": "1237:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$1358_storage_ptr",
												"typeString": "struct sSeaERC20.User"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										657
									],
									"constant": false,
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "1261:48:6",
										"text": "@notice owner > spender > allowance mapping."
									},
									"functionSelector": "dd62ed3e",
									"id": 1371,
									"mutability": "mutable",
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1370,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1369:8:6"
									},
									"scope": 2020,
									"src": "1314:73:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1369,
										"keyType": {
											"id": 1365,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1322:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1314:47:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1368,
											"keyType": {
												"id": 1366,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1341:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1333:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1367,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1352:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "1393:52:6",
										"text": "@notice owner > nonce mapping. Used in `permit`."
									},
									"functionSelector": "7ecebe00",
									"id": 1376,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2020,
									"src": "1450:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1375,
										"keyType": {
											"id": 1373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1458:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1450:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1374,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1469:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1384,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1384,
												"src": "1513:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1384,
												"src": "1536:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1384,
												"src": "1557:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1512:60:6"
									},
									"src": "1498:75:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1392,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1392,
												"src": "1602:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"indexed": true,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1392,
												"src": "1634:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1392,
												"src": "1668:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1592:96:6"
									},
									"src": "1578:111:6"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "1750:30:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1397,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1336,
													"src": "1767:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1396,
												"id": 1398,
												"nodeType": "Return",
												"src": "1760:13:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8da5cb5b",
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1709:2:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1400,
												"src": "1741:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1740:9:6"
									},
									"scope": 2020,
									"src": "1695:85:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "1807:94:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1403,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "1825:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1825:7:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1405,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "1836:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1836:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1825:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1848:34:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1817:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1817:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "1817:66:6"
											},
											{
												"id": 1411,
												"nodeType": "PlaceholderStatement",
												"src": "1893:1:6"
											}
										]
									},
									"documentation": null,
									"id": 1413,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1804:2:6"
									},
									"src": "1786:115:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1434,
										"nodeType": "Block",
										"src": "1977:162:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1421,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "2008:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2020:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1422,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2020:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2020:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2008:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1987:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:107:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "1987:107:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1431,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "2123:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1430,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "2104:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2104:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "2104:28:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f2fde38b",
									"id": 1435,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1418,
											"modifierName": {
												"argumentTypes": null,
												"id": 1417,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1413,
												"src": "1967:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1967:9:6"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1435,
												"src": "1934:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1934:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1933:18:6"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:0:6"
									},
									"scope": 2020,
									"src": "1907:232:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "2208:69:6",
										"statements": [
											{
												"assignments": [
													1441
												],
												"declarations": [
													{
														"constant": false,
														"id": 1441,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1448,
														"src": "2218:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1440,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2218:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"argumentTypes": null,
													"id": 1442,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1336,
													"src": "2237:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2218:25:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1444,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "2253:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1445,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "2262:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2253:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "2253:17:6"
											}
										]
									},
									"documentation": null,
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "2173:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2172:18:6"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2208:0:6"
									},
									"scope": 2020,
									"src": "2145:132:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "2357:60:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1458,
														"name": "LOCK_TIME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "2367:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1459,
														"name": "_LOCK_TIME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "2379:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2367:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "2367:22:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2406:4:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1457,
												"id": 1463,
												"nodeType": "Return",
												"src": "2399:11:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e3f0dfe7",
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1454,
											"modifierName": {
												"argumentTypes": null,
												"id": 1453,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1413,
												"src": "2332:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2332:9:6"
										}
									],
									"name": "setLOCK_TIME",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "_LOCK_TIME",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1465,
												"src": "2305:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2304:20:6"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1465,
												"src": "2351:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2351:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2350:6:6"
									},
									"scope": 2020,
									"src": "2283:134:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										648
									],
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "2539:43:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1473,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "2556:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1358_storage_$",
																"typeString": "mapping(address => struct sSeaERC20.User storage ref)"
															}
														},
														"id": 1475,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1474,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2562:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2556:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1358_storage",
															"typeString": "struct sSeaERC20.User storage ref"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1355,
													"src": "2556:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1477,
												"nodeType": "Return",
												"src": "2549:26:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1469,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2492:8:6"
									},
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1479,
												"src": "2442:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2441:14:6"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1479,
												"src": "2518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2517:17:6"
									},
									"scope": 2020,
									"src": "2423:159:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "2688:697:6",
										"statements": [
											{
												"assignments": [
													1489
												],
												"declarations": [
													{
														"constant": false,
														"id": 1489,
														"mutability": "mutable",
														"name": "fromUser",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1567,
														"src": "2698:20:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
															"typeString": "struct sSeaERC20.User"
														},
														"typeName": {
															"contractScope": null,
															"id": 1488,
															"name": "User",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1358,
															"src": "2698:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1358_storage_ptr",
																"typeString": "struct sSeaERC20.User"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1493,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1490,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "2721:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1358_storage_$",
															"typeString": "mapping(address => struct sSeaERC20.User storage ref)"
														}
													},
													"id": 1492,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1491,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "2727:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2721:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1358_storage",
														"typeString": "struct sSeaERC20.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2698:34:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1495,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "2750:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2750:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1497,
																	"name": "fromUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "2769:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
																		"typeString": "struct sSeaERC20.User memory"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lockedUntil",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1357,
																"src": "2769:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "2750:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4c6f636b6564",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:8:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															},
															"value": "Locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															}
														],
														"id": 1494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2742:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2742:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "2742:58:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1503,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "2814:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2824:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2814:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1560,
												"nodeType": "IfStatement",
												"src": "2810:528:6",
												"trueBody": {
													"id": 1559,
													"nodeType": "Block",
													"src": "2827:511:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1507,
																				"name": "fromUser",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1489,
																				"src": "2849:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
																					"typeString": "struct sSeaERC20.User memory"
																				}
																			},
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1355,
																			"src": "2849:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1509,
																			"name": "shares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "2869:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2849:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4c6f772062616c616e6365",
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2877:13:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3e055d6c099f84ed05c74e9911d829c0f8d5cf082b5ecade92382de53b5b0c78",
																			"typeString": "literal_string \"Low balance\""
																		},
																		"value": "Low balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3e055d6c099f84ed05c74e9911d829c0f8d5cf082b5ecade92382de53b5b0c78",
																			"typeString": "literal_string \"Low balance\""
																		}
																	],
																	"id": 1506,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "2841:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2841:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1513,
															"nodeType": "ExpressionStatement",
															"src": "2841:50:6"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1514,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "2909:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1515,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "2917:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2909:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1558,
															"nodeType": "IfStatement",
															"src": "2905:423:6",
															"trueBody": {
																"id": 1557,
																"nodeType": "Block",
																"src": "2921:407:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 1523,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1518,
																						"name": "to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1483,
																						"src": "2947:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "30",
																								"id": 1521,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2961:1:6",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 1520,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2953:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1519,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "2953:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": null,
																									"typeString": null
																								}
																							}
																						},
																						"id": 1522,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2953:10:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"src": "2947:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "5a65726f2061646472657373",
																					"id": 1524,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2965:14:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																						"typeString": "literal_string \"Zero address\""
																					},
																					"value": "Zero address"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																						"typeString": "literal_string \"Zero address\""
																					}
																				],
																				"id": 1517,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "2939:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2939:41:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1526,
																		"nodeType": "ExpressionStatement",
																		"src": "2939:41:6"
																	},
																	{
																		"assignments": [
																			1528
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1528,
																				"mutability": "mutable",
																				"name": "toUser",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1557,
																				"src": "3048:18:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
																					"typeString": "struct sSeaERC20.User"
																				},
																				"typeName": {
																					"contractScope": null,
																					"id": 1527,
																					"name": "User",
																					"nodeType": "UserDefinedTypeName",
																					"referencedDeclaration": 1358,
																					"src": "3048:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$1358_storage_ptr",
																						"typeString": "struct sSeaERC20.User"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1532,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1529,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1363,
																				"src": "3069:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1358_storage_$",
																					"typeString": "mapping(address => struct sSeaERC20.User storage ref)"
																				}
																			},
																			"id": 1531,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1530,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1483,
																				"src": "3075:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3069:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$1358_storage",
																				"typeString": "struct sSeaERC20.User storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3048:30:6"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1533,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1363,
																						"src": "3096:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1358_storage_$",
																							"typeString": "mapping(address => struct sSeaERC20.User storage ref)"
																						}
																					},
																					"id": 1535,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1534,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1481,
																						"src": "3102:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3096:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$1358_storage",
																						"typeString": "struct sSeaERC20.User storage ref"
																					}
																				},
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "balance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1355,
																				"src": "3096:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1537,
																						"name": "fromUser",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1489,
																						"src": "3118:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
																							"typeString": "struct sSeaERC20.User memory"
																						}
																					},
																					"id": 1538,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1355,
																					"src": "3118:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1539,
																							"name": "shares",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1485,
																							"src": "3137:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1540,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "to128",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1107,
																						"src": "3137:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256) pure returns (uint128)"
																						}
																					},
																					"id": 1541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3137:14:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				"src": "3118:33:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "3096:55:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"id": 1544,
																		"nodeType": "ExpressionStatement",
																		"src": "3096:55:6"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1545,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1363,
																						"src": "3193:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1358_storage_$",
																							"typeString": "mapping(address => struct sSeaERC20.User storage ref)"
																						}
																					},
																					"id": 1547,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1546,
																						"name": "to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1483,
																						"src": "3199:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3193:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$1358_storage",
																						"typeString": "struct sSeaERC20.User storage ref"
																					}
																				},
																				"id": 1548,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "balance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1355,
																				"src": "3193:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				"id": 1554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1549,
																						"name": "toUser",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1528,
																						"src": "3213:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
																							"typeString": "struct sSeaERC20.User memory"
																						}
																					},
																					"id": 1550,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1355,
																					"src": "3213:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1551,
																							"name": "shares",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1485,
																							"src": "3230:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1552,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "to128",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1107,
																						"src": "3230:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256) pure returns (uint128)"
																						}
																					},
																					"id": 1553,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3230:14:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				"src": "3213:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "3193:51:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"id": 1556,
																		"nodeType": "ExpressionStatement",
																		"src": "3193:51:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1562,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "3361:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1563,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "3367:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1564,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "3371:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1561,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1384
														],
														"referencedDeclaration": 1384,
														"src": "3352:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3352:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "EmitStatement",
												"src": "3347:31:6"
											}
										]
									},
									"documentation": null,
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1568,
												"src": "2616:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1568,
												"src": "2638:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1568,
												"src": "2658:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2606:72:6"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2688:0:6"
									},
									"scope": 2020,
									"src": "2588:797:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "3453:449:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1575,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "3467:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3467:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1577,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "3481:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3467:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1581,
												"nodeType": "IfStatement",
												"src": "3463:55:6",
												"trueBody": {
													"id": 1580,
													"nodeType": "Block",
													"src": "3487:31:6",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 1574,
															"id": 1579,
															"nodeType": "Return",
															"src": "3501:7:6"
														}
													]
												}
											},
											{
												"assignments": [
													1583
												],
												"declarations": [
													{
														"constant": false,
														"id": 1583,
														"mutability": "mutable",
														"name": "spenderAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1618,
														"src": "3527:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3527:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1590,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1584,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "3554:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1586,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1585,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "3564:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3554:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1589,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1587,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "3570:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3570:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3554:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3527:54:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1591,
														"name": "spenderAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "3687:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3712:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1593,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3712:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1592,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -27,
																"src": "3707:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3707:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3707:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3687:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1617,
												"nodeType": "IfStatement",
												"src": "3683:213:6",
												"trueBody": {
													"id": 1616,
													"nodeType": "Block",
													"src": "3726:170:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1599,
																			"name": "spenderAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "3748:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1600,
																			"name": "shares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "3768:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3748:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4c6f7720616c6c6f77616e6365",
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3776:15:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_33e1833791c298c734da2cb7d49d2332dde6d04a55356a91c633f539ca784945",
																			"typeString": "literal_string \"Low allowance\""
																		},
																		"value": "Low allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_33e1833791c298c734da2cb7d49d2332dde6d04a55356a91c633f539ca784945",
																			"typeString": "literal_string \"Low allowance\""
																		}
																	],
																	"id": 1598,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3740:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3740:52:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1604,
															"nodeType": "ExpressionStatement",
															"src": "3740:52:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1605,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "3806:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1609,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1606,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "3816:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3806:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1610,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1607,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "3822:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3822:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3806:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1611,
																		"name": "spenderAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "3836:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1612,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "3855:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3836:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3806:55:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1615,
															"nodeType": "ExpressionStatement",
															"src": "3806:55:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1619,
												"src": "3414:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1619,
												"src": "3428:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3413:30:6"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:6"
									},
									"scope": 2020,
									"src": "3391:511:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "4190:71:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1630,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4210:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4210:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "4222:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1633,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "4226:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1629,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "4200:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4200:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "4200:33:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4250:4:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1628,
												"id": 1637,
												"nodeType": "Return",
												"src": "4243:11:6"
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "3908:209:6",
										"text": "@notice Transfers `shares` tokens from `msg.sender` to `to`.\n @param to The address to move the tokens.\n @param shares of the tokens to move.\n @return (bool) Returns True if succeeded."
									},
									"functionSelector": "a9059cbb",
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "4140:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4140:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "4152:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4152:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4139:28:6"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "4184:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4184:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4183:6:6"
									},
									"scope": 2020,
									"src": "4122:139:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "4677:102:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1652,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "4701:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1653,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "4707:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1651,
														"name": "_useAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "4687:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4687:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "4687:27:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1657,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "4734:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1658,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "4740:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1659,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "4744:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1656,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "4724:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4724:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "4724:27:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4768:4:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1650,
												"id": 1663,
												"nodeType": "Return",
												"src": "4761:11:6"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "4267:289:6",
										"text": "@notice Transfers `shares` tokens from `from` to `to`. Caller needs approval for `from`.\n @param from Address to draw tokens from.\n @param to The address to move the tokens.\n @param shares The token shares to move.\n @return (bool) Returns True if succeeded."
									},
									"functionSelector": "23b872dd",
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "4592:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "4614:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "4634:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4582:72:6"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "4671:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4671:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4670:6:6"
									},
									"scope": 2020,
									"src": "4561:218:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										666
									],
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "5177:129:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1676,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "5187:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1680,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1677,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "5197:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5197:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5187:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1681,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1679,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "5209:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5187:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1682,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "5220:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5187:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1684,
												"nodeType": "ExpressionStatement",
												"src": "5187:39:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1686,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5250:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5250:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1688,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "5262:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1689,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "5271:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1685,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1392
														],
														"referencedDeclaration": 1392,
														"src": "5241:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5241:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1691,
												"nodeType": "EmitStatement",
												"src": "5236:42:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5295:4:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1675,
												"id": 1693,
												"nodeType": "Return",
												"src": "5288:11:6"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "4785:278:6",
										"text": "@notice Approves `amount` from sender to be spend by `spender`.\n @param spender Address of the party that can draw from msg.sender's account.\n @param amount The maximum collective amount that `spender` can draw.\n @return (bool) Returns True if approved."
									},
									"functionSelector": "095ea7b3",
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1672,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5141:8:6"
									},
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "5085:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5085:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "5102:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5102:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5084:33:6"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "5167:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5167:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5166:6:6"
									},
									"scope": 2020,
									"src": "5068:238:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "5425:42:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1700,
														"name": "_domainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "5442:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5442:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1699,
												"id": 1702,
												"nodeType": "Return",
												"src": "5435:25:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3644e515",
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5390:2:6"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1704,
												"src": "5416:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1697,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5416:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5415:9:6"
									},
									"scope": 2020,
									"src": "5365:102:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": true,
									"id": 1707,
									"mutability": "constant",
									"name": "PERMIT_SIGNATURE_HASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2020,
									"src": "5577:123:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1705,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5577:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 1706,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5634:66:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										700
									],
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "6287:769:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1727,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "6305:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6323:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6315:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1728,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6315:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6315:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6305:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a65726f206f776e6572",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6327:12:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec7ba83a4b7e2321624811208ca948566da4f2cd5a468b49eafb62932d564411",
																"typeString": "literal_string \"Zero owner\""
															},
															"value": "Zero owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec7ba83a4b7e2321624811208ca948566da4f2cd5a468b49eafb62932d564411",
																"typeString": "literal_string \"Zero owner\""
															}
														],
														"id": 1726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6297:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6297:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "6297:43:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1737,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "6358:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6358:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1739,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "6376:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6358:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45787069726564",
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6386:9:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															},
															"value": "Expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															}
														],
														"id": 1736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6350:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6350:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "6350:46:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1750,
																								"name": "PERMIT_SIGNATURE_HASH",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1707,
																								"src": "6561:21:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 1751,
																								"name": "owner_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1710,
																								"src": "6612:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 1752,
																								"name": "spender",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1712,
																								"src": "6648:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 1753,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1714,
																								"src": "6685:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 1757,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "6720:16:6",
																								"subExpression": {
																									"argumentTypes": null,
																									"baseExpression": {
																										"argumentTypes": null,
																										"id": 1754,
																										"name": "nonces",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1376,
																										"src": "6720:6:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																											"typeString": "mapping(address => uint256)"
																										}
																									},
																									"id": 1756,
																									"indexExpression": {
																										"argumentTypes": null,
																										"id": 1755,
																										"name": "owner_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1710,
																										"src": "6727:6:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "6720:14:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 1758,
																								"name": "deadline",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1716,
																								"src": "6766:8:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 1748,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -1,
																								"src": "6521:3:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 1749,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "6521:10:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 1759,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6521:279:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1747,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -8,
																					"src": "6486:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 1760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6486:336:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1746,
																			"name": "_getDigest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "6454:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
																				"typeString": "function (bytes32) view returns (bytes32)"
																			}
																		},
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6454:386:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1762,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1718,
																		"src": "6858:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1763,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "6877:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1764,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1722,
																		"src": "6896:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1745,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -6,
																	"src": "6427:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6427:484:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1766,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "6915:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6427:494:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c696420536967",
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6935:13:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3d8b3a27ccd545eeaefac3dc3d4b8b16453c17988021a8cb48e82e9f5d0e668",
																"typeString": "literal_string \"Invalid Sig\""
															},
															"value": "Invalid Sig"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3d8b3a27ccd545eeaefac3dc3d4b8b16453c17988021a8cb48e82e9f5d0e668",
																"typeString": "literal_string \"Invalid Sig\""
															}
														],
														"id": 1744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6406:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6406:552:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "6406:552:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1771,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "6968:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1774,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1772,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "6978:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6968:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1775,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1773,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "6986:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6968:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1776,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "6997:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6968:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "6968:34:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1780,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "7026:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1781,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "7034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "7043:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1779,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1392
														],
														"referencedDeclaration": 1392,
														"src": "7017:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7017:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "EmitStatement",
												"src": "7012:37:6"
											}
										]
									},
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "5707:382:6",
										"text": "@notice Approves `value` from `owner_` to be spend by `spender`.\n @param owner_ Address of the owner.\n @param spender The address of the spender that gets approved to draw from `owner_`.\n @param value The maximum collective amount that `spender` can draw.\n @param deadline This permit must be redeemed before this deadline (UTC timestamp in seconds)."
									},
									"functionSelector": "d505accf",
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1724,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6278:8:6"
									},
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1786,
												"src": "6119:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6119:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1786,
												"src": "6143:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6143:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1786,
												"src": "6168:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6168:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1786,
												"src": "6191:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6191:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1786,
												"src": "6217:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1717,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6217:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1786,
												"src": "6234:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1719,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1786,
												"src": "6253:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1721,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6109:159:6"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6287:0:6"
									},
									"scope": 2020,
									"src": "6094:962:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "7312:606:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1795,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "7330:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7330:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7352:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7344:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1797,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7344:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7344:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7330:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a65726f2061646472657373",
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7356:14:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																"typeString": "literal_string \"Zero address\""
															},
															"value": "Zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																"typeString": "literal_string \"Zero address\""
															}
														],
														"id": 1794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7322:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7322:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1804,
												"nodeType": "ExpressionStatement",
												"src": "7322:49:6"
											},
											{
												"assignments": [
													1806
												],
												"declarations": [
													{
														"constant": false,
														"id": 1806,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1891,
														"src": "7381:16:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
															"typeString": "struct sSeaERC20.User"
														},
														"typeName": {
															"contractScope": null,
															"id": 1805,
															"name": "User",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1358,
															"src": "7381:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1358_storage_ptr",
																"typeString": "struct sSeaERC20.User"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1811,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1807,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "7400:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1358_storage_$",
															"typeString": "mapping(address => struct sSeaERC20.User storage ref)"
														}
													},
													"id": 1810,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1808,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "7406:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7406:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7400:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1358_storage",
														"typeString": "struct sSeaERC20.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7381:36:6"
											},
											{
												"assignments": [
													1813
												],
												"declarations": [
													{
														"constant": false,
														"id": 1813,
														"mutability": "mutable",
														"name": "totalTokens",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1891,
														"src": "7428:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1812,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7428:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1821,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1818,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7474:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sSeaERC20_$2020",
																		"typeString": "contract sSeaERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_sSeaERC20_$2020",
																		"typeString": "contract sSeaERC20"
																	}
																],
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7466:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1816,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7466:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7466:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1814,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "7450:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$701",
																"typeString": "contract IERC20"
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 648,
														"src": "7450:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7450:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7428:52:6"
											},
											{
												"assignments": [
													1823
												],
												"declarations": [
													{
														"constant": false,
														"id": 1823,
														"mutability": "mutable",
														"name": "shares",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1891,
														"src": "7490:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7490:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1835,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1824,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "7507:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7522:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7507:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1828,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1789,
																		"src": "7560:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1829,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1331,
																		"src": "7569:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7560:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1831,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7559:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1832,
															"name": "totalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "7584:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7559:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7507:88:6",
													"trueExpression": {
														"argumentTypes": null,
														"id": 1827,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "7538:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7490:105:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1836,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "7605:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
																"typeString": "struct sSeaERC20.User memory"
															}
														},
														"id": 1838,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1355,
														"src": "7605:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 1839,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "7621:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "to128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1107,
															"src": "7621:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint128)"
															}
														},
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7621:14:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "7605:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "7605:30:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1844,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "7645:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
																"typeString": "struct sSeaERC20.User memory"
															}
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockedUntil",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1357,
														"src": "7645:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1847,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "7665:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "7665:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1849,
																			"name": "LOCK_TIME",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "7683:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7665:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1851,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7664:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "to128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1107,
															"src": "7664:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint128)"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7664:37:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "7645:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1855,
												"nodeType": "ExpressionStatement",
												"src": "7645:56:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1856,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "7711:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1358_storage_$",
																"typeString": "mapping(address => struct sSeaERC20.User storage ref)"
															}
														},
														"id": 1859,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1857,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7717:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7717:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7711:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1358_storage",
															"typeString": "struct sSeaERC20.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1860,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1806,
														"src": "7731:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
															"typeString": "struct sSeaERC20.User memory"
														}
													},
													"src": "7711:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1358_storage",
														"typeString": "struct sSeaERC20.User storage ref"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "7711:24:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1863,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "7745:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1864,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "7760:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7745:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "7745:21:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1870,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7800:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7800:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1874,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7820:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sSeaERC20_$2020",
																		"typeString": "contract sSeaERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_sSeaERC20_$2020",
																		"typeString": "contract sSeaERC20"
																	}
																],
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7812:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1872,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7812:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7812:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1876,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "7827:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1867,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "7777:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$701",
																"typeString": "contract IERC20"
															}
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1005,
														"src": "7777:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$701_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$701_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7777:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "7777:57:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7867:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7859:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1880,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7859:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7859:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1884,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7871:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7871:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1886,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "7883:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1879,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1384
														],
														"referencedDeclaration": 1384,
														"src": "7850:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7850:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1888,
												"nodeType": "EmitStatement",
												"src": "7845:45:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7907:4:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1793,
												"id": 1890,
												"nodeType": "Return",
												"src": "7900:11:6"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "7062:193:6",
										"text": "math is ok, because amount, totalSupply and shares is always 0 <= amount <= 100.000.000 * 10^18\n theoretically you can grow the amount/share ratio, but it's not practical and useless"
									},
									"functionSelector": "a0712d68",
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1892,
												"src": "7274:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7273:16:6"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1892,
												"src": "7306:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7306:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7305:6:6"
									},
									"scope": 2020,
									"src": "7260:658:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "8020:466:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1902,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "8038:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8052:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8044:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1903,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8044:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8038:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a65726f2061646472657373",
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8056:14:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																"typeString": "literal_string \"Zero address\""
															},
															"value": "Zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																"typeString": "literal_string \"Zero address\""
															}
														],
														"id": 1901,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8030:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8030:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1910,
												"nodeType": "ExpressionStatement",
												"src": "8030:41:6"
											},
											{
												"assignments": [
													1912
												],
												"declarations": [
													{
														"constant": false,
														"id": 1912,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1974,
														"src": "8081:16:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
															"typeString": "struct sSeaERC20.User"
														},
														"typeName": {
															"contractScope": null,
															"id": 1911,
															"name": "User",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1358,
															"src": "8081:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1358_storage_ptr",
																"typeString": "struct sSeaERC20.User"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1916,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1913,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "8100:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1358_storage_$",
															"typeString": "mapping(address => struct sSeaERC20.User storage ref)"
														}
													},
													"id": 1915,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1914,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "8106:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8100:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1358_storage",
														"typeString": "struct sSeaERC20.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8081:30:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1918,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "8129:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8129:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1920,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1912,
																	"src": "8148:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
																		"typeString": "struct sSeaERC20.User memory"
																	}
																},
																"id": 1921,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lockedUntil",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1357,
																"src": "8148:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8129:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4c6f636b6564",
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8166:8:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															},
															"value": "Locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															}
														],
														"id": 1917,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8121:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8121:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1925,
												"nodeType": "ExpressionStatement",
												"src": "8121:54:6"
											},
											{
												"assignments": [
													1927
												],
												"declarations": [
													{
														"constant": false,
														"id": 1927,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1974,
														"src": "8185:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1926,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8185:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1940,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1928,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "8203:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1933,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -28,
																					"src": "8236:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_sSeaERC20_$2020",
																						"typeString": "contract sSeaERC20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_sSeaERC20_$2020",
																						"typeString": "contract sSeaERC20"
																					}
																				],
																				"id": 1932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8228:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1931,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8228:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8228:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1929,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1338,
																			"src": "8212:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$701",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 648,
																		"src": "8212:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8212:30:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8203:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1937,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8202:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1938,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "8258:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8202:67:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8185:84:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1941,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "8279:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1358_storage_$",
																	"typeString": "mapping(address => struct sSeaERC20.User storage ref)"
																}
															},
															"id": 1943,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1942,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "8285:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8279:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1358_storage",
																"typeString": "struct sSeaERC20.User storage ref"
															}
														},
														"id": 1944,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1355,
														"src": "8279:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1948,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "8318:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "to128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1107,
																	"src": "8318:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint128)"
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8318:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1945,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1912,
																	"src": "8301:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1358_memory_ptr",
																		"typeString": "struct sSeaERC20.User memory"
																	}
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1355,
																"src": "8301:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1205,
															"src": "8301:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_uint128_$bound_to$_t_uint128_$",
																"typeString": "function (uint128,uint128) pure returns (uint128)"
															}
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8301:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "8279:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "8279:54:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1954,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "8367:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1955,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "8382:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8367:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "8367:21:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1961,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "8418:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1962,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "8422:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1958,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "8399:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$701",
																"typeString": "contract IERC20"
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "8399:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$701_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$701_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8399:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "8399:30:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1966,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "8454:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8468:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8460:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1967,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8460:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8460:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1971,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "8472:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1965,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1384
														],
														"referencedDeclaration": 1384,
														"src": "8445:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8445:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1973,
												"nodeType": "EmitStatement",
												"src": "8440:39:6"
											}
										]
									},
									"documentation": null,
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1975,
												"src": "7948:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7948:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1975,
												"src": "7970:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7970:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1975,
												"src": "7990:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7990:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7938:72:6"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8020:0:6"
									},
									"scope": 2020,
									"src": "7924:562:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "8556:67:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1985,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "8572:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8572:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1987,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "8584:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1988,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "8588:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1984,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "8566:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8566:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1990,
												"nodeType": "ExpressionStatement",
												"src": "8566:29:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8612:4:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1983,
												"id": 1992,
												"nodeType": "Return",
												"src": "8605:11:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "9dc29fac",
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "8506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "8518:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8505:28:6"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "8550:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8550:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8549:6:6"
									},
									"scope": 2020,
									"src": "8492:131:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "8741:98:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2006,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "8765:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2007,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "8771:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2005,
														"name": "_useAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "8751:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8751:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "8751:27:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2011,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "8794:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2012,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "8800:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2013,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "8804:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2010,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "8788:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8788:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2015,
												"nodeType": "ExpressionStatement",
												"src": "8788:23:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8828:4:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2004,
												"id": 2017,
												"nodeType": "Return",
												"src": "8821:11:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ec60bcf3",
									"id": 2019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2019,
												"src": "8656:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8656:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2019,
												"src": "8678:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8678:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2019,
												"src": "8698:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8698:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8646:72:6"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2019,
												"src": "8735:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2002,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8735:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8734:6:6"
									},
									"scope": 2020,
									"src": "8629:210:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2021,
							"src": "564:8277:6"
						}
					],
					"src": "31:8811:6"
				},
				"id": 6
			}
		}
	}
}
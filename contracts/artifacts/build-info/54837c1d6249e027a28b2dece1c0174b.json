{
	"id": "54837c1d6249e027a28b2dece1c0174b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/helperLogic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\n\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\";\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\";\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\";\n\ninterface IFarm {\n    function setPool(\n        uint256 _pid,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) external;\n}\n\ninterface IStabilizer {\n    function goStabilizer() external returns (bool);\n}\n\ncontract helperLogic is Initializable, OwnableUpgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n    using SafeMathUpgradeable for uint256;\n\n    //Executor\n    mapping(address => bool) public executor;\n    IERC20Upgradeable public usc;\n    IERC20Upgradeable public usdc;\n    IERC20Upgradeable public sea;\n    IERC20Upgradeable public ssea;\n    address public op;\n    address public dev;\n\n    IUniswapV2Router02 public Router;\n    IUniswapV2Factory public Factory;\n\n    uint256 public toSseaPercent;\n    uint256 public toOpPercent;\n    uint256 public toDevPercent;\n    uint256 public PRECISION;\n\n    uint256 public basePoint;\n    uint256 public pid;\n\n    IFarm public farm;\n\n    bool public autoAdjustFarm;\n    bool public openStabilizer;\n\n    address public stabilizer;\n\n    function initialize(\n        // address _mirrorseaMain,\n        IUniswapV2Factory _Factory,\n        IUniswapV2Router02 _Router,\n        IERC20Upgradeable _usc,\n        IERC20Upgradeable _usdc,\n        IERC20Upgradeable _sea,\n        IERC20Upgradeable _ssea,\n        IFarm _farm\n    )\n        external\n        // address _stabilizer\n        initializer\n    {\n        __Ownable_init();\n        // executor[_mirrorseaMain] = true;\n        Router = _Router;\n        Factory = _Factory;\n        usc = _usc;\n        sea = _sea;\n        ssea = _ssea;\n        op = msg.sender;\n        dev = msg.sender;\n        toSseaPercent = 5000;\n        toOpPercent = 2500;\n        toDevPercent = 2500;\n        PRECISION = 10000;\n        basePoint = 1000;\n        autoAdjustFarm = true;\n        openStabilizer = false;\n        farm = _farm;\n        usdc = _usdc;\n        // stabilizer = _stabilizer;\n    }\n\n    function setExecutor(address _address, bool _type)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        executor[_address] = _type;\n        return true;\n    }\n\n    modifier onlyExecutor() {\n        require(executor[msg.sender], \"executor: caller is not the executor\");\n        _;\n    }\n\n    function getAmountOut(\n        uint256 amountIn,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) internal pure returns (uint256 amountOut) {\n        uint256 amountInWithFee = amountIn.mul(9970);\n        uint256 numerator = amountInWithFee.mul(reserveOut);\n        uint256 denominator = reserveIn.mul(10000).add(amountInWithFee);\n        amountOut = numerator / denominator;\n    }\n\n    function buySea(uint256 uscAmt) internal returns (uint256) {\n        address sea_usc_lpAddress = Factory.getPair(address(sea), address(usc));\n        usc.safeTransfer(sea_usc_lpAddress, uscAmt);\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(\n            sea_usc_lpAddress\n        ).getReserves();\n        address token0 = IUniswapV2Pair(sea_usc_lpAddress).token0();\n        (uint256 reserveIn, uint256 reserveOut) = token0 == address(usc)\n            ? (reserve0, reserve1)\n            : (reserve1, reserve0);\n        uint256 amountOut = getAmountOut(uscAmt, reserveIn, reserveOut);\n        (uint256 amount0Out, uint256 amount1Out) = token0 == address(usc)\n            ? (uint256(0), amountOut)\n            : (amountOut, uint256(0));\n        IUniswapV2Pair(sea_usc_lpAddress).swap(\n            amount0Out,\n            amount1Out,\n            address(this),\n            new bytes(0)\n        );\n        return amountOut;\n    }\n\n    function jointExecution() external onlyExecutor returns (bool) {\n        uint256 uscBalanceOf = usc.balanceOf(address(this));\n        if (uscBalanceOf == 0) {\n            return true;\n        }\n        uint256 toSsea = uscBalanceOf.mul(toSseaPercent).div(PRECISION);\n        uint256 toOp = uscBalanceOf.mul(toOpPercent).div(PRECISION);\n        uint256 toDev = uscBalanceOf.sub(toSsea).sub(toOp);\n\n        uint256 seaAmt = buySea(toSsea);\n        sea.safeTransfer(address(ssea), seaAmt);\n        usc.safeTransfer(address(op), toOp);\n        usc.safeTransfer(address(dev), toDev);\n\n        if (autoAdjustFarm) {\n            adjustFarm();\n        }\n\n        if (openStabilizer) {\n            IStabilizer(stabilizer).goStabilizer();\n        }\n\n        return true;\n    }\n\n    function adjustFarm() internal {\n        address pairAddress = Factory.getPair(address(usdc), address(usc));\n        uint256 uscBalanceOf = usc.balanceOf(pairAddress);\n        uint256 usdcBalanceOf = usdc.balanceOf(pairAddress);\n        uint256 usdcDecimals = IUniswapV2Pair(address(usdc)).decimals();\n        uint256 addDecimals = 0;\n        if (usdcDecimals < 18) {\n            addDecimals = 18 - usdcDecimals;\n        }\n        uint256 r = 1e18 * (10**addDecimals);\n        uint256 uscPrice = usdcBalanceOf.mul(r).div(uscBalanceOf);\n        uint256 USDC_USC_LP_farmPoint;\n        uint256 diffPoint;\n        if (uscPrice > 1e18) {\n            //higt 1\n            diffPoint = (uscPrice.sub(1e18)).div(1e14);\n            if (diffPoint > basePoint) {\n                USDC_USC_LP_farmPoint = 0;\n            } else {\n                USDC_USC_LP_farmPoint = basePoint.sub(diffPoint);\n            }\n        } else {\n            //low 1\n            diffPoint = (1e18 - uscPrice).div(1e14);\n            USDC_USC_LP_farmPoint = basePoint.add(diffPoint);\n        }\n        farm.setPool(pid, USDC_USC_LP_farmPoint, true);\n    }\n\n    function withdrawalERC20(address _address, uint256 _amt)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt);\n        return true;\n    }\n\n    function setOp(address _address) external onlyOwner returns (bool) {\n        op = _address;\n        return true;\n    }\n\n    function setDev(address _address) external onlyOwner returns (bool) {\n        dev = _address;\n        return true;\n    }\n\n    function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {\n        toSseaPercent = _val;\n        return true;\n    }\n\n    function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {\n        toOpPercent = _val;\n        return true;\n    }\n\n    function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {\n        toDevPercent = _val;\n        return true;\n    }\n\n    function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {\n        autoAdjustFarm = _bool;\n        return true;\n    }\n\n    function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {\n        openStabilizer = _bool;\n        return true;\n    }\n\n    function setStabilizer(address _address) external onlyOwner returns (bool) {\n        stabilizer = _address;\n        return true;\n    }\n\n    function setPid(uint256 _val) external onlyOwner returns (bool) {\n        pid = _val;\n        return true;\n    }\n\n    function setUSDCAddress(IERC20Upgradeable _usdc)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        usdc = _usdc;\n        return true;\n    }\n\n    function setFarm(IFarm _farm) external onlyOwner returns (bool) {\n        farm = _farm;\n        return true;\n    }\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n    function migrator() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n    function setMigrator(address) external;\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMathUpgradeable {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal initializer {\n        __Context_init_unchained();\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal initializer {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.0;\n\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        require(_initializing || !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    function safeTransfer(\n        IERC20Upgradeable token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20Upgradeable token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal initializer {\n        __Context_init_unchained();\n    }\n\n    function __Context_init_unchained() internal initializer {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n    uint256[50] private __gap;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 124,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x2A LOG2 0xE7 0xF BLOCKHASH ORIGIN 0xEA PUSH31 0xCE6BC3109703F1FFD6DBFE4036E1B35C6D58456AFD9EC564736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "667:3358:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;667:3358:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x2A LOG2 0xE7 0xF BLOCKHASH ORIGIN 0xEA PUSH31 0xCE6BC3109703F1FFD6DBFE4036E1B35C6D58456AFD9EC564736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "667:3358:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
									".code": [
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":179:6969  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":179:6969  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x5E 0x5F BLOCKHASH 0xC9 0x4F 0xC0 SGT MSIZE PUSH24 0x103E57C2C3FF43FD9677A246F2877F83EE01753F390A6473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "179:6790:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:6790:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x5E 0x5F BLOCKHASH 0xC9 0x4F 0xC0 SGT MSIZE PUSH24 0x103E57C2C3FF43FD9677A246F2877F83EE01753F390A6473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "179:6790:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
									".code": [
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"SafeMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":467:6779  library SafeMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":467:6779  library SafeMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SGT PUSH5 0xF0CCAFFF09 PUSH17 0xBBA1DD59BC3AFE606CCC747E9960FEAAD4 0xCA 0xF7 0xD2 SWAP5 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6312:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6312:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SGT PUSH5 0xF0CCAFFF09 PUSH17 0xBBA1DD59BC3AFE606CCC747E9960FEAAD4 0xCA 0xF7 0xD2 SWAP5 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6312:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
									".code": [
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":\"SafeMathUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"migrator()": "7cd07e47",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6",
							"setMigrator(address)": "23cf3118"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/helperLogic.sol": {
				"IFarm": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "setPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setPool(uint256,uint256,bool)": "46ca6bea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"IFarm\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0xd4990a89ec4a4d0b2abc6288d787b8354f0cf2f2f35dc972b4803092880aa981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7833e7e49d0aa8e3349d1e8272a16ce1875272c2a74a2aec302adf6311b340a\",\"dweb:/ipfs/QmdibHBwfMHDMkwxcePJ8w1mGN99b5RFHPYdz6SeTd4v1j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStabilizer": {
					"abi": [
						{
							"inputs": [],
							"name": "goStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"goStabilizer()": "796c7be7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"goStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"IStabilizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0xd4990a89ec4a4d0b2abc6288d787b8354f0cf2f2f35dc972b4803092880aa981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7833e7e49d0aa8e3349d1e8272a16ce1875272c2a74a2aec302adf6311b340a\",\"dweb:/ipfs/QmdibHBwfMHDMkwxcePJ8w1mGN99b5RFHPYdz6SeTd4v1j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"helperLogic": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Factory",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Factory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "autoAdjustFarm",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "basePoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dev",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "executor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "farm",
							"outputs": [
								{
									"internalType": "contract IFarm",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IUniswapV2Factory",
									"name": "_Factory",
									"type": "address"
								},
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "_Router",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usc",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_sea",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_ssea",
									"type": "address"
								},
								{
									"internalType": "contract IFarm",
									"name": "_farm",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "jointExecution",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "op",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sea",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setAutoAdjustFarm",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setDev",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_type",
									"type": "bool"
								}
							],
							"name": "setExecutor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IFarm",
									"name": "_farm",
									"type": "address"
								}
							],
							"name": "setFarm",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setOp",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setOpenStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setPid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToDevPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToOpPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToSseaPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usdc",
									"type": "address"
								}
							],
							"name": "setUSDCAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ssea",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stabilizer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toDevPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toOpPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toSseaPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usc",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amt",
									"type": "uint256"
								}
							],
							"name": "withdrawalERC20",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/helperLogic.sol\":909:7840  contract helperLogic is Initializable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/helperLogic.sol\":909:7840  contract helperLogic is Initializable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xbd0b1f44\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xdb7f521a\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xdb7f521a\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xec1f1f69\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf1068454\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf6d7eade\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0xbd0b1f44\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc83dd231\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd10c06a2\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd477f05f\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd4f26c51\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0xa36a7526\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xa36a7526\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xaaf5bfc3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xaaf5eb68\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xaf5518c4\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb8bb97a1\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x91cca3db\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x930ed033\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9da5b0d5\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x3e413bee\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x4ecaac41\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x4ecaac41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x55c746d1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x58de5de8\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7e47961c\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x3e413bee\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4591db50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x48c7e528\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4ae6a027\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x2c535a52\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x2c535a52\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3011d3d5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x35876476\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36e9332d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3c850e1e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x16d03993\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b0d8aab\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1e1bff3f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x27c42a50\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/helperLogic.sol\":1525:1549  uint256 public basePoint */\n    tag_3:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":7439:7551  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_4:\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n    tag_5:\n      tag_51\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6613:6745  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_6:\n      tag_51\n      tag_63\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1429:1455  uint256 public toOpPercent */\n    tag_7:\n      tag_47\n      tag_67\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1132:1160  IERC20Upgradeable public usc */\n    tag_8:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n    tag_9:\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/helperLogic.sol\":1580:1597  IFarm public farm */\n    tag_10:\n      tag_69\n      tag_78\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6885:7015  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_11:\n      tag_51\n      tag_82\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1166:1195  IERC20Upgradeable public usdc */\n    tag_12:\n      tag_69\n      tag_86\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":7021:7154  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n    tag_13:\n      tag_51\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1086:1126  mapping(address => bool) public executor */\n    tag_14:\n      tag_51\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1461:1488  uint256 public toDevPercent */\n    tag_15:\n      tag_47\n      tag_99\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1201:1229  IERC20Upgradeable public sea */\n    tag_16:\n      tag_69\n      tag_102\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":7160:7293  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n    tag_17:\n      tag_51\n      tag_105\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1636:1662  bool public openStabilizer */\n    tag_18:\n      tag_51\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      tag_73\n      tag_112\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1669:1694  address public stabilizer */\n    tag_20:\n      tag_69\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_69\n      tag_118\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1293:1311  address public dev */\n    tag_22:\n      tag_69\n      tag_121\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6142:6357  function withdrawalERC20(address _address, uint256 _amt)... */\n    tag_23:\n      tag_51\n      tag_124\n      calldatasize\n      0x04\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1604:1630  bool public autoAdjustFarm */\n    tag_24:\n      tag_51\n      tag_129\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6363:6481  function setOp(address _address) external onlyOwner returns (bool) {... */\n    tag_25:\n      tag_51\n      tag_132\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":7557:7718  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n    tag_26:\n      tag_51\n      tag_136\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1494:1518  uint256 public PRECISION */\n    tag_27:\n      tag_47\n      tag_141\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6751:6879  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_28:\n      tag_51\n      tag_144\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1235:1264  IERC20Upgradeable public ssea */\n    tag_29:\n      tag_69\n      tag_148\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1395:1423  uint256 public toSseaPercent */\n    tag_30:\n      tag_47\n      tag_151\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1356:1388  IUniswapV2Factory public Factory */\n    tag_31:\n      tag_69\n      tag_154\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":4246:5012  function jointExecution() external onlyExecutor returns (bool) {... */\n    tag_32:\n      tag_51\n      tag_158\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6487:6607  function setDev(address _address) external onlyOwner returns (bool) {... */\n    tag_33:\n      tag_51\n      tag_161\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":7724:7838  function setFarm(IFarm _farm) external onlyOwner returns (bool) {... */\n    tag_34:\n      tag_51\n      tag_165\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_165:\n      tag_167\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":7299:7433  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n    tag_35:\n      tag_51\n      tag_170\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_170:\n      tag_171\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1270:1287  address public op */\n    tag_36:\n      tag_69\n      tag_174\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1555:1573  uint256 public pid */\n    tag_37:\n      tag_47\n      tag_177\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n      tag_73\n      tag_180\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1318:1350  IUniswapV2Router02 public Router */\n    tag_39:\n      tag_69\n      tag_183\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1525:1549  uint256 public basePoint */\n    tag_48:\n      sload(0x72)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":7439:7551  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_54:\n        /* \"contracts/helperLogic.sol\":7497:7501  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n      pop\n        /* \"contracts/helperLogic.sol\":7513:7516  pid */\n      0x73\n        /* \"contracts/helperLogic.sol\":7513:7523  pid = _val */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":7540:7544  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1584:1585  _ */\n    tag_193:\n        /* \"contracts/helperLogic.sol\":7439:7551  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n    tag_60:\n        /* \"contracts/helperLogic.sol\":2694:2698  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_197:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":2714:2732  executor[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":2714:2722  executor */\n      0x65\n        /* \"contracts/helperLogic.sol\":2714:2732  executor[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/helperLogic.sol\":2714:2740  executor[_address] = _type */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6613:6745  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_64:\n        /* \"contracts/helperLogic.sol\":6681:6685  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_201\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_203:\n      pop\n        /* \"contracts/helperLogic.sol\":6697:6710  toSseaPercent */\n      0x6e\n        /* \"contracts/helperLogic.sol\":6697:6717  toSseaPercent = _val */\n      sstore\n        /* \"contracts/helperLogic.sol\":6734:6738  true */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":6613:6745  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1429:1455  uint256 public toOpPercent */\n    tag_67:\n      sload(0x6f)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1132:1160  IERC20Upgradeable public usc */\n    tag_70:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x66))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_207\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_210\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_211:\n        /* \"contracts/helperLogic.sol\":2067:2083  __Ownable_init() */\n      tag_213\n        /* \"contracts/helperLogic.sol\":2067:2081  __Ownable_init */\n      tag_214\n        /* \"contracts/helperLogic.sol\":2067:2083  __Ownable_init() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/helperLogic.sol\":2137:2143  Router */\n      0x6c\n        /* \"contracts/helperLogic.sol\":2137:2153  Router = _Router */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/helperLogic.sol\":2163:2170  Factory */\n      0x6d\n        /* \"contracts/helperLogic.sol\":2163:2181  Factory = _Factory */\n      dup1\n      sload\n      dup3\n      and\n      dup12\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2191:2194  usc */\n      0x66\n        /* \"contracts/helperLogic.sol\":2191:2201  usc = _usc */\n      dup1\n      sload\n      dup3\n      and\n      dup10\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2211:2214  sea */\n      0x68\n        /* \"contracts/helperLogic.sol\":2211:2221  sea = _sea */\n      dup1\n      sload\n      dup3\n      and\n      dup8\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2231:2235  ssea */\n      0x69\n        /* \"contracts/helperLogic.sol\":2231:2243  ssea = _ssea */\n      dup1\n      sload\n      dup3\n      and\n      dup7\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2253:2255  op */\n      0x6a\n        /* \"contracts/helperLogic.sol\":2253:2268  op = msg.sender */\n      dup1\n      sload\n        /* \"contracts/helperLogic.sol\":2258:2268  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":2253:2268  op = msg.sender */\n      swap1\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/helperLogic.sol\":2278:2281  dev */\n      0x6b\n        /* \"contracts/helperLogic.sol\":2278:2294  dev = msg.sender */\n      dup1\n      sload\n      dup4\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2320:2324  5000 */\n      0x1388\n        /* \"contracts/helperLogic.sol\":2304:2317  toSseaPercent */\n      0x6e\n        /* \"contracts/helperLogic.sol\":2304:2324  toSseaPercent = 5000 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2348:2352  2500 */\n      0x09c4\n        /* \"contracts/helperLogic.sol\":2334:2345  toOpPercent */\n      0x6f\n        /* \"contracts/helperLogic.sol\":2334:2352  toOpPercent = 2500 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2362:2374  toDevPercent */\n      0x70\n        /* \"contracts/helperLogic.sol\":2362:2381  toDevPercent = 2500 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2403:2408  10000 */\n      0x2710\n        /* \"contracts/helperLogic.sol\":2391:2400  PRECISION */\n      0x71\n        /* \"contracts/helperLogic.sol\":2391:2408  PRECISION = 10000 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2430:2434  1000 */\n      0x03e8\n        /* \"contracts/helperLogic.sol\":2418:2427  basePoint */\n      0x72\n        /* \"contracts/helperLogic.sol\":2418:2434  basePoint = 1000 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2444:2458  autoAdjustFarm */\n      0x74\n        /* \"contracts/helperLogic.sol\":2444:2465  autoAdjustFarm = true */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      not(shl(0xa0, 0xff))\n      swap1\n      swap2\n      and\n      or\n      not(sub(shl(0xa0, 0xff01), 0x01))\n        /* \"contracts/helperLogic.sol\":2507:2519  farm = _farm */\n      and\n      dup6\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2529:2533  usdc */\n      0x67\n        /* \"contracts/helperLogic.sol\":2529:2541  usdc = _usdc */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap2\n      dup8\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n    tag_215:\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1580:1597  IFarm public farm */\n    tag_78:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x74))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6885:7015  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_83:\n        /* \"contracts/helperLogic.sol\":6952:6956  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_218:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_219:\n      pop\n        /* \"contracts/helperLogic.sol\":6968:6980  toDevPercent */\n      0x70\n        /* \"contracts/helperLogic.sol\":6968:6987  toDevPercent = _val */\n      sstore\n        /* \"contracts/helperLogic.sol\":7004:7008  true */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":6885:7015  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1166:1195  IERC20Upgradeable public usdc */\n    tag_86:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x67))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":7021:7154  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n    tag_91:\n        /* \"contracts/helperLogic.sol\":7088:7092  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_225:\n      pop\n        /* \"contracts/helperLogic.sol\":7104:7118  autoAdjustFarm */\n      0x74\n        /* \"contracts/helperLogic.sol\":7104:7126  autoAdjustFarm = _bool */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(shl(0xa0, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":7021:7154  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1086:1126  mapping(address => bool) public executor */\n    tag_96:\n      mstore(0x20, 0x65)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1461:1488  uint256 public toDevPercent */\n    tag_99:\n      sload(0x70)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1201:1229  IERC20Upgradeable public sea */\n    tag_102:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x68))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":7160:7293  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n    tag_106:\n        /* \"contracts/helperLogic.sol\":7227:7231  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_231:\n      pop\n        /* \"contracts/helperLogic.sol\":7243:7257  openStabilizer */\n      0x74\n        /* \"contracts/helperLogic.sol\":7243:7265  openStabilizer = _bool */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      shl(0xa8, 0x01)\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":7160:7293  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1636:1662  bool public openStabilizer */\n    tag_109:\n      sload(0x74)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2028  _transferOwnership(address(0)) */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2025:2026  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2016  _transferOwnership */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2028  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1669:1694  address public stabilizer */\n    tag_114:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x75))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1374:1380  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n    tag_242:\n      swap1\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1293:1311  address public dev */\n    tag_121:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6b))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6142:6357  function withdrawalERC20(address _address, uint256 _amt)... */\n    tag_126:\n        /* \"contracts/helperLogic.sol\":6251:6255  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_246:\n        /* \"contracts/helperLogic.sol\":6271:6329  IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt) */\n      tag_249\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":6271:6311  IERC20Upgradeable(_address).safeTransfer */\n      dup5\n      and\n        /* \"contracts/helperLogic.sol\":6312:6322  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":6324:6328  _amt */\n      dup5\n        /* \"contracts/helperLogic.sol\":6271:6311  IERC20Upgradeable(_address).safeTransfer */\n      tag_250\n        /* \"contracts/helperLogic.sol\":6271:6329  IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt) */\n      jump\t// in\n    tag_249:\n      pop\n        /* \"contracts/helperLogic.sol\":6346:6350  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":6142:6357  function withdrawalERC20(address _address, uint256 _amt)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1604:1630  bool public autoAdjustFarm */\n    tag_129:\n      sload(0x74)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6363:6481  function setOp(address _address) external onlyOwner returns (bool) {... */\n    tag_133:\n        /* \"contracts/helperLogic.sol\":6424:6428  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_254:\n      pop\n        /* \"contracts/helperLogic.sol\":6440:6442  op */\n      0x6a\n        /* \"contracts/helperLogic.sol\":6440:6453  op = _address */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":6363:6481  function setOp(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":7557:7718  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n    tag_138:\n        /* \"contracts/helperLogic.sol\":7658:7662  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_260:\n      pop\n        /* \"contracts/helperLogic.sol\":7678:7682  usdc */\n      0x67\n        /* \"contracts/helperLogic.sol\":7678:7690  usdc = _usdc */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":7557:7718  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1494:1518  uint256 public PRECISION */\n    tag_141:\n      sload(0x71)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6751:6879  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_145:\n        /* \"contracts/helperLogic.sol\":6817:6821  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_266:\n      pop\n        /* \"contracts/helperLogic.sol\":6833:6844  toOpPercent */\n      0x6f\n        /* \"contracts/helperLogic.sol\":6833:6851  toOpPercent = _val */\n      sstore\n        /* \"contracts/helperLogic.sol\":6868:6872  true */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":6751:6879  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1235:1264  IERC20Upgradeable public ssea */\n    tag_148:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x69))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1395:1423  uint256 public toSseaPercent */\n    tag_151:\n      sload(0x6e)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1356:1388  IUniswapV2Factory public Factory */\n    tag_154:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6d))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":4246:5012  function jointExecution() external onlyExecutor returns (bool) {... */\n    tag_158:\n        /* \"contracts/helperLogic.sol\":2825:2835  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":4303:4307  bool */\n      0x00\n        /* \"contracts/helperLogic.sol\":2816:2836  executor[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":2816:2824  executor */\n      0x65\n        /* \"contracts/helperLogic.sol\":2816:2836  executor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":2808:2877  require(executor[msg.sender], \"executor: caller is not the executor\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_272\n      jump\t// in\n    tag_270:\n        /* \"contracts/helperLogic.sol\":4342:4345  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":4342:4370  usc.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":4319:4339  uint256 uscBalanceOf */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4342:4345  usc */\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":4342:4355  usc.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/helperLogic.sol\":4342:4370  usc.balanceOf(address(this)) */\n      tag_274\n      swap1\n        /* \"contracts/helperLogic.sol\":4364:4368  this */\n      address\n      swap1\n        /* \"contracts/helperLogic.sol\":4342:4370  usc.balanceOf(address(this)) */\n      0x04\n      add\n      tag_116\n      jump\t// in\n    tag_274:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"contracts/helperLogic.sol\":4319:4370  uint256 uscBalanceOf = usc.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4384:4401  uscBalanceOf == 0 */\n      dup1\n        /* \"contracts/helperLogic.sol\":4380:4439  if (uscBalanceOf == 0) {... */\n      tag_280\n      jumpi\n        /* \"contracts/helperLogic.sol\":4424:4428  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":4417:4428  return true */\n      swap2\n      pop\n      pop\n      jump(tag_242)\n        /* \"contracts/helperLogic.sol\":4380:4439  if (uscBalanceOf == 0) {... */\n    tag_280:\n        /* \"contracts/helperLogic.sol\":4448:4462  uint256 toSsea */\n      0x00\n        /* \"contracts/helperLogic.sol\":4465:4511  uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      tag_281\n        /* \"contracts/helperLogic.sol\":4501:4510  PRECISION */\n      sload(0x71)\n        /* \"contracts/helperLogic.sol\":4465:4496  uscBalanceOf.mul(toSseaPercent) */\n      tag_282\n        /* \"contracts/helperLogic.sol\":4482:4495  toSseaPercent */\n      sload(0x6e)\n        /* \"contracts/helperLogic.sol\":4465:4477  uscBalanceOf */\n      dup6\n        /* \"contracts/helperLogic.sol\":4465:4481  uscBalanceOf.mul */\n      tag_283\n      swap1\n        /* \"contracts/helperLogic.sol\":4465:4496  uscBalanceOf.mul(toSseaPercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"contracts/helperLogic.sol\":4465:4500  uscBalanceOf.mul(toSseaPercent).div */\n      swap1\n      tag_284\n        /* \"contracts/helperLogic.sol\":4465:4511  uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/helperLogic.sol\":4448:4511  uint256 toSsea = uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4521:4533  uint256 toOp */\n      0x00\n        /* \"contracts/helperLogic.sol\":4536:4580  uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      tag_285\n        /* \"contracts/helperLogic.sol\":4570:4579  PRECISION */\n      sload(0x71)\n        /* \"contracts/helperLogic.sol\":4536:4565  uscBalanceOf.mul(toOpPercent) */\n      tag_282\n        /* \"contracts/helperLogic.sol\":4553:4564  toOpPercent */\n      sload(0x6f)\n        /* \"contracts/helperLogic.sol\":4536:4548  uscBalanceOf */\n      dup7\n        /* \"contracts/helperLogic.sol\":4536:4552  uscBalanceOf.mul */\n      tag_283\n      swap1\n        /* \"contracts/helperLogic.sol\":4536:4565  uscBalanceOf.mul(toOpPercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":4536:4580  uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n    tag_285:\n        /* \"contracts/helperLogic.sol\":4521:4580  uint256 toOp = uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4590:4603  uint256 toDev */\n      0x00\n        /* \"contracts/helperLogic.sol\":4606:4640  uscBalanceOf.sub(toSsea).sub(toOp) */\n      tag_287\n        /* \"contracts/helperLogic.sol\":4521:4580  uint256 toOp = uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      dup3\n        /* \"contracts/helperLogic.sol\":4606:4630  uscBalanceOf.sub(toSsea) */\n      tag_288\n        /* \"contracts/helperLogic.sol\":4606:4618  uscBalanceOf */\n      dup7\n        /* \"contracts/helperLogic.sol\":4623:4629  toSsea */\n      dup7\n        /* \"contracts/helperLogic.sol\":4606:4622  uscBalanceOf.sub */\n      tag_289\n        /* \"contracts/helperLogic.sol\":4606:4630  uscBalanceOf.sub(toSsea) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/helperLogic.sol\":4606:4634  uscBalanceOf.sub(toSsea).sub */\n      swap1\n      tag_289\n        /* \"contracts/helperLogic.sol\":4606:4640  uscBalanceOf.sub(toSsea).sub(toOp) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/helperLogic.sol\":4590:4640  uint256 toDev = uscBalanceOf.sub(toSsea).sub(toOp) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4651:4665  uint256 seaAmt */\n      0x00\n        /* \"contracts/helperLogic.sol\":4668:4682  buySea(toSsea) */\n      tag_290\n        /* \"contracts/helperLogic.sol\":4675:4681  toSsea */\n      dup5\n        /* \"contracts/helperLogic.sol\":4668:4674  buySea */\n      tag_291\n        /* \"contracts/helperLogic.sol\":4668:4682  buySea(toSsea) */\n      jump\t// in\n    tag_290:\n        /* \"contracts/helperLogic.sol\":4717:4721  ssea */\n      sload(0x69)\n        /* \"contracts/helperLogic.sol\":4692:4695  sea */\n      sload(0x68)\n        /* \"contracts/helperLogic.sol\":4651:4682  uint256 seaAmt = buySea(toSsea) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/helperLogic.sol\":4692:4731  sea.safeTransfer(address(ssea), seaAmt) */\n      tag_292\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4692:4695  sea */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"contracts/helperLogic.sol\":4717:4721  ssea */\n      and\n        /* \"contracts/helperLogic.sol\":4651:4682  uint256 seaAmt = buySea(toSsea) */\n      dup4\n        /* \"contracts/helperLogic.sol\":4692:4708  sea.safeTransfer */\n      tag_250\n        /* \"contracts/helperLogic.sol\":4692:4731  sea.safeTransfer(address(ssea), seaAmt) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/helperLogic.sol\":4766:4768  op */\n      sload(0x6a)\n        /* \"contracts/helperLogic.sol\":4741:4744  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":4741:4776  usc.safeTransfer(address(op), toOp) */\n      tag_293\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4741:4744  usc */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/helperLogic.sol\":4766:4768  op */\n      and\n        /* \"contracts/helperLogic.sol\":4771:4775  toOp */\n      dup6\n        /* \"contracts/helperLogic.sol\":4741:4757  usc.safeTransfer */\n      tag_250\n        /* \"contracts/helperLogic.sol\":4741:4776  usc.safeTransfer(address(op), toOp) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/helperLogic.sol\":4811:4814  dev */\n      sload(0x6b)\n        /* \"contracts/helperLogic.sol\":4786:4789  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":4786:4823  usc.safeTransfer(address(dev), toDev) */\n      tag_294\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4786:4789  usc */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/helperLogic.sol\":4811:4814  dev */\n      and\n        /* \"contracts/helperLogic.sol\":4817:4822  toDev */\n      dup5\n        /* \"contracts/helperLogic.sol\":4786:4802  usc.safeTransfer */\n      tag_250\n        /* \"contracts/helperLogic.sol\":4786:4823  usc.safeTransfer(address(dev), toDev) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/helperLogic.sol\":4838:4852  autoAdjustFarm */\n      sload(0x74)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":4834:4891  if (autoAdjustFarm) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"contracts/helperLogic.sol\":4868:4880  adjustFarm() */\n      tag_296\n        /* \"contracts/helperLogic.sol\":4868:4878  adjustFarm */\n      tag_297\n        /* \"contracts/helperLogic.sol\":4868:4880  adjustFarm() */\n      jump\t// in\n    tag_296:\n        /* \"contracts/helperLogic.sol\":4905:4919  openStabilizer */\n      sload(0x74)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":4901:4984  if (openStabilizer) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"contracts/helperLogic.sol\":4947:4957  stabilizer */\n      0x75\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4935:4971  IStabilizer(stabilizer).goStabilizer */\n      and\n      0x796c7be7\n        /* \"contracts/helperLogic.sol\":4935:4973  IStabilizer(stabilizer).goStabilizer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_299\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_299:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_301\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_302\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      pop\n        /* \"contracts/helperLogic.sol\":4901:4984  if (openStabilizer) {... */\n    tag_298:\n        /* \"contracts/helperLogic.sol\":5001:5005  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":4994:5005  return true */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/helperLogic.sol\":4246:5012  function jointExecution() external onlyExecutor returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6487:6607  function setDev(address _address) external onlyOwner returns (bool) {... */\n    tag_162:\n        /* \"contracts/helperLogic.sol\":6549:6553  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_305\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_306\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_307:\n      pop\n        /* \"contracts/helperLogic.sol\":6565:6568  dev */\n      0x6b\n        /* \"contracts/helperLogic.sol\":6565:6579  dev = _address */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":6487:6607  function setDev(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":7724:7838  function setFarm(IFarm _farm) external onlyOwner returns (bool) {... */\n    tag_167:\n        /* \"contracts/helperLogic.sol\":7782:7786  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_311\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_312\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_312:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_313:\n      pop\n        /* \"contracts/helperLogic.sol\":7798:7802  farm */\n      0x74\n        /* \"contracts/helperLogic.sol\":7798:7810  farm = _farm */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":7724:7838  function setFarm(IFarm _farm) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":7299:7433  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n    tag_171:\n        /* \"contracts/helperLogic.sol\":7368:7372  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_317:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_318:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_319:\n      pop\n        /* \"contracts/helperLogic.sol\":7384:7394  stabilizer */\n      0x75\n        /* \"contracts/helperLogic.sol\":7384:7405  stabilizer = _address */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":7299:7433  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1270:1287  address public op */\n    tag_174:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6a))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1555:1573  uint256 public pid */\n    tag_177:\n      sload(0x73)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_323:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_324:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_325:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2272:2294  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2264:2337  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_330\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2375  _transferOwnership(newOwner) */\n      tag_331\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2366:2374  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2365  _transferOwnership */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2375  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1318:1350  IUniswapV2Router02 public Router */\n    tag_183:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6c))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":876:972  function _msgSender() internal view virtual returns (address) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":955:965  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":876:972  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1114  function __Ownable_init() internal initializer {... */\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_334\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_334:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_210\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1071  __Context_init_unchained() */\n      tag_339\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1069  __Context_init_unchained */\n      tag_340\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1071  __Context_init_unchained() */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1107  __Ownable_init_unchained() */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1105  __Ownable_init_unchained */\n      tag_342\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1107  __Ownable_init_unchained() */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1114  function __Ownable_init() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2536:2723  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2644:2661  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2644:2661  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2609:2625  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2536:2723  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_346\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":888:893  token */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":918:941  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":943:945  to */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":947:952  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":895:953  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_347\n      swap3\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:887  _callOptionalReturn */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3462:3558  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3520:3527  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3551  a * b */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3550:3551  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3547  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3551  a * b */\n      tag_352\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3539:3551  return a * b */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3462:3558  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3847:3943  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3905:3912  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3936  a / b */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3935:3936  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3932  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3936  a / b */\n      tag_355\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3119:3215  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3177:3184  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3208  a - b */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3207:3208  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3204  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3208  a - b */\n      tag_358\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":3298:4240  function buySea(uint256 uscAmt) internal returns (uint256) {... */\n    tag_291:\n        /* \"contracts/helperLogic.sol\":3395:3402  Factory */\n      sload(0x6d)\n        /* \"contracts/helperLogic.sol\":3419:3422  sea */\n      sload(0x68)\n        /* \"contracts/helperLogic.sol\":3433:3436  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3395:3438  Factory.getPair(address(sea), address(usc)) */\n      mload(0x40)\n      shl(0xe0, 0xe6a43905)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":3348:3355  uint256 */\n      0x00\n      swap4\n      dup5\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3395:3402  Factory */\n      swap2\n      dup3\n      and\n      swap4\n        /* \"contracts/helperLogic.sol\":3395:3410  Factory.getPair */\n      0xe6a43905\n      swap4\n        /* \"contracts/helperLogic.sol\":3395:3438  Factory.getPair(address(sea), address(usc)) */\n      tag_360\n      swap4\n        /* \"contracts/helperLogic.sol\":3419:3422  sea */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"contracts/helperLogic.sol\":3433:3436  usc */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":3395:3438  Factory.getPair(address(sea), address(usc)) */\n      0x04\n      add\n      tag_361\n      jump\t// in\n    tag_360:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_362\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_362:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_364\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_364:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_365\n      swap2\n      swap1\n      tag_366\n      jump\t// in\n    tag_365:\n        /* \"contracts/helperLogic.sol\":3448:3451  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3367:3438  address sea_usc_lpAddress = Factory.getPair(address(sea), address(usc)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":3448:3491  usc.safeTransfer(sea_usc_lpAddress, uscAmt) */\n      tag_367\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3448:3451  usc */\n      and\n        /* \"contracts/helperLogic.sol\":3367:3438  address sea_usc_lpAddress = Factory.getPair(address(sea), address(usc)) */\n      dup3\n        /* \"contracts/helperLogic.sol\":3484:3490  uscAmt */\n      dup6\n        /* \"contracts/helperLogic.sol\":3448:3464  usc.safeTransfer */\n      tag_250\n        /* \"contracts/helperLogic.sol\":3448:3491  usc.safeTransfer(sea_usc_lpAddress, uscAmt) */\n      jump\t// in\n    tag_367:\n        /* \"contracts/helperLogic.sol\":3502:3518  uint256 reserve0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":3520:3536  uint256 reserve1 */\n      dup1\n        /* \"contracts/helperLogic.sol\":3570:3587  sea_usc_lpAddress */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3542:3609  IUniswapV2Pair(... */\n      and\n      0x0902f1ac\n        /* \"contracts/helperLogic.sol\":3542:3611  IUniswapV2Pair(... */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_368\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_368:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_370\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_370:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_371\n      swap2\n      swap1\n      tag_372\n      jump\t// in\n    tag_371:\n        /* \"contracts/helperLogic.sol\":3501:3611  (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(... */\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      swap2\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":3621:3635  address token0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":3653:3670  sea_usc_lpAddress */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3638:3678  IUniswapV2Pair(sea_usc_lpAddress).token0 */\n      and\n      0x0dfe1681\n        /* \"contracts/helperLogic.sol\":3638:3680  IUniswapV2Pair(sea_usc_lpAddress).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_373\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_373:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_375\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_375:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_376\n      swap2\n      swap1\n      tag_366\n      jump\t// in\n    tag_376:\n        /* \"contracts/helperLogic.sol\":3750:3753  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3621:3680  address token0 = IUniswapV2Pair(sea_usc_lpAddress).token0() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":3691:3708  uint256 reserveIn */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3732:3754  token0 == address(usc) */\n      dup1\n      dup6\n      and\n        /* \"contracts/helperLogic.sol\":3750:3753  usc */\n      swap2\n      and\n        /* \"contracts/helperLogic.sol\":3732:3754  token0 == address(usc) */\n      eq\n        /* \"contracts/helperLogic.sol\":3732:3824  token0 == address(usc)... */\n      tag_377\n      jumpi\n        /* \"contracts/helperLogic.sol\":3805:3813  reserve1 */\n      dup4\n        /* \"contracts/helperLogic.sol\":3815:3823  reserve0 */\n      dup6\n        /* \"contracts/helperLogic.sol\":3732:3824  token0 == address(usc)... */\n      jump(tag_378)\n    tag_377:\n        /* \"contracts/helperLogic.sol\":3770:3778  reserve0 */\n      dup5\n        /* \"contracts/helperLogic.sol\":3780:3788  reserve1 */\n      dup5\n        /* \"contracts/helperLogic.sol\":3732:3824  token0 == address(usc)... */\n    tag_378:\n        /* \"contracts/helperLogic.sol\":3690:3824  (uint256 reserveIn, uint256 reserveOut) = token0 == address(usc)... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":3834:3851  uint256 amountOut */\n      0x00\n        /* \"contracts/helperLogic.sol\":3854:3897  getAmountOut(uscAmt, reserveIn, reserveOut) */\n      tag_379\n        /* \"contracts/helperLogic.sol\":3867:3873  uscAmt */\n      dup10\n        /* \"contracts/helperLogic.sol\":3875:3884  reserveIn */\n      dup5\n        /* \"contracts/helperLogic.sol\":3886:3896  reserveOut */\n      dup5\n        /* \"contracts/helperLogic.sol\":3854:3866  getAmountOut */\n      tag_380\n        /* \"contracts/helperLogic.sol\":3854:3897  getAmountOut(uscAmt, reserveIn, reserveOut) */\n      jump\t// in\n    tag_379:\n        /* \"contracts/helperLogic.sol\":3968:3971  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3834:3897  uint256 amountOut = getAmountOut(uscAmt, reserveIn, reserveOut) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":3908:3926  uint256 amount0Out */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3950:3972  token0 == address(usc) */\n      dup8\n      dup2\n      and\n        /* \"contracts/helperLogic.sol\":3968:3971  usc */\n      swap2\n      and\n        /* \"contracts/helperLogic.sol\":3950:3972  token0 == address(usc) */\n      eq\n        /* \"contracts/helperLogic.sol\":3950:4048  token0 == address(usc)... */\n      tag_381\n      jumpi\n        /* \"contracts/helperLogic.sol\":4026:4035  amountOut */\n      dup3\n        /* \"contracts/helperLogic.sol\":4045:4046  0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":3950:4048  token0 == address(usc)... */\n      jump(tag_382)\n    tag_381:\n        /* \"contracts/helperLogic.sol\":3996:3997  0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":4000:4009  amountOut */\n      dup4\n        /* \"contracts/helperLogic.sol\":3950:4048  token0 == address(usc)... */\n    tag_382:\n        /* \"contracts/helperLogic.sol\":4185:4197  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/helperLogic.sol\":4195:4196  0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":4185:4197  new bytes(0) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      dup3\n      swap1\n      mstore\n      shl(0xe0, 0x022c0d9f)\n        /* \"contracts/helperLogic.sol\":4058:4207  IUniswapV2Pair(sea_usc_lpAddress).swap(... */\n      swap1\n      swap2\n      mstore\n        /* \"contracts/helperLogic.sol\":3907:4048  (uint256 amount0Out, uint256 amount1Out) = token0 == address(usc)... */\n      swap2\n      swap4\n      pop\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4058:4096  IUniswapV2Pair(sea_usc_lpAddress).swap */\n      dup11\n      and\n      swap1\n      0x022c0d9f\n      swap1\n        /* \"contracts/helperLogic.sol\":4058:4207  IUniswapV2Pair(sea_usc_lpAddress).swap(... */\n      tag_385\n      swap1\n        /* \"contracts/helperLogic.sol\":3907:4048  (uint256 amount0Out, uint256 amount1Out) = token0 == address(usc)... */\n      dup6\n      swap1\n      dup6\n      swap1\n        /* \"contracts/helperLogic.sol\":4166:4170  this */\n      address\n      swap1\n        /* \"contracts/helperLogic.sol\":4058:4207  IUniswapV2Pair(sea_usc_lpAddress).swap(... */\n      0x24\n      dup2\n      add\n      tag_386\n      jump\t// in\n    tag_385:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_387\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_387:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_389\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_389:\n      pop\n        /* \"contracts/helperLogic.sol\":4224:4233  amountOut */\n      swap5\n      swap14\n        /* \"contracts/helperLogic.sol\":3298:4240  function buySea(uint256 uscAmt) internal returns (uint256) {... */\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5018:6136  function adjustFarm() internal {... */\n    tag_297:\n        /* \"contracts/helperLogic.sol\":5081:5088  Factory */\n      sload(0x6d)\n        /* \"contracts/helperLogic.sol\":5105:5109  usdc */\n      sload(0x67)\n        /* \"contracts/helperLogic.sol\":5120:5123  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":5081:5125  Factory.getPair(address(usdc), address(usc)) */\n      mload(0x40)\n      shl(0xe0, 0xe6a43905)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":5059:5078  address pairAddress */\n      0x00\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":5081:5088  Factory */\n      swap1\n      dup2\n      and\n      swap4\n        /* \"contracts/helperLogic.sol\":5081:5096  Factory.getPair */\n      0xe6a43905\n      swap4\n        /* \"contracts/helperLogic.sol\":5081:5125  Factory.getPair(address(usdc), address(usc)) */\n      tag_391\n      swap4\n        /* \"contracts/helperLogic.sol\":5105:5109  usdc */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"contracts/helperLogic.sol\":5120:5123  usc */\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":5081:5125  Factory.getPair(address(usdc), address(usc)) */\n      0x04\n      add\n      tag_361\n      jump\t// in\n    tag_391:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_392\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_392:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_394\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_394:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_395\n      swap2\n      swap1\n      tag_366\n      jump\t// in\n    tag_395:\n        /* \"contracts/helperLogic.sol\":5158:5161  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":5158:5184  usc.balanceOf(pairAddress) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":5059:5125  address pairAddress = Factory.getPair(address(usdc), address(usc)) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/helperLogic.sol\":5135:5155  uint256 uscBalanceOf */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":5158:5161  usc */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":5158:5171  usc.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/helperLogic.sol\":5158:5184  usc.balanceOf(pairAddress) */\n      tag_396\n      swap1\n        /* \"contracts/helperLogic.sol\":5059:5125  address pairAddress = Factory.getPair(address(usdc), address(usc)) */\n      dup6\n      swap1\n        /* \"contracts/helperLogic.sol\":5158:5184  usc.balanceOf(pairAddress) */\n      0x04\n      add\n      tag_116\n      jump\t// in\n    tag_396:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_397\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_397:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_399\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_399:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_400\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_400:\n        /* \"contracts/helperLogic.sol\":5218:5222  usdc */\n      sload(0x67)\n        /* \"contracts/helperLogic.sol\":5218:5245  usdc.balanceOf(pairAddress) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":5135:5184  uint256 uscBalanceOf = usc.balanceOf(pairAddress) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/helperLogic.sol\":5194:5215  uint256 usdcBalanceOf */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":5218:5222  usdc */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":5218:5232  usdc.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/helperLogic.sol\":5218:5245  usdc.balanceOf(pairAddress) */\n      tag_401\n      swap1\n        /* \"contracts/helperLogic.sol\":5233:5244  pairAddress */\n      dup7\n      swap1\n        /* \"contracts/helperLogic.sol\":5218:5245  usdc.balanceOf(pairAddress) */\n      0x04\n      add\n      tag_116\n      jump\t// in\n    tag_401:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_402\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_402:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_404\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_404:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_405\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_405:\n        /* \"contracts/helperLogic.sol\":5194:5245  uint256 usdcBalanceOf = usdc.balanceOf(pairAddress) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5255:5275  uint256 usdcDecimals */\n      0x00\n        /* \"contracts/helperLogic.sol\":5301:5305  usdc */\n      0x67\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":5278:5316  IUniswapV2Pair(address(usdc)).decimals */\n      and\n      0x313ce567\n        /* \"contracts/helperLogic.sol\":5278:5318  IUniswapV2Pair(address(usdc)).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_406\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_406:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_408\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_408:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_409\n      swap2\n      swap1\n      tag_410\n      jump\t// in\n    tag_409:\n        /* \"contracts/helperLogic.sol\":5255:5318  uint256 usdcDecimals = IUniswapV2Pair(address(usdc)).decimals() */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5328:5347  uint256 addDecimals */\n      0x00\n        /* \"contracts/helperLogic.sol\":5380:5382  18 */\n      0x12\n        /* \"contracts/helperLogic.sol\":5365:5377  usdcDecimals */\n      dup3\n        /* \"contracts/helperLogic.sol\":5365:5382  usdcDecimals < 18 */\n      lt\n        /* \"contracts/helperLogic.sol\":5361:5440  if (usdcDecimals < 18) {... */\n      iszero\n      tag_411\n      jumpi\n        /* \"contracts/helperLogic.sol\":5412:5429  18 - usdcDecimals */\n      tag_412\n        /* \"contracts/helperLogic.sol\":5417:5429  usdcDecimals */\n      dup3\n        /* \"contracts/helperLogic.sol\":5412:5414  18 */\n      0x12\n        /* \"contracts/helperLogic.sol\":5412:5429  18 - usdcDecimals */\n      tag_358\n      jump\t// in\n    tag_412:\n        /* \"contracts/helperLogic.sol\":5398:5429  addDecimals = 18 - usdcDecimals */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5361:5440  if (usdcDecimals < 18) {... */\n    tag_411:\n        /* \"contracts/helperLogic.sol\":5449:5458  uint256 r */\n      0x00\n        /* \"contracts/helperLogic.sol\":5469:5484  10**addDecimals */\n      tag_413\n        /* \"contracts/helperLogic.sol\":5473:5484  addDecimals */\n      dup3\n        /* \"contracts/helperLogic.sol\":5469:5471  10 */\n      0x0a\n        /* \"contracts/helperLogic.sol\":5469:5484  10**addDecimals */\n      tag_414\n      jump\t// in\n    tag_413:\n        /* \"contracts/helperLogic.sol\":5461:5485  1e18 * (10**addDecimals) */\n      tag_415\n      swap1\n        /* \"contracts/helperLogic.sol\":5461:5465  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":5461:5485  1e18 * (10**addDecimals) */\n      tag_352\n      jump\t// in\n    tag_415:\n        /* \"contracts/helperLogic.sol\":5449:5485  uint256 r = 1e18 * (10**addDecimals) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5495:5511  uint256 uscPrice */\n      0x00\n        /* \"contracts/helperLogic.sol\":5514:5552  usdcBalanceOf.mul(r).div(uscBalanceOf) */\n      tag_416\n        /* \"contracts/helperLogic.sol\":5539:5551  uscBalanceOf */\n      dup7\n        /* \"contracts/helperLogic.sol\":5514:5534  usdcBalanceOf.mul(r) */\n      tag_282\n        /* \"contracts/helperLogic.sol\":5514:5527  usdcBalanceOf */\n      dup8\n        /* \"contracts/helperLogic.sol\":5449:5485  uint256 r = 1e18 * (10**addDecimals) */\n      dup6\n        /* \"contracts/helperLogic.sol\":5514:5531  usdcBalanceOf.mul */\n      tag_283\n        /* \"contracts/helperLogic.sol\":5514:5534  usdcBalanceOf.mul(r) */\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5514:5552  usdcBalanceOf.mul(r).div(uscBalanceOf) */\n    tag_416:\n        /* \"contracts/helperLogic.sol\":5495:5552  uint256 uscPrice = usdcBalanceOf.mul(r).div(uscBalanceOf) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5562:5591  uint256 USDC_USC_LP_farmPoint */\n      0x00\n        /* \"contracts/helperLogic.sol\":5601:5618  uint256 diffPoint */\n      dup1\n        /* \"contracts/helperLogic.sol\":5643:5647  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":5632:5640  uscPrice */\n      dup4\n        /* \"contracts/helperLogic.sol\":5632:5647  uscPrice > 1e18 */\n      gt\n        /* \"contracts/helperLogic.sol\":5628:6074  if (uscPrice > 1e18) {... */\n      iszero\n      tag_418\n      jumpi\n        /* \"contracts/helperLogic.sol\":5696:5726  (uscPrice.sub(1e18)).div(1e14) */\n      tag_419\n        /* \"contracts/helperLogic.sol\":5721:5725  1e14 */\n      0x5af3107a4000\n        /* \"contracts/helperLogic.sol\":5697:5715  uscPrice.sub(1e18) */\n      tag_282\n        /* \"contracts/helperLogic.sol\":5697:5705  uscPrice */\n      dup6\n        /* \"contracts/helperLogic.sol\":5710:5714  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":5697:5709  uscPrice.sub */\n      tag_289\n        /* \"contracts/helperLogic.sol\":5697:5715  uscPrice.sub(1e18) */\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5696:5726  (uscPrice.sub(1e18)).div(1e14) */\n    tag_419:\n        /* \"contracts/helperLogic.sol\":5684:5726  diffPoint = (uscPrice.sub(1e18)).div(1e14) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5756:5765  basePoint */\n      sload(0x72)\n        /* \"contracts/helperLogic.sol\":5744:5753  diffPoint */\n      dup2\n        /* \"contracts/helperLogic.sol\":5744:5765  diffPoint > basePoint */\n      gt\n        /* \"contracts/helperLogic.sol\":5740:5912  if (diffPoint > basePoint) {... */\n      iszero\n      tag_421\n      jumpi\n        /* \"contracts/helperLogic.sol\":5809:5810  0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":5785:5810  USDC_USC_LP_farmPoint = 0 */\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":5740:5912  if (diffPoint > basePoint) {... */\n      jump(tag_422)\n    tag_421:\n        /* \"contracts/helperLogic.sol\":5873:5882  basePoint */\n      sload(0x72)\n        /* \"contracts/helperLogic.sol\":5873:5897  basePoint.sub(diffPoint) */\n      tag_423\n      swap1\n        /* \"contracts/helperLogic.sol\":5887:5896  diffPoint */\n      dup3\n        /* \"contracts/helperLogic.sol\":5873:5886  basePoint.sub */\n      tag_289\n        /* \"contracts/helperLogic.sol\":5873:5897  basePoint.sub(diffPoint) */\n      jump\t// in\n    tag_423:\n        /* \"contracts/helperLogic.sol\":5849:5897  USDC_USC_LP_farmPoint = basePoint.sub(diffPoint) */\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":5740:5912  if (diffPoint > basePoint) {... */\n    tag_422:\n        /* \"contracts/helperLogic.sol\":5628:6074  if (uscPrice > 1e18) {... */\n      jump(tag_424)\n    tag_418:\n        /* \"contracts/helperLogic.sol\":5974:6001  (1e18 - uscPrice).div(1e14) */\n      tag_425\n        /* \"contracts/helperLogic.sol\":5996:6000  1e14 */\n      0x5af3107a4000\n        /* \"contracts/helperLogic.sol\":5975:5990  1e18 - uscPrice */\n      tag_282\n        /* \"contracts/helperLogic.sol\":5982:5990  uscPrice */\n      dup6\n        /* \"contracts/helperLogic.sol\":5975:5979  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":5975:5990  1e18 - uscPrice */\n      tag_358\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5974:6001  (1e18 - uscPrice).div(1e14) */\n    tag_425:\n        /* \"contracts/helperLogic.sol\":6039:6048  basePoint */\n      sload(0x72)\n        /* \"contracts/helperLogic.sol\":5962:6001  diffPoint = (1e18 - uscPrice).div(1e14) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":6039:6063  basePoint.add(diffPoint) */\n      tag_427\n      swap1\n        /* \"contracts/helperLogic.sol\":5962:6001  diffPoint = (1e18 - uscPrice).div(1e14) */\n      dup3\n        /* \"contracts/helperLogic.sol\":6039:6052  basePoint.add */\n      tag_428\n        /* \"contracts/helperLogic.sol\":6039:6063  basePoint.add(diffPoint) */\n      jump\t// in\n    tag_427:\n        /* \"contracts/helperLogic.sol\":6015:6063  USDC_USC_LP_farmPoint = basePoint.add(diffPoint) */\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":5628:6074  if (uscPrice > 1e18) {... */\n    tag_424:\n        /* \"contracts/helperLogic.sol\":6083:6087  farm */\n      sload(0x74)\n        /* \"contracts/helperLogic.sol\":6096:6099  pid */\n      sload(0x73)\n        /* \"contracts/helperLogic.sol\":6083:6129  farm.setPool(pid, USDC_USC_LP_farmPoint, true) */\n      mload(0x40)\n      shl(0xe1, 0x236535f5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":6083:6087  farm */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/helperLogic.sol\":6083:6095  farm.setPool */\n      0x46ca6bea\n      swap2\n        /* \"contracts/helperLogic.sol\":6083:6129  farm.setPool(pid, USDC_USC_LP_farmPoint, true) */\n      tag_429\n      swap2\n        /* \"contracts/helperLogic.sol\":6101:6122  USDC_USC_LP_farmPoint */\n      dup7\n      swap1\n        /* \"contracts/helperLogic.sol\":6083:6087  farm */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":6083:6129  farm.setPool(pid, USDC_USC_LP_farmPoint, true) */\n      0x04\n      add\n      tag_430\n      jump\t// in\n    tag_429:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_431\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_431:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_433\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_433:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/helperLogic.sol\":5018:6136  function adjustFarm() internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":807:871  function __Context_init_unchained() internal initializer {... */\n    tag_340:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_435\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_435:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_436\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_210\n      jump\t// in\n    tag_436:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":807:871  function __Context_init_unchained() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1120:1226  function __Ownable_init_unchained() internal initializer {... */\n    tag_342:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_442\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_442:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_443\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_210\n      jump\t// in\n    tag_443:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_445\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_445:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1219  _transferOwnership(_msgSender()) */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1218  _msgSender() */\n      tag_448\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1216  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1218  _msgSender() */\n      jump\t// in\n    tag_448:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1205  _transferOwnership */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1219  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3306:4023  function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {... */\n    tag_349:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3759  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_451\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3790:3794  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3770:3775  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3789  address(token).functionCall */\n      and\n      tag_452\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_451:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3862  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3831  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3866  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3841:4017  if (returndata.length > 0) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3940:3950  returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3929:3959  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_454\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_454:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3921:4006  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_457\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":2901:3292  function getAmountOut(... */\n    tag_380:\n        /* \"contracts/helperLogic.sol\":3033:3050  uint256 amountOut */\n      0x00\n      dup1\n        /* \"contracts/helperLogic.sol\":3088:3106  amountIn.mul(9970) */\n      tag_459\n        /* \"contracts/helperLogic.sol\":3088:3096  amountIn */\n      dup6\n        /* \"contracts/helperLogic.sol\":3101:3105  9970 */\n      0x26f2\n        /* \"contracts/helperLogic.sol\":3088:3100  amountIn.mul */\n      tag_283\n        /* \"contracts/helperLogic.sol\":3088:3106  amountIn.mul(9970) */\n      jump\t// in\n    tag_459:\n        /* \"contracts/helperLogic.sol\":3062:3106  uint256 amountInWithFee = amountIn.mul(9970) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3116:3133  uint256 numerator */\n      0x00\n        /* \"contracts/helperLogic.sol\":3136:3167  amountInWithFee.mul(reserveOut) */\n      tag_460\n        /* \"contracts/helperLogic.sol\":3062:3106  uint256 amountInWithFee = amountIn.mul(9970) */\n      dup3\n        /* \"contracts/helperLogic.sol\":3156:3166  reserveOut */\n      dup6\n        /* \"contracts/helperLogic.sol\":3136:3155  amountInWithFee.mul */\n      tag_283\n        /* \"contracts/helperLogic.sol\":3136:3167  amountInWithFee.mul(reserveOut) */\n      jump\t// in\n    tag_460:\n        /* \"contracts/helperLogic.sol\":3116:3167  uint256 numerator = amountInWithFee.mul(reserveOut) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3177:3196  uint256 denominator */\n      0x00\n        /* \"contracts/helperLogic.sol\":3199:3240  reserveIn.mul(10000).add(amountInWithFee) */\n      tag_461\n        /* \"contracts/helperLogic.sol\":3224:3239  amountInWithFee */\n      dup4\n        /* \"contracts/helperLogic.sol\":3199:3219  reserveIn.mul(10000) */\n      tag_462\n        /* \"contracts/helperLogic.sol\":3199:3208  reserveIn */\n      dup9\n        /* \"contracts/helperLogic.sol\":3213:3218  10000 */\n      0x2710\n        /* \"contracts/helperLogic.sol\":3199:3212  reserveIn.mul */\n      tag_283\n        /* \"contracts/helperLogic.sol\":3199:3219  reserveIn.mul(10000) */\n      jump\t// in\n    tag_462:\n        /* \"contracts/helperLogic.sol\":3199:3223  reserveIn.mul(10000).add */\n      swap1\n      tag_428\n        /* \"contracts/helperLogic.sol\":3199:3240  reserveIn.mul(10000).add(amountInWithFee) */\n      jump\t// in\n    tag_461:\n        /* \"contracts/helperLogic.sol\":3177:3240  uint256 denominator = reserveIn.mul(10000).add(amountInWithFee) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3262:3285  numerator / denominator */\n      tag_463\n        /* \"contracts/helperLogic.sol\":3177:3240  uint256 denominator = reserveIn.mul(10000).add(amountInWithFee) */\n      dup2\n        /* \"contracts/helperLogic.sol\":3262:3271  numerator */\n      dup4\n        /* \"contracts/helperLogic.sol\":3262:3285  numerator / denominator */\n      tag_355\n      jump\t// in\n    tag_463:\n        /* \"contracts/helperLogic.sol\":3250:3285  amountOut = numerator / denominator */\n      swap8\n        /* \"contracts/helperLogic.sol\":2901:3292  function getAmountOut(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2752:2848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2810:2817  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2836:2841  a + b */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2840:2841  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2836:2837  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2836:2841  a + b */\n      tag_466\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3525:3748  function functionCall(... */\n    tag_452:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3658:3670  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3741  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_468\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3711:3717  target */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3719:3723  data */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3725:3726  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3728:3740  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3710  functionCallWithValue */\n      tag_469\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3741  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_468:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3682:3741  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3525:3748  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4612:5111  function functionCallWithValue(... */\n    tag_469:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4777:4789  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4834:4839  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4809:4830  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4809:4839  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4801:4882  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_471\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_473\n      jump\t// in\n    tag_471:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4918  isContract(target) */\n      tag_474\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4911:4917  target */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4910  isContract */\n      tag_475\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4918  isContract(target) */\n      jump\t// in\n    tag_474:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4892:4952  require(isContract(target), \"Address: call to non-contract\") */\n      tag_476\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_478\n      jump\t// in\n    tag_476:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4964:4976  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4978:5001  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5011  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5016  target.call */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5024:5029  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5031:5035  data */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5036  target.call{value: value}(data) */\n      mload(0x40)\n      tag_479\n      swap2\n      swap1\n      tag_480\n      jump\t// in\n    tag_479:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_483\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_482)\n    tag_483:\n      0x60\n      swap2\n      pop\n    tag_482:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4963:5036  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5104  verifyCallResult(success, returndata, errorMessage) */\n      tag_463\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5070:5077  success */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5079:5089  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5091:5103  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5069  verifyCallResult */\n      tag_485\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5104  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":782:1159  function isContract(address account) internal view returns (bool) {... */\n    tag_475:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1098:1118  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1144:1152  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":782:1159  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6275:6967  function verifyCallResult(... */\n    tag_485:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6421:6433  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6449:6456  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6445:6961  if (success) {... */\n      iszero\n      tag_488\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6479:6489  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6472:6489  return returndata */\n      jump(tag_351)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6445:6961  if (success) {... */\n    tag_488:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6590:6607  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6590:6611  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6586:6951  if (returndata.length > 0) {... */\n      tag_490\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6784:6794  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6778:6795  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6844:6859  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6831:6841  returndata */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6827:6829  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6823:6842  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6816:6860  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6733:6878  {... */\n    tag_490:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6923:6935  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6916:6936  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_493\n      jump\t// in\n        /* \"#utility.yul\":14:204   */\n    tag_495:\n        /* \"#utility.yul\":95:108   */\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"#utility.yul\":137:179   */\n      dup2\n      and\n        /* \"#utility.yul\":127:180   */\n      dup2\n      eq\n        /* \"#utility.yul\":117:119   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":191:192   */\n      dup1\n        /* \"#utility.yul\":184:196   */\n      revert\n        /* \"#utility.yul\":209:468   */\n    tag_95:\n      0x00\n        /* \"#utility.yul\":321:323   */\n      0x20\n        /* \"#utility.yul\":309:318   */\n      dup3\n        /* \"#utility.yul\":300:307   */\n      dup5\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:291   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":342:348   */\n      dup1\n        /* \"#utility.yul\":334:340   */\n      dup2\n        /* \"#utility.yul\":327:349   */\n      revert\n        /* \"#utility.yul\":289:291   */\n    tag_499:\n        /* \"#utility.yul\":386:395   */\n      dup2\n        /* \"#utility.yul\":373:396   */\n      calldataload\n        /* \"#utility.yul\":405:438   */\n      tag_351\n        /* \"#utility.yul\":432:437   */\n      dup2\n        /* \"#utility.yul\":405:438   */\n      tag_501\n      jump\t// in\n        /* \"#utility.yul\":473:736   */\n    tag_366:\n      0x00\n        /* \"#utility.yul\":596:598   */\n      0x20\n        /* \"#utility.yul\":584:593   */\n      dup3\n        /* \"#utility.yul\":575:582   */\n      dup5\n        /* \"#utility.yul\":571:594   */\n      sub\n        /* \"#utility.yul\":567:599   */\n      slt\n        /* \"#utility.yul\":564:566   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":617:623   */\n      dup1\n        /* \"#utility.yul\":609:615   */\n      dup2\n        /* \"#utility.yul\":602:624   */\n      revert\n        /* \"#utility.yul\":564:566   */\n    tag_503:\n        /* \"#utility.yul\":654:663   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      mload\n        /* \"#utility.yul\":673:706   */\n      tag_351\n        /* \"#utility.yul\":700:705   */\n      dup2\n        /* \"#utility.yul\":673:706   */\n      tag_501\n      jump\t// in\n        /* \"#utility.yul\":741:1137   */\n    tag_59:\n      0x00\n      dup1\n        /* \"#utility.yul\":867:869   */\n      0x40\n        /* \"#utility.yul\":855:864   */\n      dup4\n        /* \"#utility.yul\":846:853   */\n      dup6\n        /* \"#utility.yul\":842:865   */\n      sub\n        /* \"#utility.yul\":838:870   */\n      slt\n        /* \"#utility.yul\":835:837   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":888:894   */\n      dup1\n        /* \"#utility.yul\":880:886   */\n      dup2\n        /* \"#utility.yul\":873:895   */\n      revert\n        /* \"#utility.yul\":835:837   */\n    tag_506:\n        /* \"#utility.yul\":932:941   */\n      dup3\n        /* \"#utility.yul\":919:942   */\n      calldataload\n        /* \"#utility.yul\":951:984   */\n      tag_507\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":951:984   */\n      tag_501\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":1003:1008   */\n      swap2\n      pop\n        /* \"#utility.yul\":1060:1062   */\n      0x20\n        /* \"#utility.yul\":1045:1063   */\n      dup4\n      add\n        /* \"#utility.yul\":1032:1064   */\n      calldataload\n        /* \"#utility.yul\":1073:1105   */\n      tag_508\n        /* \"#utility.yul\":1032:1064   */\n      dup2\n        /* \"#utility.yul\":1073:1105   */\n      tag_509\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":1124:1131   */\n      dup1\n        /* \"#utility.yul\":1114:1131   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":825:1137   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1142:1469   */\n    tag_125:\n      0x00\n      dup1\n        /* \"#utility.yul\":1271:1273   */\n      0x40\n        /* \"#utility.yul\":1259:1268   */\n      dup4\n        /* \"#utility.yul\":1250:1257   */\n      dup6\n        /* \"#utility.yul\":1246:1269   */\n      sub\n        /* \"#utility.yul\":1242:1274   */\n      slt\n        /* \"#utility.yul\":1239:1241   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":1292:1298   */\n      dup2\n        /* \"#utility.yul\":1284:1290   */\n      dup3\n        /* \"#utility.yul\":1277:1299   */\n      revert\n        /* \"#utility.yul\":1239:1241   */\n    tag_511:\n        /* \"#utility.yul\":1336:1345   */\n      dup3\n        /* \"#utility.yul\":1323:1346   */\n      calldataload\n        /* \"#utility.yul\":1355:1388   */\n      tag_512\n        /* \"#utility.yul\":1382:1387   */\n      dup2\n        /* \"#utility.yul\":1355:1388   */\n      tag_501\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":1407:1412   */\n      swap5\n        /* \"#utility.yul\":1459:1461   */\n      0x20\n        /* \"#utility.yul\":1444:1462   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1431:1463   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1229:1469   */\n      jump\t// out\n        /* \"#utility.yul\":1474:1727   */\n    tag_90:\n      0x00\n        /* \"#utility.yul\":1583:1585   */\n      0x20\n        /* \"#utility.yul\":1571:1580   */\n      dup3\n        /* \"#utility.yul\":1562:1569   */\n      dup5\n        /* \"#utility.yul\":1558:1581   */\n      sub\n        /* \"#utility.yul\":1554:1586   */\n      slt\n        /* \"#utility.yul\":1551:1553   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":1604:1610   */\n      dup1\n        /* \"#utility.yul\":1596:1602   */\n      dup2\n        /* \"#utility.yul\":1589:1611   */\n      revert\n        /* \"#utility.yul\":1551:1553   */\n    tag_514:\n        /* \"#utility.yul\":1648:1657   */\n      dup2\n        /* \"#utility.yul\":1635:1658   */\n      calldataload\n        /* \"#utility.yul\":1667:1697   */\n      tag_351\n        /* \"#utility.yul\":1691:1696   */\n      dup2\n        /* \"#utility.yul\":1667:1697   */\n      tag_509\n      jump\t// in\n        /* \"#utility.yul\":1732:1989   */\n    tag_303:\n      0x00\n        /* \"#utility.yul\":1852:1854   */\n      0x20\n        /* \"#utility.yul\":1840:1849   */\n      dup3\n        /* \"#utility.yul\":1831:1838   */\n      dup5\n        /* \"#utility.yul\":1827:1850   */\n      sub\n        /* \"#utility.yul\":1823:1855   */\n      slt\n        /* \"#utility.yul\":1820:1822   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":1873:1879   */\n      dup1\n        /* \"#utility.yul\":1865:1871   */\n      dup2\n        /* \"#utility.yul\":1858:1880   */\n      revert\n        /* \"#utility.yul\":1820:1822   */\n    tag_517:\n        /* \"#utility.yul\":1910:1919   */\n      dup2\n        /* \"#utility.yul\":1904:1920   */\n      mload\n        /* \"#utility.yul\":1929:1959   */\n      tag_351\n        /* \"#utility.yul\":1953:1958   */\n      dup2\n        /* \"#utility.yul\":1929:1959   */\n      tag_509\n      jump\t// in\n        /* \"#utility.yul\":2561:3849   */\n    tag_75:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2942:2945   */\n      0xe0\n        /* \"#utility.yul\":2930:2939   */\n      dup9\n        /* \"#utility.yul\":2921:2928   */\n      dup11\n        /* \"#utility.yul\":2917:2940   */\n      sub\n        /* \"#utility.yul\":2913:2946   */\n      slt\n        /* \"#utility.yul\":2910:2912   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":2964:2970   */\n      dup3\n        /* \"#utility.yul\":2956:2962   */\n      dup4\n        /* \"#utility.yul\":2949:2971   */\n      revert\n        /* \"#utility.yul\":2910:2912   */\n    tag_526:\n        /* \"#utility.yul\":3008:3017   */\n      dup8\n        /* \"#utility.yul\":2995:3018   */\n      calldataload\n        /* \"#utility.yul\":3027:3060   */\n      tag_527\n        /* \"#utility.yul\":3054:3059   */\n      dup2\n        /* \"#utility.yul\":3027:3060   */\n      tag_501\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":3079:3084   */\n      swap7\n      pop\n        /* \"#utility.yul\":3136:3138   */\n      0x20\n        /* \"#utility.yul\":3121:3139   */\n      dup9\n      add\n        /* \"#utility.yul\":3108:3140   */\n      calldataload\n        /* \"#utility.yul\":3149:3184   */\n      tag_528\n        /* \"#utility.yul\":3108:3140   */\n      dup2\n        /* \"#utility.yul\":3149:3184   */\n      tag_501\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":3203:3210   */\n      swap6\n      pop\n        /* \"#utility.yul\":3262:3264   */\n      0x40\n        /* \"#utility.yul\":3247:3265   */\n      dup9\n      add\n        /* \"#utility.yul\":3234:3266   */\n      calldataload\n        /* \"#utility.yul\":3275:3310   */\n      tag_529\n        /* \"#utility.yul\":3234:3266   */\n      dup2\n        /* \"#utility.yul\":3275:3310   */\n      tag_501\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":3329:3336   */\n      swap5\n      pop\n        /* \"#utility.yul\":3388:3390   */\n      0x60\n        /* \"#utility.yul\":3373:3391   */\n      dup9\n      add\n        /* \"#utility.yul\":3360:3392   */\n      calldataload\n        /* \"#utility.yul\":3401:3436   */\n      tag_530\n        /* \"#utility.yul\":3360:3392   */\n      dup2\n        /* \"#utility.yul\":3401:3436   */\n      tag_501\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":3455:3462   */\n      swap4\n      pop\n        /* \"#utility.yul\":3514:3517   */\n      0x80\n        /* \"#utility.yul\":3499:3518   */\n      dup9\n      add\n        /* \"#utility.yul\":3486:3519   */\n      calldataload\n        /* \"#utility.yul\":3528:3563   */\n      tag_531\n        /* \"#utility.yul\":3486:3519   */\n      dup2\n        /* \"#utility.yul\":3528:3563   */\n      tag_501\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":3582:3589   */\n      swap3\n      pop\n        /* \"#utility.yul\":3641:3644   */\n      0xa0\n        /* \"#utility.yul\":3626:3645   */\n      dup9\n      add\n        /* \"#utility.yul\":3613:3646   */\n      calldataload\n        /* \"#utility.yul\":3655:3690   */\n      tag_532\n        /* \"#utility.yul\":3613:3646   */\n      dup2\n        /* \"#utility.yul\":3655:3690   */\n      tag_501\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":3709:3716   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3771   */\n      0xc0\n        /* \"#utility.yul\":3753:3772   */\n      dup9\n      add\n        /* \"#utility.yul\":3740:3773   */\n      calldataload\n        /* \"#utility.yul\":3782:3817   */\n      tag_533\n        /* \"#utility.yul\":3740:3773   */\n      dup2\n        /* \"#utility.yul\":3782:3817   */\n      tag_501\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3836:3843   */\n      dup1\n        /* \"#utility.yul\":3826:3843   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2900:3849   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3854:4328   */\n    tag_372:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":4010:4012   */\n      0x60\n        /* \"#utility.yul\":3998:4007   */\n      dup5\n        /* \"#utility.yul\":3989:3996   */\n      dup7\n        /* \"#utility.yul\":3985:4008   */\n      sub\n        /* \"#utility.yul\":3981:4013   */\n      slt\n        /* \"#utility.yul\":3978:3980   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":4031:4037   */\n      dup3\n        /* \"#utility.yul\":4023:4029   */\n      dup4\n        /* \"#utility.yul\":4016:4038   */\n      revert\n        /* \"#utility.yul\":3978:3980   */\n    tag_535:\n        /* \"#utility.yul\":4059:4101   */\n      tag_536\n        /* \"#utility.yul\":4091:4100   */\n      dup5\n        /* \"#utility.yul\":4059:4101   */\n      tag_495\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":4049:4101   */\n      swap3\n      pop\n        /* \"#utility.yul\":4120:4171   */\n      tag_537\n        /* \"#utility.yul\":4167:4169   */\n      0x20\n        /* \"#utility.yul\":4156:4165   */\n      dup6\n        /* \"#utility.yul\":4152:4170   */\n      add\n        /* \"#utility.yul\":4120:4171   */\n      tag_495\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":4110:4171   */\n      swap2\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4203:4212   */\n      dup5\n        /* \"#utility.yul\":4199:4217   */\n      add\n        /* \"#utility.yul\":4193:4218   */\n      mload\n        /* \"#utility.yul\":4258:4268   */\n      0xffffffff\n        /* \"#utility.yul\":4251:4256   */\n      dup2\n        /* \"#utility.yul\":4247:4269   */\n      and\n        /* \"#utility.yul\":4240:4245   */\n      dup2\n        /* \"#utility.yul\":4237:4270   */\n      eq\n        /* \"#utility.yul\":4227:4229   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":4289:4295   */\n      dup2\n        /* \"#utility.yul\":4281:4287   */\n      dup3\n        /* \"#utility.yul\":4274:4296   */\n      revert\n        /* \"#utility.yul\":4227:4229   */\n    tag_538:\n        /* \"#utility.yul\":4317:4322   */\n      dup1\n        /* \"#utility.yul\":4307:4322   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3968:4328   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4333:4523   */\n    tag_53:\n      0x00\n        /* \"#utility.yul\":4445:4447   */\n      0x20\n        /* \"#utility.yul\":4433:4442   */\n      dup3\n        /* \"#utility.yul\":4424:4431   */\n      dup5\n        /* \"#utility.yul\":4420:4443   */\n      sub\n        /* \"#utility.yul\":4416:4448   */\n      slt\n        /* \"#utility.yul\":4413:4415   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":4466:4472   */\n      dup1\n        /* \"#utility.yul\":4458:4464   */\n      dup2\n        /* \"#utility.yul\":4451:4473   */\n      revert\n        /* \"#utility.yul\":4413:4415   */\n    tag_540:\n      pop\n        /* \"#utility.yul\":4494:4517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4403:4523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4528:4722   */\n    tag_279:\n      0x00\n        /* \"#utility.yul\":4651:4653   */\n      0x20\n        /* \"#utility.yul\":4639:4648   */\n      dup3\n        /* \"#utility.yul\":4630:4637   */\n      dup5\n        /* \"#utility.yul\":4626:4649   */\n      sub\n        /* \"#utility.yul\":4622:4654   */\n      slt\n        /* \"#utility.yul\":4619:4621   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":4672:4678   */\n      dup1\n        /* \"#utility.yul\":4664:4670   */\n      dup2\n        /* \"#utility.yul\":4657:4679   */\n      revert\n        /* \"#utility.yul\":4619:4621   */\n    tag_542:\n      pop\n        /* \"#utility.yul\":4700:4716   */\n      mload\n      swap2\n        /* \"#utility.yul\":4609:4722   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4727:5020   */\n    tag_410:\n      0x00\n        /* \"#utility.yul\":4848:4850   */\n      0x20\n        /* \"#utility.yul\":4836:4845   */\n      dup3\n        /* \"#utility.yul\":4827:4834   */\n      dup5\n        /* \"#utility.yul\":4823:4846   */\n      sub\n        /* \"#utility.yul\":4819:4851   */\n      slt\n        /* \"#utility.yul\":4816:4818   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":4869:4875   */\n      dup1\n        /* \"#utility.yul\":4861:4867   */\n      dup2\n        /* \"#utility.yul\":4854:4876   */\n      revert\n        /* \"#utility.yul\":4816:4818   */\n    tag_544:\n        /* \"#utility.yul\":4906:4915   */\n      dup2\n        /* \"#utility.yul\":4900:4916   */\n      mload\n        /* \"#utility.yul\":4956:4960   */\n      0xff\n        /* \"#utility.yul\":4949:4954   */\n      dup2\n        /* \"#utility.yul\":4945:4961   */\n      and\n        /* \"#utility.yul\":4938:4943   */\n      dup2\n        /* \"#utility.yul\":4935:4962   */\n      eq\n        /* \"#utility.yul\":4925:4927   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":4981:4987   */\n      dup2\n        /* \"#utility.yul\":4973:4979   */\n      dup3\n        /* \"#utility.yul\":4966:4988   */\n      revert\n        /* \"#utility.yul\":5025:5284   */\n    tag_546:\n      0x00\n        /* \"#utility.yul\":5106:5111   */\n      dup2\n        /* \"#utility.yul\":5100:5112   */\n      mload\n        /* \"#utility.yul\":5133:5139   */\n      dup1\n        /* \"#utility.yul\":5128:5131   */\n      dup5\n        /* \"#utility.yul\":5121:5140   */\n      mstore\n        /* \"#utility.yul\":5149:5212   */\n      tag_548\n        /* \"#utility.yul\":5205:5211   */\n      dup2\n        /* \"#utility.yul\":5198:5202   */\n      0x20\n        /* \"#utility.yul\":5193:5196   */\n      dup7\n        /* \"#utility.yul\":5189:5203   */\n      add\n        /* \"#utility.yul\":5182:5186   */\n      0x20\n        /* \"#utility.yul\":5175:5180   */\n      dup7\n        /* \"#utility.yul\":5171:5187   */\n      add\n        /* \"#utility.yul\":5149:5212   */\n      tag_549\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":5266:5268   */\n      0x1f\n        /* \"#utility.yul\":5245:5260   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5241:5270   */\n      and\n        /* \"#utility.yul\":5232:5271   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":5273:5277   */\n      0x20\n        /* \"#utility.yul\":5228:5278   */\n      add\n      swap3\n        /* \"#utility.yul\":5076:5284   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5289:5563   */\n    tag_480:\n      0x00\n        /* \"#utility.yul\":5456:5462   */\n      dup3\n        /* \"#utility.yul\":5450:5463   */\n      mload\n        /* \"#utility.yul\":5472:5525   */\n      tag_551\n        /* \"#utility.yul\":5518:5524   */\n      dup2\n        /* \"#utility.yul\":5513:5516   */\n      dup5\n        /* \"#utility.yul\":5506:5510   */\n      0x20\n        /* \"#utility.yul\":5498:5504   */\n      dup8\n        /* \"#utility.yul\":5494:5511   */\n      add\n        /* \"#utility.yul\":5472:5525   */\n      tag_549\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":5541:5557   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":5426:5563   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5568:5771   */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5732:5764   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5714:5765   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5702:5704   */\n      0x20\n        /* \"#utility.yul\":5687:5705   */\n      add\n      swap1\n        /* \"#utility.yul\":5669:5771   */\n      jump\t// out\n        /* \"#utility.yul\":5776:6080   */\n    tag_361:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6006:6021   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":5988:6022   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6058:6073   */\n      swap2\n      and\n        /* \"#utility.yul\":6053:6055   */\n      0x20\n        /* \"#utility.yul\":6038:6056   */\n      dup3\n      add\n        /* \"#utility.yul\":6031:6074   */\n      mstore\n        /* \"#utility.yul\":5938:5940   */\n      0x40\n        /* \"#utility.yul\":5923:5941   */\n      add\n      swap1\n        /* \"#utility.yul\":5905:6080   */\n      jump\t// out\n        /* \"#utility.yul\":6085:6359   */\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6277:6309   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":6259:6310   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6341:6343   */\n      0x20\n        /* \"#utility.yul\":6326:6344   */\n      dup3\n      add\n        /* \"#utility.yul\":6319:6353   */\n      mstore\n        /* \"#utility.yul\":6247:6249   */\n      0x40\n        /* \"#utility.yul\":6232:6250   */\n      add\n      swap1\n        /* \"#utility.yul\":6214:6359   */\n      jump\t// out\n        /* \"#utility.yul\":6364:6551   */\n    tag_56:\n        /* \"#utility.yul\":6529:6543   */\n      swap1\n      iszero\n        /* \"#utility.yul\":6522:6544   */\n      iszero\n        /* \"#utility.yul\":6504:6545   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6492:6494   */\n      0x20\n        /* \"#utility.yul\":6477:6495   */\n      add\n      swap1\n        /* \"#utility.yul\":6459:6551   */\n      jump\t// out\n        /* \"#utility.yul\":7480:7701   */\n    tag_493:\n      0x00\n        /* \"#utility.yul\":7629:7631   */\n      0x20\n        /* \"#utility.yul\":7618:7627   */\n      dup3\n        /* \"#utility.yul\":7611:7632   */\n      mstore\n        /* \"#utility.yul\":7649:7695   */\n      tag_351\n        /* \"#utility.yul\":7691:7693   */\n      0x20\n        /* \"#utility.yul\":7680:7689   */\n      dup4\n        /* \"#utility.yul\":7676:7694   */\n      add\n        /* \"#utility.yul\":7668:7674   */\n      dup5\n        /* \"#utility.yul\":7649:7695   */\n      tag_546\n      jump\t// in\n        /* \"#utility.yul\":7706:8108   */\n    tag_330:\n        /* \"#utility.yul\":7908:7910   */\n      0x20\n        /* \"#utility.yul\":7890:7911   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7947:7949   */\n      0x26\n        /* \"#utility.yul\":7927:7945   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7920:7950   */\n      mstore\n        /* \"#utility.yul\":7986:8020   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7981:7983   */\n      0x40\n        /* \"#utility.yul\":7966:7984   */\n      dup3\n      add\n        /* \"#utility.yul\":7959:8021   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8052:8054   */\n      0x60\n        /* \"#utility.yul\":8037:8055   */\n      dup3\n      add\n        /* \"#utility.yul\":8030:8066   */\n      mstore\n        /* \"#utility.yul\":8098:8101   */\n      0x80\n        /* \"#utility.yul\":8083:8102   */\n      add\n      swap1\n        /* \"#utility.yul\":7880:8108   */\n      jump\t// out\n        /* \"#utility.yul\":8113:8513   */\n    tag_272:\n        /* \"#utility.yul\":8315:8317   */\n      0x20\n        /* \"#utility.yul\":8297:8318   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8354:8356   */\n      0x24\n        /* \"#utility.yul\":8334:8352   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8327:8357   */\n      mstore\n        /* \"#utility.yul\":8393:8427   */\n      0x6578656375746f723a2063616c6c6572206973206e6f74207468652065786563\n        /* \"#utility.yul\":8388:8390   */\n      0x40\n        /* \"#utility.yul\":8373:8391   */\n      dup3\n      add\n        /* \"#utility.yul\":8366:8428   */\n      mstore\n      shl(0xe1, 0x3aba37b9)\n        /* \"#utility.yul\":8459:8461   */\n      0x60\n        /* \"#utility.yul\":8444:8462   */\n      dup3\n      add\n        /* \"#utility.yul\":8437:8471   */\n      mstore\n        /* \"#utility.yul\":8503:8506   */\n      0x80\n        /* \"#utility.yul\":8488:8507   */\n      add\n      swap1\n        /* \"#utility.yul\":8287:8513   */\n      jump\t// out\n        /* \"#utility.yul\":8518:8920   */\n    tag_473:\n        /* \"#utility.yul\":8720:8722   */\n      0x20\n        /* \"#utility.yul\":8702:8723   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8759:8761   */\n      0x26\n        /* \"#utility.yul\":8739:8757   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8732:8762   */\n      mstore\n        /* \"#utility.yul\":8798:8832   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":8793:8795   */\n      0x40\n        /* \"#utility.yul\":8778:8796   */\n      dup3\n      add\n        /* \"#utility.yul\":8771:8833   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":8864:8866   */\n      0x60\n        /* \"#utility.yul\":8849:8867   */\n      dup3\n      add\n        /* \"#utility.yul\":8842:8878   */\n      mstore\n        /* \"#utility.yul\":8910:8913   */\n      0x80\n        /* \"#utility.yul\":8895:8914   */\n      add\n      swap1\n        /* \"#utility.yul\":8692:8920   */\n      jump\t// out\n        /* \"#utility.yul\":8925:9335   */\n    tag_210:\n        /* \"#utility.yul\":9127:9129   */\n      0x20\n        /* \"#utility.yul\":9109:9130   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9166:9168   */\n      0x2e\n        /* \"#utility.yul\":9146:9164   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9139:9169   */\n      mstore\n        /* \"#utility.yul\":9205:9239   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":9200:9202   */\n      0x40\n        /* \"#utility.yul\":9185:9203   */\n      dup3\n      add\n        /* \"#utility.yul\":9178:9240   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":9271:9273   */\n      0x60\n        /* \"#utility.yul\":9256:9274   */\n      dup3\n      add\n        /* \"#utility.yul\":9249:9293   */\n      mstore\n        /* \"#utility.yul\":9325:9328   */\n      0x80\n        /* \"#utility.yul\":9310:9329   */\n      add\n      swap1\n        /* \"#utility.yul\":9099:9335   */\n      jump\t// out\n        /* \"#utility.yul\":9340:9696   */\n    tag_192:\n        /* \"#utility.yul\":9542:9544   */\n      0x20\n        /* \"#utility.yul\":9524:9545   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9561:9579   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9554:9584   */\n      mstore\n        /* \"#utility.yul\":9620:9654   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9615:9617   */\n      0x40\n        /* \"#utility.yul\":9600:9618   */\n      dup3\n      add\n        /* \"#utility.yul\":9593:9655   */\n      mstore\n        /* \"#utility.yul\":9687:9689   */\n      0x60\n        /* \"#utility.yul\":9672:9690   */\n      add\n      swap1\n        /* \"#utility.yul\":9514:9696   */\n      jump\t// out\n        /* \"#utility.yul\":9701:10054   */\n    tag_478:\n        /* \"#utility.yul\":9903:9905   */\n      0x20\n        /* \"#utility.yul\":9885:9906   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9942:9944   */\n      0x1d\n        /* \"#utility.yul\":9922:9940   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9915:9945   */\n      mstore\n        /* \"#utility.yul\":9981:10012   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":9976:9978   */\n      0x40\n        /* \"#utility.yul\":9961:9979   */\n      dup3\n      add\n        /* \"#utility.yul\":9954:10013   */\n      mstore\n        /* \"#utility.yul\":10045:10047   */\n      0x60\n        /* \"#utility.yul\":10030:10048   */\n      add\n      swap1\n        /* \"#utility.yul\":9875:10054   */\n      jump\t// out\n        /* \"#utility.yul\":10059:10465   */\n    tag_457:\n        /* \"#utility.yul\":10261:10263   */\n      0x20\n        /* \"#utility.yul\":10243:10264   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10300:10302   */\n      0x2a\n        /* \"#utility.yul\":10280:10298   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10273:10303   */\n      mstore\n        /* \"#utility.yul\":10339:10373   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":10334:10336   */\n      0x40\n        /* \"#utility.yul\":10319:10337   */\n      dup3\n      add\n        /* \"#utility.yul\":10312:10374   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":10405:10407   */\n      0x60\n        /* \"#utility.yul\":10390:10408   */\n      dup3\n      add\n        /* \"#utility.yul\":10383:10423   */\n      mstore\n        /* \"#utility.yul\":10455:10458   */\n      0x80\n        /* \"#utility.yul\":10440:10459   */\n      add\n      swap1\n        /* \"#utility.yul\":10233:10465   */\n      jump\t// out\n        /* \"#utility.yul\":10470:10647   */\n    tag_50:\n        /* \"#utility.yul\":10616:10641   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10604:10606   */\n      0x20\n        /* \"#utility.yul\":10589:10607   */\n      add\n      swap1\n        /* \"#utility.yul\":10571:10647   */\n      jump\t// out\n        /* \"#utility.yul\":10652:11112   */\n    tag_386:\n      0x00\n        /* \"#utility.yul\":10883:10889   */\n      dup6\n        /* \"#utility.yul\":10872:10881   */\n      dup3\n        /* \"#utility.yul\":10865:10890   */\n      mstore\n        /* \"#utility.yul\":10926:10932   */\n      dup5\n        /* \"#utility.yul\":10921:10923   */\n      0x20\n        /* \"#utility.yul\":10910:10919   */\n      dup4\n        /* \"#utility.yul\":10906:10924   */\n      add\n        /* \"#utility.yul\":10899:10933   */\n      mstore\n        /* \"#utility.yul\":10998:10999   */\n      0x01\n        /* \"#utility.yul\":10994:10995   */\n      dup1\n        /* \"#utility.yul\":10989:10992   */\n      0xa0\n        /* \"#utility.yul\":10985:10996   */\n      shl\n        /* \"#utility.yul\":10981:11000   */\n      sub\n        /* \"#utility.yul\":10973:10979   */\n      dup5\n        /* \"#utility.yul\":10969:11001   */\n      and\n        /* \"#utility.yul\":10964:10966   */\n      0x40\n        /* \"#utility.yul\":10953:10962   */\n      dup4\n        /* \"#utility.yul\":10949:10967   */\n      add\n        /* \"#utility.yul\":10942:11002   */\n      mstore\n        /* \"#utility.yul\":11038:11041   */\n      0x80\n        /* \"#utility.yul\":11033:11035   */\n      0x60\n        /* \"#utility.yul\":11022:11031   */\n      dup4\n        /* \"#utility.yul\":11018:11036   */\n      add\n        /* \"#utility.yul\":11011:11042   */\n      mstore\n        /* \"#utility.yul\":11059:11106   */\n      tag_571\n        /* \"#utility.yul\":11101:11104   */\n      0x80\n        /* \"#utility.yul\":11090:11099   */\n      dup4\n        /* \"#utility.yul\":11086:11105   */\n      add\n        /* \"#utility.yul\":11078:11084   */\n      dup5\n        /* \"#utility.yul\":11059:11106   */\n      tag_546\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":11051:11106   */\n      swap7\n        /* \"#utility.yul\":10855:11112   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11117:11446   */\n    tag_430:\n        /* \"#utility.yul\":11313:11338   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":11369:11371   */\n      0x20\n        /* \"#utility.yul\":11354:11372   */\n      dup4\n      add\n        /* \"#utility.yul\":11347:11381   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":11424:11438   */\n      iszero\n        /* \"#utility.yul\":11417:11439   */\n      iszero\n        /* \"#utility.yul\":11412:11414   */\n      0x40\n        /* \"#utility.yul\":11397:11415   */\n      dup3\n      add\n        /* \"#utility.yul\":11390:11440   */\n      mstore\n        /* \"#utility.yul\":11301:11303   */\n      0x60\n        /* \"#utility.yul\":11286:11304   */\n      add\n      swap1\n        /* \"#utility.yul\":11268:11446   */\n      jump\t// out\n        /* \"#utility.yul\":11451:11579   */\n    tag_466:\n      0x00\n        /* \"#utility.yul\":11522:11523   */\n      dup3\n        /* \"#utility.yul\":11518:11524   */\n      not\n        /* \"#utility.yul\":11515:11516   */\n      dup3\n        /* \"#utility.yul\":11512:11525   */\n      gt\n        /* \"#utility.yul\":11509:11511   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":11528:11546   */\n      tag_575\n      tag_576\n      jump\t// in\n    tag_575:\n      pop\n        /* \"#utility.yul\":11564:11573   */\n      add\n      swap1\n        /* \"#utility.yul\":11499:11579   */\n      jump\t// out\n        /* \"#utility.yul\":11584:11801   */\n    tag_355:\n      0x00\n        /* \"#utility.yul\":11650:11651   */\n      dup3\n        /* \"#utility.yul\":11640:11642   */\n      tag_578\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":11675:11706   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11729:11733   */\n      0x12\n        /* \"#utility.yul\":11726:11727   */\n      0x04\n        /* \"#utility.yul\":11719:11734   */\n      mstore\n        /* \"#utility.yul\":11757:11761   */\n      0x24\n        /* \"#utility.yul\":11682:11683   */\n      dup2\n        /* \"#utility.yul\":11747:11762   */\n      revert\n        /* \"#utility.yul\":11640:11642   */\n    tag_578:\n      pop\n        /* \"#utility.yul\":11786:11795   */\n      div\n      swap1\n        /* \"#utility.yul\":11630:11801   */\n      jump\t// out\n        /* \"#utility.yul\":11806:12259   */\n    tag_579:\n        /* \"#utility.yul\":11902:11908   */\n      dup1\n        /* \"#utility.yul\":11925:11930   */\n      dup3\n        /* \"#utility.yul\":11939:12253   */\n    tag_581:\n        /* \"#utility.yul\":11988:11989   */\n      0x01\n        /* \"#utility.yul\":12025:12027   */\n      dup1\n        /* \"#utility.yul\":12015:12023   */\n      dup7\n        /* \"#utility.yul\":12012:12028   */\n      gt\n        /* \"#utility.yul\":12002:12004   */\n      tag_584\n      jumpi\n        /* \"#utility.yul\":12032:12037   */\n      pop\n      jump(tag_583)\n        /* \"#utility.yul\":12002:12004   */\n    tag_584:\n        /* \"#utility.yul\":12073:12077   */\n      dup2\n        /* \"#utility.yul\":12068:12071   */\n      dup8\n        /* \"#utility.yul\":12064:12078   */\n      div\n        /* \"#utility.yul\":12058:12062   */\n      dup3\n        /* \"#utility.yul\":12055:12079   */\n      gt\n        /* \"#utility.yul\":12052:12054   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":12082:12100   */\n      tag_586\n      tag_576\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":12132:12134   */\n      dup1\n        /* \"#utility.yul\":12122:12130   */\n      dup7\n        /* \"#utility.yul\":12118:12135   */\n      and\n        /* \"#utility.yul\":12115:12117   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":12147:12163   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":12115:12117   */\n    tag_587:\n        /* \"#utility.yul\":12226:12243   */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"#utility.yul\":12186:12201   */\n      dup1\n      mul\n        /* \"#utility.yul\":11939:12253   */\n      jump(tag_581)\n    tag_583:\n        /* \"#utility.yul\":11883:12259   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12264:12403   */\n    tag_414:\n      0x00\n        /* \"#utility.yul\":12353:12397   */\n      tag_351\n      not(0x00)\n        /* \"#utility.yul\":12380:12388   */\n      dup5\n        /* \"#utility.yul\":12374:12378   */\n      dup5\n        /* \"#utility.yul\":12408:13330   */\n      0x00\n        /* \"#utility.yul\":12492:12500   */\n      dup3\n        /* \"#utility.yul\":12482:12484   */\n      tag_592\n      jumpi\n      pop\n        /* \"#utility.yul\":12533:12534   */\n      0x01\n        /* \"#utility.yul\":12547:12552   */\n      jump(tag_351)\n        /* \"#utility.yul\":12482:12484   */\n    tag_592:\n        /* \"#utility.yul\":12581:12585   */\n      dup2\n        /* \"#utility.yul\":12571:12573   */\n      tag_593\n      jumpi\n      pop\n        /* \"#utility.yul\":12618:12619   */\n      0x00\n        /* \"#utility.yul\":12632:12637   */\n      jump(tag_351)\n        /* \"#utility.yul\":12571:12573   */\n    tag_593:\n        /* \"#utility.yul\":12663:12667   */\n      dup2\n        /* \"#utility.yul\":12681:12682   */\n      0x01\n        /* \"#utility.yul\":12676:12735   */\n      dup2\n      eq\n      tag_595\n      jumpi\n        /* \"#utility.yul\":12749:12750   */\n      0x02\n        /* \"#utility.yul\":12744:12927   */\n      dup2\n      eq\n      tag_596\n      jumpi\n        /* \"#utility.yul\":12656:12927   */\n      jump(tag_594)\n        /* \"#utility.yul\":12676:12735   */\n    tag_595:\n        /* \"#utility.yul\":12706:12707   */\n      0x01\n        /* \"#utility.yul\":12697:12707   */\n      swap2\n      pop\n        /* \"#utility.yul\":12720:12725   */\n      pop\n      jump(tag_351)\n        /* \"#utility.yul\":12744:12927   */\n    tag_596:\n        /* \"#utility.yul\":12781:12784   */\n      0xff\n        /* \"#utility.yul\":12771:12779   */\n      dup5\n        /* \"#utility.yul\":12768:12785   */\n      gt\n        /* \"#utility.yul\":12765:12767   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":12788:12806   */\n      tag_598\n      tag_576\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":12844:12845   */\n      0x01\n        /* \"#utility.yul\":12834:12842   */\n      dup5\n        /* \"#utility.yul\":12830:12846   */\n      shl\n        /* \"#utility.yul\":12821:12846   */\n      swap2\n      pop\n        /* \"#utility.yul\":12872:12875   */\n      dup5\n        /* \"#utility.yul\":12865:12870   */\n      dup3\n        /* \"#utility.yul\":12862:12876   */\n      gt\n        /* \"#utility.yul\":12859:12861   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":12879:12897   */\n      tag_600\n      tag_576\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":12912:12917   */\n      pop\n      jump(tag_351)\n        /* \"#utility.yul\":12656:12927   */\n    tag_594:\n      pop\n        /* \"#utility.yul\":13011:13013   */\n      0x20\n        /* \"#utility.yul\":13001:13009   */\n      dup4\n        /* \"#utility.yul\":12998:13014   */\n      lt\n        /* \"#utility.yul\":12992:12995   */\n      0x0133\n        /* \"#utility.yul\":12986:12990   */\n      dup4\n        /* \"#utility.yul\":12983:12996   */\n      lt\n        /* \"#utility.yul\":12979:13015   */\n      and\n        /* \"#utility.yul\":12973:12975   */\n      0x4e\n        /* \"#utility.yul\":12963:12971   */\n      dup5\n        /* \"#utility.yul\":12960:12976   */\n      lt\n        /* \"#utility.yul\":12955:12957   */\n      0x0b\n        /* \"#utility.yul\":12949:12953   */\n      dup5\n        /* \"#utility.yul\":12946:12958   */\n      lt\n        /* \"#utility.yul\":12942:12977   */\n      and\n        /* \"#utility.yul\":12939:13016   */\n      or\n        /* \"#utility.yul\":12936:12938   */\n      iszero\n      tag_601\n      jumpi\n      pop\n        /* \"#utility.yul\":13048:13067   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":13083:13097   */\n      dup4\n      dup2\n      gt\n        /* \"#utility.yul\":13080:13082   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":13100:13118   */\n      tag_603\n      tag_576\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":13133:13138   */\n      jump(tag_351)\n        /* \"#utility.yul\":12936:12938   */\n    tag_601:\n        /* \"#utility.yul\":13180:13222   */\n      tag_604\n        /* \"#utility.yul\":13218:13221   */\n      dup5\n        /* \"#utility.yul\":13208:13216   */\n      dup5\n        /* \"#utility.yul\":13202:13206   */\n      dup5\n        /* \"#utility.yul\":13199:13200   */\n      0x01\n        /* \"#utility.yul\":13180:13222   */\n      tag_579\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":13255:13261   */\n      dup1\n        /* \"#utility.yul\":13250:13253   */\n      dup7\n        /* \"#utility.yul\":13246:13262   */\n      div\n        /* \"#utility.yul\":13237:13244   */\n      dup3\n        /* \"#utility.yul\":13234:13263   */\n      gt\n        /* \"#utility.yul\":13231:13233   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":13266:13284   */\n      tag_606\n      tag_576\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":13304:13324   */\n      mul\n      swap5\n        /* \"#utility.yul\":12472:13330   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13335:13503   */\n    tag_352:\n      0x00\n        /* \"#utility.yul\":13441:13442   */\n      dup2\n        /* \"#utility.yul\":13437:13438   */\n      0x00\n        /* \"#utility.yul\":13433:13439   */\n      not\n        /* \"#utility.yul\":13429:13443   */\n      div\n        /* \"#utility.yul\":13426:13427   */\n      dup4\n        /* \"#utility.yul\":13423:13444   */\n      gt\n        /* \"#utility.yul\":13418:13419   */\n      dup3\n        /* \"#utility.yul\":13411:13420   */\n      iszero\n        /* \"#utility.yul\":13404:13421   */\n      iszero\n        /* \"#utility.yul\":13400:13445   */\n      and\n        /* \"#utility.yul\":13397:13399   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":13448:13466   */\n      tag_609\n      tag_576\n      jump\t// in\n    tag_609:\n      pop\n        /* \"#utility.yul\":13488:13497   */\n      mul\n      swap1\n        /* \"#utility.yul\":13387:13503   */\n      jump\t// out\n        /* \"#utility.yul\":13508:13633   */\n    tag_358:\n      0x00\n        /* \"#utility.yul\":13576:13577   */\n      dup3\n        /* \"#utility.yul\":13573:13574   */\n      dup3\n        /* \"#utility.yul\":13570:13578   */\n      lt\n        /* \"#utility.yul\":13567:13569   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":13581:13599   */\n      tag_612\n      tag_576\n      jump\t// in\n    tag_612:\n      pop\n        /* \"#utility.yul\":13618:13627   */\n      sub\n      swap1\n        /* \"#utility.yul\":13557:13633   */\n      jump\t// out\n        /* \"#utility.yul\":13638:13896   */\n    tag_549:\n        /* \"#utility.yul\":13710:13711   */\n      0x00\n        /* \"#utility.yul\":13720:13833   */\n    tag_614:\n        /* \"#utility.yul\":13734:13740   */\n      dup4\n        /* \"#utility.yul\":13731:13732   */\n      dup2\n        /* \"#utility.yul\":13728:13741   */\n      lt\n        /* \"#utility.yul\":13720:13833   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":13810:13821   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":13804:13822   */\n      mload\n        /* \"#utility.yul\":13791:13802   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":13784:13823   */\n      mstore\n        /* \"#utility.yul\":13756:13758   */\n      0x20\n        /* \"#utility.yul\":13749:13759   */\n      add\n        /* \"#utility.yul\":13720:13833   */\n      jump(tag_614)\n    tag_616:\n        /* \"#utility.yul\":13851:13857   */\n      dup4\n        /* \"#utility.yul\":13848:13849   */\n      dup2\n        /* \"#utility.yul\":13845:13858   */\n      gt\n        /* \"#utility.yul\":13842:13844   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":13886:13887   */\n      0x00\n        /* \"#utility.yul\":13877:13883   */\n      dup5\n        /* \"#utility.yul\":13872:13875   */\n      dup5\n        /* \"#utility.yul\":13868:13884   */\n      add\n        /* \"#utility.yul\":13861:13888   */\n      mstore\n        /* \"#utility.yul\":13842:13844   */\n    tag_617:\n      pop\n        /* \"#utility.yul\":13691:13896   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13901:14028   */\n    tag_576:\n        /* \"#utility.yul\":13962:13972   */\n      0x4e487b71\n        /* \"#utility.yul\":13957:13960   */\n      0xe0\n        /* \"#utility.yul\":13953:13973   */\n      shl\n        /* \"#utility.yul\":13950:13951   */\n      0x00\n        /* \"#utility.yul\":13943:13974   */\n      mstore\n        /* \"#utility.yul\":13993:13997   */\n      0x11\n        /* \"#utility.yul\":13990:13991   */\n      0x04\n        /* \"#utility.yul\":13983:13998   */\n      mstore\n        /* \"#utility.yul\":14017:14021   */\n      0x24\n        /* \"#utility.yul\":14014:14015   */\n      0x00\n        /* \"#utility.yul\":14007:14022   */\n      revert\n        /* \"#utility.yul\":14033:14166   */\n    tag_501:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14110:14141   */\n      dup2\n      and\n        /* \"#utility.yul\":14100:14142   */\n      dup2\n      eq\n        /* \"#utility.yul\":14090:14092   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":14156:14157   */\n      0x00\n        /* \"#utility.yul\":14153:14154   */\n      dup1\n        /* \"#utility.yul\":14146:14158   */\n      revert\n        /* \"#utility.yul\":14171:14291   */\n    tag_509:\n        /* \"#utility.yul\":14259:14264   */\n      dup1\n        /* \"#utility.yul\":14252:14265   */\n      iszero\n        /* \"#utility.yul\":14245:14266   */\n      iszero\n        /* \"#utility.yul\":14238:14243   */\n      dup2\n        /* \"#utility.yul\":14235:14267   */\n      eq\n        /* \"#utility.yul\":14225:14227   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":14281:14282   */\n      0x00\n        /* \"#utility.yul\":14278:14279   */\n      dup1\n        /* \"#utility.yul\":14271:14283   */\n      revert\n\n    auxdata: 0xa264697066735822122058a69dcd652b30ebe94125dc9311d523994ad71464a9485b6c18098341c1bfa364736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611f87806100206000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80638da5cb5b11610130578063bd0b1f44116100b8578063db7f521a1161007c578063db7f521a146103f8578063ec1f1f691461040b578063f106845414610413578063f2fde38b1461041b578063f6d7eade1461042e57610227565b8063bd0b1f44146103ba578063c83dd231146103c2578063d10c06a2146103ca578063d477f05f146103d2578063d4f26c51146103e557610227565b8063a36a7526116100ff578063a36a752614610371578063aaf5bfc314610384578063aaf5eb6814610397578063af5518c41461039f578063b8bb97a1146103b257610227565b80638da5cb5b1461034657806391cca3db1461034e578063930ed033146103565780639da5b0d51461036957610227565b80633e413bee116101b35780634ecaac41116101825780634ecaac411461031357806355c746d11461031b57806358de5de81461032e578063715018a6146103365780637e47961c1461033e57610227565b80633e413bee146102dd5780634591db50146102e557806348c7e528146102f85780634ae6a0271461030b57610227565b80632c535a52116101fa5780632c535a52146102905780633011d3d51461029857806335876476146102ad57806336e9332d146102c25780633c850e1e146102ca57610227565b806316d039931461022c5780631b0d8aab1461024a5780631e1bff3f1461026a57806327c42a501461027d575b600080fd5b610234610436565b6040516102419190611d0e565b60405180910390f35b61025d610258366004611a3c565b61043c565b6040516102419190611b1c565b61025d6102783660046118be565b610494565b61025d61028b366004611a3c565b610504565b61023461054e565b6102a0610554565b6040516102419190611ad5565b6102c06102bb366004611959565b610563565b005b6102a06106a2565b61025d6102d8366004611a3c565b6106b1565b6102a06106fb565b61025d6102f3366004611921565b61070a565b61025d610306366004611886565b61076c565b610234610781565b6102a0610787565b61025d610329366004611921565b610796565b61025d6107f8565b6102c0610808565b6102a0610853565b6102a0610862565b6102a0610872565b61025d6103643660046118f6565b610881565b61025d6108df565b61025d61037f366004611886565b6108ef565b61025d610392366004611886565b610955565b6102346109bb565b61025d6103ad366004611a3c565b6109c1565b6102a0610a0b565b610234610a1a565b6102a0610a20565b61025d610a2f565b61025d6103e0366004611886565b610c73565b61025d6103f3366004611886565b610cd9565b61025d610406366004611886565b610d3f565b6102a0610da5565b610234610db4565b6102c0610429366004611886565b610dba565b6102a0610e2b565b60725481565b6000610446610e3a565b6001600160a01b0316610457610862565b6001600160a01b0316146104865760405162461bcd60e51b815260040161047d90611c58565b60405180910390fd5b50607381905560015b919050565b600061049e610e3a565b6001600160a01b03166104af610862565b6001600160a01b0316146104d55760405162461bcd60e51b815260040161047d90611c58565b506001600160a01b0382166000908152606560205260409020805482151560ff19909116179055600192915050565b600061050e610e3a565b6001600160a01b031661051f610862565b6001600160a01b0316146105455760405162461bcd60e51b815260040161047d90611c58565b50606e55600190565b606f5481565b6066546001600160a01b031681565b600054610100900460ff168061057c575060005460ff16155b6105985760405162461bcd60e51b815260040161047d90611c0a565b600054610100900460ff161580156105c3576000805460ff1961ff0019909116610100171660011790555b6105cb610e3e565b606c80546001600160a01b03199081166001600160a01b038a811691909117909255606d805482168b8416179055606680548216898416179055606880548216878416179055606980548216868416179055606a8054339083168117909155606b805483169091179055611388606e556109c4606f8190556070556127106071556103e860725560748054600160a01b60ff60a01b1990911617600161ff0160a01b031916858416179055606780549091169187169190911790558015610698576000805461ff00191690555b5050505050505050565b6074546001600160a01b031681565b60006106bb610e3a565b6001600160a01b03166106cc610862565b6001600160a01b0316146106f25760405162461bcd60e51b815260040161047d90611c58565b50607055600190565b6067546001600160a01b031681565b6000610714610e3a565b6001600160a01b0316610725610862565b6001600160a01b03161461074b5760405162461bcd60e51b815260040161047d90611c58565b5060748054821515600160a01b0260ff60a01b199091161790556001919050565b60656020526000908152604090205460ff1681565b60705481565b6068546001600160a01b031681565b60006107a0610e3a565b6001600160a01b03166107b1610862565b6001600160a01b0316146107d75760405162461bcd60e51b815260040161047d90611c58565b5060748054821515600160a81b0260ff60a81b199091161790556001919050565b607454600160a81b900460ff1681565b610810610e3a565b6001600160a01b0316610821610862565b6001600160a01b0316146108475760405162461bcd60e51b815260040161047d90611c58565b6108516000610ec2565b565b6075546001600160a01b031681565b6033546001600160a01b03165b90565b606b546001600160a01b031681565b600061088b610e3a565b6001600160a01b031661089c610862565b6001600160a01b0316146108c25760405162461bcd60e51b815260040161047d90611c58565b6108d66001600160a01b0384163384610f14565b50600192915050565b607454600160a01b900460ff1681565b60006108f9610e3a565b6001600160a01b031661090a610862565b6001600160a01b0316146109305760405162461bcd60e51b815260040161047d90611c58565b50606a80546001600160a01b0383166001600160a01b03199091161790556001919050565b600061095f610e3a565b6001600160a01b0316610970610862565b6001600160a01b0316146109965760405162461bcd60e51b815260040161047d90611c58565b50606780546001600160a01b0383166001600160a01b03199091161790556001919050565b60715481565b60006109cb610e3a565b6001600160a01b03166109dc610862565b6001600160a01b031614610a025760405162461bcd60e51b815260040161047d90611c58565b50606f55600190565b6069546001600160a01b031681565b606e5481565b606d546001600160a01b031681565b3360009081526065602052604081205460ff16610a5e5760405162461bcd60e51b815260040161047d90611b80565b6066546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a8f903090600401611ad5565b60206040518083038186803b158015610aa757600080fd5b505afa158015610abb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adf9190611a54565b905080610af057600191505061086f565b6000610b13607154610b0d606e5485610f6f90919063ffffffff16565b90610f82565b90506000610b32607154610b0d606f5486610f6f90919063ffffffff16565b90506000610b4a82610b448686610f8e565b90610f8e565b90506000610b5784610f9a565b606954606854919250610b77916001600160a01b03908116911683610f14565b606a54606654610b94916001600160a01b03918216911685610f14565b606b54606654610bb1916001600160a01b03918216911684610f14565b607454600160a01b900460ff1615610bcb57610bcb611229565b607454600160a81b900460ff1615610c6757607560009054906101000a90046001600160a01b03166001600160a01b031663796c7be76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c2d57600080fd5b505af1158015610c41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c65919061193d565b505b60019550505050505090565b6000610c7d610e3a565b6001600160a01b0316610c8e610862565b6001600160a01b031614610cb45760405162461bcd60e51b815260040161047d90611c58565b50606b80546001600160a01b0383166001600160a01b03199091161790556001919050565b6000610ce3610e3a565b6001600160a01b0316610cf4610862565b6001600160a01b031614610d1a5760405162461bcd60e51b815260040161047d90611c58565b50607480546001600160a01b0383166001600160a01b03199091161790556001919050565b6000610d49610e3a565b6001600160a01b0316610d5a610862565b6001600160a01b031614610d805760405162461bcd60e51b815260040161047d90611c58565b50607580546001600160a01b0383166001600160a01b03199091161790556001919050565b606a546001600160a01b031681565b60735481565b610dc2610e3a565b6001600160a01b0316610dd3610862565b6001600160a01b031614610df95760405162461bcd60e51b815260040161047d90611c58565b6001600160a01b038116610e1f5760405162461bcd60e51b815260040161047d90611b3a565b610e2881610ec2565b50565b606c546001600160a01b031681565b3390565b600054610100900460ff1680610e57575060005460ff16155b610e735760405162461bcd60e51b815260040161047d90611c0a565b600054610100900460ff16158015610e9e576000805460ff1961ff0019909116610100171660011790555b610ea6611598565b610eae61160b565b8015610e28576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f6a8363a9059cbb60e01b8484604051602401610f33929190611b03565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261167b565b505050565b6000610f7b8284611eb2565b9392505050565b6000610f7b8284611d7e565b6000610f7b8284611ed1565b606d5460685460665460405163e6a4390560e01b815260009384936001600160a01b039182169363e6a4390593610fdb939283169290911690600401611ae9565b60206040518083038186803b158015610ff357600080fd5b505afa158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b91906118a2565b606654909150611045906001600160a01b03168285610f14565b600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561108157600080fd5b505afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b991906119ee565b506001600160701b031691506001600160701b031691506000836001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561110b57600080fd5b505afa15801561111f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114391906118a2565b60665490915060009081906001600160a01b0380851691161461116757838561116a565b84845b91509150600061117b89848461170a565b60665490915060009081906001600160a01b038781169116146111a0578260006111a4565b6000835b6040805160008152602081019182905263022c0d9f60e01b90915291935091506001600160a01b038a169063022c0d9f906111e89085908590309060248101611d17565b600060405180830381600087803b15801561120257600080fd5b505af1158015611216573d6000803e3d6000fd5b50949d9c50505050505050505050505050565b606d5460675460665460405163e6a4390560e01b81526000936001600160a01b039081169363e6a439059361126693918316921690600401611ae9565b60206040518083038186803b15801561127e57600080fd5b505afa158015611292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b691906118a2565b6066546040516370a0823160e01b81529192506000916001600160a01b03909116906370a08231906112ec908590600401611ad5565b60206040518083038186803b15801561130457600080fd5b505afa158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133c9190611a54565b6067546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190611372908690600401611ad5565b60206040518083038186803b15801561138a57600080fd5b505afa15801561139e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c29190611a54565b90506000606760009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561141457600080fd5b505afa158015611428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144c9190611a6c565b60ff1690506000601282101561146a57611467826012611ed1565b90505b600061147782600a611de4565b61148990670de0b6b3a7640000611eb2565b9050600061149b86610b0d8785610f6f565b9050600080670de0b6b3a76400008311156114f6576114cc655af3107a4000610b0d85670de0b6b3a7640000610f8e565b90506072548111156114e157600091506114f1565b6072546114ee9082610f8e565b91505b611525565b611512655af3107a4000610b0d85670de0b6b3a7640000611ed1565b6072549091506115229082611758565b91505b60745460735460405163236535f560e11b81526001600160a01b03909216916346ca6bea9161155b918690600190600401611d4e565b600060405180830381600087803b15801561157557600080fd5b505af1158015611589573d6000803e3d6000fd5b50505050505050505050505050565b600054610100900460ff16806115b1575060005460ff16155b6115cd5760405162461bcd60e51b815260040161047d90611c0a565b600054610100900460ff16158015610eae576000805460ff1961ff0019909116610100171660011790558015610e28576000805461ff001916905550565b600054610100900460ff1680611624575060005460ff16155b6116405760405162461bcd60e51b815260040161047d90611c0a565b600054610100900460ff1615801561166b576000805460ff1961ff0019909116610100171660011790555b610eae611676610e3a565b610ec2565b60006116d0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117649092919063ffffffff16565b805190915015610f6a57808060200190518101906116ee919061193d565b610f6a5760405162461bcd60e51b815260040161047d90611cc4565b600080611719856126f2610f6f565b905060006117278285610f6f565b905060006117418361173b88612710610f6f565b90611758565b905061174d8183611d7e565b979650505050505050565b6000610f7b8284611d66565b6060611773848460008561177b565b949350505050565b60608247101561179d5760405162461bcd60e51b815260040161047d90611bc4565b6117a685611830565b6117c25760405162461bcd60e51b815260040161047d90611c8d565b600080866001600160a01b031685876040516117de9190611ab9565b60006040518083038185875af1925050503d806000811461181b576040519150601f19603f3d011682016040523d82523d6000602084013e611820565b606091505b509150915061174d828286611836565b3b151590565b60608315611845575081610f7b565b8251156118555782518084602001fd5b8160405162461bcd60e51b815260040161047d9190611b27565b80516001600160701b038116811461048f57600080fd5b600060208284031215611897578081fd5b8135610f7b81611f2e565b6000602082840312156118b3578081fd5b8151610f7b81611f2e565b600080604083850312156118d0578081fd5b82356118db81611f2e565b915060208301356118eb81611f43565b809150509250929050565b60008060408385031215611908578182fd5b823561191381611f2e565b946020939093013593505050565b600060208284031215611932578081fd5b8135610f7b81611f43565b60006020828403121561194e578081fd5b8151610f7b81611f43565b600080600080600080600060e0888a031215611973578283fd5b873561197e81611f2e565b9650602088013561198e81611f2e565b9550604088013561199e81611f2e565b945060608801356119ae81611f2e565b935060808801356119be81611f2e565b925060a08801356119ce81611f2e565b915060c08801356119de81611f2e565b8091505092959891949750929550565b600080600060608486031215611a02578283fd5b611a0b8461186f565b9250611a196020850161186f565b9150604084015163ffffffff81168114611a31578182fd5b809150509250925092565b600060208284031215611a4d578081fd5b5035919050565b600060208284031215611a65578081fd5b5051919050565b600060208284031215611a7d578081fd5b815160ff81168114610f7b578182fd5b60008151808452611aa5816020860160208601611ee8565b601f01601f19169290920160200192915050565b60008251611acb818460208701611ee8565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b600060208252610f7b6020830184611a8d565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526024908201527f6578656375746f723a2063616c6c6572206973206e6f742074686520657865636040820152633aba37b960e11b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b600085825284602083015260018060a01b038416604083015260806060830152611d446080830184611a8d565b9695505050505050565b92835260208301919091521515604082015260600190565b60008219821115611d7957611d79611f18565b500190565b600082611d9957634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611611db05750611ddb565b818704821115611dc257611dc2611f18565b80861615611dcf57918102915b9490941c938002611da1565b94509492505050565b6000610f7b6000198484600082611dfd57506001610f7b565b81611e0a57506000610f7b565b8160018114611e205760028114611e2a57611e57565b6001915050610f7b565b60ff841115611e3b57611e3b611f18565b6001841b915084821115611e5157611e51611f18565b50610f7b565b5060208310610133831016604e8410600b8410161715611e8a575081810a83811115611e8557611e85611f18565b610f7b565b611e978484846001611d9e565b808604821115611ea957611ea9611f18565b02949350505050565b6000816000190483118215151615611ecc57611ecc611f18565b500290565b600082821015611ee357611ee3611f18565b500390565b60005b83811015611f03578181015183820152602001611eeb565b83811115611f12576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610e2857600080fd5b8015158114610e2857600080fdfea264697066735822122058a69dcd652b30ebe94125dc9311d523994ad71464a9485b6c18098341c1bfa364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F87 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xBD0B1F44 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDB7F521A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDB7F521A EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xF1068454 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xF6D7EADE EQ PUSH2 0x42E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xBD0B1F44 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xC83DD231 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xD10C06A2 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xD477F05F EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xD4F26C51 EQ PUSH2 0x3E5 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xA36A7526 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xAAF5BFC3 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xAF5518C4 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xB8BB97A1 EQ PUSH2 0x3B2 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x91CCA3DB EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x930ED033 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x9DA5B0D5 EQ PUSH2 0x369 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x4ECAAC41 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4ECAAC41 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x55C746D1 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x58DE5DE8 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x7E47961C EQ PUSH2 0x33E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x4591DB50 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x48C7E528 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x4AE6A027 EQ PUSH2 0x30B JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x2C535A52 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x2C535A52 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x3011D3D5 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x35876476 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x36E9332D EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x3C850E1E EQ PUSH2 0x2CA JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x16D03993 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x1B0D8AAB EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x27C42A50 EQ PUSH2 0x27D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x25D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1959 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x25D PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1921 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST PUSH2 0x25D PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x234 PUSH2 0x781 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x1921 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x853 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x25D PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x25D PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x234 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x25D PUSH2 0xA2F JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xDA5 JUMP JUMPDEST PUSH2 0x234 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x72 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x457 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x73 DUP2 SWAP1 SSTORE PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4AF PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x51F PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x6E SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x57C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x5CB PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x6C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x6D DUP1 SLOAD DUP3 AND DUP12 DUP5 AND OR SWAP1 SSTORE PUSH1 0x66 DUP1 SLOAD DUP3 AND DUP10 DUP5 AND OR SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x69 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0x6A DUP1 SLOAD CALLER SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6B DUP1 SLOAD DUP4 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1388 PUSH1 0x6E SSTORE PUSH2 0x9C4 PUSH1 0x6F DUP2 SWAP1 SSTORE PUSH1 0x70 SSTORE PUSH2 0x2710 PUSH1 0x71 SSTORE PUSH2 0x3E8 PUSH1 0x72 SSTORE PUSH1 0x74 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH2 0xFF01 PUSH1 0xA0 SHL SUB NOT AND DUP6 DUP5 AND OR SWAP1 SSTORE PUSH1 0x67 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BB PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6CC PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x70 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x725 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A0 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B1 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x810 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x821 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH2 0x851 PUSH1 0x0 PUSH2 0xEC2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x75 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88B PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x89C PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH2 0x8D6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0xF14 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x90A PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x6A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95F PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x970 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CB PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9DC PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x6F SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA8F SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xAF0 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x86F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB13 PUSH1 0x71 SLOAD PUSH2 0xB0D PUSH1 0x6E SLOAD DUP6 PUSH2 0xF6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB32 PUSH1 0x71 SLOAD PUSH2 0xB0D PUSH1 0x6F SLOAD DUP7 PUSH2 0xF6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB4A DUP3 PUSH2 0xB44 DUP7 DUP7 PUSH2 0xF8E JUMP JUMPDEST SWAP1 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB57 DUP5 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x68 SLOAD SWAP2 SWAP3 POP PUSH2 0xB77 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x66 SLOAD PUSH2 0xB94 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP6 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x66 SLOAD PUSH2 0xBB1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBCB JUMPI PUSH2 0xBCB PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC67 JUMPI PUSH1 0x75 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x796C7BE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC65 SWAP2 SWAP1 PUSH2 0x193D JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7D PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC8E PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x6B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE3 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCF4 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD49 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD5A PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x75 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC2 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDD3 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH2 0xE28 DUP2 PUSH2 0xEC2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xE57 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEA6 PUSH2 0x1598 JUMP JUMPDEST PUSH2 0xEAE PUSH2 0x160B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF6A DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF33 SWAP3 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x167B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 DUP5 PUSH2 0x1EB2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 DUP5 PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 DUP5 PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x68 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0xFDB SWAP4 SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1007 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x102B SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH2 0x1045 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP6 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1081 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1095 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x19EE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1143 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND EQ PUSH2 0x1167 JUMPI DUP4 DUP6 PUSH2 0x116A JUMP JUMPDEST DUP5 DUP5 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x117B DUP10 DUP5 DUP5 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x11A0 JUMPI DUP3 PUSH1 0x0 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x11E8 SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1216 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP5 SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x67 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0x1266 SWAP4 SWAP2 DUP4 AND SWAP3 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x127E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1292 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B6 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x12EC SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133C SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1372 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x139E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C2 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1428 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x144C SWAP2 SWAP1 PUSH2 0x1A6C JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x12 DUP3 LT ISZERO PUSH2 0x146A JUMPI PUSH2 0x1467 DUP3 PUSH1 0x12 PUSH2 0x1ED1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1477 DUP3 PUSH1 0xA PUSH2 0x1DE4 JUMP JUMPDEST PUSH2 0x1489 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x149B DUP7 PUSH2 0xB0D DUP8 DUP6 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 GT ISZERO PUSH2 0x14F6 JUMPI PUSH2 0x14CC PUSH6 0x5AF3107A4000 PUSH2 0xB0D DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP PUSH1 0x72 SLOAD DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x14EE SWAP1 DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST PUSH2 0x1512 PUSH6 0x5AF3107A4000 PUSH2 0xB0D DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x72 SLOAD SWAP1 SWAP2 POP PUSH2 0x1522 SWAP1 DUP3 PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x73 SLOAD PUSH1 0x40 MLOAD PUSH4 0x236535F5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x46CA6BEA SWAP2 PUSH2 0x155B SWAP2 DUP7 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1589 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x15B1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x15CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xEAE JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1624 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x166B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEAE PUSH2 0x1676 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D0 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1764 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF6A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x16EE SWAP2 SWAP1 PUSH2 0x193D JUMP JUMPDEST PUSH2 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1719 DUP6 PUSH2 0x26F2 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1727 DUP3 DUP6 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1741 DUP4 PUSH2 0x173B DUP9 PUSH2 0x2710 PUSH2 0xF6F JUMP JUMPDEST SWAP1 PUSH2 0x1758 JUMP JUMPDEST SWAP1 POP PUSH2 0x174D DUP2 DUP4 PUSH2 0x1D7E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 DUP5 PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1773 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x177B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x179D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST PUSH2 0x17A6 DUP6 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x17C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x17DE SWAP2 SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x181B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x174D DUP3 DUP3 DUP7 PUSH2 0x1836 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1845 JUMPI POP DUP2 PUSH2 0xF7B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1855 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1897 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF7B DUP2 PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF7B DUP2 PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18DB DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x18EB DUP2 PUSH2 0x1F43 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1913 DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1932 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF7B DUP2 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF7B DUP2 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1973 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x197E DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x198E DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x199E DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH2 0x19AE DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x19BE DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x19CE DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH2 0x19DE DUP2 PUSH2 0x1F2E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A02 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1A0B DUP5 PUSH2 0x186F JUMP JUMPDEST SWAP3 POP PUSH2 0x1A19 PUSH1 0x20 DUP6 ADD PUSH2 0x186F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1A31 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A65 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xF7B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1AA5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1ACB DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xF7B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578656375746F723A2063616C6C6572206973206E6F74207468652065786563 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3ABA37B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D44 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1A8D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D79 JUMPI PUSH2 0x1D79 PUSH2 0x1F18 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D99 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP1 DUP7 GT PUSH2 0x1DB0 JUMPI POP PUSH2 0x1DDB JUMP JUMPDEST DUP2 DUP8 DIV DUP3 GT ISZERO PUSH2 0x1DC2 JUMPI PUSH2 0x1DC2 PUSH2 0x1F18 JUMP JUMPDEST DUP1 DUP7 AND ISZERO PUSH2 0x1DCF JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP5 SWAP1 SWAP5 SHR SWAP4 DUP1 MUL PUSH2 0x1DA1 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B PUSH1 0x0 NOT DUP5 DUP5 PUSH1 0x0 DUP3 PUSH2 0x1DFD JUMPI POP PUSH1 0x1 PUSH2 0xF7B JUMP JUMPDEST DUP2 PUSH2 0x1E0A JUMPI POP PUSH1 0x0 PUSH2 0xF7B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1E20 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1E2A JUMPI PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF7B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1E3B JUMPI PUSH2 0x1E3B PUSH2 0x1F18 JUMP JUMPDEST PUSH1 0x1 DUP5 SHL SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1E51 JUMPI PUSH2 0x1E51 PUSH2 0x1F18 JUMP JUMPDEST POP PUSH2 0xF7B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1E8A JUMPI POP DUP2 DUP2 EXP DUP4 DUP2 GT ISZERO PUSH2 0x1E85 JUMPI PUSH2 0x1E85 PUSH2 0x1F18 JUMP JUMPDEST PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x1E97 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1D9E JUMP JUMPDEST DUP1 DUP7 DIV DUP3 GT ISZERO PUSH2 0x1EA9 JUMPI PUSH2 0x1EA9 PUSH2 0x1F18 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1ECC JUMPI PUSH2 0x1ECC PUSH2 0x1F18 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1EE3 JUMPI PUSH2 0x1EE3 PUSH2 0x1F18 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F03 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EEB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F12 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xA6 SWAP14 0xCD PUSH6 0x2B30EBE94125 0xDC SWAP4 GT 0xD5 0x23 SWAP10 0x4A 0xD7 EQ PUSH5 0xA9485B6C18 MULMOD DUP4 COINBASE 0xC1 0xBF LOG3 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "909:6931:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14293:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:128:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "182:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "191:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "194:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "184:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "184:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "184:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "130:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "141:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "148:30:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "137:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "137:42:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "127:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:53:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:61:12"
															},
															"nodeType": "YulIf",
															"src": "117:2:12"
														}
													]
												},
												"name": "abi_decode_t_uint112_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:12",
														"type": ""
													}
												],
												"src": "14:190:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:189:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "334:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "342:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:12"
															},
															"nodeType": "YulIf",
															"src": "289:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "360:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "386:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "373:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "364:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "432:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "405:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "405:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "447:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "457:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "447:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "245:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "256:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "268:6:12",
														"type": ""
													}
												],
												"src": "209:259:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "554:182:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "600:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "609:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "617:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "602:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "602:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "602:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "575:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "584:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "571:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "571:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "596:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "567:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "567:32:12"
															},
															"nodeType": "YulIf",
															"src": "564:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "635:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "654:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "648:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "639:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "700:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "673:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "673:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "673:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "715:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "725:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "715:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "520:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "531:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "543:6:12",
														"type": ""
													}
												],
												"src": "473:263:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "825:312:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "871:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "880:6:12"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "888:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "873:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "873:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "873:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "846:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "855:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "842:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "842:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "867:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "838:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "838:32:12"
															},
															"nodeType": "YulIf",
															"src": "835:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "906:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "919:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "910:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "951:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "951:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "951:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1017:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1049:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1060:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1045:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1045:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1032:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1032:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1021:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1097:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1073:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1073:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1114:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1124:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "783:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "794:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "806:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "814:6:12",
														"type": ""
													}
												],
												"src": "741:396:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1229:240:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1275:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1284:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1292:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1277:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1277:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1277:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1250:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1259:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1246:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1271:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1242:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:32:12"
															},
															"nodeType": "YulIf",
															"src": "1239:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1310:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1336:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1323:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1314:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1382:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1355:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1355:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1397:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1407:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1397:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1421:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1459:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1431:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1421:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1187:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1198:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1210:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1218:6:12",
														"type": ""
													}
												],
												"src": "1142:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1541:186:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1587:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1596:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1604:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1589:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1589:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1589:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1562:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1571:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1554:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:32:12"
															},
															"nodeType": "YulIf",
															"src": "1551:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1622:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1648:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1635:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1626:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1691:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1667:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1667:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1706:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1716:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1706:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1507:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1518:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1530:6:12",
														"type": ""
													}
												],
												"src": "1474:253:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1810:179:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1856:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1865:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1873:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1858:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1858:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1858:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1831:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1840:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1852:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1823:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:32:12"
															},
															"nodeType": "YulIf",
															"src": "1820:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1891:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1910:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1904:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1904:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1895:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1953:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1929:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1929:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1929:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1968:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1978:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1776:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1787:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1799:6:12",
														"type": ""
													}
												],
												"src": "1732:257:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:189:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2135:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2144:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2152:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2137:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2137:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2137:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2110:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2119:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2106:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2106:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:32:12"
															},
															"nodeType": "YulIf",
															"src": "2099:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2170:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2196:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2183:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2174:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2242:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2215:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2215:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2215:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2257:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2267:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2257:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20Upgradeable_$248",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2055:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2066:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2078:6:12",
														"type": ""
													}
												],
												"src": "1994:284:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2367:189:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2413:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2422:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2430:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2415:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2415:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2415:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2388:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2397:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2384:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2384:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:32:12"
															},
															"nodeType": "YulIf",
															"src": "2377:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2448:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2474:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2461:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2452:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2520:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2493:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2493:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2535:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2545:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IFarm_$1804",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2333:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2344:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2356:6:12",
														"type": ""
													}
												],
												"src": "2283:273:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2900:949:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2947:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2956:6:12"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2964:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2949:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2949:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2949:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2921:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2930:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2917:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2917:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2942:3:12",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2913:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2913:33:12"
															},
															"nodeType": "YulIf",
															"src": "2910:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2982:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3008:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2995:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2986:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3054:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3027:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3027:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3069:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3079:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3093:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3136:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3108:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3108:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3097:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3176:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3149:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3149:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3193:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3203:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3193:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3219:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3251:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3262:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3247:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3234:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:32:12"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "3223:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "3302:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3275:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3275:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3275:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3319:17:12",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "3329:7:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3319:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3345:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3377:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3388:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3373:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3373:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3360:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:32:12"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "3349:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "3428:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3401:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3401:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3445:17:12",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "3455:7:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3471:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3503:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3514:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3486:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:33:12"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nodeType": "YulTypedName",
																	"src": "3475:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nodeType": "YulIdentifier",
																		"src": "3555:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3528:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3528:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3528:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3572:17:12",
															"value": {
																"name": "value_4",
																"nodeType": "YulIdentifier",
																"src": "3582:7:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3598:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3630:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3641:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3626:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3626:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3613:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:33:12"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nodeType": "YulTypedName",
																	"src": "3602:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nodeType": "YulIdentifier",
																		"src": "3682:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3655:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3655:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3655:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3699:17:12",
															"value": {
																"name": "value_5",
																"nodeType": "YulIdentifier",
																"src": "3709:7:12"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3699:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3725:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:33:12"
															},
															"variables": [
																{
																	"name": "value_6",
																	"nodeType": "YulTypedName",
																	"src": "3729:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_6",
																		"nodeType": "YulIdentifier",
																		"src": "3809:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3782:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3782:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3782:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:17:12",
															"value": {
																"name": "value_6",
																"nodeType": "YulIdentifier",
																"src": "3836:7:12"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IUniswapV2Factory_$1146t_contract$_IUniswapV2Router02_$1784t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IFarm_$1804",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2818:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2829:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2841:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2849:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2857:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2865:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2873:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2881:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2889:6:12",
														"type": ""
													}
												],
												"src": "2561:1288:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3968:360:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4014:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4023:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4031:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4016:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4016:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4016:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3985:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:32:12"
															},
															"nodeType": "YulIf",
															"src": "3978:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4049:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4091:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4059:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:42:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4110:61:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4167:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4120:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4120:51:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4110:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4180:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4203:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4214:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4199:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4193:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:25:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4184:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4272:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4281:6:12"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4289:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4274:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4274:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4274:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4240:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4251:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4258:10:12",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4247:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4247:22:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4237:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4237:33:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4230:41:12"
															},
															"nodeType": "YulIf",
															"src": "4227:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4307:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4317:5:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3918:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3929:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3941:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3949:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3957:6:12",
														"type": ""
													}
												],
												"src": "3854:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4403:120:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4449:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4458:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4466:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4451:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4451:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4451:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4424:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4433:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4420:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4445:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4416:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4416:32:12"
															},
															"nodeType": "YulIf",
															"src": "4413:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4507:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4494:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4494:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4369:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4380:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4392:6:12",
														"type": ""
													}
												],
												"src": "4333:190:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4609:113:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4655:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4664:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4672:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4657:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4657:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4657:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4630:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4639:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4626:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4626:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4651:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4622:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4622:32:12"
															},
															"nodeType": "YulIf",
															"src": "4619:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4690:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4706:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4700:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4700:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4575:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4586:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4598:6:12",
														"type": ""
													}
												],
												"src": "4528:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4806:214:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4852:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4861:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4869:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4854:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4854:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4854:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4827:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4836:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4823:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4823:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4848:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4819:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4819:32:12"
															},
															"nodeType": "YulIf",
															"src": "4816:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4887:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4906:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4900:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4900:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4891:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4964:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4973:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4981:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4966:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4966:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4966:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4938:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4949:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4956:4:12",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4945:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4945:16:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4935:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4935:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4928:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4928:35:12"
															},
															"nodeType": "YulIf",
															"src": "4925:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4999:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5009:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4999:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4772:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4783:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4795:6:12",
														"type": ""
													}
												],
												"src": "4727:293:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5076:208:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5086:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5106:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5100:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5100:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5090:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5128:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5133:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5121:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5121:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5121:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5175:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5171:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5171:16:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5193:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5198:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5189:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5189:14:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5205:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5149:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5149:63:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5149:63:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5221:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5236:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5249:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5257:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5245:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5245:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5266:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5262:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5262:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5241:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5241:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5232:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5232:39:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5273:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5228:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5228:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5053:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5060:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5068:3:12",
														"type": ""
													}
												],
												"src": "5025:259:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5426:137:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5436:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5456:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5450:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5450:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5440:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5498:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5506:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5494:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5494:17:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5513:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5518:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5472:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5472:53:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5472:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5534:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5545:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5550:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5541:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5402:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5407:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5418:3:12",
														"type": ""
													}
												],
												"src": "5289:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5669:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5679:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5691:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5702:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5687:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5687:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5679:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5721:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5736:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5752:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5757:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5748:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5748:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5761:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5744:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5744:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5732:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5732:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5714:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5714:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5714:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5638:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5649:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5660:4:12",
														"type": ""
													}
												],
												"src": "5568:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:175:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5927:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5938:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5923:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5923:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5915:4:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5950:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5968:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5973:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5964:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5964:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5977:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5960:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5960:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5954:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5995:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6010:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6018:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6006:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6006:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5988:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5988:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5988:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6042:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6053:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6038:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6038:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6062:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6070:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6058:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6058:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6031:43:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5866:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5877:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5885:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5896:4:12",
														"type": ""
													}
												],
												"src": "5776:304:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6214:145:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6224:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6236:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6247:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6232:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6232:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6224:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6266:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6281:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6297:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6302:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6293:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6293:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6306:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6289:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6289:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6277:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6277:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6259:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6259:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6259:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6330:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6341:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6326:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6346:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6319:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6319:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6319:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6175:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6186:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6194:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6205:4:12",
														"type": ""
													}
												],
												"src": "6085:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6459:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6469:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6481:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6492:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6477:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6477:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6469:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6511:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6536:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6529:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6529:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6522:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6522:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6504:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6428:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6439:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6450:4:12",
														"type": ""
													}
												],
												"src": "6364:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6682:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6692:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6704:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6715:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6700:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6692:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6734:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6749:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6765:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6770:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6761:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6761:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6774:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6745:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6745:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6727:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6727:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6727:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$248__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6651:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6662:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6673:4:12",
														"type": ""
													}
												],
												"src": "6556:228:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6904:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6914:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6926:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6937:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6922:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6922:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6914:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6956:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6971:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6987:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6992:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6983:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6983:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6996:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6979:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6979:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6967:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6967:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6949:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6949:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IFarm_$1804__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6873:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6884:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6895:4:12",
														"type": ""
													}
												],
												"src": "6789:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7138:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7148:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7160:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7171:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7156:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7156:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7148:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7190:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7205:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7221:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7226:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7217:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7217:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7230:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7213:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7213:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7201:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7201:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7183:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7183:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7183:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Factory_$1146__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7107:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7118:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7129:4:12",
														"type": ""
													}
												],
												"src": "7011:229:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7373:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7383:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7395:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7406:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7391:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7391:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7383:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7425:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7440:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7456:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7461:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7452:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7452:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7465:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7448:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7448:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7436:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7436:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7418:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7418:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7418:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1784__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7342:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7353:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7364:4:12",
														"type": ""
													}
												],
												"src": "7245:230:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7601:100:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7618:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7611:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7611:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7611:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7641:54:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7668:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7680:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7691:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7676:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7676:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7649:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:46:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7641:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7570:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7581:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7592:4:12",
														"type": ""
													}
												],
												"src": "7480:221:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7880:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7897:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7908:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7890:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7890:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7890:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7931:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7942:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7927:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7927:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7947:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7920:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7920:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7920:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7970:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7981:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7966:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7966:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7986:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7959:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7959:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7959:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8041:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8052:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8037:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8037:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8057:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8030:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8075:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8087:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8098:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8083:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8083:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8075:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7857:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7871:4:12",
														"type": ""
													}
												],
												"src": "7706:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8287:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8304:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8315:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8297:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8297:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8338:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8349:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8334:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8334:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8354:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8327:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8327:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8377:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8388:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8373:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8373:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8393:34:12",
																		"type": "",
																		"value": "executor: caller is not the exec"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8366:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8366:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8366:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8448:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8459:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8444:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8464:6:12",
																		"type": "",
																		"value": "utor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8437:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8437:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8437:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8480:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8492:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8503:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8488:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8480:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8264:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8278:4:12",
														"type": ""
													}
												],
												"src": "8113:400:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8692:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8709:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8720:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8702:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8702:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8702:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8743:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8754:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8739:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8739:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8759:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8732:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8732:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8732:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8782:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8793:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8778:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8778:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8798:34:12",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8771:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8771:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8771:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8853:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8864:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8849:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8849:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8869:8:12",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8842:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8842:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8842:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8887:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8899:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8910:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8895:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8895:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8887:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8669:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8683:4:12",
														"type": ""
													}
												],
												"src": "8518:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9099:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9116:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9127:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9109:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9109:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9109:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9150:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9161:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9146:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9146:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9166:2:12",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9139:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9139:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9139:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9189:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9200:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9205:34:12",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9178:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9178:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9178:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9260:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9271:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9256:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9256:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9276:16:12",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9249:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9249:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9302:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9314:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9325:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9310:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9310:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9302:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9076:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9090:4:12",
														"type": ""
													}
												],
												"src": "8925:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9514:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9531:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9542:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9524:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9524:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9524:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9565:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9576:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9561:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9561:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9581:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9554:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9554:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9554:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9604:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9615:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9600:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9600:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9620:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9593:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9593:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9593:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9664:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9676:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9687:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9672:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9672:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9664:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9491:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9505:4:12",
														"type": ""
													}
												],
												"src": "9340:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9875:179:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9892:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9903:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9885:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9885:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9885:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9926:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9937:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9922:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9922:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9942:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9915:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9915:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9915:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9965:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9976:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9961:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9961:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9981:31:12",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9954:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:59:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9954:59:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10022:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10034:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10045:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10030:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10030:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10022:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9852:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9866:4:12",
														"type": ""
													}
												],
												"src": "9701:353:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10233:232:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10250:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10261:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10243:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10243:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10243:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10284:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10295:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10280:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10280:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10300:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10273:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10273:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10273:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10323:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10334:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10319:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10319:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10339:34:12",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10312:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10312:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10312:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10394:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10405:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10390:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10390:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10410:12:12",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10383:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10383:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10383:40:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10432:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10444:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10455:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10440:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10440:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10432:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10210:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10224:4:12",
														"type": ""
													}
												],
												"src": "10059:406:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10571:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10581:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10593:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10604:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10589:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10589:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10581:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10623:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10634:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10616:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10616:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10616:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10540:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10551:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10562:4:12",
														"type": ""
													}
												],
												"src": "10470:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10855:257:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10872:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10883:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10865:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10865:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10865:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10910:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10921:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10906:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10906:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10926:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10899:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10899:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10899:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10953:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10964:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10949:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10949:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "10973:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10989:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10994:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10985:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10985:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10998:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10981:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10981:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10969:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10969:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10942:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10942:60:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10942:60:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11022:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11033:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11018:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11018:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11038:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11011:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11011:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11011:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11051:55:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11078:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11090:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11101:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11086:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11086:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "11059:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11059:47:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11051:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10800:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10811:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10819:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10827:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10835:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10846:4:12",
														"type": ""
													}
												],
												"src": "10652:460:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11268:178:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11278:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11290:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11301:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11286:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11286:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11278:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11320:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11331:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11313:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11313:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11313:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11358:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11369:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11354:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11354:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11374:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11347:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11347:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11347:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11401:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11412:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11397:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11397:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "11431:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11424:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11424:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11417:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11417:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11390:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11390:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11390:50:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11221:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11232:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11240:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11248:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11259:4:12",
														"type": ""
													}
												],
												"src": "11117:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11499:80:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11526:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11528:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11528:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11528:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11515:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11522:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11518:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11518:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11512:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11512:13:12"
															},
															"nodeType": "YulIf",
															"src": "11509:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11557:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11568:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11571:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11564:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11564:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11557:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11482:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11485:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11491:3:12",
														"type": ""
													}
												],
												"src": "11451:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11630:171:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11661:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "11682:1:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11689:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11694:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11685:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11685:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11675:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11675:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11675:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11726:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11729:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11719:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11719:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11719:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "11754:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11757:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11747:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11747:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11747:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11650:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11643:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11643:9:12"
															},
															"nodeType": "YulIf",
															"src": "11640:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11781:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11790:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11793:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11786:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11786:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11781:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11615:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11618:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11624:1:12",
														"type": ""
													}
												],
												"src": "11584:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11883:376:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11893:15:12",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "11902:6:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "11893:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11917:13:12",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "11925:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "11917:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11964:289:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11978:11:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11988:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "11982:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12030:9:12",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "12032:5:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "12015:8:12"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "12025:2:12"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "12012:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12012:16:12"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "12005:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12005:24:12"
																		},
																		"nodeType": "YulIf",
																		"src": "12002:2:12"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12080:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "12082:16:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12082:18:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12082:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "12058:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "12068:3:12"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "12073:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "12064:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12064:14:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "12055:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12055:24:12"
																		},
																		"nodeType": "YulIf",
																		"src": "12052:2:12"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12136:29:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12138:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "12151:5:12"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "12158:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "12147:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12147:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "12138:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "12122:8:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12132:2:12"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12118:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12118:17:12"
																		},
																		"nodeType": "YulIf",
																		"src": "12115:2:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12178:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "12190:4:12"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "12196:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "12186:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12186:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "12178:4:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12214:29:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12230:2:12"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "12234:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "12226:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12226:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "12214:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"kind": "bool",
																"nodeType": "YulLiteral",
																"src": "11947:4:12",
																"type": "",
																"value": "true"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11952:3:12",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11943:3:12",
																"statements": []
															},
															"src": "11939:314:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "11834:6:12",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "11842:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "11849:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "11859:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "11867:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "11874:4:12",
														"type": ""
													}
												],
												"src": "11806:453:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12334:69:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12344:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "12374:4:12"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "12380:8:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12394:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12390:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12390:6:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "12353:20:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12353:44:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "12344:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "12305:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "12311:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "12324:5:12",
														"type": ""
													}
												],
												"src": "12264:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12472:858:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12510:52:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12524:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "12533:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "12524:5:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "12547:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "12492:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12485:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12485:16:12"
															},
															"nodeType": "YulIf",
															"src": "12482:2:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12595:52:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12609:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "12618:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "12609:5:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "12632:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "12581:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12574:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12574:12:12"
															},
															"nodeType": "YulIf",
															"src": "12571:2:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12683:52:12",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "12697:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12706:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "12697:5:12"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "12720:5:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12676:59:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12681:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12751:176:12",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12786:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "12788:16:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12788:18:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12788:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "12771:8:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12781:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "12768:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12768:17:12"
																				},
																				"nodeType": "YulIf",
																				"src": "12765:2:12"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "12821:25:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "12834:8:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12844:1:12",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12830:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12830:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "12821:5:12"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12877:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "12879:16:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12879:18:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12879:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "12865:5:12"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "12872:3:12"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "12862:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12862:14:12"
																				},
																				"nodeType": "YulIf",
																				"src": "12859:2:12"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "12912:5:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12744:183:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12749:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "12663:4:12"
															},
															"nodeType": "YulSwitch",
															"src": "12656:271:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13025:123:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13039:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "13052:4:12"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "13058:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "13048:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13048:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "13039:5:12"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "13098:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "13100:16:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13100:18:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13100:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "13086:5:12"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "13093:3:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "13083:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13083:14:12"
																		},
																		"nodeType": "YulIf",
																		"src": "13080:2:12"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "13133:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "12949:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12955:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "12946:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12946:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "12963:8:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12973:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "12960:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12960:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12942:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12942:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "12986:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12992:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "12983:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12983:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "13001:8:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13011:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "12998:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12998:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12979:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12979:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12939:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12939:77:12"
															},
															"nodeType": "YulIf",
															"src": "12936:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13157:65:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13199:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "13202:4:12"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "13208:8:12"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "13218:3:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "13180:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13180:42:12"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "13161:7:12",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "13170:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13264:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13266:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13266:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13266:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "13237:7:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "13250:3:12"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "13255:6:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "13246:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13246:16:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13234:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13234:29:12"
															},
															"nodeType": "YulIf",
															"src": "13231:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13295:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "13308:7:12"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "13317:6:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13304:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13304:20:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "13295:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "12438:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "12444:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "12454:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "12462:5:12",
														"type": ""
													}
												],
												"src": "12408:922:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13387:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13446:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13448:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13448:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13448:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13418:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13411:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13411:9:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13404:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13404:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13426:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13437:1:12",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "13433:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13433:6:12"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13441:1:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "13429:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13429:14:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13423:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13423:21:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13400:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13400:45:12"
															},
															"nodeType": "YulIf",
															"src": "13397:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13477:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13492:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13495:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13488:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13488:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13477:7:12"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13366:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13369:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13375:7:12",
														"type": ""
													}
												],
												"src": "13335:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13557:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13579:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13581:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13581:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13581:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13573:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13576:1:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13570:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13570:8:12"
															},
															"nodeType": "YulIf",
															"src": "13567:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13610:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13622:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13625:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13618:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13618:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13610:4:12"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13539:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13542:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13548:4:12",
														"type": ""
													}
												],
												"src": "13508:125:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13691:205:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13701:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13710:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13705:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13770:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13795:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13800:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13791:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13791:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13814:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13819:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13810:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13810:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13804:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13804:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13784:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13784:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13784:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13731:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13734:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13728:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13728:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13742:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13744:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13753:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13756:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13749:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13749:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13744:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13724:3:12",
																"statements": []
															},
															"src": "13720:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13859:31:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13872:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "13877:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13868:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13868:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13886:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13861:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13861:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13861:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13848:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13851:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13845:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13845:13:12"
															},
															"nodeType": "YulIf",
															"src": "13842:2:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13669:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13674:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13679:6:12",
														"type": ""
													}
												],
												"src": "13638:258:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13933:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13950:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13957:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13962:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13953:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13953:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13943:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13943:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13943:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13990:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13993:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13983:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13983:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13983:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14014:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14017:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14007:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14007:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14007:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13901:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14080:86:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14144:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14153:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14156:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14146:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14146:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14146:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14103:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14114:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14129:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14134:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "14125:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14125:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14138:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "14121:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14121:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "14110:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14110:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14100:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14100:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14093:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14093:50:12"
															},
															"nodeType": "YulIf",
															"src": "14090:2:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14069:5:12",
														"type": ""
													}
												],
												"src": "14033:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14215:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14269:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14278:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14281:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14271:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14271:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14271:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14238:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "14259:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "14252:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14252:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14245:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14245:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14235:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14235:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14228:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14228:40:12"
															},
															"nodeType": "YulIf",
															"src": "14225:2:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14204:5:12",
														"type": ""
													}
												],
												"src": "14171:120:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20Upgradeable_$248(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IFarm_$1804(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IUniswapV2Factory_$1146t_contract$_IUniswapV2Router02_$1784t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IFarm_$1804(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_t_address(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_t_address(value_4)\n        value4 := value_4\n        let value_5 := calldataload(add(headStart, 160))\n        validator_revert_t_address(value_5)\n        value5 := value_5\n        let value_6 := calldataload(add(headStart, 192))\n        validator_revert_t_address(value_6)\n        value6 := value_6\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_uint112_fromMemory(headStart)\n        value1 := abi_decode_t_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(value2, value2) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$248__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IFarm_$1804__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Factory_$1146__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1784__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"executor: caller is not the exec\")\n        mstore(add(headStart, 96), \"utor\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_t_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base\n    {\n        power := _power\n        base := _base\n        for { } true { }\n        {\n            let _1 := 1\n            if iszero(gt(exponent, _1)) { break }\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, _1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent, not(0))\n    }\n    function checked_exp_unsigned(base, exponent, max) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(1, base, exponent, max)\n        if gt(power_1, div(max, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102275760003560e01c80638da5cb5b11610130578063bd0b1f44116100b8578063db7f521a1161007c578063db7f521a146103f8578063ec1f1f691461040b578063f106845414610413578063f2fde38b1461041b578063f6d7eade1461042e57610227565b8063bd0b1f44146103ba578063c83dd231146103c2578063d10c06a2146103ca578063d477f05f146103d2578063d4f26c51146103e557610227565b8063a36a7526116100ff578063a36a752614610371578063aaf5bfc314610384578063aaf5eb6814610397578063af5518c41461039f578063b8bb97a1146103b257610227565b80638da5cb5b1461034657806391cca3db1461034e578063930ed033146103565780639da5b0d51461036957610227565b80633e413bee116101b35780634ecaac41116101825780634ecaac411461031357806355c746d11461031b57806358de5de81461032e578063715018a6146103365780637e47961c1461033e57610227565b80633e413bee146102dd5780634591db50146102e557806348c7e528146102f85780634ae6a0271461030b57610227565b80632c535a52116101fa5780632c535a52146102905780633011d3d51461029857806335876476146102ad57806336e9332d146102c25780633c850e1e146102ca57610227565b806316d039931461022c5780631b0d8aab1461024a5780631e1bff3f1461026a57806327c42a501461027d575b600080fd5b610234610436565b6040516102419190611d0e565b60405180910390f35b61025d610258366004611a3c565b61043c565b6040516102419190611b1c565b61025d6102783660046118be565b610494565b61025d61028b366004611a3c565b610504565b61023461054e565b6102a0610554565b6040516102419190611ad5565b6102c06102bb366004611959565b610563565b005b6102a06106a2565b61025d6102d8366004611a3c565b6106b1565b6102a06106fb565b61025d6102f3366004611921565b61070a565b61025d610306366004611886565b61076c565b610234610781565b6102a0610787565b61025d610329366004611921565b610796565b61025d6107f8565b6102c0610808565b6102a0610853565b6102a0610862565b6102a0610872565b61025d6103643660046118f6565b610881565b61025d6108df565b61025d61037f366004611886565b6108ef565b61025d610392366004611886565b610955565b6102346109bb565b61025d6103ad366004611a3c565b6109c1565b6102a0610a0b565b610234610a1a565b6102a0610a20565b61025d610a2f565b61025d6103e0366004611886565b610c73565b61025d6103f3366004611886565b610cd9565b61025d610406366004611886565b610d3f565b6102a0610da5565b610234610db4565b6102c0610429366004611886565b610dba565b6102a0610e2b565b60725481565b6000610446610e3a565b6001600160a01b0316610457610862565b6001600160a01b0316146104865760405162461bcd60e51b815260040161047d90611c58565b60405180910390fd5b50607381905560015b919050565b600061049e610e3a565b6001600160a01b03166104af610862565b6001600160a01b0316146104d55760405162461bcd60e51b815260040161047d90611c58565b506001600160a01b0382166000908152606560205260409020805482151560ff19909116179055600192915050565b600061050e610e3a565b6001600160a01b031661051f610862565b6001600160a01b0316146105455760405162461bcd60e51b815260040161047d90611c58565b50606e55600190565b606f5481565b6066546001600160a01b031681565b600054610100900460ff168061057c575060005460ff16155b6105985760405162461bcd60e51b815260040161047d90611c0a565b600054610100900460ff161580156105c3576000805460ff1961ff0019909116610100171660011790555b6105cb610e3e565b606c80546001600160a01b03199081166001600160a01b038a811691909117909255606d805482168b8416179055606680548216898416179055606880548216878416179055606980548216868416179055606a8054339083168117909155606b805483169091179055611388606e556109c4606f8190556070556127106071556103e860725560748054600160a01b60ff60a01b1990911617600161ff0160a01b031916858416179055606780549091169187169190911790558015610698576000805461ff00191690555b5050505050505050565b6074546001600160a01b031681565b60006106bb610e3a565b6001600160a01b03166106cc610862565b6001600160a01b0316146106f25760405162461bcd60e51b815260040161047d90611c58565b50607055600190565b6067546001600160a01b031681565b6000610714610e3a565b6001600160a01b0316610725610862565b6001600160a01b03161461074b5760405162461bcd60e51b815260040161047d90611c58565b5060748054821515600160a01b0260ff60a01b199091161790556001919050565b60656020526000908152604090205460ff1681565b60705481565b6068546001600160a01b031681565b60006107a0610e3a565b6001600160a01b03166107b1610862565b6001600160a01b0316146107d75760405162461bcd60e51b815260040161047d90611c58565b5060748054821515600160a81b0260ff60a81b199091161790556001919050565b607454600160a81b900460ff1681565b610810610e3a565b6001600160a01b0316610821610862565b6001600160a01b0316146108475760405162461bcd60e51b815260040161047d90611c58565b6108516000610ec2565b565b6075546001600160a01b031681565b6033546001600160a01b03165b90565b606b546001600160a01b031681565b600061088b610e3a565b6001600160a01b031661089c610862565b6001600160a01b0316146108c25760405162461bcd60e51b815260040161047d90611c58565b6108d66001600160a01b0384163384610f14565b50600192915050565b607454600160a01b900460ff1681565b60006108f9610e3a565b6001600160a01b031661090a610862565b6001600160a01b0316146109305760405162461bcd60e51b815260040161047d90611c58565b50606a80546001600160a01b0383166001600160a01b03199091161790556001919050565b600061095f610e3a565b6001600160a01b0316610970610862565b6001600160a01b0316146109965760405162461bcd60e51b815260040161047d90611c58565b50606780546001600160a01b0383166001600160a01b03199091161790556001919050565b60715481565b60006109cb610e3a565b6001600160a01b03166109dc610862565b6001600160a01b031614610a025760405162461bcd60e51b815260040161047d90611c58565b50606f55600190565b6069546001600160a01b031681565b606e5481565b606d546001600160a01b031681565b3360009081526065602052604081205460ff16610a5e5760405162461bcd60e51b815260040161047d90611b80565b6066546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a8f903090600401611ad5565b60206040518083038186803b158015610aa757600080fd5b505afa158015610abb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adf9190611a54565b905080610af057600191505061086f565b6000610b13607154610b0d606e5485610f6f90919063ffffffff16565b90610f82565b90506000610b32607154610b0d606f5486610f6f90919063ffffffff16565b90506000610b4a82610b448686610f8e565b90610f8e565b90506000610b5784610f9a565b606954606854919250610b77916001600160a01b03908116911683610f14565b606a54606654610b94916001600160a01b03918216911685610f14565b606b54606654610bb1916001600160a01b03918216911684610f14565b607454600160a01b900460ff1615610bcb57610bcb611229565b607454600160a81b900460ff1615610c6757607560009054906101000a90046001600160a01b03166001600160a01b031663796c7be76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c2d57600080fd5b505af1158015610c41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c65919061193d565b505b60019550505050505090565b6000610c7d610e3a565b6001600160a01b0316610c8e610862565b6001600160a01b031614610cb45760405162461bcd60e51b815260040161047d90611c58565b50606b80546001600160a01b0383166001600160a01b03199091161790556001919050565b6000610ce3610e3a565b6001600160a01b0316610cf4610862565b6001600160a01b031614610d1a5760405162461bcd60e51b815260040161047d90611c58565b50607480546001600160a01b0383166001600160a01b03199091161790556001919050565b6000610d49610e3a565b6001600160a01b0316610d5a610862565b6001600160a01b031614610d805760405162461bcd60e51b815260040161047d90611c58565b50607580546001600160a01b0383166001600160a01b03199091161790556001919050565b606a546001600160a01b031681565b60735481565b610dc2610e3a565b6001600160a01b0316610dd3610862565b6001600160a01b031614610df95760405162461bcd60e51b815260040161047d90611c58565b6001600160a01b038116610e1f5760405162461bcd60e51b815260040161047d90611b3a565b610e2881610ec2565b50565b606c546001600160a01b031681565b3390565b600054610100900460ff1680610e57575060005460ff16155b610e735760405162461bcd60e51b815260040161047d90611c0a565b600054610100900460ff16158015610e9e576000805460ff1961ff0019909116610100171660011790555b610ea6611598565b610eae61160b565b8015610e28576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f6a8363a9059cbb60e01b8484604051602401610f33929190611b03565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261167b565b505050565b6000610f7b8284611eb2565b9392505050565b6000610f7b8284611d7e565b6000610f7b8284611ed1565b606d5460685460665460405163e6a4390560e01b815260009384936001600160a01b039182169363e6a4390593610fdb939283169290911690600401611ae9565b60206040518083038186803b158015610ff357600080fd5b505afa158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b91906118a2565b606654909150611045906001600160a01b03168285610f14565b600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561108157600080fd5b505afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b991906119ee565b506001600160701b031691506001600160701b031691506000836001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561110b57600080fd5b505afa15801561111f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114391906118a2565b60665490915060009081906001600160a01b0380851691161461116757838561116a565b84845b91509150600061117b89848461170a565b60665490915060009081906001600160a01b038781169116146111a0578260006111a4565b6000835b6040805160008152602081019182905263022c0d9f60e01b90915291935091506001600160a01b038a169063022c0d9f906111e89085908590309060248101611d17565b600060405180830381600087803b15801561120257600080fd5b505af1158015611216573d6000803e3d6000fd5b50949d9c50505050505050505050505050565b606d5460675460665460405163e6a4390560e01b81526000936001600160a01b039081169363e6a439059361126693918316921690600401611ae9565b60206040518083038186803b15801561127e57600080fd5b505afa158015611292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b691906118a2565b6066546040516370a0823160e01b81529192506000916001600160a01b03909116906370a08231906112ec908590600401611ad5565b60206040518083038186803b15801561130457600080fd5b505afa158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133c9190611a54565b6067546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190611372908690600401611ad5565b60206040518083038186803b15801561138a57600080fd5b505afa15801561139e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c29190611a54565b90506000606760009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561141457600080fd5b505afa158015611428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144c9190611a6c565b60ff1690506000601282101561146a57611467826012611ed1565b90505b600061147782600a611de4565b61148990670de0b6b3a7640000611eb2565b9050600061149b86610b0d8785610f6f565b9050600080670de0b6b3a76400008311156114f6576114cc655af3107a4000610b0d85670de0b6b3a7640000610f8e565b90506072548111156114e157600091506114f1565b6072546114ee9082610f8e565b91505b611525565b611512655af3107a4000610b0d85670de0b6b3a7640000611ed1565b6072549091506115229082611758565b91505b60745460735460405163236535f560e11b81526001600160a01b03909216916346ca6bea9161155b918690600190600401611d4e565b600060405180830381600087803b15801561157557600080fd5b505af1158015611589573d6000803e3d6000fd5b50505050505050505050505050565b600054610100900460ff16806115b1575060005460ff16155b6115cd5760405162461bcd60e51b815260040161047d90611c0a565b600054610100900460ff16158015610eae576000805460ff1961ff0019909116610100171660011790558015610e28576000805461ff001916905550565b600054610100900460ff1680611624575060005460ff16155b6116405760405162461bcd60e51b815260040161047d90611c0a565b600054610100900460ff1615801561166b576000805460ff1961ff0019909116610100171660011790555b610eae611676610e3a565b610ec2565b60006116d0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117649092919063ffffffff16565b805190915015610f6a57808060200190518101906116ee919061193d565b610f6a5760405162461bcd60e51b815260040161047d90611cc4565b600080611719856126f2610f6f565b905060006117278285610f6f565b905060006117418361173b88612710610f6f565b90611758565b905061174d8183611d7e565b979650505050505050565b6000610f7b8284611d66565b6060611773848460008561177b565b949350505050565b60608247101561179d5760405162461bcd60e51b815260040161047d90611bc4565b6117a685611830565b6117c25760405162461bcd60e51b815260040161047d90611c8d565b600080866001600160a01b031685876040516117de9190611ab9565b60006040518083038185875af1925050503d806000811461181b576040519150601f19603f3d011682016040523d82523d6000602084013e611820565b606091505b509150915061174d828286611836565b3b151590565b60608315611845575081610f7b565b8251156118555782518084602001fd5b8160405162461bcd60e51b815260040161047d9190611b27565b80516001600160701b038116811461048f57600080fd5b600060208284031215611897578081fd5b8135610f7b81611f2e565b6000602082840312156118b3578081fd5b8151610f7b81611f2e565b600080604083850312156118d0578081fd5b82356118db81611f2e565b915060208301356118eb81611f43565b809150509250929050565b60008060408385031215611908578182fd5b823561191381611f2e565b946020939093013593505050565b600060208284031215611932578081fd5b8135610f7b81611f43565b60006020828403121561194e578081fd5b8151610f7b81611f43565b600080600080600080600060e0888a031215611973578283fd5b873561197e81611f2e565b9650602088013561198e81611f2e565b9550604088013561199e81611f2e565b945060608801356119ae81611f2e565b935060808801356119be81611f2e565b925060a08801356119ce81611f2e565b915060c08801356119de81611f2e565b8091505092959891949750929550565b600080600060608486031215611a02578283fd5b611a0b8461186f565b9250611a196020850161186f565b9150604084015163ffffffff81168114611a31578182fd5b809150509250925092565b600060208284031215611a4d578081fd5b5035919050565b600060208284031215611a65578081fd5b5051919050565b600060208284031215611a7d578081fd5b815160ff81168114610f7b578182fd5b60008151808452611aa5816020860160208601611ee8565b601f01601f19169290920160200192915050565b60008251611acb818460208701611ee8565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b600060208252610f7b6020830184611a8d565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526024908201527f6578656375746f723a2063616c6c6572206973206e6f742074686520657865636040820152633aba37b960e11b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b600085825284602083015260018060a01b038416604083015260806060830152611d446080830184611a8d565b9695505050505050565b92835260208301919091521515604082015260600190565b60008219821115611d7957611d79611f18565b500190565b600082611d9957634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611611db05750611ddb565b818704821115611dc257611dc2611f18565b80861615611dcf57918102915b9490941c938002611da1565b94509492505050565b6000610f7b6000198484600082611dfd57506001610f7b565b81611e0a57506000610f7b565b8160018114611e205760028114611e2a57611e57565b6001915050610f7b565b60ff841115611e3b57611e3b611f18565b6001841b915084821115611e5157611e51611f18565b50610f7b565b5060208310610133831016604e8410600b8410161715611e8a575081810a83811115611e8557611e85611f18565b610f7b565b611e978484846001611d9e565b808604821115611ea957611ea9611f18565b02949350505050565b6000816000190483118215151615611ecc57611ecc611f18565b500290565b600082821015611ee357611ee3611f18565b500390565b60005b83811015611f03578181015183820152602001611eeb565b83811115611f12576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610e2857600080fd5b8015158114610e2857600080fdfea264697066735822122058a69dcd652b30ebe94125dc9311d523994ad71464a9485b6c18098341c1bfa364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xBD0B1F44 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDB7F521A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDB7F521A EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xF1068454 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xF6D7EADE EQ PUSH2 0x42E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xBD0B1F44 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xC83DD231 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xD10C06A2 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xD477F05F EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xD4F26C51 EQ PUSH2 0x3E5 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xA36A7526 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xAAF5BFC3 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xAF5518C4 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xB8BB97A1 EQ PUSH2 0x3B2 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x91CCA3DB EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x930ED033 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x9DA5B0D5 EQ PUSH2 0x369 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x4ECAAC41 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4ECAAC41 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x55C746D1 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x58DE5DE8 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x7E47961C EQ PUSH2 0x33E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x4591DB50 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x48C7E528 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x4AE6A027 EQ PUSH2 0x30B JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x2C535A52 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x2C535A52 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x3011D3D5 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x35876476 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x36E9332D EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x3C850E1E EQ PUSH2 0x2CA JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x16D03993 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x1B0D8AAB EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x27C42A50 EQ PUSH2 0x27D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x25D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1959 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x25D PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1921 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST PUSH2 0x25D PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x234 PUSH2 0x781 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x1921 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x853 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x25D PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x25D PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x234 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x25D PUSH2 0xA2F JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xDA5 JUMP JUMPDEST PUSH2 0x234 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x72 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x457 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x73 DUP2 SWAP1 SSTORE PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4AF PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x51F PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x6E SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x57C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x5CB PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x6C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x6D DUP1 SLOAD DUP3 AND DUP12 DUP5 AND OR SWAP1 SSTORE PUSH1 0x66 DUP1 SLOAD DUP3 AND DUP10 DUP5 AND OR SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x69 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0x6A DUP1 SLOAD CALLER SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6B DUP1 SLOAD DUP4 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1388 PUSH1 0x6E SSTORE PUSH2 0x9C4 PUSH1 0x6F DUP2 SWAP1 SSTORE PUSH1 0x70 SSTORE PUSH2 0x2710 PUSH1 0x71 SSTORE PUSH2 0x3E8 PUSH1 0x72 SSTORE PUSH1 0x74 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH2 0xFF01 PUSH1 0xA0 SHL SUB NOT AND DUP6 DUP5 AND OR SWAP1 SSTORE PUSH1 0x67 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BB PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6CC PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x70 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x725 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A0 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B1 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x810 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x821 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH2 0x851 PUSH1 0x0 PUSH2 0xEC2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x75 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88B PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x89C PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH2 0x8D6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0xF14 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x90A PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x6A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95F PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x970 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CB PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9DC PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x6F SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA8F SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xAF0 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x86F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB13 PUSH1 0x71 SLOAD PUSH2 0xB0D PUSH1 0x6E SLOAD DUP6 PUSH2 0xF6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB32 PUSH1 0x71 SLOAD PUSH2 0xB0D PUSH1 0x6F SLOAD DUP7 PUSH2 0xF6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB4A DUP3 PUSH2 0xB44 DUP7 DUP7 PUSH2 0xF8E JUMP JUMPDEST SWAP1 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB57 DUP5 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x68 SLOAD SWAP2 SWAP3 POP PUSH2 0xB77 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x66 SLOAD PUSH2 0xB94 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP6 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x66 SLOAD PUSH2 0xBB1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBCB JUMPI PUSH2 0xBCB PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC67 JUMPI PUSH1 0x75 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x796C7BE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC65 SWAP2 SWAP1 PUSH2 0x193D JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7D PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC8E PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x6B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE3 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCF4 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD49 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD5A PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x75 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC2 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDD3 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH2 0xE28 DUP2 PUSH2 0xEC2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xE57 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEA6 PUSH2 0x1598 JUMP JUMPDEST PUSH2 0xEAE PUSH2 0x160B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF6A DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF33 SWAP3 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x167B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 DUP5 PUSH2 0x1EB2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 DUP5 PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 DUP5 PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x68 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0xFDB SWAP4 SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1007 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x102B SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH2 0x1045 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP6 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1081 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1095 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x19EE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1143 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND EQ PUSH2 0x1167 JUMPI DUP4 DUP6 PUSH2 0x116A JUMP JUMPDEST DUP5 DUP5 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x117B DUP10 DUP5 DUP5 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x11A0 JUMPI DUP3 PUSH1 0x0 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x11E8 SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1216 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP5 SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x67 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0x1266 SWAP4 SWAP2 DUP4 AND SWAP3 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x127E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1292 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B6 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x12EC SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133C SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1372 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x139E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C2 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1428 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x144C SWAP2 SWAP1 PUSH2 0x1A6C JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x12 DUP3 LT ISZERO PUSH2 0x146A JUMPI PUSH2 0x1467 DUP3 PUSH1 0x12 PUSH2 0x1ED1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1477 DUP3 PUSH1 0xA PUSH2 0x1DE4 JUMP JUMPDEST PUSH2 0x1489 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x149B DUP7 PUSH2 0xB0D DUP8 DUP6 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 GT ISZERO PUSH2 0x14F6 JUMPI PUSH2 0x14CC PUSH6 0x5AF3107A4000 PUSH2 0xB0D DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP PUSH1 0x72 SLOAD DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x14EE SWAP1 DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST PUSH2 0x1512 PUSH6 0x5AF3107A4000 PUSH2 0xB0D DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x72 SLOAD SWAP1 SWAP2 POP PUSH2 0x1522 SWAP1 DUP3 PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x73 SLOAD PUSH1 0x40 MLOAD PUSH4 0x236535F5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x46CA6BEA SWAP2 PUSH2 0x155B SWAP2 DUP7 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1589 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x15B1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x15CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xEAE JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1624 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x166B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEAE PUSH2 0x1676 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D0 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1764 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF6A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x16EE SWAP2 SWAP1 PUSH2 0x193D JUMP JUMPDEST PUSH2 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1719 DUP6 PUSH2 0x26F2 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1727 DUP3 DUP6 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1741 DUP4 PUSH2 0x173B DUP9 PUSH2 0x2710 PUSH2 0xF6F JUMP JUMPDEST SWAP1 PUSH2 0x1758 JUMP JUMPDEST SWAP1 POP PUSH2 0x174D DUP2 DUP4 PUSH2 0x1D7E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 DUP5 PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1773 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x177B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x179D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST PUSH2 0x17A6 DUP6 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x17C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x17DE SWAP2 SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x181B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x174D DUP3 DUP3 DUP7 PUSH2 0x1836 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1845 JUMPI POP DUP2 PUSH2 0xF7B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1855 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1897 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF7B DUP2 PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF7B DUP2 PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18DB DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x18EB DUP2 PUSH2 0x1F43 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1913 DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1932 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF7B DUP2 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF7B DUP2 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1973 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x197E DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x198E DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x199E DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH2 0x19AE DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x19BE DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x19CE DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH2 0x19DE DUP2 PUSH2 0x1F2E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A02 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1A0B DUP5 PUSH2 0x186F JUMP JUMPDEST SWAP3 POP PUSH2 0x1A19 PUSH1 0x20 DUP6 ADD PUSH2 0x186F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1A31 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A65 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xF7B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1AA5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1EE8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1ACB DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1EE8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xF7B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578656375746F723A2063616C6C6572206973206E6F74207468652065786563 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3ABA37B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D44 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1A8D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D79 JUMPI PUSH2 0x1D79 PUSH2 0x1F18 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D99 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP1 DUP7 GT PUSH2 0x1DB0 JUMPI POP PUSH2 0x1DDB JUMP JUMPDEST DUP2 DUP8 DIV DUP3 GT ISZERO PUSH2 0x1DC2 JUMPI PUSH2 0x1DC2 PUSH2 0x1F18 JUMP JUMPDEST DUP1 DUP7 AND ISZERO PUSH2 0x1DCF JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP5 SWAP1 SWAP5 SHR SWAP4 DUP1 MUL PUSH2 0x1DA1 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B PUSH1 0x0 NOT DUP5 DUP5 PUSH1 0x0 DUP3 PUSH2 0x1DFD JUMPI POP PUSH1 0x1 PUSH2 0xF7B JUMP JUMPDEST DUP2 PUSH2 0x1E0A JUMPI POP PUSH1 0x0 PUSH2 0xF7B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1E20 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1E2A JUMPI PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF7B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1E3B JUMPI PUSH2 0x1E3B PUSH2 0x1F18 JUMP JUMPDEST PUSH1 0x1 DUP5 SHL SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1E51 JUMPI PUSH2 0x1E51 PUSH2 0x1F18 JUMP JUMPDEST POP PUSH2 0xF7B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1E8A JUMPI POP DUP2 DUP2 EXP DUP4 DUP2 GT ISZERO PUSH2 0x1E85 JUMPI PUSH2 0x1E85 PUSH2 0x1F18 JUMP JUMPDEST PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x1E97 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1D9E JUMP JUMPDEST DUP1 DUP7 DIV DUP3 GT ISZERO PUSH2 0x1EA9 JUMPI PUSH2 0x1EA9 PUSH2 0x1F18 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1ECC JUMPI PUSH2 0x1ECC PUSH2 0x1F18 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1EE3 JUMPI PUSH2 0x1EE3 PUSH2 0x1F18 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F03 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EEB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F12 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xA6 SWAP14 0xCD PUSH6 0x2B30EBE94125 0xDC SWAP4 GT 0xD5 0x23 SWAP10 0x4A 0xD7 EQ PUSH5 0xA9485B6C18 MULMOD DUP4 COINBASE 0xC1 0xBF LOG3 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "909:6931:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1525:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7439:112;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2591:177::-;;;;;;:::i;:::-;;:::i;6613:132::-;;;;;;:::i;:::-;;:::i;1429:26::-;;;:::i;1132:28::-;;;:::i;:::-;;;;;;;:::i;1701:884::-;;;;;;:::i;:::-;;:::i;:::-;;1580:17;;;:::i;6885:130::-;;;;;;:::i;:::-;;:::i;1166:29::-;;;:::i;7021:133::-;;;;;;:::i;:::-;;:::i;1086:40::-;;;;;;:::i;:::-;;:::i;1461:27::-;;;:::i;1201:28::-;;;:::i;7160:133::-;;;;;;:::i;:::-;;:::i;1636:26::-;;;:::i;1934:101:0:-;;;:::i;1669:25:11:-;;;:::i;1302:85:0:-;;;:::i;1293:18:11:-;;;:::i;6142:215::-;;;;;;:::i;:::-;;:::i;1604:26::-;;;:::i;6363:118::-;;;;;;:::i;:::-;;:::i;7557:161::-;;;;;;:::i;:::-;;:::i;1494:24::-;;;:::i;6751:128::-;;;;;;:::i;:::-;;:::i;1235:29::-;;;:::i;1395:28::-;;;:::i;1356:32::-;;;:::i;4246:766::-;;;:::i;6487:120::-;;;;;;:::i;:::-;;:::i;7724:114::-;;;;;;:::i;:::-;;:::i;7299:134::-;;;;;;:::i;:::-;;:::i;1270:17::-;;;:::i;1555:18::-;;;:::i;2184:198:0:-;;;;;;:::i;:::-;;:::i;1318:32:11:-;;;:::i;1525:24::-;;;;:::o;7439:112::-;7497:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;7513:3:11::1;:10:::0;;;7540:4:::1;1584:1:0;7439:112:11::0;;;:::o;2591:177::-;2694:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2714:18:11;::::1;;::::0;;;:8:::1;:18;::::0;;;;:26;;;::::1;;-1:-1:-1::0;;2714:26:11;;::::1;;::::0;;;2591:177;;;;:::o;6613:132::-;6681:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6697:13:11::1;:20:::0;6734:4:::1;::::0;6613:132::o;1429:26::-;;;;:::o;1132:28::-;;;-1:-1:-1;;;;;1132:28:11;;:::o;1701:884::-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;2067:16:11::1;:14;:16::i;:::-;2137:6;:16:::0;;-1:-1:-1;;;;;;2137:16:11;;::::1;-1:-1:-1::0;;;;;2137:16:11;;::::1;::::0;;;::::1;::::0;;;2163:7:::1;:18:::0;;;::::1;::::0;;::::1;;::::0;;2191:3:::1;:10:::0;;;::::1;::::0;;::::1;;::::0;;2211:3:::1;:10:::0;;;::::1;::::0;;::::1;;::::0;;2231:4:::1;:12:::0;;;::::1;::::0;;::::1;;::::0;;2253:2:::1;:15:::0;;2258:10:::1;2253:15:::0;;::::1;::::0;::::1;::::0;;;2278:3:::1;:16:::0;;;::::1;::::0;;::::1;::::0;;2320:4:::1;2304:13;:20:::0;2348:4:::1;2334:11;:18:::0;;;2362:12:::1;:19:::0;2403:5:::1;2391:9;:17:::0;2430:4:::1;2418:9;:16:::0;2444:14:::1;:21:::0;;-1:-1:-1;;;;;;;2444:21:11;;::::1;;-1:-1:-1::0;;;;;;2507:12:11;;;::::1;;::::0;;2529:4:::1;:12:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;797:66:1;;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;797:66;1701:884:11;;;;;;;;:::o;1580:17::-;;;-1:-1:-1;;;;;1580:17:11;;:::o;6885:130::-;6952:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6968:12:11::1;:19:::0;7004:4:::1;::::0;6885:130::o;1166:29::-;;;-1:-1:-1;;;;;1166:29:11;;:::o;7021:133::-;7088:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;7104:14:11::1;:22:::0;;;::::1;;-1:-1:-1::0;;;7104:22:11::1;-1:-1:-1::0;;;;7104:22:11;;::::1;;::::0;;-1:-1:-1;7021:133:11;;;:::o;1086:40::-;;;;;;;;;;;;;;;:::o;1461:27::-;;;;:::o;1201:28::-;;;-1:-1:-1;;;;;1201:28:11;;:::o;7160:133::-;7227:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;7243:14:11::1;:22:::0;;;::::1;;-1:-1:-1::0;;;7243:22:11::1;-1:-1:-1::0;;;;7243:22:11;;::::1;;::::0;;-1:-1:-1;7160:133:11;;;:::o;1636:26::-;;;-1:-1:-1;;;1636:26:11;;;;;:::o;1934:101:0:-;1525:12;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;1998:30:::1;2025:1;1998:18;:30::i;:::-;1934:101::o:0;1669:25:11:-;;;-1:-1:-1;;;;;1669:25:11;;:::o;1302:85:0:-;1374:6;;-1:-1:-1;;;;;1374:6:0;1302:85;;:::o;1293:18:11:-;;;-1:-1:-1;;;;;1293:18:11;;:::o;6142:215::-;6251:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;6271:58:11::1;-1:-1:-1::0;;;;;6271:40:11;::::1;6312:10;6324:4:::0;6271:40:::1;:58::i;:::-;-1:-1:-1::0;6346:4:11::1;6142:215:::0;;;;:::o;1604:26::-;;;-1:-1:-1;;;1604:26:11;;;;;:::o;6363:118::-;6424:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6440:2:11::1;:13:::0;;-1:-1:-1;;;;;6440:13:11;::::1;-1:-1:-1::0;;;;;;6440:13:11;;::::1;;::::0;;;6363:118;;;:::o;7557:161::-;7658:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;7678:4:11::1;:12:::0;;-1:-1:-1;;;;;7678:12:11;::::1;-1:-1:-1::0;;;;;;7678:12:11;;::::1;;::::0;;;7557:161;;;:::o;1494:24::-;;;;:::o;6751:128::-;6817:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6833:11:11::1;:18:::0;6868:4:::1;::::0;6751:128::o;1235:29::-;;;-1:-1:-1;;;;;1235:29:11;;:::o;1395:28::-;;;;:::o;1356:32::-;;;-1:-1:-1;;;;;1356:32:11;;:::o;4246:766::-;2825:10;4303:4;2816:20;;;:8;:20;;;;;;;;2808:69;;;;-1:-1:-1;;;2808:69:11;;;;;;;:::i;:::-;4342:3:::1;::::0;:28:::1;::::0;-1:-1:-1;;;4342:28:11;;4319:20:::1;::::0;-1:-1:-1;;;;;4342:3:11::1;::::0;:13:::1;::::0;:28:::1;::::0;4364:4:::1;::::0;4342:28:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4319:51:::0;-1:-1:-1;4384:17:11;4380:59:::1;;4424:4;4417:11;;;;;4380:59;4448:14;4465:46;4501:9;;4465:31;4482:13;;4465:12;:16;;:31;;;;:::i;:::-;:35:::0;::::1;:46::i;:::-;4448:63;;4521:12;4536:44;4570:9;;4536:29;4553:11;;4536:12;:16;;:29;;;;:::i;:44::-;4521:59:::0;-1:-1:-1;4590:13:11::1;4606:34;4521:59:::0;4606:24:::1;:12:::0;4623:6;4606:16:::1;:24::i;:::-;:28:::0;::::1;:34::i;:::-;4590:50;;4651:14;4668;4675:6;4668;:14::i;:::-;4717:4;::::0;4692:3:::1;::::0;4651:31;;-1:-1:-1;4692:39:11::1;::::0;-1:-1:-1;;;;;4692:3:11;;::::1;::::0;4717:4:::1;4651:31:::0;4692:16:::1;:39::i;:::-;4766:2;::::0;4741:3:::1;::::0;:35:::1;::::0;-1:-1:-1;;;;;4741:3:11;;::::1;::::0;4766:2:::1;4771:4:::0;4741:16:::1;:35::i;:::-;4811:3;::::0;4786::::1;::::0;:37:::1;::::0;-1:-1:-1;;;;;4786:3:11;;::::1;::::0;4811::::1;4817:5:::0;4786:16:::1;:37::i;:::-;4838:14;::::0;-1:-1:-1;;;4838:14:11;::::1;;;4834:57;;;4868:12;:10;:12::i;:::-;4905:14;::::0;-1:-1:-1;;;4905:14:11;::::1;;;4901:83;;;4947:10;;;;;;;;;-1:-1:-1::0;;;;;4947:10:11::1;-1:-1:-1::0;;;;;4935:36:11::1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4901:83;5001:4;4994:11;;;;;;;4246:766:::0;:::o;6487:120::-;6549:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6565:3:11::1;:14:::0;;-1:-1:-1;;;;;6565:14:11;::::1;-1:-1:-1::0;;;;;;6565:14:11;;::::1;;::::0;;;6487:120;;;:::o;7724:114::-;7782:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;7798:4:11::1;:12:::0;;-1:-1:-1;;;;;7798:12:11;::::1;-1:-1:-1::0;;;;;;7798:12:11;;::::1;;::::0;;;7724:114;;;:::o;7299:134::-;7368:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;7384:10:11::1;:21:::0;;-1:-1:-1;;;;;7384:21:11;::::1;-1:-1:-1::0;;;;;;7384:21:11;;::::1;;::::0;;;7299:134;;;:::o;1270:17::-;;;-1:-1:-1;;;;;1270:17:11;;:::o;1555:18::-;;;;:::o;2184:198:0:-;1525:12;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2272:22:0;::::1;2264:73;;;;-1:-1:-1::0;;;2264:73:0::1;;;;;;;:::i;:::-;2347:28;2366:8;2347:18;:28::i;:::-;2184:198:::0;:::o;1318:32:11:-;;;-1:-1:-1;;;;;1318:32:11;;:::o;876:96:5:-;955:10;876:96;:::o;988:126:0:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;1045:26:0::1;:24;:26::i;:::-;1081;:24;:26::i;:::-;801:14:1::0;797:66;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;988:126:0;:::o;2536:187::-;2628:6;;;-1:-1:-1;;;;;2644:17:0;;;-1:-1:-1;;;;;;2644:17:0;;;;;;;2676:40;;2628:6;;;2644:17;2628:6;;2676:40;;2609:16;;2676:40;2536:187;;:::o;745:216:3:-;868:86;888:5;918:23;;;943:2;947:5;895:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;895:58:3;;;;;;;;;;;;;;-1:-1:-1;;;;;895:58:3;-1:-1:-1;;;;;;895:58:3;;;;;;;;;;868:19;:86::i;:::-;745:216;;;:::o;3462:96:6:-;3520:7;3546:5;3550:1;3546;:5;:::i;:::-;3539:12;3462:96;-1:-1:-1;;;3462:96:6:o;3847:::-;3905:7;3931:5;3935:1;3931;:5;:::i;3119:96::-;3177:7;3203:5;3207:1;3203;:5;:::i;3298:942:11:-;3395:7;;3419:3;;3433;;3395:43;;-1:-1:-1;;;3395:43:11;;3348:7;;;;-1:-1:-1;;;;;3395:7:11;;;;:15;;:43;;3419:3;;;;3433;;;;3395:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3448:3;;3367:71;;-1:-1:-1;3448:43:11;;-1:-1:-1;;;;;3448:3:11;3367:71;3484:6;3448:16;:43::i;:::-;3502:16;3520;3570:17;-1:-1:-1;;;;;3542:67:11;;:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3501:110;-1:-1:-1;;;;;3501:110:11;;;-1:-1:-1;;;;;3501:110:11;;;3621:14;3653:17;-1:-1:-1;;;;;3638:40:11;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3750:3;;3621:59;;-1:-1:-1;3691:17:11;;;;-1:-1:-1;;;;;3732:22:11;;;3750:3;;3732:22;:92;;3805:8;3815;3732:92;;;3770:8;3780;3732:92;3690:134;;;;3834:17;3854:43;3867:6;3875:9;3886:10;3854:12;:43::i;:::-;3968:3;;3834:63;;-1:-1:-1;3908:18:11;;;;-1:-1:-1;;;;;3950:22:11;;;3968:3;;3950:22;:98;;4026:9;4045:1;3950:98;;;3996:1;4000:9;3950:98;4185:12;;;4195:1;4185:12;;;;;;;;;-1:-1:-1;;;4058:149:11;;;3907:141;;-1:-1:-1;3907:141:11;-1:-1:-1;;;;;;4058:38:11;;;;;:149;;3907:141;;;;4166:4;;4058:149;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4224:9:11;;3298:942;-1:-1:-1;;;;;;;;;;;;;3298:942:11:o;5018:1118::-;5081:7;;5105:4;;5120:3;;5081:44;;-1:-1:-1;;;5081:44:11;;5059:19;;-1:-1:-1;;;;;5081:7:11;;;;:15;;:44;;5105:4;;;;5120:3;;5081:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5158:3;;:26;;-1:-1:-1;;;5158:26:11;;5059:66;;-1:-1:-1;5135:20:11;;-1:-1:-1;;;;;5158:3:11;;;;:13;;:26;;5059:66;;5158:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5218:4;;:27;;-1:-1:-1;;;5218:27:11;;5135:49;;-1:-1:-1;5194:21:11;;-1:-1:-1;;;;;5218:4:11;;;;:14;;:27;;5233:11;;5218:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5194:51;;5255:20;5301:4;;;;;;;;;-1:-1:-1;;;;;5301:4:11;-1:-1:-1;;;;;5278:38:11;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5255:63;;;;5328:19;5380:2;5365:12;:17;5361:79;;;5412:17;5417:12;5412:2;:17;:::i;:::-;5398:31;;5361:79;5449:9;5469:15;5473:11;5469:2;:15;:::i;:::-;5461:24;;:4;:24;:::i;:::-;5449:36;-1:-1:-1;5495:16:11;5514:38;5539:12;5514:20;:13;5449:36;5514:17;:20::i;:38::-;5495:57;;5562:29;5601:17;5643:4;5632:8;:15;5628:446;;;5696:30;5721:4;5697:18;:8;5710:4;5697:12;:18::i;5696:30::-;5684:42;;5756:9;;5744;:21;5740:172;;;5809:1;5785:25;;5740:172;;;5873:9;;:24;;5887:9;5873:13;:24::i;:::-;5849:48;;5740:172;5628:446;;;5974:27;5996:4;5975:15;5982:8;5975:4;:15;:::i;5974:27::-;6039:9;;5962:39;;-1:-1:-1;6039:24:11;;5962:39;6039:13;:24::i;:::-;6015:48;;5628:446;6083:4;;6096:3;;6083:46;;-1:-1:-1;;;6083:46:11;;-1:-1:-1;;;;;6083:4:11;;;;:12;;:46;;6101:21;;6083:4;;:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5018:1118;;;;;;;;;:::o;807:64:5:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;801:14;797:66;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;807:64:5;:::o;1120:106:0:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;1187:32:0::1;1206:12;:10;:12::i;:::-;1187:18;:32::i;3306:717:3:-:0;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:3;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:3;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:3;;;;;;;:::i;2901:391:11:-;3033:17;;3088:18;:8;3101:4;3088:12;:18::i;:::-;3062:44;-1:-1:-1;3116:17:11;3136:31;3062:44;3156:10;3136:19;:31::i;:::-;3116:51;-1:-1:-1;3177:19:11;3199:41;3224:15;3199:20;:9;3213:5;3199:13;:20::i;:::-;:24;;:41::i;:::-;3177:63;-1:-1:-1;3262:23:11;3177:63;3262:9;:23;:::i;:::-;3250:35;2901:391;-1:-1:-1;;;;;;;2901:391:11:o;2752:96:6:-;2810:7;2836:5;2840:1;2836;:5;:::i;3525:223:4:-;3658:12;3689:52;3711:6;3719:4;3725:1;3728:12;3689:21;:52::i;:::-;3682:59;3525:223;-1:-1:-1;;;;3525:223:4:o;4612:499::-;4777:12;4834:5;4809:21;:30;;4801:81;;;;-1:-1:-1;;;4801:81:4;;;;;;;:::i;:::-;4900:18;4911:6;4900:10;:18::i;:::-;4892:60;;;;-1:-1:-1;;;4892:60:4;;;;;;;:::i;:::-;4964:12;4978:23;5005:6;-1:-1:-1;;;;;5005:11:4;5024:5;5031:4;5005:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4963:73;;;;5053:51;5070:7;5079:10;5091:12;5053:16;:51::i;782:377::-;1098:20;1144:8;;;782:377::o;6275:692::-;6421:12;6449:7;6445:516;;;-1:-1:-1;6479:10:4;6472:17;;6445:516;6590:17;;:21;6586:365;;6784:10;6778:17;6844:15;6831:10;6827:2;6823:19;6816:44;6733:145;6923:12;6916:20;;-1:-1:-1;;;6916:20:4;;;;;;;;:::i;14:190:12:-;95:13;;-1:-1:-1;;;;;137:42:12;;127:53;;117:2;;194:1;191;184:12;209:259;;321:2;309:9;300:7;296:23;292:32;289:2;;;342:6;334;327:22;289:2;386:9;373:23;405:33;432:5;405:33;:::i;473:263::-;;596:2;584:9;575:7;571:23;567:32;564:2;;;617:6;609;602:22;564:2;654:9;648:16;673:33;700:5;673:33;:::i;741:396::-;;;867:2;855:9;846:7;842:23;838:32;835:2;;;888:6;880;873:22;835:2;932:9;919:23;951:33;978:5;951:33;:::i;:::-;1003:5;-1:-1:-1;1060:2:12;1045:18;;1032:32;1073;1032;1073;:::i;:::-;1124:7;1114:17;;;825:312;;;;;:::o;1142:327::-;;;1271:2;1259:9;1250:7;1246:23;1242:32;1239:2;;;1292:6;1284;1277:22;1239:2;1336:9;1323:23;1355:33;1382:5;1355:33;:::i;:::-;1407:5;1459:2;1444:18;;;;1431:32;;-1:-1:-1;;;1229:240:12:o;1474:253::-;;1583:2;1571:9;1562:7;1558:23;1554:32;1551:2;;;1604:6;1596;1589:22;1551:2;1648:9;1635:23;1667:30;1691:5;1667:30;:::i;1732:257::-;;1852:2;1840:9;1831:7;1827:23;1823:32;1820:2;;;1873:6;1865;1858:22;1820:2;1910:9;1904:16;1929:30;1953:5;1929:30;:::i;2561:1288::-;;;;;;;;2942:3;2930:9;2921:7;2917:23;2913:33;2910:2;;;2964:6;2956;2949:22;2910:2;3008:9;2995:23;3027:33;3054:5;3027:33;:::i;:::-;3079:5;-1:-1:-1;3136:2:12;3121:18;;3108:32;3149:35;3108:32;3149:35;:::i;:::-;3203:7;-1:-1:-1;3262:2:12;3247:18;;3234:32;3275:35;3234:32;3275:35;:::i;:::-;3329:7;-1:-1:-1;3388:2:12;3373:18;;3360:32;3401:35;3360:32;3401:35;:::i;:::-;3455:7;-1:-1:-1;3514:3:12;3499:19;;3486:33;3528:35;3486:33;3528:35;:::i;:::-;3582:7;-1:-1:-1;3641:3:12;3626:19;;3613:33;3655:35;3613:33;3655:35;:::i;:::-;3709:7;-1:-1:-1;3768:3:12;3753:19;;3740:33;3782:35;3740:33;3782:35;:::i;:::-;3836:7;3826:17;;;2900:949;;;;;;;;;;:::o;3854:474::-;;;;4010:2;3998:9;3989:7;3985:23;3981:32;3978:2;;;4031:6;4023;4016:22;3978:2;4059:42;4091:9;4059:42;:::i;:::-;4049:52;;4120:51;4167:2;4156:9;4152:18;4120:51;:::i;:::-;4110:61;;4214:2;4203:9;4199:18;4193:25;4258:10;4251:5;4247:22;4240:5;4237:33;4227:2;;4289:6;4281;4274:22;4227:2;4317:5;4307:15;;;3968:360;;;;;:::o;4333:190::-;;4445:2;4433:9;4424:7;4420:23;4416:32;4413:2;;;4466:6;4458;4451:22;4413:2;-1:-1:-1;4494:23:12;;4403:120;-1:-1:-1;4403:120:12:o;4528:194::-;;4651:2;4639:9;4630:7;4626:23;4622:32;4619:2;;;4672:6;4664;4657:22;4619:2;-1:-1:-1;4700:16:12;;4609:113;-1:-1:-1;4609:113:12:o;4727:293::-;;4848:2;4836:9;4827:7;4823:23;4819:32;4816:2;;;4869:6;4861;4854:22;4816:2;4906:9;4900:16;4956:4;4949:5;4945:16;4938:5;4935:27;4925:2;;4981:6;4973;4966:22;5025:259;;5106:5;5100:12;5133:6;5128:3;5121:19;5149:63;5205:6;5198:4;5193:3;5189:14;5182:4;5175:5;5171:16;5149:63;:::i;:::-;5266:2;5245:15;-1:-1:-1;;5241:29:12;5232:39;;;;5273:4;5228:50;;5076:208;-1:-1:-1;;5076:208:12:o;5289:274::-;;5456:6;5450:13;5472:53;5518:6;5513:3;5506:4;5498:6;5494:17;5472:53;:::i;:::-;5541:16;;;;;5426:137;-1:-1:-1;;5426:137:12:o;5568:203::-;-1:-1:-1;;;;;5732:32:12;;;;5714:51;;5702:2;5687:18;;5669:102::o;5776:304::-;-1:-1:-1;;;;;6006:15:12;;;5988:34;;6058:15;;6053:2;6038:18;;6031:43;5938:2;5923:18;;5905:175::o;6085:274::-;-1:-1:-1;;;;;6277:32:12;;;;6259:51;;6341:2;6326:18;;6319:34;6247:2;6232:18;;6214:145::o;6364:187::-;6529:14;;6522:22;6504:41;;6492:2;6477:18;;6459:92::o;7480:221::-;;7629:2;7618:9;7611:21;7649:46;7691:2;7680:9;7676:18;7668:6;7649:46;:::i;7706:402::-;7908:2;7890:21;;;7947:2;7927:18;;;7920:30;7986:34;7981:2;7966:18;;7959:62;-1:-1:-1;;;8052:2:12;8037:18;;8030:36;8098:3;8083:19;;7880:228::o;8113:400::-;8315:2;8297:21;;;8354:2;8334:18;;;8327:30;8393:34;8388:2;8373:18;;8366:62;-1:-1:-1;;;8459:2:12;8444:18;;8437:34;8503:3;8488:19;;8287:226::o;8518:402::-;8720:2;8702:21;;;8759:2;8739:18;;;8732:30;8798:34;8793:2;8778:18;;8771:62;-1:-1:-1;;;8864:2:12;8849:18;;8842:36;8910:3;8895:19;;8692:228::o;8925:410::-;9127:2;9109:21;;;9166:2;9146:18;;;9139:30;9205:34;9200:2;9185:18;;9178:62;-1:-1:-1;;;9271:2:12;9256:18;;9249:44;9325:3;9310:19;;9099:236::o;9340:356::-;9542:2;9524:21;;;9561:18;;;9554:30;9620:34;9615:2;9600:18;;9593:62;9687:2;9672:18;;9514:182::o;9701:353::-;9903:2;9885:21;;;9942:2;9922:18;;;9915:30;9981:31;9976:2;9961:18;;9954:59;10045:2;10030:18;;9875:179::o;10059:406::-;10261:2;10243:21;;;10300:2;10280:18;;;10273:30;10339:34;10334:2;10319:18;;10312:62;-1:-1:-1;;;10405:2:12;10390:18;;10383:40;10455:3;10440:19;;10233:232::o;10470:177::-;10616:25;;;10604:2;10589:18;;10571:76::o;10652:460::-;;10883:6;10872:9;10865:25;10926:6;10921:2;10910:9;10906:18;10899:34;10998:1;10994;10989:3;10985:11;10981:19;10973:6;10969:32;10964:2;10953:9;10949:18;10942:60;11038:3;11033:2;11022:9;11018:18;11011:31;11059:47;11101:3;11090:9;11086:19;11078:6;11059:47;:::i;:::-;11051:55;10855:257;-1:-1:-1;;;;;;10855:257:12:o;11117:329::-;11313:25;;;11369:2;11354:18;;11347:34;;;;11424:14;11417:22;11412:2;11397:18;;11390:50;11301:2;11286:18;;11268:178::o;11451:128::-;;11522:1;11518:6;11515:1;11512:13;11509:2;;;11528:18;;:::i;:::-;-1:-1:-1;11564:9:12;;11499:80::o;11584:217::-;;11650:1;11640:2;;-1:-1:-1;;;11675:31:12;;11729:4;11726:1;11719:15;11757:4;11682:1;11747:15;11640:2;-1:-1:-1;11786:9:12;;11630:171::o;11806:453::-;11902:6;11925:5;11939:314;11988:1;12025:2;12015:8;12012:16;12002:2;;12032:5;;;12002:2;12073:4;12068:3;12064:14;12058:4;12055:24;12052:2;;;12082:18;;:::i;:::-;12132:2;12122:8;12118:17;12115:2;;;12147:16;;;;12115:2;12226:17;;;;;12186:15;;11939:314;;;11883:376;;;;;;;:::o;12264:139::-;;12353:44;-1:-1:-1;;12380:8:12;12374:4;12408:922;12492:8;12482:2;;-1:-1:-1;12533:1:12;12547:5;;12482:2;12581:4;12571:2;;-1:-1:-1;12618:1:12;12632:5;;12571:2;12663:4;12681:1;12676:59;;;;12749:1;12744:183;;;;12656:271;;12676:59;12706:1;12697:10;;12720:5;;;12744:183;12781:3;12771:8;12768:17;12765:2;;;12788:18;;:::i;:::-;12844:1;12834:8;12830:16;12821:25;;12872:3;12865:5;12862:14;12859:2;;;12879:18;;:::i;:::-;12912:5;;;12656:271;;13011:2;13001:8;12998:16;12992:3;12986:4;12983:13;12979:36;12973:2;12963:8;12960:16;12955:2;12949:4;12946:12;12942:35;12939:77;12936:2;;;-1:-1:-1;13048:19:12;;;13083:14;;;13080:2;;;13100:18;;:::i;:::-;13133:5;;12936:2;13180:42;13218:3;13208:8;13202:4;13199:1;13180:42;:::i;:::-;13255:6;13250:3;13246:16;13237:7;13234:29;13231:2;;;13266:18;;:::i;:::-;13304:20;;12472:858;-1:-1:-1;;;;12472:858:12:o;13335:168::-;;13441:1;13437;13433:6;13429:14;13426:1;13423:21;13418:1;13411:9;13404:17;13400:45;13397:2;;;13448:18;;:::i;:::-;-1:-1:-1;13488:9:12;;13387:116::o;13508:125::-;;13576:1;13573;13570:8;13567:2;;;13581:18;;:::i;:::-;-1:-1:-1;13618:9:12;;13557:76::o;13638:258::-;13710:1;13720:113;13734:6;13731:1;13728:13;13720:113;;;13810:11;;;13804:18;13791:11;;;13784:39;13756:2;13749:10;13720:113;;;13851:6;13848:1;13845:13;13842:2;;;13886:1;13877:6;13872:3;13868:16;13861:27;13842:2;;13691:205;;;:::o;13901:127::-;13962:10;13957:3;13953:20;13950:1;13943:31;13993:4;13990:1;13983:15;14017:4;14014:1;14007:15;14033:133;-1:-1:-1;;;;;14110:31:12;;14100:42;;14090:2;;14156:1;14153;14146:12;14171:120;14259:5;14252:13;14245:21;14238:5;14235:32;14225:2;;14281:1;14278;14271:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1614200",
								"executionCost": "1694",
								"totalCost": "1615894"
							},
							"external": {
								"Factory()": "1137",
								"PRECISION()": "1117",
								"Router()": "1202",
								"autoAdjustFarm()": "1169",
								"basePoint()": "1075",
								"dev()": "1138",
								"executor(address)": "1348",
								"farm()": "1182",
								"initialize(address,address,address,address,address,address,address)": "infinite",
								"jointExecution()": "infinite",
								"op()": "1136",
								"openStabilizer()": "1146",
								"owner()": "1117",
								"pid()": "1116",
								"renounceOwnership()": "23619",
								"sea()": "1115",
								"setAutoAdjustFarm(bool)": "22239",
								"setDev(address)": "22298",
								"setExecutor(address,bool)": "infinite",
								"setFarm(address)": "22320",
								"setOp(address)": "22232",
								"setOpenStabilizer(bool)": "22238",
								"setPid(uint256)": "21331",
								"setStabilizer(address)": "22231",
								"setToDevPercent(uint256)": "21384",
								"setToOpPercent(uint256)": "21361",
								"setToSseaPercent(uint256)": "21363",
								"setUSDCAddress(address)": "22254",
								"ssea()": "1203",
								"stabilizer()": "1203",
								"toDevPercent()": "1140",
								"toOpPercent()": "1074",
								"toSseaPercent()": "1073",
								"transferOwnership(address)": "infinite",
								"usc()": "1138",
								"usdc()": "1116",
								"withdrawalERC20(address,uint256)": "infinite"
							},
							"internal": {
								"adjustFarm()": "infinite",
								"buySea(uint256)": "infinite",
								"getAmountOut(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 909,
									"end": 7840,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 7840,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122058a69dcd652b30ebe94125dc9311d523994ad71464a9485b6c18098341c1bfa364736f6c63430008000033",
									".code": [
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "BD0B1F44"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "DB7F521A"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "DB7F521A"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "EC1F1F69"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "F1068454"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "F6D7EADE"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "BD0B1F44"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "C83DD231"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "D10C06A2"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "D477F05F"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "D4F26C51"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "A36A7526"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "A36A7526"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "AAF5BFC3"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "AAF5EB68"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "AF5518C4"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "B8BB97A1"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "91CCA3DB"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "930ED033"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "9DA5B0D5"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "3E413BEE"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "4ECAAC41"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "4ECAAC41"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "55C746D1"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "58DE5DE8"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "7E47961C"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "3E413BEE"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "4591DB50"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "48C7E528"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "4AE6A027"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "2C535A52"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "2C535A52"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "3011D3D5"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "35876476"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "36E9332D"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "3C850E1E"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "16D03993"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "1B0D8AAB"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "1E1BFF3F"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "27C42A50"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7840,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4246,
											"end": 5012,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 4246,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 4246,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 4246,
											"end": 5012,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7497,
											"end": 7501,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7513,
											"end": 7516,
											"name": "PUSH",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 7513,
											"end": 7523,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7513,
											"end": 7523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7513,
											"end": 7523,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7540,
											"end": 7544,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7551,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2722,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6697,
											"end": 6710,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 6697,
											"end": 6717,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6734,
											"end": 6738,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6734,
											"end": 6738,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6613,
											"end": 6745,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2067,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "6C"
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2194,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2214,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2281,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "1388"
										},
										{
											"begin": 2304,
											"end": 2317,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 11,
											"value": "9C4"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2362,
											"end": 2381,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2430,
											"end": 2434,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 2418,
											"end": 2427,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 2418,
											"end": 2434,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "OR",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2533,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 797,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6952,
											"end": 6956,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6968,
											"end": 6980,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 6968,
											"end": 6987,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7004,
											"end": 7008,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7004,
											"end": 7008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6885,
											"end": 7015,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7104,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7021,
											"end": 7154,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7243,
											"end": 7257,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7243,
											"end": 7265,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7160,
											"end": 7293,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6251,
											"end": 6255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6271,
											"end": 6329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6271,
											"end": 6311,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6271,
											"end": 6311,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6322,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6328,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6271,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 6271,
											"end": 6329,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6271,
											"end": 6329,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 6271,
											"end": 6329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6142,
											"end": 6357,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6424,
											"end": 6428,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6440,
											"end": 6442,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6481,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7678,
											"end": 7682,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 7678,
											"end": 7690,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7678,
											"end": 7690,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7678,
											"end": 7690,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7678,
											"end": 7690,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7678,
											"end": 7690,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7678,
											"end": 7690,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7678,
											"end": 7690,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7678,
											"end": 7690,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7678,
											"end": 7690,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7678,
											"end": 7690,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7678,
											"end": 7690,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7557,
											"end": 7718,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6833,
											"end": 6844,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 6833,
											"end": 6851,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6868,
											"end": 6872,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6868,
											"end": 6872,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6751,
											"end": 6879,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4246,
											"end": 5012,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 4246,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2835,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4307,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2824,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4345,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4342,
											"end": 4345,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4339,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4339,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4342,
											"end": 4345,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4355,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 4342,
											"end": 4355,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4368,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 4342,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4384,
											"end": 4401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4380,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4380,
											"end": 4439,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4417,
											"end": 4428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4417,
											"end": 4428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4417,
											"end": 4428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4417,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4417,
											"end": 4428,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4380,
											"end": 4439,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4380,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 4501,
											"end": 4510,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 4501,
											"end": 4510,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4465,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4465,
											"end": 4477,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4465,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 4465,
											"end": 4481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4465,
											"end": 4496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4465,
											"end": 4496,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4465,
											"end": 4496,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4465,
											"end": 4496,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4465,
											"end": 4496,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4465,
											"end": 4496,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4465,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4465,
											"end": 4500,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4465,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 4465,
											"end": 4511,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4465,
											"end": 4511,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 4465,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 4511,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 4511,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4533,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 4570,
											"end": 4579,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 4570,
											"end": 4579,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4536,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4553,
											"end": 4564,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 4553,
											"end": 4564,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4536,
											"end": 4548,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4536,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 4536,
											"end": 4552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4536,
											"end": 4565,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4536,
											"end": 4565,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4536,
											"end": 4565,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4536,
											"end": 4565,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4536,
											"end": 4565,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4536,
											"end": 4580,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 4536,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4580,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4590,
											"end": 4603,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 4521,
											"end": 4580,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4623,
											"end": 4629,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 4606,
											"end": 4630,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4606,
											"end": 4630,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 4606,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 4606,
											"end": 4640,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4606,
											"end": 4640,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 4606,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4590,
											"end": 4640,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4590,
											"end": 4640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4651,
											"end": 4665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 4675,
											"end": 4681,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4668,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 4668,
											"end": 4682,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4668,
											"end": 4682,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 4668,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4717,
											"end": 4721,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 4717,
											"end": 4721,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4692,
											"end": 4695,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 4692,
											"end": 4695,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4651,
											"end": 4682,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4651,
											"end": 4682,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 4692,
											"end": 4731,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4692,
											"end": 4695,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4692,
											"end": 4695,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4692,
											"end": 4695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4717,
											"end": 4721,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4651,
											"end": 4682,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4692,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 4692,
											"end": 4731,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4692,
											"end": 4731,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 4692,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4766,
											"end": 4768,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 4766,
											"end": 4768,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4766,
											"end": 4768,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4771,
											"end": 4775,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4814,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 4811,
											"end": 4814,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4786,
											"end": 4789,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4786,
											"end": 4789,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4786,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 4786,
											"end": 4823,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4786,
											"end": 4789,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4786,
											"end": 4789,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4786,
											"end": 4789,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4786,
											"end": 4789,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4814,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4786,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 4786,
											"end": 4823,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4786,
											"end": 4823,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 4786,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4891,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 4834,
											"end": 4891,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 4868,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4905,
											"end": 4919,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 4905,
											"end": 4919,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4905,
											"end": 4919,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4905,
											"end": 4919,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4905,
											"end": 4919,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4905,
											"end": 4919,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4984,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 4901,
											"end": 4984,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4935,
											"end": 4971,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4971,
											"name": "PUSH",
											"source": 11,
											"value": "796C7BE7"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4984,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 4901,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4994,
											"end": 5005,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4994,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4994,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4994,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4994,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4994,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4994,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 5012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 5012,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6549,
											"end": 6553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6565,
											"end": 6568,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6487,
											"end": 6607,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7786,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7798,
											"end": 7802,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7724,
											"end": 7838,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7384,
											"end": 7394,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 7384,
											"end": 7405,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7384,
											"end": 7405,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7384,
											"end": 7405,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7384,
											"end": 7405,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7384,
											"end": 7405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7384,
											"end": 7405,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7384,
											"end": 7405,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7384,
											"end": 7405,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7384,
											"end": 7405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7384,
											"end": 7405,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7384,
											"end": 7405,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7299,
											"end": 7433,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2366,
											"end": 2374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 11,
											"value": "6C"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 955,
											"end": 965,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 876,
											"end": 972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1045,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1081,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 888,
											"end": 893,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 943,
											"end": 945,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 947,
											"end": 952,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 868,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3547,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 3935,
											"end": 3936,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3932,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 3207,
											"end": 3208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3298,
											"end": 4240,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 3298,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3402,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 3395,
											"end": 3402,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3433,
											"end": 3436,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6A43905"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3395,
											"end": 3402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3402,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3402,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "PUSH",
											"source": 11,
											"value": "E6A43905"
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3436,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3436,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3436,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3436,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 3395,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3451,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3448,
											"end": 3451,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3367,
											"end": 3438,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3367,
											"end": 3438,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3448,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3448,
											"end": 3491,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3448,
											"end": 3451,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3367,
											"end": 3438,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 3448,
											"end": 3491,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3448,
											"end": 3491,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3448,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3518,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3609,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "902F1AC"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 3542,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3501,
											"end": 3611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3501,
											"end": 3611,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3501,
											"end": 3611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3501,
											"end": 3611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3501,
											"end": 3611,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3501,
											"end": 3611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3501,
											"end": 3611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3621,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3670,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3678,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "DFE1681"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3638,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3621,
											"end": 3680,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3621,
											"end": 3680,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3708,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3691,
											"end": 3708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3708,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3754,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3754,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3754,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3754,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 3732,
											"end": 3824,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3805,
											"end": 3813,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 3823,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 3732,
											"end": 3824,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3824,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 3732,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3778,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3780,
											"end": 3788,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3824,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 3732,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3824,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3824,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3824,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3824,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 3867,
											"end": 3873,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3886,
											"end": 3896,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3854,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 3854,
											"end": 3897,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3854,
											"end": 3897,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 3854,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3968,
											"end": 3971,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3968,
											"end": 3971,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3897,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3897,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3950,
											"end": 3972,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 3972,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 3972,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3968,
											"end": 3971,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3968,
											"end": 3971,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 3972,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 3950,
											"end": 4048,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4035,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4045,
											"end": 4046,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 3950,
											"end": 4048,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 4048,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 3950,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3996,
											"end": 3997,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4009,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 4048,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 3950,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4195,
											"end": 4196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22C0D9F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3907,
											"end": 4048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3907,
											"end": 4048,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3907,
											"end": 4048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4058,
											"end": 4096,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4096,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4096,
											"name": "PUSH",
											"source": 11,
											"value": "22C0D9F"
										},
										{
											"begin": 4058,
											"end": 4096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3907,
											"end": 4048,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3907,
											"end": 4048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3907,
											"end": 4048,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3907,
											"end": 4048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4166,
											"end": 4170,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4166,
											"end": 4170,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 4058,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4224,
											"end": 4233,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4224,
											"end": 4233,
											"name": "SWAP14",
											"source": 11
										},
										{
											"begin": 3298,
											"end": 4240,
											"name": "SWAP13",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3298,
											"end": 4240,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5088,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 5081,
											"end": 5088,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5105,
											"end": 5109,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5105,
											"end": 5109,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5123,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 5120,
											"end": 5123,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6A43905"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5059,
											"end": 5078,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5078,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5081,
											"end": 5088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5088,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5088,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5088,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5096,
											"name": "PUSH",
											"source": 11,
											"value": "E6A43905"
										},
										{
											"begin": 5081,
											"end": 5096,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5105,
											"end": 5109,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5105,
											"end": 5109,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5105,
											"end": 5109,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5105,
											"end": 5109,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5123,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 5081,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5161,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 5158,
											"end": 5161,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5059,
											"end": 5125,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5059,
											"end": 5125,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5135,
											"end": 5155,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5155,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5158,
											"end": 5161,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5161,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5161,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5161,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5171,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 5158,
											"end": 5171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5059,
											"end": 5125,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5059,
											"end": 5125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5135,
											"end": 5184,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5135,
											"end": 5184,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5194,
											"end": 5215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5215,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5232,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 5218,
											"end": 5232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5244,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5244,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5245,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5255,
											"end": 5275,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5278,
											"end": 5316,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5316,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 5278,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5255,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5255,
											"end": 5318,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5255,
											"end": 5318,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5255,
											"end": 5318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5328,
											"end": 5347,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5382,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5382,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5440,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 5361,
											"end": 5440,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5412,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 5417,
											"end": 5429,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5412,
											"end": 5414,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 5412,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 5412,
											"end": 5429,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5412,
											"end": 5429,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 5412,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5398,
											"end": 5429,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5398,
											"end": 5429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5440,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 5361,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5458,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 5473,
											"end": 5484,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5469,
											"end": 5471,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 5469,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 5469,
											"end": 5484,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5469,
											"end": 5484,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 5469,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5461,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 5461,
											"end": 5485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5461,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 5461,
											"end": 5485,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5461,
											"end": 5485,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 5461,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5495,
											"end": 5511,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5539,
											"end": 5551,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5514,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5514,
											"end": 5527,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5485,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5514,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5514,
											"end": 5534,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5514,
											"end": 5552,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5514,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5495,
											"end": 5552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5495,
											"end": 5552,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5562,
											"end": 5591,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5601,
											"end": 5618,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5643,
											"end": 5647,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5632,
											"end": 5640,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5647,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5628,
											"end": 6074,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5628,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 5628,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5696,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 5721,
											"end": 5725,
											"name": "PUSH",
											"source": 11,
											"value": "5AF3107A4000"
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5697,
											"end": 5705,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5697,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5696,
											"end": 5726,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 5696,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5726,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5726,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5765,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 5756,
											"end": 5765,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5744,
											"end": 5753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5744,
											"end": 5765,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5912,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 5740,
											"end": 5912,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5809,
											"end": 5810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5785,
											"end": 5810,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5785,
											"end": 5810,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 5740,
											"end": 5912,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5912,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 5740,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5873,
											"end": 5882,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 5873,
											"end": 5882,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5887,
											"end": 5896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5873,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5897,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5912,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 5740,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5628,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 5628,
											"end": 6074,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5628,
											"end": 6074,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 5628,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 5996,
											"end": 6000,
											"name": "PUSH",
											"source": 11,
											"value": "5AF3107A4000"
										},
										{
											"begin": 5975,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5982,
											"end": 5990,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5975,
											"end": 5979,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5975,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 5975,
											"end": 5990,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5974,
											"end": 6001,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 5974,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6048,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 6039,
											"end": 6048,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5962,
											"end": 6001,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5962,
											"end": 6001,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6039,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 6039,
											"end": 6063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5962,
											"end": 6001,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 6039,
											"end": 6063,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6039,
											"end": 6063,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 6039,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6015,
											"end": 6063,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6015,
											"end": 6063,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5628,
											"end": 6074,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 5628,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6096,
											"end": 6099,
											"name": "PUSH",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 6096,
											"end": 6099,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "236535F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6095,
											"name": "PUSH",
											"source": 11,
											"value": "46CA6BEA"
										},
										{
											"begin": 6083,
											"end": 6095,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6122,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6122,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 6136,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 807,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 1206,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 3790,
											"end": 3794,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3775,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "452"
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "tag",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 3950,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "tag",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2901,
											"end": 3292,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 2901,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3050,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3050,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 3088,
											"end": 3096,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 3105,
											"name": "PUSH",
											"source": 11,
											"value": "26F2"
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3062,
											"end": 3106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 3062,
											"end": 3106,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3156,
											"end": 3166,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3136,
											"end": 3167,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3136,
											"end": 3167,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 3136,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3167,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3177,
											"end": 3196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 3224,
											"end": 3239,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 3199,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3199,
											"end": 3219,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3199,
											"end": 3219,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 3199,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3223,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3262,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 3177,
											"end": 3240,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3262,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 3262,
											"end": 3285,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3262,
											"end": 3285,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 3262,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3285,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3292,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 3292,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3719,
											"end": 3723,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3740,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "tag",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3682,
											"end": 3741,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "tag",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4777,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4834,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "473"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "tag",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "tag",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "476"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "tag",
											"source": 4,
											"value": "476"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 5001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5011,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5005,
											"end": 5016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5024,
											"end": 5029,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 5103,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "tag",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "tag",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6433,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6449,
											"end": 6456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6479,
											"end": 6489,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "tag",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6586,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 6586,
											"end": 6951,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6794,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6778,
											"end": 6795,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6859,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6841,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6823,
											"end": 6842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6733,
											"end": 6878,
											"name": "tag",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 6733,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6923,
											"end": 6935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "493"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 204,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 14,
											"end": 204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 95,
											"end": 108,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 95,
											"end": 108,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 137,
											"end": 179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 137,
											"end": 179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 127,
											"end": 180,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 127,
											"end": 180,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 117,
											"end": 119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 117,
											"end": 119,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 192,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 184,
											"end": 196,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 209,
											"end": 468,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 209,
											"end": 468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 209,
											"end": 468,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 289,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 289,
											"end": 291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 342,
											"end": 348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 340,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 327,
											"end": 349,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 291,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 289,
											"end": 291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 386,
											"end": 395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 373,
											"end": 396,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 405,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 432,
											"end": 437,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 405,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 405,
											"end": 438,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 736,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 473,
											"end": 736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 473,
											"end": 736,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 575,
											"end": 582,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 567,
											"end": 599,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 564,
											"end": 566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 564,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 564,
											"end": 566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 617,
											"end": 623,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 602,
											"end": 624,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 564,
											"end": 566,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 564,
											"end": 566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 654,
											"end": 663,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 648,
											"end": 664,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 673,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 700,
											"end": 705,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 673,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 673,
											"end": 706,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 741,
											"end": 1137,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 741,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 741,
											"end": 1137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 1137,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 867,
											"end": 869,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 846,
											"end": 853,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 842,
											"end": 865,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 838,
											"end": 870,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 835,
											"end": 837,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 835,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 835,
											"end": 837,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 888,
											"end": 894,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 880,
											"end": 886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 873,
											"end": 895,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 835,
											"end": 837,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 835,
											"end": 837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 919,
											"end": 942,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 951,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 951,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 951,
											"end": 984,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 951,
											"end": 984,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 951,
											"end": 984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1064,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 1032,
											"end": 1064,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1131,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1142,
											"end": 1469,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1142,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1469,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1469,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1271,
											"end": 1273,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1268,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1250,
											"end": 1257,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1274,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1336,
											"end": 1345,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1346,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 1382,
											"end": 1387,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 1412,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1229,
											"end": 1469,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1474,
											"end": 1727,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1474,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1474,
											"end": 1727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1585,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1558,
											"end": 1581,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1586,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1604,
											"end": 1610,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1589,
											"end": 1611,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1635,
											"end": 1658,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 1691,
											"end": 1696,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1989,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 1732,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1732,
											"end": 1989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1854,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1838,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1823,
											"end": 1855,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1873,
											"end": 1879,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1865,
											"end": 1871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1858,
											"end": 1880,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 1929,
											"end": 1959,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2945,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2930,
											"end": 2939,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2921,
											"end": 2928,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 2940,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2913,
											"end": 2946,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2970,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2971,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3018,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3084,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3136,
											"end": 3138,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3140,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 3108,
											"end": 3140,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3203,
											"end": 3210,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3262,
											"end": 3264,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3265,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3265,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3234,
											"end": 3266,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 3234,
											"end": 3266,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3275,
											"end": 3310,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3275,
											"end": 3310,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 3275,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3329,
											"end": 3336,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3388,
											"end": 3390,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3373,
											"end": 3391,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3391,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3360,
											"end": 3392,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3401,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 3360,
											"end": 3392,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3401,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3401,
											"end": 3436,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3401,
											"end": 3436,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 3401,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3514,
											"end": 3517,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3499,
											"end": 3518,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3519,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 3486,
											"end": 3519,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3589,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3644,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 3626,
											"end": 3645,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3626,
											"end": 3645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3646,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 3613,
											"end": 3646,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3655,
											"end": 3690,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3655,
											"end": 3690,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 3655,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3716,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3768,
											"end": 3771,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 3753,
											"end": 3772,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3753,
											"end": 3772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3773,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 3740,
											"end": 3773,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3836,
											"end": 3843,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3826,
											"end": 3843,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3826,
											"end": 3843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3826,
											"end": 3843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3854,
											"end": 4328,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 3854,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 4328,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 4328,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 4328,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 4013,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4031,
											"end": 4037,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4029,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4016,
											"end": 4038,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 4091,
											"end": 4100,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 4059,
											"end": 4101,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4059,
											"end": 4101,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 4059,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 4167,
											"end": 4169,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 4120,
											"end": 4171,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4120,
											"end": 4171,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 4120,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4110,
											"end": 4171,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4110,
											"end": 4171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4193,
											"end": 4218,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4268,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4247,
											"end": 4269,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4240,
											"end": 4245,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4237,
											"end": 4270,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4289,
											"end": 4295,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4281,
											"end": 4287,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4274,
											"end": 4296,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4317,
											"end": 4322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4322,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4333,
											"end": 4523,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 4333,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4442,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4424,
											"end": 4431,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4416,
											"end": 4448,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4466,
											"end": 4472,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4464,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4451,
											"end": 4473,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4494,
											"end": 4517,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4517,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4403,
											"end": 4523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4403,
											"end": 4523,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4528,
											"end": 4722,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4528,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4528,
											"end": 4722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4651,
											"end": 4653,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4639,
											"end": 4648,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4626,
											"end": 4649,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4622,
											"end": 4654,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4672,
											"end": 4678,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4664,
											"end": 4670,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4657,
											"end": 4679,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4609,
											"end": 4722,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4609,
											"end": 4722,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4727,
											"end": 5020,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 4727,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 5020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4850,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4836,
											"end": 4845,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4827,
											"end": 4834,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4823,
											"end": 4846,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4819,
											"end": 4851,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 4915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4900,
											"end": 4916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4956,
											"end": 4960,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4949,
											"end": 4954,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4945,
											"end": 4961,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 4943,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 4962,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 4987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 4988,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5025,
											"end": 5284,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 5025,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5025,
											"end": 5284,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5111,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5100,
											"end": 5112,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5133,
											"end": 5139,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5128,
											"end": 5131,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5140,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 5205,
											"end": 5211,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5193,
											"end": 5196,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5203,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5175,
											"end": 5180,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 5149,
											"end": 5212,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5149,
											"end": 5212,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 5149,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5266,
											"end": 5268,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5232,
											"end": 5271,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5232,
											"end": 5271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5232,
											"end": 5271,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5232,
											"end": 5271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5228,
											"end": 5278,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5284,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5284,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5289,
											"end": 5563,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 5289,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5289,
											"end": 5563,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5450,
											"end": 5463,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 5518,
											"end": 5524,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5513,
											"end": 5516,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5510,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5498,
											"end": 5504,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5494,
											"end": 5511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5541,
											"end": 5557,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5541,
											"end": 5557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5541,
											"end": 5557,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5541,
											"end": 5557,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5541,
											"end": 5557,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5426,
											"end": 5563,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5426,
											"end": 5563,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5568,
											"end": 5771,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 5568,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5732,
											"end": 5764,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 5764,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 5764,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 5764,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5714,
											"end": 5765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5714,
											"end": 5765,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5702,
											"end": 5704,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5669,
											"end": 5771,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5776,
											"end": 6080,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 5776,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6006,
											"end": 6021,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6006,
											"end": 6021,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6006,
											"end": 6021,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5988,
											"end": 6022,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5988,
											"end": 6022,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6073,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6053,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6031,
											"end": 6074,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5938,
											"end": 5940,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5905,
											"end": 6080,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6085,
											"end": 6359,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 6085,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6309,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6277,
											"end": 6309,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6277,
											"end": 6309,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6277,
											"end": 6309,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6259,
											"end": 6310,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6259,
											"end": 6310,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6343,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6326,
											"end": 6344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6326,
											"end": 6344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6353,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6249,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6214,
											"end": 6359,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6364,
											"end": 6551,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 6364,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6529,
											"end": 6543,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6529,
											"end": 6543,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6522,
											"end": 6544,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6504,
											"end": 6545,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6504,
											"end": 6545,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6492,
											"end": 6494,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6495,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6477,
											"end": 6495,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6551,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7480,
											"end": 7701,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 7480,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7701,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7618,
											"end": 7627,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7611,
											"end": 7632,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7649,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7691,
											"end": 7693,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7680,
											"end": 7689,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7676,
											"end": 7694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7668,
											"end": 7674,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7649,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 7649,
											"end": 7695,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7706,
											"end": 8108,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 7706,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7910,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7890,
											"end": 7911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7890,
											"end": 7911,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7890,
											"end": 7911,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7947,
											"end": 7949,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 7927,
											"end": 7945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7927,
											"end": 7945,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7927,
											"end": 7945,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7920,
											"end": 7950,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7986,
											"end": 8020,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7981,
											"end": 7983,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 8021,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8030,
											"end": 8066,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8101,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8083,
											"end": 8102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8083,
											"end": 8102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7880,
											"end": 8108,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8113,
											"end": 8513,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 8113,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8317,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8297,
											"end": 8318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8297,
											"end": 8318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8297,
											"end": 8318,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8354,
											"end": 8356,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8334,
											"end": 8352,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8334,
											"end": 8352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8334,
											"end": 8352,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8327,
											"end": 8357,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8393,
											"end": 8427,
											"name": "PUSH",
											"source": 12,
											"value": "6578656375746F723A2063616C6C6572206973206E6F74207468652065786563"
										},
										{
											"begin": 8388,
											"end": 8390,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8373,
											"end": 8391,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8373,
											"end": 8391,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8366,
											"end": 8428,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3ABA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8459,
											"end": 8461,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8444,
											"end": 8462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8444,
											"end": 8462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8437,
											"end": 8471,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8503,
											"end": 8506,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8488,
											"end": 8507,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8488,
											"end": 8507,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8287,
											"end": 8513,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8518,
											"end": 8920,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 8518,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8720,
											"end": 8722,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8702,
											"end": 8723,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8702,
											"end": 8723,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8702,
											"end": 8723,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8759,
											"end": 8761,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 8739,
											"end": 8757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 8757,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 8757,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8732,
											"end": 8762,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8798,
											"end": 8832,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 8793,
											"end": 8795,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8778,
											"end": 8796,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8778,
											"end": 8796,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8864,
											"end": 8866,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 8878,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8910,
											"end": 8913,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8895,
											"end": 8914,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8895,
											"end": 8914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8692,
											"end": 8920,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8925,
											"end": 9335,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 8925,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9127,
											"end": 9129,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9109,
											"end": 9130,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9109,
											"end": 9130,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9109,
											"end": 9130,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9166,
											"end": 9168,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 9146,
											"end": 9164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9164,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9164,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9139,
											"end": 9169,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9239,
											"name": "PUSH",
											"source": 12,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 9200,
											"end": 9202,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9185,
											"end": 9203,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9185,
											"end": 9203,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9240,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9271,
											"end": 9273,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9293,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9325,
											"end": 9328,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9310,
											"end": 9329,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9310,
											"end": 9329,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9099,
											"end": 9335,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9340,
											"end": 9696,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 9340,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9542,
											"end": 9544,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9545,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9524,
											"end": 9545,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9524,
											"end": 9545,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9584,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9620,
											"end": 9654,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9615,
											"end": 9617,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9600,
											"end": 9618,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9600,
											"end": 9618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9593,
											"end": 9655,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9687,
											"end": 9689,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9514,
											"end": 9696,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9701,
											"end": 10054,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 9701,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9903,
											"end": 9905,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9885,
											"end": 9906,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9885,
											"end": 9906,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9885,
											"end": 9906,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9942,
											"end": 9944,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 9922,
											"end": 9940,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9922,
											"end": 9940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9922,
											"end": 9940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9915,
											"end": 9945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9981,
											"end": 10012,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 9976,
											"end": 9978,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9954,
											"end": 10013,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10045,
											"end": 10047,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10030,
											"end": 10048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10030,
											"end": 10048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9875,
											"end": 10054,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10059,
											"end": 10465,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 10059,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10261,
											"end": 10263,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10243,
											"end": 10264,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10243,
											"end": 10264,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10243,
											"end": 10264,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10300,
											"end": 10302,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 10280,
											"end": 10298,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10280,
											"end": 10298,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10280,
											"end": 10298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10273,
											"end": 10303,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10339,
											"end": 10373,
											"name": "PUSH",
											"source": 12,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 10334,
											"end": 10336,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10319,
											"end": 10337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10319,
											"end": 10337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10312,
											"end": 10374,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10405,
											"end": 10407,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10383,
											"end": 10423,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10455,
											"end": 10458,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10440,
											"end": 10459,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10440,
											"end": 10459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10233,
											"end": 10465,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10470,
											"end": 10647,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 10470,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10616,
											"end": 10641,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10616,
											"end": 10641,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10616,
											"end": 10641,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 10606,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10589,
											"end": 10607,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10589,
											"end": 10607,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10571,
											"end": 10647,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10652,
											"end": 11112,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 10652,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10652,
											"end": 11112,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10883,
											"end": 10889,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10872,
											"end": 10881,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10865,
											"end": 10890,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10926,
											"end": 10932,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10921,
											"end": 10923,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10910,
											"end": 10919,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10899,
											"end": 10933,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 10999,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10994,
											"end": 10995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10989,
											"end": 10992,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 10985,
											"end": 10996,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 10981,
											"end": 11000,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10969,
											"end": 11001,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10964,
											"end": 10966,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10953,
											"end": 10962,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10942,
											"end": 11002,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11041,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11022,
											"end": 11031,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11011,
											"end": 11042,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11059,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 11101,
											"end": 11104,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 11090,
											"end": 11099,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11086,
											"end": 11105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11078,
											"end": 11084,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11059,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 11059,
											"end": 11106,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11059,
											"end": 11106,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 11059,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11051,
											"end": 11106,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 10855,
											"end": 11112,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10855,
											"end": 11112,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11117,
											"end": 11446,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 11117,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11313,
											"end": 11338,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11313,
											"end": 11338,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11313,
											"end": 11338,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11369,
											"end": 11371,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11354,
											"end": 11372,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11354,
											"end": 11372,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11347,
											"end": 11381,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11347,
											"end": 11381,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11347,
											"end": 11381,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11347,
											"end": 11381,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11424,
											"end": 11438,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11417,
											"end": 11439,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11412,
											"end": 11414,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11397,
											"end": 11415,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11397,
											"end": 11415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11390,
											"end": 11440,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11301,
											"end": 11303,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11286,
											"end": 11304,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11286,
											"end": 11304,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11268,
											"end": 11446,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11451,
											"end": 11579,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 11451,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11451,
											"end": 11579,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11522,
											"end": 11523,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11518,
											"end": 11524,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 11515,
											"end": 11516,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11512,
											"end": 11525,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11509,
											"end": 11511,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11509,
											"end": 11511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 11509,
											"end": 11511,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11528,
											"end": 11546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 11528,
											"end": 11546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 11528,
											"end": 11546,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11528,
											"end": 11546,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 11528,
											"end": 11546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11564,
											"end": 11573,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11564,
											"end": 11573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11499,
											"end": 11579,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11584,
											"end": 11801,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 11584,
											"end": 11801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11584,
											"end": 11801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11650,
											"end": 11651,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11640,
											"end": 11642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 11640,
											"end": 11642,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11675,
											"end": 11706,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11675,
											"end": 11706,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11729,
											"end": 11733,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 11726,
											"end": 11727,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11719,
											"end": 11734,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11757,
											"end": 11761,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11682,
											"end": 11683,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11747,
											"end": 11762,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11640,
											"end": 11642,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 11640,
											"end": 11642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11786,
											"end": 11795,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11786,
											"end": 11795,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11630,
											"end": 11801,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11806,
											"end": 12259,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 11806,
											"end": 12259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11902,
											"end": 11908,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11925,
											"end": 11930,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 12253,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 11939,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11988,
											"end": 11989,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12025,
											"end": 12027,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12015,
											"end": 12023,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12012,
											"end": 12028,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12002,
											"end": 12004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 12002,
											"end": 12004,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12032,
											"end": 12037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12032,
											"end": 12037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 12032,
											"end": 12037,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12002,
											"end": 12004,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 12002,
											"end": 12004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12073,
											"end": 12077,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12068,
											"end": 12071,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12064,
											"end": 12078,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12058,
											"end": 12062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12055,
											"end": 12079,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12052,
											"end": 12054,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12052,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 12052,
											"end": 12054,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12082,
											"end": 12100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 12082,
											"end": 12100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 12082,
											"end": 12100,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12082,
											"end": 12100,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 12082,
											"end": 12100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12132,
											"end": 12134,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12122,
											"end": 12130,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12118,
											"end": 12135,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12115,
											"end": 12117,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12115,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 12115,
											"end": 12117,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12147,
											"end": 12163,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12147,
											"end": 12163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12147,
											"end": 12163,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12147,
											"end": 12163,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12115,
											"end": 12117,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 12115,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12201,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12201,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 11939,
											"end": 12253,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 12253,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 11939,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 12259,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 12259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 12259,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 12259,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 12259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 12259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 12259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 12259,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12264,
											"end": 12403,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 12264,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12264,
											"end": 12403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 12397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12380,
											"end": 12388,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12374,
											"end": 12378,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12408,
											"end": 13330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12492,
											"end": 12500,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12482,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 12482,
											"end": 12484,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12533,
											"end": 12534,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12547,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 12547,
											"end": 12552,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12482,
											"end": 12484,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 12482,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12581,
											"end": 12585,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12571,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 12571,
											"end": 12573,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12618,
											"end": 12619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12632,
											"end": 12637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 12632,
											"end": 12637,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12571,
											"end": 12573,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 12571,
											"end": 12573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12663,
											"end": 12667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12681,
											"end": 12682,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12676,
											"end": 12735,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12676,
											"end": 12735,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12676,
											"end": 12735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 12676,
											"end": 12735,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12749,
											"end": 12750,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12744,
											"end": 12927,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12744,
											"end": 12927,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12744,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 12744,
											"end": 12927,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12656,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 12656,
											"end": 12927,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12676,
											"end": 12735,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 12676,
											"end": 12735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 12707,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12697,
											"end": 12707,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12697,
											"end": 12707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12720,
											"end": 12725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12720,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 12720,
											"end": 12725,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12744,
											"end": 12927,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 12744,
											"end": 12927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12781,
											"end": 12784,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 12771,
											"end": 12779,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12768,
											"end": 12785,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12765,
											"end": 12767,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12765,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 12765,
											"end": 12767,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "tag",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12844,
											"end": 12845,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12834,
											"end": 12842,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12830,
											"end": 12846,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 12821,
											"end": 12846,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12821,
											"end": 12846,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12872,
											"end": 12875,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12865,
											"end": 12870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12862,
											"end": 12876,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12859,
											"end": 12861,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12859,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 12859,
											"end": 12861,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 12917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 12912,
											"end": 12917,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12656,
											"end": 12927,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 12656,
											"end": 12927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12656,
											"end": 12927,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13011,
											"end": 13013,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13001,
											"end": 13009,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12998,
											"end": 13014,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12992,
											"end": 12995,
											"name": "PUSH",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 12986,
											"end": 12990,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 12996,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12979,
											"end": 13015,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12973,
											"end": 12975,
											"name": "PUSH",
											"source": 12,
											"value": "4E"
										},
										{
											"begin": 12963,
											"end": 12971,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12960,
											"end": 12976,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12955,
											"end": 12957,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 12949,
											"end": 12953,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12946,
											"end": 12958,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12942,
											"end": 12977,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12939,
											"end": 13016,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 12936,
											"end": 12938,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12936,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 12936,
											"end": 12938,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13048,
											"end": 13067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13067,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 13083,
											"end": 13097,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13083,
											"end": 13097,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13083,
											"end": 13097,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13080,
											"end": 13082,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13080,
											"end": 13082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 13080,
											"end": 13082,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13100,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 13100,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 13100,
											"end": 13118,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13100,
											"end": 13118,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 13100,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13133,
											"end": 13138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 13133,
											"end": 13138,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12936,
											"end": 12938,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 12936,
											"end": 12938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13180,
											"end": 13222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 13218,
											"end": 13221,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13208,
											"end": 13216,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13202,
											"end": 13206,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13199,
											"end": 13200,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13180,
											"end": 13222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 13180,
											"end": 13222,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13180,
											"end": 13222,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 13180,
											"end": 13222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13261,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13250,
											"end": 13253,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13246,
											"end": 13262,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13237,
											"end": 13244,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13234,
											"end": 13263,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13231,
											"end": 13233,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13231,
											"end": 13233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 13231,
											"end": 13233,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13304,
											"end": 13324,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 13304,
											"end": 13324,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12472,
											"end": 13330,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12472,
											"end": 13330,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13335,
											"end": 13503,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 13335,
											"end": 13503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13335,
											"end": 13503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13441,
											"end": 13442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13437,
											"end": 13438,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13433,
											"end": 13439,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 13429,
											"end": 13443,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13426,
											"end": 13427,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13444,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13418,
											"end": 13419,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13411,
											"end": 13420,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13404,
											"end": 13421,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13400,
											"end": 13445,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13397,
											"end": 13399,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13397,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 13397,
											"end": 13399,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13448,
											"end": 13466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 13448,
											"end": 13466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 13448,
											"end": 13466,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13448,
											"end": 13466,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 13448,
											"end": 13466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13488,
											"end": 13497,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 13488,
											"end": 13497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13387,
											"end": 13503,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13508,
											"end": 13633,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 13508,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13508,
											"end": 13633,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13576,
											"end": 13577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13573,
											"end": 13574,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13570,
											"end": 13578,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13567,
											"end": 13569,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13567,
											"end": 13569,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 13567,
											"end": 13569,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13581,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 13581,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 13581,
											"end": 13599,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13581,
											"end": 13599,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 13581,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13618,
											"end": 13627,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13618,
											"end": 13627,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13557,
											"end": 13633,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13638,
											"end": 13896,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 13638,
											"end": 13896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13710,
											"end": 13711,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13720,
											"end": 13833,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 13720,
											"end": 13833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13734,
											"end": 13740,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13731,
											"end": 13732,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13728,
											"end": 13741,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13720,
											"end": 13833,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13720,
											"end": 13833,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 13720,
											"end": 13833,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13810,
											"end": 13821,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13810,
											"end": 13821,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13810,
											"end": 13821,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13791,
											"end": 13802,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13791,
											"end": 13802,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13791,
											"end": 13802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13784,
											"end": 13823,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13756,
											"end": 13758,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13749,
											"end": 13759,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13720,
											"end": 13833,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 13720,
											"end": 13833,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13720,
											"end": 13833,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 13720,
											"end": 13833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13851,
											"end": 13857,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13848,
											"end": 13849,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13845,
											"end": 13858,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13842,
											"end": 13844,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13842,
											"end": 13844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 13842,
											"end": 13844,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13886,
											"end": 13887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13877,
											"end": 13883,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13872,
											"end": 13875,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13868,
											"end": 13884,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13861,
											"end": 13888,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13842,
											"end": 13844,
											"name": "tag",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 13842,
											"end": 13844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13842,
											"end": 13844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13691,
											"end": 13896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13691,
											"end": 13896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13691,
											"end": 13896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13691,
											"end": 13896,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13901,
											"end": 14028,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 13901,
											"end": 14028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13962,
											"end": 13972,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 13957,
											"end": 13960,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 13953,
											"end": 13973,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 13950,
											"end": 13951,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13943,
											"end": 13974,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 13997,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 13990,
											"end": 13991,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13983,
											"end": 13998,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14017,
											"end": 14021,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14014,
											"end": 14015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14007,
											"end": 14022,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14033,
											"end": 14166,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 14033,
											"end": 14166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14110,
											"end": 14141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14110,
											"end": 14141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14100,
											"end": 14142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14100,
											"end": 14142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14090,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 14090,
											"end": 14092,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14156,
											"end": 14157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14153,
											"end": 14154,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14146,
											"end": 14158,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14171,
											"end": 14291,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 14171,
											"end": 14291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14259,
											"end": 14264,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14252,
											"end": 14265,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14245,
											"end": 14266,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14235,
											"end": 14267,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14225,
											"end": 14227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 14225,
											"end": 14227,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14281,
											"end": 14282,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14278,
											"end": 14279,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14271,
											"end": 14283,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Factory()": "c83dd231",
							"PRECISION()": "aaf5eb68",
							"Router()": "f6d7eade",
							"autoAdjustFarm()": "9da5b0d5",
							"basePoint()": "16d03993",
							"dev()": "91cca3db",
							"executor(address)": "48c7e528",
							"farm()": "36e9332d",
							"initialize(address,address,address,address,address,address,address)": "35876476",
							"jointExecution()": "d10c06a2",
							"op()": "ec1f1f69",
							"openStabilizer()": "58de5de8",
							"owner()": "8da5cb5b",
							"pid()": "f1068454",
							"renounceOwnership()": "715018a6",
							"sea()": "4ecaac41",
							"setAutoAdjustFarm(bool)": "4591db50",
							"setDev(address)": "d477f05f",
							"setExecutor(address,bool)": "1e1bff3f",
							"setFarm(address)": "d4f26c51",
							"setOp(address)": "a36a7526",
							"setOpenStabilizer(bool)": "55c746d1",
							"setPid(uint256)": "1b0d8aab",
							"setStabilizer(address)": "db7f521a",
							"setToDevPercent(uint256)": "3c850e1e",
							"setToOpPercent(uint256)": "af5518c4",
							"setToSseaPercent(uint256)": "27c42a50",
							"setUSDCAddress(address)": "aaf5bfc3",
							"ssea()": "b8bb97a1",
							"stabilizer()": "7e47961c",
							"toDevPercent()": "4ae6a027",
							"toOpPercent()": "2c535a52",
							"toSseaPercent()": "bd0b1f44",
							"transferOwnership(address)": "f2fde38b",
							"usc()": "3011d3d5",
							"usdc()": "3e413bee",
							"withdrawalERC20(address,uint256)": "930ed033"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoAdjustFarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basePoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farm\",\"outputs\":[{\"internalType\":\"contract IFarm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"_Factory\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"_Router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usc\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_sea\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_ssea\",\"type\":\"address\"},{\"internalType\":\"contract IFarm\",\"name\":\"_farm\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jointExecution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"op\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sea\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setAutoAdjustFarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setDev\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_type\",\"type\":\"bool\"}],\"name\":\"setExecutor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFarm\",\"name\":\"_farm\",\"type\":\"address\"}],\"name\":\"setFarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setOp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setOpenStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setPid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToDevPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToOpPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToSseaPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usdc\",\"type\":\"address\"}],\"name\":\"setUSDCAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssea\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toDevPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toOpPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toSseaPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usc\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"withdrawalERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"helperLogic\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0xd4990a89ec4a4d0b2abc6288d787b8354f0cf2f2f35dc972b4803092880aa981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7833e7e49d0aa8e3349d1e8272a16ce1875272c2a74a2aec302adf6311b340a\",\"dweb:/ipfs/QmdibHBwfMHDMkwxcePJ8w1mGN99b5RFHPYdz6SeTd4v1j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 124,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1825,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "executor",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1828,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "usc",
								"offset": 0,
								"slot": "102",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1831,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "usdc",
								"offset": 0,
								"slot": "103",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1834,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "sea",
								"offset": 0,
								"slot": "104",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1837,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "ssea",
								"offset": 0,
								"slot": "105",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1839,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "op",
								"offset": 0,
								"slot": "106",
								"type": "t_address"
							},
							{
								"astId": 1841,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "dev",
								"offset": 0,
								"slot": "107",
								"type": "t_address"
							},
							{
								"astId": 1844,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "Router",
								"offset": 0,
								"slot": "108",
								"type": "t_contract(IUniswapV2Router02)1784"
							},
							{
								"astId": 1847,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "Factory",
								"offset": 0,
								"slot": "109",
								"type": "t_contract(IUniswapV2Factory)1146"
							},
							{
								"astId": 1849,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toSseaPercent",
								"offset": 0,
								"slot": "110",
								"type": "t_uint256"
							},
							{
								"astId": 1851,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toOpPercent",
								"offset": 0,
								"slot": "111",
								"type": "t_uint256"
							},
							{
								"astId": 1853,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toDevPercent",
								"offset": 0,
								"slot": "112",
								"type": "t_uint256"
							},
							{
								"astId": 1855,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "PRECISION",
								"offset": 0,
								"slot": "113",
								"type": "t_uint256"
							},
							{
								"astId": 1857,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "basePoint",
								"offset": 0,
								"slot": "114",
								"type": "t_uint256"
							},
							{
								"astId": 1859,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "pid",
								"offset": 0,
								"slot": "115",
								"type": "t_uint256"
							},
							{
								"astId": 1862,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "farm",
								"offset": 0,
								"slot": "116",
								"type": "t_contract(IFarm)1804"
							},
							{
								"astId": 1864,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "autoAdjustFarm",
								"offset": 20,
								"slot": "116",
								"type": "t_bool"
							},
							{
								"astId": 1866,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "openStabilizer",
								"offset": 21,
								"slot": "116",
								"type": "t_bool"
							},
							{
								"astId": 1868,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "stabilizer",
								"offset": 0,
								"slot": "117",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20Upgradeable)248": {
								"encoding": "inplace",
								"label": "contract IERC20Upgradeable",
								"numberOfBytes": "20"
							},
							"t_contract(IFarm)1804": {
								"encoding": "inplace",
								"label": "contract IFarm",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Factory)1146": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Factory",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)1784": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							761
						],
						"Initializable": [
							170
						],
						"OwnableUpgradeable": [
							125
						]
					},
					"id": 126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 762,
							"src": "112:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 171,
							"src": "154:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "733:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "733:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 761,
										"src": "748:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "748:18:0"
								}
							],
							"contractDependencies": [
								170,
								761
							],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "198:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								761,
								170
							],
							"name": "OwnableUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "773:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "829:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "860:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:57:0"
									},
									"src": "802:84:0"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "1035:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "1045:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1045:26:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1081:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "1081:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "892:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"modifierName": {
												"id": 19,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "1023:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1023:11:0"
										}
									],
									"name": "__Ownable_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:0:0"
									},
									"scope": 125,
									"src": "988:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 35,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "1206:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1206:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 34,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1187:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1187:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1187:32:0"
											}
										]
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 32,
											"modifierName": {
												"id": 31,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "1165:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1165:11:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 125,
									"src": "1120:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1357:30:0",
										"statements": [
											{
												"expression": {
													"id": 46,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1374:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 45,
												"id": 47,
												"nodeType": "Return",
												"src": "1367:13:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1232:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1348:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:9:0"
									},
									"scope": 125,
									"src": "1302:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1496:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 53,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1514:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1514:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 55,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "1525:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1525:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1514:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1506:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1506:68:0"
											},
											{
												"id": 61,
												"nodeType": "PlaceholderStatement",
												"src": "1584:1:0"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1393:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 63,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:0"
									},
									"src": "1475:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1988:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2025:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2017:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 70,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2017:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 69,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1998:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1998:30:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1598:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 67,
											"modifierName": {
												"id": 66,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1960:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 125,
									"src": "1934:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2254:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 86,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2272:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2292:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2284:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 87,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2284:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2284:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2272:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2296:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 85,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "2264:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "2366:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2347:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2347:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "2347:28:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2041:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 83,
											"modifierName": {
												"id": 82,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "2244:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2244:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2211:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:18:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2254:0:0"
									},
									"scope": 125,
									"src": "2184:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "2599:124:0",
										"statements": [
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "2609:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 106,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2609:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 109,
												"initialValue": {
													"id": 108,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2628:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2609:25:0"
											},
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 110,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2644:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 111,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2653:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2644:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2644:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 115,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "2697:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2707:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 114,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2676:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2676:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "EmitStatement",
												"src": "2671:45:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2388:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "2564:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2599:0:0"
									},
									"scope": 125,
									"src": "2536:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 124,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "2728:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 121,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2728:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 123,
										"length": {
											"hexValue": "3439",
											"id": 122,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2736:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "2728:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 126,
							"src": "693:2063:0"
						}
					],
					"src": "87:2670:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							170
						]
					},
					"id": 171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "161:73:1",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 130,
									"mutability": "mutable",
									"name": "_initialized",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "239:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "239:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "271:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 133,
									"mutability": "mutable",
									"name": "_initializing",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "367:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 132,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "367:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "521:348:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "539:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "556:13:1",
																"subExpression": {
																	"id": 138,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "557:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "539:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "571:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "531:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "531:89:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "531:89:1"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"scope": 168,
														"src": "631:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 144,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "631:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "653:14:1",
													"subExpression": {
														"id": 146,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "654:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "631:36:1"
											},
											{
												"condition": {
													"id": 149,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "681:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "IfStatement",
												"src": "677:98:1",
												"trueBody": {
													"id": 158,
													"nodeType": "Block",
													"src": "697:78:1",
													"statements": [
														{
															"expression": {
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 150,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "711:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "727:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "711:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 153,
															"nodeType": "ExpressionStatement",
															"src": "711:20:1"
														},
														{
															"expression": {
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 154,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "745:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "760:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "745:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 157,
															"nodeType": "ExpressionStatement",
															"src": "745:19:1"
														}
													]
												}
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "785:1:1"
											},
											{
												"condition": {
													"id": 161,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "801:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "IfStatement",
												"src": "797:66:1",
												"trueBody": {
													"id": 166,
													"nodeType": "Block",
													"src": "817:46:1",
													"statements": [
														{
															"expression": {
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 162,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "831:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "847:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "831:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 165,
															"nodeType": "ExpressionStatement",
															"src": "831:21:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "400:93:1",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 169,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:2:1"
									},
									"src": "498:371:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 171,
							"src": "123:748:1"
						}
					],
					"src": "98:774:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							248
						]
					},
					"id": 249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 172,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 173,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 248,
							"linearizedBaseContracts": [
								248
							],
							"name": "IERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "221:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "338:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:9:2"
									},
									"scope": 248,
									"src": "292:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "353:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "449:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:17:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "489:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:2"
									},
									"scope": 248,
									"src": "430:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "504:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "736:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "755:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:35:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "789:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "789:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:6:2"
									},
									"scope": 248,
									"src": "718:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "801:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1089:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1104:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:32:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1144:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:9:2"
									},
									"scope": 248,
									"src": "1070:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1159:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1823:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1840:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:33:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1874:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1874:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:6:2"
									},
									"scope": 248,
									"src": "1806:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1886:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2218:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2242:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2269:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:81:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2308:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:6:2"
									},
									"scope": 248,
									"src": "2187:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2320:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 238,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2498:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2520:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2540:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2540:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2497:57:2"
									},
									"src": "2483:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2561:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 247,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2729:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2752:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2777:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:63:2"
									},
									"src": "2714:78:2"
								}
							],
							"scope": 249,
							"src": "187:2607:2"
						}
					],
					"src": "91:2704:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						],
						"IERC20Upgradeable": [
							248
						],
						"SafeERC20Upgradeable": [
							472
						]
					},
					"id": 473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 251,
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 249,
							"src": "125:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 252,
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 718,
							"src": "160:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "209:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 472,
							"linearizedBaseContracts": [
								472
							],
							"name": "SafeERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 256,
									"libraryName": {
										"id": 254,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 717,
										"src": "708:18:3"
									},
									"nodeType": "UsingForDirective",
									"src": "702:37:3",
									"typeName": {
										"id": 255,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "858:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 267,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "888:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 270,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "918:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 197,
																		"src": "918:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "918:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 273,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "943:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "947:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 268,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "895:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "895:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "895:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 266,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "868:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "868:86:3"
											}
										]
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "776:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 257,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "776:17:3"
													},
													"referencedDeclaration": 248,
													"src": "776:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "809:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "829:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:82:3"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:3"
									},
									"scope": 472,
									"src": "745:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1106:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1136:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 295,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1166:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 229,
																		"src": "1166:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1166:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 298,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "1195:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 299,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1201:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 300,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "1205:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 293,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1143:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1143:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1143:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 291,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1116:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "1116:96:3"
											}
										]
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1002:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 280,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1002:17:3"
													},
													"referencedDeclaration": 248,
													"src": "1002:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1035:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1057:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1077:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:104:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:0:3"
									},
									"scope": 472,
									"src": "967:252:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1596:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "1845:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1854:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1845:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 320,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1844:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 325,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1885:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 324,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1877:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 323,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1877:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1877:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 327,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "1892:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "1861:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 207,
																				"src": "1861:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1861:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1904:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1861:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1860:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1844:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1920:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1823:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "1823:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "2016:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 340,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 309,
																			"src": "2046:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2046:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2046:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 343,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "2070:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "2079:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2023:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2023:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2023:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 336,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1996:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1996:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1996:90:3"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "1225:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1509:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 307,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1509:17:3"
													},
													"referencedDeclaration": 248,
													"src": "1509:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1542:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:87:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:0:3"
									},
									"scope": 472,
									"src": "1479:614:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "2226:194:3",
										"statements": [
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 384,
														"src": "2236:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2236:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 365,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2283:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	],
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2275:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 363,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2275:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2275:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 367,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "2290:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 361,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "2259:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 207,
															"src": "2259:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 369,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2301:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2259:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2236:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "2336:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 376,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 352,
																			"src": "2366:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2366:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2366:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 379,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2390:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 380,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "2399:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 374,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2343:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2343:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2343:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 372,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2316:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "2316:97:3"
											}
										]
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2139:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 350,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "2139:17:3"
													},
													"referencedDeclaration": 248,
													"src": "2139:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2172:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2197:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:87:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:3"
									},
									"scope": 472,
									"src": "2099:321:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2553:370:3",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "2563:354:3",
												"statements": [
													{
														"assignments": [
															396
														],
														"declarations": [
															{
																"constant": false,
																"id": 396,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "2587:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 395,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2587:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 405,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 401,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2634:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2626:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 399,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2626:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2626:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 403,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 397,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2610:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 207,
																"src": "2610:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2610:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2587:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 407,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "2671:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 408,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2687:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2671:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2694:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 406,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2663:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "2663:75:3"
													},
													{
														"assignments": [
															414
														],
														"declarations": [
															{
																"constant": false,
																"id": 414,
																"mutability": "mutable",
																"name": "newAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "2752:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 413,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2752:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 418,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "2775:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 416,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "2790:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2775:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2752:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2829:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 423,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "2859:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 217,
																				"src": "2859:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2859:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 426,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "2883:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 427,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 414,
																			"src": "2892:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 421,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2836:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2836:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2836:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 419,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "2809:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2809:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "2809:97:3"
													}
												]
											}
										]
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2466:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 386,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "2466:17:3"
													},
													"referencedDeclaration": 248,
													"src": "2466:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2499:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2524:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:87:3"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:3"
									},
									"scope": 472,
									"src": "2426:497:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3387:636:3",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "3736:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 442,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3736:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"id": 449,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "3790:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3796:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 446,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "3770:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3762:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 444,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3762:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3762:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 563,
														"src": "3762:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3762:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 453,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "3845:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3845:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3865:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3845:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 469,
												"nodeType": "IfStatement",
												"src": "3841:176:3",
												"trueBody": {
													"id": 468,
													"nodeType": "Block",
													"src": "3868:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 460,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 443,
																				"src": "3940:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3953:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 461,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3953:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 463,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3952:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 458,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3929:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3929:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3929:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3961:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 457,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3921:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3921:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "3921:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2929:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3335:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "3335:17:3"
													},
													"referencedDeclaration": 248,
													"src": "3335:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3360:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3360:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3334:44:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3387:0:3"
									},
									"scope": 472,
									"src": "3306:717:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 473,
							"src": "667:3358:3"
						}
					],
					"src": "100:3926:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						]
					},
					"id": 718,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 475,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 717,
							"linearizedBaseContracts": [
								717
							],
							"name": "AddressUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "848:311:4",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "1045:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1045:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"nodeType": "VariableDeclarationStatement",
												"src": "1045:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1090:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1110:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1098:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1090:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 478,
														"isOffset": false,
														"isSlot": false,
														"src": "1110:7:4",
														"valueSize": 1
													},
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:4:4",
														"valueSize": 1
													}
												],
												"id": 486,
												"nodeType": "InlineAssembly",
												"src": "1067:61:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 487,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "1144:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1151:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1144:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 482,
												"id": 490,
												"nodeType": "Return",
												"src": "1137:15:4"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "212:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "802:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:17:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "842:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "842:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:6:4"
									},
									"scope": 717,
									"src": "782:377:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "2147:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 503,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2173:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2165:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 501,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2165:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2165:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2165:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 506,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2190:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2165:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2198:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2157:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2157:73:4"
											},
											{
												"assignments": [
													512,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "2242:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 511,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2242:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 519,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2290:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 513,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "2260:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2260:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 515,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2282:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2260:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2260:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2241:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "2311:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2320:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2303:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "2303:78:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1165:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2095:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2095:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2122:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:43:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2147:0:4"
									},
									"scope": 717,
									"src": "2076:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "3219:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3249:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3257:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3263:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 536,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															543,
															563
														],
														"referencedDeclaration": 563,
														"src": "3236:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 535,
												"id": 541,
												"nodeType": "Return",
												"src": "3229:67:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2394:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3152:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3168:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3168:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:35:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3205:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3205:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:14:4"
									},
									"scope": 717,
									"src": "3130:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "3672:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "3711:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3719:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3725:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 559,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3728:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 555,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "3689:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3689:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 554,
												"id": 561,
												"nodeType": "Return",
												"src": "3682:59:4"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "3309:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3556:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3580:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3580:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3607:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3607:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3546:93:4"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3658:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3658:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:14:4"
									},
									"scope": 717,
									"src": "3525:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "4253:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "4292:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "4306:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4313:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 575,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "4270:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 574,
												"id": 581,
												"nodeType": "Return",
												"src": "4263:94:4"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3754:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4150:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4174:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4201:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:80:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4239:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4239:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:14:4"
									},
									"scope": 717,
									"src": "4110:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4791:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 600,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4817:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4809:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 598,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4809:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4809:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4809:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 603,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "4834:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4809:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4841:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4801:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "4801:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 610,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "4911:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 609,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "4900:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4900:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4920:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4892:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4892:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "4892:60:4"
											},
											{
												"assignments": [
													616,
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4964:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 615,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4964:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4978:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 617,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4978:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"id": 623,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5031:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 619,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "5005:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5005:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 621,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "5024:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5005:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5005:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4963:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 628,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5079:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 629,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "5091:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 626,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5053:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5053:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 596,
												"id": 631,
												"nodeType": "Return",
												"src": "5046:58:4"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "4370:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4676:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4676:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4703:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4726:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4642:116:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4777:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4777:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4776:14:4"
									},
									"scope": 717,
									"src": "4612:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "5388:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "5424:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5432:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5438:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 643,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															650,
															685
														],
														"referencedDeclaration": 685,
														"src": "5405:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5405:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 642,
												"id": 648,
												"nodeType": "Return",
												"src": "5398:80:4"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5117:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5316:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5332:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5332:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:35:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5374:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5374:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:14:4"
									},
									"scope": 717,
									"src": "5288:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "5827:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 664,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "5856:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 663,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "5845:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5845:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5865:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5837:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5837:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5837:67:4"
											},
											{
												"assignments": [
													670,
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "5916:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 669,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5916:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "5930:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 671,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5930:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"arguments": [
														{
															"id": 675,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "5975:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 673,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "5957:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5957:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5957:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5915:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 679,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "6014:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 680,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "6023:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 681,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "6035:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 678,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5997:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5997:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 661,
												"id": 683,
												"nodeType": "Return",
												"src": "5990:58:4"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "5491:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5706:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5706:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5730:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5730:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5757:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5757:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:93:4"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5813:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5813:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5812:14:4"
									},
									"scope": 717,
									"src": "5669:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "6435:532:4",
										"statements": [
											{
												"condition": {
													"id": 697,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 688,
													"src": "6449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 713,
													"nodeType": "Block",
													"src": "6506:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 701,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "6590:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6590:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6610:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6590:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 711,
																"nodeType": "Block",
																"src": "6898:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 708,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 692,
																					"src": "6923:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 707,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "6916:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6916:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 710,
																		"nodeType": "ExpressionStatement",
																		"src": "6916:20:4"
																	}
																]
															},
															"id": 712,
															"nodeType": "IfStatement",
															"src": "6586:365:4",
															"trueBody": {
																"id": 706,
																"nodeType": "Block",
																"src": "6613:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6733:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6755:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6784:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6778:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6778:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6759:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6827:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6831:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6823:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6823:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6844:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6816:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6816:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6816:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 690,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6784:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 690,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6831:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 705,
																		"nodeType": "InlineAssembly",
																		"src": "6724:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 714,
												"nodeType": "IfStatement",
												"src": "6445:516:4",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "6458:42:4",
													"statements": [
														{
															"expression": {
																"id": 698,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "6479:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 696,
															"id": 699,
															"nodeType": "Return",
															"src": "6472:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "6061:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6310:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6310:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6332:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6332:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6365:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6365:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6300:97:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6421:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6421:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:14:4"
									},
									"scope": 717,
									"src": "6275:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 718,
							"src": "179:6790:4"
						}
					],
					"src": "86:6884:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							761
						],
						"Initializable": [
							170
						]
					},
					"id": 762,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 719,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 720,
							"nodeType": "ImportDirective",
							"scope": 762,
							"sourceUnit": 171,
							"src": "110:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 722,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "691:13:5"
									},
									"id": 723,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:5"
								}
							],
							"contractDependencies": [
								170
							],
							"contractKind": "contract",
							"documentation": {
								"id": 721,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 761,
							"linearizedBaseContracts": [
								761,
								170
							],
							"name": "ContextUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "758:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 728,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "768:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "768:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "768:26:5"
											}
										]
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 726,
											"modifierName": {
												"id": 725,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "746:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:11:5"
										}
									],
									"name": "__Context_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:5"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:0:5"
									},
									"scope": 761,
									"src": "711:90:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "864:7:5",
										"statements": []
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 735,
											"modifierName": {
												"id": 734,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "852:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "852:11:5"
										}
									],
									"name": "__Context_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "864:0:5"
									},
									"scope": 761,
									"src": "807:64:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "938:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 743,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "955:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "955:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 742,
												"id": 745,
												"nodeType": "Return",
												"src": "948:17:5"
											}
										]
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "895:2:5"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "929:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:9:5"
									},
									"scope": 761,
									"src": "876:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "1045:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 752,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1062:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1062:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 751,
												"id": 754,
												"nodeType": "Return",
												"src": "1055:15:5"
											}
										]
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:2:5"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1029:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1029:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:16:5"
									},
									"scope": 761,
									"src": "978:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 760,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 761,
									"src": "1082:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 757,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 759,
										"length": {
											"hexValue": "3530",
											"id": 758,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1090:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1082:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 762,
							"src": "651:459:5"
						}
					],
					"src": "86:1025:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
					"exportedSymbols": {
						"SafeMathUpgradeable": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 763,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 764,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1073,
							"linearizedBaseContracts": [
								1073
							],
							"name": "SafeMathUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "713:140:6",
										"statements": [
											{
												"id": 794,
												"nodeType": "UncheckedBlock",
												"src": "723:124:6",
												"statements": [
													{
														"assignments": [
															777
														],
														"declarations": [
															{
																"constant": false,
																"id": 777,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 794,
																"src": "747:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 776,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "747:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 781,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "759:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 779,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "759:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "747:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 782,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "782:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 783,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "786:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "782:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 789,
														"nodeType": "IfStatement",
														"src": "778:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "797:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "796:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 775,
															"id": 788,
															"nodeType": "Return",
															"src": "789:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "828:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 791,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "834:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 792,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "827:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 775,
														"id": 793,
														"nodeType": "Return",
														"src": "820:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "501:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "653:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "664:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:22:6"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "698:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "704:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:15:6"
									},
									"scope": 1073,
									"src": "637:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "1075:113:6",
										"statements": [
											{
												"id": 822,
												"nodeType": "UncheckedBlock",
												"src": "1085:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 808,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "1113:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 809,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "1117:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1113:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 815,
														"nodeType": "IfStatement",
														"src": "1109:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1128:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1135:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 807,
															"id": 814,
															"nodeType": "Return",
															"src": "1120:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1159:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 817,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "1165:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 818,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "1169:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1165:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 820,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1158:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 807,
														"id": 821,
														"nodeType": "Return",
														"src": "1151:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "859:135:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1015:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1026:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:22:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1060:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1060:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1066:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:15:6"
									},
									"scope": 1073,
									"src": "999:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "1412:417:6",
										"statements": [
											{
												"id": 864,
												"nodeType": "UncheckedBlock",
												"src": "1422:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1680:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1685:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1680:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "1676:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1702:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1695:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 835,
															"id": 842,
															"nodeType": "Return",
															"src": "1688:16:6"
														}
													},
													{
														"assignments": [
															845
														],
														"declarations": [
															{
																"constant": false,
																"id": 845,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 864,
																"src": "1718:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 844,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1718:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 849,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1730:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 847,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1730:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1718:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 850,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1753:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 851,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "1757:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1753:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 853,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1762:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1753:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 859,
														"nodeType": "IfStatement",
														"src": "1749:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1773:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1780:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1772:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 835,
															"id": 858,
															"nodeType": "Return",
															"src": "1765:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1804:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 861,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1810:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 862,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1803:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 835,
														"id": 863,
														"nodeType": "Return",
														"src": "1796:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "1194:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1352:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1363:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:22:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1397:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1397:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1403:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:15:6"
									},
									"scope": 1073,
									"src": "1336:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "2054:114:6",
										"statements": [
											{
												"id": 892,
												"nodeType": "UncheckedBlock",
												"src": "2064:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 878,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "2092:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2097:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2092:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 885,
														"nodeType": "IfStatement",
														"src": "2088:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2108:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2115:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2107:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 877,
															"id": 884,
															"nodeType": "Return",
															"src": "2100:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2139:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 887,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "2145:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 888,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "2149:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2145:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 890,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2138:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 877,
														"id": 891,
														"nodeType": "Return",
														"src": "2131:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1835:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "1994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2005:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:22:6"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2039:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2039:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2045:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:15:6"
									},
									"scope": 1073,
									"src": "1978:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2403:114:6",
										"statements": [
											{
												"id": 920,
												"nodeType": "UncheckedBlock",
												"src": "2413:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "2441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2446:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2441:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 913,
														"nodeType": "IfStatement",
														"src": "2437:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2457:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2464:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2456:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 905,
															"id": 912,
															"nodeType": "Return",
															"src": "2449:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2488:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 915,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "2494:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 916,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "2498:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2494:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 918,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2487:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 905,
														"id": 919,
														"nodeType": "Return",
														"src": "2480:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "2174:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2354:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:22:6"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2388:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2388:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2394:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:15:6"
									},
									"scope": 1073,
									"src": "2327:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "2819:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 932,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2836:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 933,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2840:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2836:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 931,
												"id": 935,
												"nodeType": "Return",
												"src": "2829:12:6"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "2523:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2765:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2776:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2764:22:6"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2810:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:9:6"
									},
									"scope": 1073,
									"src": "2752:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "3186:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 947,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "3203:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 948,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3207:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3203:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 946,
												"id": 950,
												"nodeType": "Return",
												"src": "3196:12:6"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "2854:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3132:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3143:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:22:6"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3177:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:9:6"
									},
									"scope": 1073,
									"src": "3119:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "3529:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3546:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 963,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "3550:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3546:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 961,
												"id": 965,
												"nodeType": "Return",
												"src": "3539:12:6"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "3221:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3475:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3486:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3474:22:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3520:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3519:9:6"
									},
									"scope": 1073,
									"src": "3462:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "3914:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "3931:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 978,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "3935:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3931:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 976,
												"id": 980,
												"nodeType": "Return",
												"src": "3924:12:6"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "3564:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3860:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3871:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3871:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3859:22:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3905:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3905:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:9:6"
									},
									"scope": 1073,
									"src": "3847:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "4463:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "4480:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 993,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "4484:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4480:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 991,
												"id": 995,
												"nodeType": "Return",
												"src": "4473:12:6"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "3949:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4409:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4420:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4408:22:6"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4454:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4454:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4453:9:6"
									},
									"scope": 1073,
									"src": "4396:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "5081:106:6",
										"statements": [
											{
												"id": 1020,
												"nodeType": "UncheckedBlock",
												"src": "5091:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1010,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "5123:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1011,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "5128:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5123:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1013,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "5131:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1009,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5115:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5115:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1015,
														"nodeType": "ExpressionStatement",
														"src": "5115:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "5165:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1017,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "5169:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5165:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1008,
														"id": 1019,
														"nodeType": "Return",
														"src": "5158:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "4498:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4978:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5016:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1003,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5016:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:80:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5072:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5072:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5071:9:6"
									},
									"scope": 1073,
									"src": "4956:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "5796:105:6",
										"statements": [
											{
												"id": 1045,
												"nodeType": "UncheckedBlock",
												"src": "5806:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1035,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "5838:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5842:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5838:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1038,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5845:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1034,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5830:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5830:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1040,
														"nodeType": "ExpressionStatement",
														"src": "5830:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "5879:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1042,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "5883:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5879:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1033,
														"id": 1044,
														"nodeType": "Return",
														"src": "5872:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "5193:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5693:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5712:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5712:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5731:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5731:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5683:80:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5787:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5786:9:6"
									},
									"scope": 1073,
									"src": "5671:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "6672:105:6",
										"statements": [
											{
												"id": 1070,
												"nodeType": "UncheckedBlock",
												"src": "6682:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1060,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "6714:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6718:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6714:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1063,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "6721:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1059,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6706:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6706:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1065,
														"nodeType": "ExpressionStatement",
														"src": "6706:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1066,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "6755:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1067,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "6759:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6755:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1058,
														"id": 1069,
														"nodeType": "Return",
														"src": "6748:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "5907:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6569:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6569:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6588:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6607:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1053,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6607:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6559:80:6"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6663:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6662:9:6"
									},
									"scope": 1073,
									"src": "6547:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1074,
							"src": "467:6312:6"
						}
					],
					"src": "92:6688:6"
				},
				"id": 6
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1146
						]
					},
					"id": 1147,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1075,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1146,
							"linearizedBaseContracts": [
								1146
							],
							"name": "IUniswapV2Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1085,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "115:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "139:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "163:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "177:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "177:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:68:7"
									},
									"src": "97:86:7"
								},
								{
									"functionSelector": "017e7e58",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:2:7"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "229:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:9:7"
									},
									"scope": 1146,
									"src": "189:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:7"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "289:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:9:7"
									},
									"scope": 1146,
									"src": "243:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7cd07e47",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "320:2:7"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "346:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:7"
									},
									"scope": 1146,
									"src": "303:52:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "378:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "394:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:32:7"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "433:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:14:7"
									},
									"scope": 1146,
									"src": "361:86:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "470:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:6:7"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "499:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:14:7"
									},
									"scope": 1146,
									"src": "452:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:2:7"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "567:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "567:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:6:7"
									},
									"scope": 1146,
									"src": "518:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 1130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "599:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "615:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:32:7"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "649:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:14:7"
									},
									"scope": 1146,
									"src": "579:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 1135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "687:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:9:7"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:0:7"
									},
									"scope": 1146,
									"src": "669:36:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 1140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "734:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:9:7"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:0:7"
									},
									"scope": 1146,
									"src": "710:42:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23cf3118",
									"id": 1145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMigrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "778:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:9:7"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:0:7"
									},
									"scope": 1146,
									"src": "757:39:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1147,
							"src": "63:735:7"
						}
					],
					"src": "37:762:7"
				},
				"id": 7
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1388
						]
					},
					"id": 1389,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1148,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1388,
							"linearizedBaseContracts": [
								1388
							],
							"name": "IUniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1156,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "109:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "132:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "157:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "157:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:60:8"
									},
									"src": "94:75:8"
								},
								{
									"anonymous": false,
									"id": 1164,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "189:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "211:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "231:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "231:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:54:8"
									},
									"src": "174:69:8"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:8"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "288:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "288:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:15:8"
									},
									"scope": 1388,
									"src": "249:54:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:8"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "349:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "349:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:15:8"
									},
									"scope": 1388,
									"src": "308:56:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:2:8"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "412:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1176,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "412:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:7:8"
									},
									"scope": 1388,
									"src": "369:50:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:2:8"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "470:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:6:8"
									},
									"scope": 1388,
									"src": "424:52:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "500:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:15:8"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "538:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "538:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:6:8"
									},
									"scope": 1388,
									"src": "481:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "568:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "583:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:32:8"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "623:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:6:8"
									},
									"scope": 1388,
									"src": "549:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "652:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "669:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:29:8"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "699:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "699:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:6:8"
									},
									"scope": 1388,
									"src": "635:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "728:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "740:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "740:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:24:8"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "770:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "770:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "769:6:8"
									},
									"scope": 1388,
									"src": "710:66:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "803:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "817:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "829:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:38:8"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "859:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "859:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:6:8"
									},
									"scope": 1388,
									"src": "781:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:2:8"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "922:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:9:8"
									},
									"scope": 1388,
									"src": "871:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:8"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "986:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:9:8"
									},
									"scope": 1388,
									"src": "936:59:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1016:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:15:8"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1054:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1054:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:6:8"
									},
									"scope": 1388,
									"src": "1000:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1082:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1097:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1114:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1114:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1126:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1126:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1141:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1141:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1150:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1161:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:90:8"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1180:0:8"
									},
									"scope": 1388,
									"src": "1066:115:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1271,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1198:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1222:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1222:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1236:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1236:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:52:8"
									},
									"src": "1187:63:8"
								},
								{
									"anonymous": false,
									"id": 1281,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1266:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1290:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1304:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1304:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1318:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:72:8"
									},
									"src": "1255:83:8"
								},
								{
									"anonymous": false,
									"id": 1295,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1363:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1395:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1395:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1419:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1419:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1443:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1443:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1468:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1493:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:164:8"
									},
									"src": "1343:175:8"
								},
								{
									"anonymous": false,
									"id": 1301,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1534:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1296,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1552:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1298,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:36:8"
									},
									"src": "1523:47:8"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 1306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:2:8"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1628:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1628:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:6:8"
									},
									"scope": 1388,
									"src": "1576:58:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1655:2:8"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1681:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:8"
									},
									"scope": 1388,
									"src": "1639:51:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:8"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1736:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1735:9:8"
									},
									"scope": 1388,
									"src": "1695:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:8"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "1791:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:9:8"
									},
									"scope": 1388,
									"src": "1750:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:2:8"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1851:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1323,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1869:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1325,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1887:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1327,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1887:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:63:8"
									},
									"scope": 1388,
									"src": "1805:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1948:2:8"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1974:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1974:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:6:8"
									},
									"scope": 1388,
									"src": "1919:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 1340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2014:2:8"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2040:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2040:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:6:8"
									},
									"scope": 1388,
									"src": "1985:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2065:2:8"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "2091:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2091:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:6:8"
									},
									"scope": 1388,
									"src": "2051:46:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2117:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2116:12:8"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2147:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2147:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:16:8"
									},
									"scope": 1388,
									"src": "2103:60:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 1361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2182:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:12:8"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2212:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2212:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2226:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2226:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:28:8"
									},
									"scope": 1388,
									"src": "2168:72:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2259:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2259:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2276:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2276:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2293:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2305:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2305:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2258:67:8"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2334:0:8"
									},
									"scope": 1388,
									"src": "2245:90:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2354:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:12:8"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:8"
									},
									"scope": 1388,
									"src": "2340:35:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2393:2:8"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2404:0:8"
									},
									"scope": 1388,
									"src": "2380:25:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2431:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2440:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:18:8"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2457:0:8"
									},
									"scope": 1388,
									"src": "2411:47:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1389,
							"src": "63:2397:8"
						}
					],
					"src": "37:2423:8"
				},
				"id": 8
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1696
						]
					},
					"id": 1697,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1390,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1696,
							"linearizedBaseContracts": [
								1696
							],
							"name": "IUniswapV2Router01",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:9"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "140:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:9:9"
									},
									"scope": 1696,
									"src": "98:51:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:9"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "193:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:9:9"
									},
									"scope": 1696,
									"src": "154:48:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "239:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "263:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "amountADesired",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "287:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "287:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "316:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "316:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "345:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "370:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "370:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "395:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "415:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "415:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:205:9"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "453:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "453:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "467:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "467:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "481:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "481:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:44:9"
									},
									"scope": 1696,
									"src": "208:289:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "536:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "559:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "592:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "592:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "621:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "621:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "648:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "668:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "668:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:161:9"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "714:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "714:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "732:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "732:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "748:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "748:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:50:9"
									},
									"scope": 1696,
									"src": "502:262:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "803:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "827:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "851:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "851:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "875:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "900:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "900:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "925:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "945:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "945:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:171:9"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "983:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "983:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "997:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:28:9"
									},
									"scope": 1696,
									"src": "769:242:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1053:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1076:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1076:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1100:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1100:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1129:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1129:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1156:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1176:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1176:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:152:9"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1214:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1214:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1232:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1232:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:34:9"
									},
									"scope": 1696,
									"src": "1016:232:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1297:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1321:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1345:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1345:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1369:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1369:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1394:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1394:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1419:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1439:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1439:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1462:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1462:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1479:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1503,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1479:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1488:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1505,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1499:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:227:9"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1533:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1533:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1547:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1547:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1532:28:9"
									},
									"scope": 1696,
									"src": "1253:308:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1613:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1636:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1636:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1660:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1660:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1689:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1689:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1716:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1736:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1736:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1759:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1759:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1776:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1776:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1785:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1796:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:208:9"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1830:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1830:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1848:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1848:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:34:9"
									},
									"scope": 1696,
									"src": "1566:298:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1912:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1912:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1935:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1935:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1962:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1547,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1962:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1548,
													"nodeType": "ArrayTypeName",
													"src": "1962:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1995:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2015:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2015:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:132:9"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2053:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1555,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2053:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1556,
													"nodeType": "ArrayTypeName",
													"src": "2053:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:23:9"
									},
									"scope": 1696,
									"src": "1869:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2124:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2124:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2148:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2148:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2174:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1564,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2174:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1565,
													"nodeType": "ArrayTypeName",
													"src": "2174:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2207:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2227:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2227:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:132:9"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2265:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2265:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "2265:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2264:23:9"
									},
									"scope": 1696,
									"src": "2081:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2324:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2324:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2343:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1579,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2343:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1580,
													"nodeType": "ArrayTypeName",
													"src": "2343:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2368:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2380:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2380:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:71:9"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2445:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1587,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2445:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1588,
													"nodeType": "ArrayTypeName",
													"src": "2445:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:23:9"
									},
									"scope": 1696,
									"src": "2293:175:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2504:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2504:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2520:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2520:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2538:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1596,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2538:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1597,
													"nodeType": "ArrayTypeName",
													"src": "2538:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2563:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2575:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2575:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2503:86:9"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2624:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1604,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2624:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1605,
													"nodeType": "ArrayTypeName",
													"src": "2624:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2623:23:9"
									},
									"scope": 1696,
									"src": "2473:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2683:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2683:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2698:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2698:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2717:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1613,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2717:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1614,
													"nodeType": "ArrayTypeName",
													"src": "2717:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2742:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2754:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2754:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:86:9"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2803:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1621,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2803:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1622,
													"nodeType": "ArrayTypeName",
													"src": "2803:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2802:23:9"
									},
									"scope": 1696,
									"src": "2652:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2862:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2878:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1628,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2878:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1629,
													"nodeType": "ArrayTypeName",
													"src": "2878:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2903:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2915:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2915:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:68:9"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2980:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1636,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2980:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1637,
													"nodeType": "ArrayTypeName",
													"src": "2980:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2979:23:9"
									},
									"scope": 1696,
									"src": "2831:172:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3024:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3024:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3038:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3038:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3053:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3053:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3023:44:9"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3091:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3091:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3090:14:9"
									},
									"scope": 1696,
									"src": "3009:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3132:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3132:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3147:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3147:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3163:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3163:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:48:9"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3203:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3203:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:16:9"
									},
									"scope": 1696,
									"src": "3110:109:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3245:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3245:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3261:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3261:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3277:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3277:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3244:49:9"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3317:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3317:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:15:9"
									},
									"scope": 1696,
									"src": "3224:108:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3360:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3360:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3375:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1676,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3375:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1677,
													"nodeType": "ArrayTypeName",
													"src": "3375:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3359:40:9"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3423:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1680,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3423:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1681,
													"nodeType": "ArrayTypeName",
													"src": "3423:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3422:23:9"
									},
									"scope": 1696,
									"src": "3337:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3473:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3473:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3489:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3489:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1688,
													"nodeType": "ArrayTypeName",
													"src": "3489:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:41:9"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3537:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1691,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3537:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1692,
													"nodeType": "ArrayTypeName",
													"src": "3537:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:23:9"
									},
									"scope": 1696,
									"src": "3451:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1697,
							"src": "63:3499:9"
						}
					],
					"src": "37:3525:9"
				},
				"id": 9
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1696
						],
						"IUniswapV2Router02": [
							1784
						]
					},
					"id": 1785,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1698,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:10"
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1699,
							"nodeType": "ImportDirective",
							"scope": 1785,
							"sourceUnit": 1697,
							"src": "63:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1700,
										"name": "IUniswapV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1696,
										"src": "131:18:10"
									},
									"id": 1701,
									"nodeType": "InheritanceSpecifier",
									"src": "131:18:10"
								}
							],
							"contractDependencies": [
								1696
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1784,
							"linearizedBaseContracts": [
								1784,
								1696
							],
							"name": "IUniswapV2Router02",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "222:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "245:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "245:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "269:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "298:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "298:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "325:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "345:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:152:10"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "383:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "383:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:16:10"
									},
									"scope": 1784,
									"src": "156:243:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "480:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "503:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "503:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "527:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "527:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "556:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "556:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "583:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "603:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "603:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "626:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "626:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "643:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1733,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "643:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "652:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "663:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:208:10"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "697:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "697:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:16:10"
									},
									"scope": 1784,
									"src": "404:309:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "791:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "814:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "841:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1748,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "841:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1749,
													"nodeType": "ArrayTypeName",
													"src": "841:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "874:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "894:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "894:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:132:10"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:0:10"
									},
									"scope": 1784,
									"src": "719:204:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "997:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1024:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1760,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1024:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1761,
													"nodeType": "ArrayTypeName",
													"src": "1024:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1057:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1077:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:109:10"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:0:10"
									},
									"scope": 1784,
									"src": "928:186:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1188:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1188:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1211:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1211:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1238:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1774,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1238:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1775,
													"nodeType": "ArrayTypeName",
													"src": "1238:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1271:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1291:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1291:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:132:10"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1319:0:10"
									},
									"scope": 1784,
									"src": "1119:201:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1785,
							"src": "99:1223:10"
						}
					],
					"src": "37:1285:10"
				},
				"id": 10
			},
			"contracts/helperLogic.sol": {
				"ast": {
					"absolutePath": "contracts/helperLogic.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						],
						"ContextUpgradeable": [
							761
						],
						"IERC20Upgradeable": [
							248
						],
						"IFarm": [
							1804
						],
						"IStabilizer": [
							1810
						],
						"IUniswapV2Factory": [
							1146
						],
						"IUniswapV2Pair": [
							1388
						],
						"IUniswapV2Router01": [
							1696
						],
						"IUniswapV2Router02": [
							1784
						],
						"Initializable": [
							170
						],
						"OwnableUpgradeable": [
							125
						],
						"SafeERC20Upgradeable": [
							472
						],
						"SafeMathUpgradeable": [
							1073
						],
						"helperLogic": [
							2605
						]
					},
					"id": 2606,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1786,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 1787,
							"nodeType": "ImportDirective",
							"scope": 2606,
							"sourceUnit": 249,
							"src": "55:79:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 1788,
							"nodeType": "ImportDirective",
							"scope": 2606,
							"sourceUnit": 473,
							"src": "135:88:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1789,
							"nodeType": "ImportDirective",
							"scope": 2606,
							"sourceUnit": 171,
							"src": "224:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1790,
							"nodeType": "ImportDirective",
							"scope": 2606,
							"sourceUnit": 126,
							"src": "300:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"id": 1791,
							"nodeType": "ImportDirective",
							"scope": 2606,
							"sourceUnit": 1074,
							"src": "376:80:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
							"id": 1792,
							"nodeType": "ImportDirective",
							"scope": 2606,
							"sourceUnit": 1389,
							"src": "458:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
							"id": 1793,
							"nodeType": "ImportDirective",
							"scope": 2606,
							"sourceUnit": 1147,
							"src": "534:78:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
							"id": 1794,
							"nodeType": "ImportDirective",
							"scope": 2606,
							"sourceUnit": 1785,
							"src": "613:79:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1804,
							"linearizedBaseContracts": [
								1804
							],
							"name": "IFarm",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "46ca6bea",
									"id": 1803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "742:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "764:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "793:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:83:11"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "824:0:11"
									},
									"scope": 1804,
									"src": "716:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2606,
							"src": "694:133:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1810,
							"linearizedBaseContracts": [
								1810
							],
							"name": "IStabilizer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "796c7be7",
									"id": 1809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "goStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:2:11"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "899:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "899:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:6:11"
									},
									"scope": 1810,
									"src": "857:48:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2606,
							"src": "829:78:11"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1811,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "933:13:11"
									},
									"id": 1812,
									"nodeType": "InheritanceSpecifier",
									"src": "933:13:11"
								},
								{
									"baseName": {
										"id": 1813,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "948:18:11"
									},
									"id": 1814,
									"nodeType": "InheritanceSpecifier",
									"src": "948:18:11"
								}
							],
							"contractDependencies": [
								125,
								170,
								761
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2605,
							"linearizedBaseContracts": [
								2605,
								125,
								761,
								170
							],
							"name": "helperLogic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1818,
									"libraryName": {
										"id": 1815,
										"name": "SafeERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "979:20:11"
									},
									"nodeType": "UsingForDirective",
									"src": "973:49:11",
									"typeName": {
										"id": 1817,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1816,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1004:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1004:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									}
								},
								{
									"id": 1821,
									"libraryName": {
										"id": 1819,
										"name": "SafeMathUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1073,
										"src": "1033:19:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1027:38:11",
									"typeName": {
										"id": 1820,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1057:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "48c7e528",
									"id": 1825,
									"mutability": "mutable",
									"name": "executor",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1086:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1824,
										"keyType": {
											"id": 1822,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1094:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1086:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1823,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1105:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3011d3d5",
									"id": 1828,
									"mutability": "mutable",
									"name": "usc",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1132:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1827,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1826,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1132:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1132:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e413bee",
									"id": 1831,
									"mutability": "mutable",
									"name": "usdc",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1166:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1830,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1829,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1166:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1166:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ecaac41",
									"id": 1834,
									"mutability": "mutable",
									"name": "sea",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1201:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1833,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1832,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1201:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1201:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8bb97a1",
									"id": 1837,
									"mutability": "mutable",
									"name": "ssea",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1235:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1836,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1835,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1235:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1235:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec1f1f69",
									"id": 1839,
									"mutability": "mutable",
									"name": "op",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1270:17:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1838,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1270:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "91cca3db",
									"id": 1841,
									"mutability": "mutable",
									"name": "dev",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1293:18:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1840,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1293:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f6d7eade",
									"id": 1844,
									"mutability": "mutable",
									"name": "Router",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1318:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1843,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1842,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1784,
											"src": "1318:18:11"
										},
										"referencedDeclaration": 1784,
										"src": "1318:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c83dd231",
									"id": 1847,
									"mutability": "mutable",
									"name": "Factory",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1356:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
										"typeString": "contract IUniswapV2Factory"
									},
									"typeName": {
										"id": 1846,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1845,
											"name": "IUniswapV2Factory",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1146,
											"src": "1356:17:11"
										},
										"referencedDeclaration": 1146,
										"src": "1356:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
											"typeString": "contract IUniswapV2Factory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bd0b1f44",
									"id": 1849,
									"mutability": "mutable",
									"name": "toSseaPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1395:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1848,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1395:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c535a52",
									"id": 1851,
									"mutability": "mutable",
									"name": "toOpPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1429:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1850,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1429:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ae6a027",
									"id": 1853,
									"mutability": "mutable",
									"name": "toDevPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1461:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1852,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1461:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aaf5eb68",
									"id": 1855,
									"mutability": "mutable",
									"name": "PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1494:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1494:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16d03993",
									"id": 1857,
									"mutability": "mutable",
									"name": "basePoint",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1525:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1856,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1525:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f1068454",
									"id": 1859,
									"mutability": "mutable",
									"name": "pid",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1555:18:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1858,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1555:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36e9332d",
									"id": 1862,
									"mutability": "mutable",
									"name": "farm",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1580:17:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFarm_$1804",
										"typeString": "contract IFarm"
									},
									"typeName": {
										"id": 1861,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1860,
											"name": "IFarm",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1804,
											"src": "1580:5:11"
										},
										"referencedDeclaration": 1804,
										"src": "1580:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFarm_$1804",
											"typeString": "contract IFarm"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9da5b0d5",
									"id": 1864,
									"mutability": "mutable",
									"name": "autoAdjustFarm",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1604:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1863,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1604:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "58de5de8",
									"id": 1866,
									"mutability": "mutable",
									"name": "openStabilizer",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1636:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1865,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1636:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e47961c",
									"id": 1868,
									"mutability": "mutable",
									"name": "stabilizer",
									"nodeType": "VariableDeclaration",
									"scope": 2605,
									"src": "1669:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1867,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1669:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "2057:528:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1894,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2067:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "2067:16:11"
											},
											{
												"expression": {
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1897,
														"name": "Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "2137:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1898,
														"name": "_Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "2146:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "2137:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "2137:16:11"
											},
											{
												"expression": {
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1901,
														"name": "Factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "2163:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
															"typeString": "contract IUniswapV2Factory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1902,
														"name": "_Factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1871,
														"src": "2173:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
															"typeString": "contract IUniswapV2Factory"
														}
													},
													"src": "2163:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
														"typeString": "contract IUniswapV2Factory"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "2163:18:11"
											},
											{
												"expression": {
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1905,
														"name": "usc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "2191:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1906,
														"name": "_usc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "2197:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2191:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1908,
												"nodeType": "ExpressionStatement",
												"src": "2191:10:11"
											},
											{
												"expression": {
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1909,
														"name": "sea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "2211:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1910,
														"name": "_sea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "2217:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2211:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "2211:10:11"
											},
											{
												"expression": {
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1913,
														"name": "ssea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "2231:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1914,
														"name": "_ssea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "2238:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2231:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "2231:12:11"
											},
											{
												"expression": {
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1917,
														"name": "op",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "2253:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1918,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2258:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2258:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2253:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "2253:15:11"
											},
											{
												"expression": {
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1922,
														"name": "dev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "2278:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1923,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2284:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2284:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2278:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "2278:16:11"
											},
											{
												"expression": {
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1927,
														"name": "toSseaPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "2304:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35303030",
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000_by_1",
															"typeString": "int_const 5000"
														},
														"value": "5000"
													},
													"src": "2304:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1930,
												"nodeType": "ExpressionStatement",
												"src": "2304:20:11"
											},
											{
												"expression": {
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1931,
														"name": "toOpPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "2334:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030",
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2348:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500_by_1",
															"typeString": "int_const 2500"
														},
														"value": "2500"
													},
													"src": "2334:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "2334:18:11"
											},
											{
												"expression": {
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1935,
														"name": "toDevPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "2362:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030",
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500_by_1",
															"typeString": "int_const 2500"
														},
														"value": "2500"
													},
													"src": "2362:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "2362:19:11"
											},
											{
												"expression": {
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1939,
														"name": "PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "2391:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030",
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2403:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2391:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "2391:17:11"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1943,
														"name": "basePoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "2418:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2430:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2418:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "2418:16:11"
											},
											{
												"expression": {
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1947,
														"name": "autoAdjustFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2444:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2461:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2444:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "2444:21:11"
											},
											{
												"expression": {
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1951,
														"name": "openStabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "2475:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2492:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2475:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "2475:22:11"
											},
											{
												"expression": {
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1955,
														"name": "farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "2507:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1956,
														"name": "_farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "2514:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"src": "2507:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "2507:12:11"
											},
											{
												"expression": {
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1959,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "2529:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1960,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "2536:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2529:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "2529:12:11"
											}
										]
									},
									"functionSelector": "35876476",
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1892,
											"modifierName": {
												"id": 1891,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "2041:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2041:11:11"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "_Factory",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1765:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
													"typeString": "contract IUniswapV2Factory"
												},
												"typeName": {
													"id": 1870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1869,
														"name": "IUniswapV2Factory",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1146,
														"src": "1765:17:11"
													},
													"referencedDeclaration": 1146,
													"src": "1765:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
														"typeString": "contract IUniswapV2Factory"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "_Router",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1801:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
													"typeString": "contract IUniswapV2Router02"
												},
												"typeName": {
													"id": 1873,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1872,
														"name": "IUniswapV2Router02",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1784,
														"src": "1801:18:11"
													},
													"referencedDeclaration": 1784,
													"src": "1801:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "_usc",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1837:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1875,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1837:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1837:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "_usdc",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1869:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1879,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1878,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1869:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1869:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "_sea",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1902:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1882,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1881,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1902:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1902:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "_ssea",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1934:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1884,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1934:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1934:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "_farm",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1967:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFarm_$1804",
													"typeString": "contract IFarm"
												},
												"typeName": {
													"id": 1888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1887,
														"name": "IFarm",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1804,
														"src": "1967:5:11"
													},
													"referencedDeclaration": 1804,
													"src": "1967:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:264:11"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:11"
									},
									"scope": 2605,
									"src": "1701:884:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "2704:64:11",
										"statements": [
											{
												"expression": {
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1975,
															"name": "executor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "2714:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1977,
														"indexExpression": {
															"id": 1976,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "2723:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2714:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1978,
														"name": "_type",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "2735:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "2714:26:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2757:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1974,
												"id": 1982,
												"nodeType": "Return",
												"src": "2750:11:11"
											}
										]
									},
									"functionSelector": "1e1bff3f",
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1971,
											"modifierName": {
												"id": 1970,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "2667:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2667:9:11"
										}
									],
									"name": "setExecutor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2612:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2612:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "_type",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2630:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2630:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2611:30:11"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2694:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2694:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:6:11"
									},
									"scope": 2605,
									"src": "2591:177:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "2798:97:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1987,
																"name": "executor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "2816:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1990,
															"indexExpression": {
																"expression": {
																	"id": 1988,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2825:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2825:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2816:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6578656375746f723a2063616c6c6572206973206e6f7420746865206578656375746f72",
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2838:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a",
																"typeString": "literal_string \"executor: caller is not the executor\""
															},
															"value": "executor: caller is not the executor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a",
																"typeString": "literal_string \"executor: caller is not the executor\""
															}
														],
														"id": 1986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2808:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2808:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "2808:69:11"
											},
											{
												"id": 1994,
												"nodeType": "PlaceholderStatement",
												"src": "2887:1:11"
											}
										]
									},
									"id": 1996,
									"name": "onlyExecutor",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2795:2:11"
									},
									"src": "2774:121:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "3052:240:11",
										"statements": [
											{
												"assignments": [
													2008
												],
												"declarations": [
													{
														"constant": false,
														"id": 2008,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "3062:23:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3062:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2013,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "39393730",
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3101:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9970_by_1",
																"typeString": "int_const 9970"
															},
															"value": "9970"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_9970_by_1",
																"typeString": "int_const 9970"
															}
														],
														"expression": {
															"id": 2009,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "3088:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 967,
														"src": "3088:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3062:44:11"
											},
											{
												"assignments": [
													2015
												],
												"declarations": [
													{
														"constant": false,
														"id": 2015,
														"mutability": "mutable",
														"name": "numerator",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "3116:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2014,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3116:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2020,
												"initialValue": {
													"arguments": [
														{
															"id": 2018,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "3156:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2016,
															"name": "amountInWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3136:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 967,
														"src": "3136:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3136:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3116:51:11"
											},
											{
												"assignments": [
													2022
												],
												"declarations": [
													{
														"constant": false,
														"id": 2022,
														"mutability": "mutable",
														"name": "denominator",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "3177:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2021,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3177:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2030,
												"initialValue": {
													"arguments": [
														{
															"id": 2028,
															"name": "amountInWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3224:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3130303030",
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3213:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"id": 2023,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "3199:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "3199:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3199:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 937,
														"src": "3199:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3177:63:11"
											},
											{
												"expression": {
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2031,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "3250:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2032,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "3262:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2033,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "3274:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3262:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3250:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2036,
												"nodeType": "ExpressionStatement",
												"src": "3250:35:11"
											}
										]
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2932:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2958:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2958:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2985:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2985:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2922:87:11"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "3033:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:19:11"
									},
									"scope": 2605,
									"src": "2901:391:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "3357:883:11",
										"statements": [
											{
												"assignments": [
													2046
												],
												"declarations": [
													{
														"constant": false,
														"id": 2046,
														"mutability": "mutable",
														"name": "sea_usc_lpAddress",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3367:25:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2045,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3367:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2058,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2051,
																	"name": "sea",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "3419:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3411:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2049,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3411:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3411:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2055,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "3433:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3425:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2053,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3425:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3425:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2047,
															"name": "Factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "3395:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1109,
														"src": "3395:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) view external returns (address)"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3395:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3367:71:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2062,
															"name": "sea_usc_lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "3465:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2063,
															"name": "uscAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "3484:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2059,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "3448:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "3448:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3448:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2065,
												"nodeType": "ExpressionStatement",
												"src": "3448:43:11"
											},
											{
												"assignments": [
													2067,
													2069,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2067,
														"mutability": "mutable",
														"name": "reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3502:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3502:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2069,
														"mutability": "mutable",
														"name": "reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3520:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2068,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3520:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2075,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2071,
																	"name": "sea_usc_lpAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "3570:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2070,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3542:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1388_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3542:55:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1388",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1330,
														"src": "3542:67:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3542:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3501:110:11"
											},
											{
												"assignments": [
													2077
												],
												"declarations": [
													{
														"constant": false,
														"id": 2077,
														"mutability": "mutable",
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3621:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2076,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3621:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2083,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2079,
																	"name": "sea_usc_lpAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "3653:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2078,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3638:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1388_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3638:33:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1388",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1316,
														"src": "3638:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3638:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3621:59:11"
											},
											{
												"assignments": [
													2085,
													2087
												],
												"declarations": [
													{
														"constant": false,
														"id": 2085,
														"mutability": "mutable",
														"name": "reserveIn",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3691:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2084,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3691:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2087,
														"mutability": "mutable",
														"name": "reserveOut",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3710:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2086,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3710:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2101,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2088,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "3732:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2091,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "3750:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3742:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2089,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3742:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3742:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3732:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 2097,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "3805:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2098,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "3815:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2099,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3804:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3732:92:11",
													"trueExpression": {
														"components": [
															{
																"id": 2094,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "3770:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2095,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "3780:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2096,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3769:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3690:134:11"
											},
											{
												"assignments": [
													2103
												],
												"declarations": [
													{
														"constant": false,
														"id": 2103,
														"mutability": "mutable",
														"name": "amountOut",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3834:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3834:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2109,
												"initialValue": {
													"arguments": [
														{
															"id": 2105,
															"name": "uscAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "3867:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2106,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "3875:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2107,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "3886:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2104,
														"name": "getAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "3854:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3854:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3834:63:11"
											},
											{
												"assignments": [
													2111,
													2113
												],
												"declarations": [
													{
														"constant": false,
														"id": 2111,
														"mutability": "mutable",
														"name": "amount0Out",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3908:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3908:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2113,
														"mutability": "mutable",
														"name": "amount1Out",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3928:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3928:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2133,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2114,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "3950:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2117,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "3968:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3960:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2115,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3960:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3960:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3950:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 2126,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "4026:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4045:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4037:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2127,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4037:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4037:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2131,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4025:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3950:98:11",
													"trueExpression": {
														"components": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3996:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3988:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2120,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3988:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3988:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2124,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "4000:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2125,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3987:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3907:141:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2138,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "4110:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2139,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "4134:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2142,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4166:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_helperLogic_$2605",
																		"typeString": "contract helperLogic"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_helperLogic_$2605",
																		"typeString": "contract helperLogic"
																	}
																],
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4158:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2140,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4158:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4158:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4195:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "4185:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 2144,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "4189:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4185:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2135,
																	"name": "sea_usc_lpAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "4073:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2134,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "4058:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1388_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4058:33:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1388",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1372,
														"src": "4058:38:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,address,bytes memory) external"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4058:149:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "4058:149:11"
											},
											{
												"expression": {
													"id": 2150,
													"name": "amountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2103,
													"src": "4224:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2044,
												"id": 2151,
												"nodeType": "Return",
												"src": "4217:16:11"
											}
										]
									},
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buySea",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "uscAmt",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "3314:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:16:11"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "3348:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3347:9:11"
									},
									"scope": 2605,
									"src": "3298:942:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "4309:703:11",
										"statements": [
											{
												"assignments": [
													2161
												],
												"declarations": [
													{
														"constant": false,
														"id": 2161,
														"mutability": "mutable",
														"name": "uscBalanceOf",
														"nodeType": "VariableDeclaration",
														"scope": 2260,
														"src": "4319:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4319:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2169,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2166,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4364:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_helperLogic_$2605",
																		"typeString": "contract helperLogic"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_helperLogic_$2605",
																		"typeString": "contract helperLogic"
																	}
																],
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4356:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2164,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4356:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4356:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2162,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "4342:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "4342:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4342:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4319:51:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2170,
														"name": "uscBalanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "4384:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4400:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4384:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2176,
												"nodeType": "IfStatement",
												"src": "4380:59:11",
												"trueBody": {
													"id": 2175,
													"nodeType": "Block",
													"src": "4403:36:11",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4424:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2159,
															"id": 2174,
															"nodeType": "Return",
															"src": "4417:11:11"
														}
													]
												}
											},
											{
												"assignments": [
													2178
												],
												"declarations": [
													{
														"constant": false,
														"id": 2178,
														"mutability": "mutable",
														"name": "toSsea",
														"nodeType": "VariableDeclaration",
														"scope": 2260,
														"src": "4448:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2177,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4448:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2186,
												"initialValue": {
													"arguments": [
														{
															"id": 2184,
															"name": "PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "4501:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2181,
																	"name": "toSseaPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "4482:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2179,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "4465:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "4465:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4465:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "4465:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4465:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4448:63:11"
											},
											{
												"assignments": [
													2188
												],
												"declarations": [
													{
														"constant": false,
														"id": 2188,
														"mutability": "mutable",
														"name": "toOp",
														"nodeType": "VariableDeclaration",
														"scope": 2260,
														"src": "4521:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2187,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4521:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2196,
												"initialValue": {
													"arguments": [
														{
															"id": 2194,
															"name": "PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "4570:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2191,
																	"name": "toOpPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "4553:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2189,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "4536:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "4536:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4536:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "4536:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4536:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4521:59:11"
											},
											{
												"assignments": [
													2198
												],
												"declarations": [
													{
														"constant": false,
														"id": 2198,
														"mutability": "mutable",
														"name": "toDev",
														"nodeType": "VariableDeclaration",
														"scope": 2260,
														"src": "4590:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4590:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2206,
												"initialValue": {
													"arguments": [
														{
															"id": 2204,
															"name": "toOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2188,
															"src": "4635:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2201,
																	"name": "toSsea",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2178,
																	"src": "4623:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2199,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "4606:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 952,
																"src": "4606:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4606:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "4606:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4590:50:11"
											},
											{
												"assignments": [
													2208
												],
												"declarations": [
													{
														"constant": false,
														"id": 2208,
														"mutability": "mutable",
														"name": "seaAmt",
														"nodeType": "VariableDeclaration",
														"scope": 2260,
														"src": "4651:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4651:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2212,
												"initialValue": {
													"arguments": [
														{
															"id": 2210,
															"name": "toSsea",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2178,
															"src": "4675:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2209,
														"name": "buySea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "4668:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) returns (uint256)"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4668:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4651:31:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2218,
																	"name": "ssea",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "4717:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4709:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2216,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4709:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4709:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2220,
															"name": "seaAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "4724:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2213,
															"name": "sea",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "4692:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4692:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4692:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2222,
												"nodeType": "ExpressionStatement",
												"src": "4692:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2228,
																	"name": "op",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "4766:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4758:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2226,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4758:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4758:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2230,
															"name": "toOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2188,
															"src": "4771:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2223,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "4741:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4741:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4741:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "4741:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2238,
																	"name": "dev",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "4811:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4803:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2236,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4803:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4803:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2240,
															"name": "toDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "4817:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2233,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "4786:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4786:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4786:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "4786:37:11"
											},
											{
												"condition": {
													"id": 2243,
													"name": "autoAdjustFarm",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1864,
													"src": "4838:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2248,
												"nodeType": "IfStatement",
												"src": "4834:57:11",
												"trueBody": {
													"id": 2247,
													"nodeType": "Block",
													"src": "4854:37:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2244,
																	"name": "adjustFarm",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "4868:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4868:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2246,
															"nodeType": "ExpressionStatement",
															"src": "4868:12:11"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2249,
													"name": "openStabilizer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1866,
													"src": "4905:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2257,
												"nodeType": "IfStatement",
												"src": "4901:83:11",
												"trueBody": {
													"id": 2256,
													"nodeType": "Block",
													"src": "4921:63:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2251,
																				"name": "stabilizer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1868,
																				"src": "4947:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2250,
																			"name": "IStabilizer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "4935:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IStabilizer_$1810_$",
																				"typeString": "type(contract IStabilizer)"
																			}
																		},
																		"id": 2252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4935:23:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IStabilizer_$1810",
																			"typeString": "contract IStabilizer"
																		}
																	},
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "goStabilizer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1809,
																	"src": "4935:36:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
																		"typeString": "function () external returns (bool)"
																	}
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4935:38:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2255,
															"nodeType": "ExpressionStatement",
															"src": "4935:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5001:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2159,
												"id": 2259,
												"nodeType": "Return",
												"src": "4994:11:11"
											}
										]
									},
									"functionSelector": "d10c06a2",
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2156,
											"modifierName": {
												"id": 2155,
												"name": "onlyExecutor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1996,
												"src": "4281:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4281:12:11"
										}
									],
									"name": "jointExecution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4269:2:11"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "4303:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4303:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4302:6:11"
									},
									"scope": 2605,
									"src": "4246:766:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2402,
										"nodeType": "Block",
										"src": "5049:1087:11",
										"statements": [
											{
												"assignments": [
													2265
												],
												"declarations": [
													{
														"constant": false,
														"id": 2265,
														"mutability": "mutable",
														"name": "pairAddress",
														"nodeType": "VariableDeclaration",
														"scope": 2402,
														"src": "5059:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2264,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5059:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2277,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2270,
																	"name": "usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "5105:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5097:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2268,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5097:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5097:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2274,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "5120:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5112:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2272,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5112:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5112:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2266,
															"name": "Factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "5081:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 2267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1109,
														"src": "5081:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) view external returns (address)"
														}
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5081:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5059:66:11"
											},
											{
												"assignments": [
													2279
												],
												"declarations": [
													{
														"constant": false,
														"id": 2279,
														"mutability": "mutable",
														"name": "uscBalanceOf",
														"nodeType": "VariableDeclaration",
														"scope": 2402,
														"src": "5135:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5135:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2284,
												"initialValue": {
													"arguments": [
														{
															"id": 2282,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "5172:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2280,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "5158:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "5158:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5158:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5135:49:11"
											},
											{
												"assignments": [
													2286
												],
												"declarations": [
													{
														"constant": false,
														"id": 2286,
														"mutability": "mutable",
														"name": "usdcBalanceOf",
														"nodeType": "VariableDeclaration",
														"scope": 2402,
														"src": "5194:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5194:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2291,
												"initialValue": {
													"arguments": [
														{
															"id": 2289,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "5233:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2287,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "5218:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "5218:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5218:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5194:51:11"
											},
											{
												"assignments": [
													2293
												],
												"declarations": [
													{
														"constant": false,
														"id": 2293,
														"mutability": "mutable",
														"name": "usdcDecimals",
														"nodeType": "VariableDeclaration",
														"scope": 2402,
														"src": "5255:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5255:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2302,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2297,
																			"name": "usdc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "5301:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		],
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5293:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2295,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5293:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5293:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2294,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "5278:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1388_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5278:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1388",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1179,
														"src": "5278:38:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$__$returns$_t_uint8_$",
															"typeString": "function () pure external returns (uint8)"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5278:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5255:63:11"
											},
											{
												"assignments": [
													2304
												],
												"declarations": [
													{
														"constant": false,
														"id": 2304,
														"mutability": "mutable",
														"name": "addDecimals",
														"nodeType": "VariableDeclaration",
														"scope": 2402,
														"src": "5328:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5328:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2306,
												"initialValue": {
													"hexValue": "30",
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5350:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5328:23:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2307,
														"name": "usdcDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2293,
														"src": "5365:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3138",
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5380:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "5365:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2317,
												"nodeType": "IfStatement",
												"src": "5361:79:11",
												"trueBody": {
													"id": 2316,
													"nodeType": "Block",
													"src": "5384:56:11",
													"statements": [
														{
															"expression": {
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2310,
																	"name": "addDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "5398:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3138",
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5412:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2312,
																		"name": "usdcDecimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2293,
																		"src": "5417:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5412:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5398:31:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2315,
															"nodeType": "ExpressionStatement",
															"src": "5398:31:11"
														}
													]
												}
											},
											{
												"assignments": [
													2319
												],
												"declarations": [
													{
														"constant": false,
														"id": 2319,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 2402,
														"src": "5449:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5449:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2326,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31653138",
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5461:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5469:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 2322,
																	"name": "addDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "5473:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5469:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2324,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5468:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5461:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5449:36:11"
											},
											{
												"assignments": [
													2328
												],
												"declarations": [
													{
														"constant": false,
														"id": 2328,
														"mutability": "mutable",
														"name": "uscPrice",
														"nodeType": "VariableDeclaration",
														"scope": 2402,
														"src": "5495:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5495:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2336,
												"initialValue": {
													"arguments": [
														{
															"id": 2334,
															"name": "uscBalanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "5539:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2331,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2319,
																	"src": "5532:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2329,
																	"name": "usdcBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2286,
																	"src": "5514:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "5514:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5514:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "5514:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5514:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5495:57:11"
											},
											{
												"assignments": [
													2338
												],
												"declarations": [
													{
														"constant": false,
														"id": 2338,
														"mutability": "mutable",
														"name": "USDC_USC_LP_farmPoint",
														"nodeType": "VariableDeclaration",
														"scope": 2402,
														"src": "5562:29:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2337,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5562:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2339,
												"nodeType": "VariableDeclarationStatement",
												"src": "5562:29:11"
											},
											{
												"assignments": [
													2341
												],
												"declarations": [
													{
														"constant": false,
														"id": 2341,
														"mutability": "mutable",
														"name": "diffPoint",
														"nodeType": "VariableDeclaration",
														"scope": 2402,
														"src": "5601:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5601:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2342,
												"nodeType": "VariableDeclarationStatement",
												"src": "5601:17:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2343,
														"name": "uscPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2328,
														"src": "5632:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 2344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5643:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "5632:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2392,
													"nodeType": "Block",
													"src": "5928:146:11",
													"statements": [
														{
															"expression": {
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2375,
																	"name": "diffPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "5962:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653134",
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5996:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			},
																			"value": "1e14"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2378,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31653138",
																						"id": 2376,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5975:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"value": "1e18"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 2377,
																						"name": "uscPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2328,
																						"src": "5982:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5975:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2379,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5974:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 982,
																		"src": "5974:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5974:27:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5962:39:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2384,
															"nodeType": "ExpressionStatement",
															"src": "5962:39:11"
														},
														{
															"expression": {
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2385,
																	"name": "USDC_USC_LP_farmPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "6015:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2388,
																			"name": "diffPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2341,
																			"src": "6053:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2386,
																			"name": "basePoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "6039:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 937,
																		"src": "6039:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6039:24:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6015:48:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2391,
															"nodeType": "ExpressionStatement",
															"src": "6015:48:11"
														}
													]
												},
												"id": 2393,
												"nodeType": "IfStatement",
												"src": "5628:446:11",
												"trueBody": {
													"id": 2374,
													"nodeType": "Block",
													"src": "5649:273:11",
													"statements": [
														{
															"expression": {
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2346,
																	"name": "diffPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "5684:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653134",
																			"id": 2353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5721:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			},
																			"value": "1e14"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"hexValue": "31653138",
																							"id": 2349,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5710:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"id": 2347,
																							"name": "uscPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2328,
																							"src": "5697:8:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2348,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 952,
																						"src": "5697:12:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2350,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5697:18:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2351,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5696:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 982,
																		"src": "5696:24:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5696:30:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5684:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2356,
															"nodeType": "ExpressionStatement",
															"src": "5684:42:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2357,
																	"name": "diffPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "5744:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2358,
																	"name": "basePoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "5756:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5744:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2372,
																"nodeType": "Block",
																"src": "5831:81:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2365,
																				"name": "USDC_USC_LP_farmPoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2338,
																				"src": "5849:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2368,
																						"name": "diffPoint",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2341,
																						"src": "5887:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2366,
																						"name": "basePoint",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1857,
																						"src": "5873:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 952,
																					"src": "5873:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5873:24:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5849:48:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2371,
																		"nodeType": "ExpressionStatement",
																		"src": "5849:48:11"
																	}
																]
															},
															"id": 2373,
															"nodeType": "IfStatement",
															"src": "5740:172:11",
															"trueBody": {
																"id": 2364,
																"nodeType": "Block",
																"src": "5767:58:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2360,
																				"name": "USDC_USC_LP_farmPoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2338,
																				"src": "5785:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 2361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5809:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5785:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2363,
																		"nodeType": "ExpressionStatement",
																		"src": "5785:25:11"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2397,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "6096:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2398,
															"name": "USDC_USC_LP_farmPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "6101:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6124:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 2394,
															"name": "farm",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "6083:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFarm_$1804",
																"typeString": "contract IFarm"
															}
														},
														"id": 2396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1803,
														"src": "6083:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,bool) external"
														}
													},
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6083:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2401,
												"nodeType": "ExpressionStatement",
												"src": "6083:46:11"
											}
										]
									},
									"id": 2403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "adjustFarm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5037:2:11"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5049:0:11"
									},
									"scope": 2605,
									"src": "5018:1118:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2425,
										"nodeType": "Block",
										"src": "6261:96:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2418,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6312:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6312:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2420,
															"name": "_amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "6324:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2415,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2405,
																	"src": "6289:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2414,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "6271:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$248_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6271:27:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "6271:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6271:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2422,
												"nodeType": "ExpressionStatement",
												"src": "6271:58:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6346:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2413,
												"id": 2424,
												"nodeType": "Return",
												"src": "6339:11:11"
											}
										]
									},
									"functionSelector": "930ed033",
									"id": 2426,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2410,
											"modifierName": {
												"id": 2409,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6224:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6224:9:11"
										}
									],
									"name": "withdrawalERC20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "6167:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6167:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "_amt",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "6185:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6185:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:32:11"
									},
									"returnParameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "6251:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6251:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6250:6:11"
									},
									"scope": 2605,
									"src": "6142:215:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2441,
										"nodeType": "Block",
										"src": "6430:51:11",
										"statements": [
											{
												"expression": {
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2435,
														"name": "op",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "6440:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2436,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2428,
														"src": "6445:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6440:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2438,
												"nodeType": "ExpressionStatement",
												"src": "6440:13:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6470:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2434,
												"id": 2440,
												"nodeType": "Return",
												"src": "6463:11:11"
											}
										]
									},
									"functionSelector": "a36a7526",
									"id": 2442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2431,
											"modifierName": {
												"id": 2430,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6405:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6405:9:11"
										}
									],
									"name": "setOp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "6378:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6378:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6377:18:11"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "6424:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6424:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6423:6:11"
									},
									"scope": 2605,
									"src": "6363:118:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2457,
										"nodeType": "Block",
										"src": "6555:52:11",
										"statements": [
											{
												"expression": {
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2451,
														"name": "dev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "6565:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2452,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2444,
														"src": "6571:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6565:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2454,
												"nodeType": "ExpressionStatement",
												"src": "6565:14:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6596:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2450,
												"id": 2456,
												"nodeType": "Return",
												"src": "6589:11:11"
											}
										]
									},
									"functionSelector": "d477f05f",
									"id": 2458,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2447,
											"modifierName": {
												"id": 2446,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6530:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6530:9:11"
										}
									],
									"name": "setDev",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "6503:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:18:11"
									},
									"returnParameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "6549:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6549:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:6:11"
									},
									"scope": 2605,
									"src": "6487:120:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2473,
										"nodeType": "Block",
										"src": "6687:58:11",
										"statements": [
											{
												"expression": {
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2467,
														"name": "toSseaPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "6697:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2468,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2460,
														"src": "6713:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6697:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2470,
												"nodeType": "ExpressionStatement",
												"src": "6697:20:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6734:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2466,
												"id": 2472,
												"nodeType": "Return",
												"src": "6727:11:11"
											}
										]
									},
									"functionSelector": "27c42a50",
									"id": 2474,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2463,
											"modifierName": {
												"id": 2462,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6662:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6662:9:11"
										}
									],
									"name": "setToSseaPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "6639:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6639:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6638:14:11"
									},
									"returnParameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "6681:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6681:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6680:6:11"
									},
									"scope": 2605,
									"src": "6613:132:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2489,
										"nodeType": "Block",
										"src": "6823:56:11",
										"statements": [
											{
												"expression": {
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2483,
														"name": "toOpPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "6833:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2484,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "6847:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6833:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2486,
												"nodeType": "ExpressionStatement",
												"src": "6833:18:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6868:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2482,
												"id": 2488,
												"nodeType": "Return",
												"src": "6861:11:11"
											}
										]
									},
									"functionSelector": "af5518c4",
									"id": 2490,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2479,
											"modifierName": {
												"id": 2478,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6798:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6798:9:11"
										}
									],
									"name": "setToOpPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "6775:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6775:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6774:14:11"
									},
									"returnParameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "6817:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6817:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6816:6:11"
									},
									"scope": 2605,
									"src": "6751:128:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2505,
										"nodeType": "Block",
										"src": "6958:57:11",
										"statements": [
											{
												"expression": {
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2499,
														"name": "toDevPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "6968:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2500,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2492,
														"src": "6983:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6968:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2502,
												"nodeType": "ExpressionStatement",
												"src": "6968:19:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7004:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2498,
												"id": 2504,
												"nodeType": "Return",
												"src": "6997:11:11"
											}
										]
									},
									"functionSelector": "3c850e1e",
									"id": 2506,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2495,
											"modifierName": {
												"id": 2494,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6933:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6933:9:11"
										}
									],
									"name": "setToDevPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "6910:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6910:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6909:14:11"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "6952:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6952:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:6:11"
									},
									"scope": 2605,
									"src": "6885:130:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "7094:60:11",
										"statements": [
											{
												"expression": {
													"id": 2517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2515,
														"name": "autoAdjustFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "7104:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2516,
														"name": "_bool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2508,
														"src": "7121:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7104:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2518,
												"nodeType": "ExpressionStatement",
												"src": "7104:22:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7143:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2514,
												"id": 2520,
												"nodeType": "Return",
												"src": "7136:11:11"
											}
										]
									},
									"functionSelector": "4591db50",
									"id": 2522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2511,
											"modifierName": {
												"id": 2510,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "7069:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7069:9:11"
										}
									],
									"name": "setAutoAdjustFarm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "_bool",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "7048:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7048:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7047:12:11"
									},
									"returnParameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "7088:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7088:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:6:11"
									},
									"scope": 2605,
									"src": "7021:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "7233:60:11",
										"statements": [
											{
												"expression": {
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2531,
														"name": "openStabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "7243:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2532,
														"name": "_bool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2524,
														"src": "7260:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7243:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2534,
												"nodeType": "ExpressionStatement",
												"src": "7243:22:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7282:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2530,
												"id": 2536,
												"nodeType": "Return",
												"src": "7275:11:11"
											}
										]
									},
									"functionSelector": "55c746d1",
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2527,
											"modifierName": {
												"id": 2526,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "7208:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7208:9:11"
										}
									],
									"name": "setOpenStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "_bool",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "7187:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7187:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7186:12:11"
									},
									"returnParameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "7227:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7227:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7226:6:11"
									},
									"scope": 2605,
									"src": "7160:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2553,
										"nodeType": "Block",
										"src": "7374:59:11",
										"statements": [
											{
												"expression": {
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2547,
														"name": "stabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "7384:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2548,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2540,
														"src": "7397:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7384:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2550,
												"nodeType": "ExpressionStatement",
												"src": "7384:21:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2551,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7422:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2546,
												"id": 2552,
												"nodeType": "Return",
												"src": "7415:11:11"
											}
										]
									},
									"functionSelector": "db7f521a",
									"id": 2554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2543,
											"modifierName": {
												"id": 2542,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "7349:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7349:9:11"
										}
									],
									"name": "setStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "7322:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7322:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7321:18:11"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "7368:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7368:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7367:6:11"
									},
									"scope": 2605,
									"src": "7299:134:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2569,
										"nodeType": "Block",
										"src": "7503:48:11",
										"statements": [
											{
												"expression": {
													"id": 2565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2563,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "7513:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2564,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2556,
														"src": "7519:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7513:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2566,
												"nodeType": "ExpressionStatement",
												"src": "7513:10:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2567,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7540:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2562,
												"id": 2568,
												"nodeType": "Return",
												"src": "7533:11:11"
											}
										]
									},
									"functionSelector": "1b0d8aab",
									"id": 2570,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2559,
											"modifierName": {
												"id": 2558,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "7478:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7478:9:11"
										}
									],
									"name": "setPid",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "7455:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7455:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7454:14:11"
									},
									"returnParameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "7497:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7497:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7496:6:11"
									},
									"scope": 2605,
									"src": "7439:112:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "7668:50:11",
										"statements": [
											{
												"expression": {
													"id": 2582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2580,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "7678:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2581,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2573,
														"src": "7685:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "7678:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 2583,
												"nodeType": "ExpressionStatement",
												"src": "7678:12:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7707:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2579,
												"id": 2585,
												"nodeType": "Return",
												"src": "7700:11:11"
											}
										]
									},
									"functionSelector": "aaf5bfc3",
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2576,
											"modifierName": {
												"id": 2575,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "7631:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7631:9:11"
										}
									],
									"name": "setUSDCAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "_usdc",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "7581:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 2572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2571,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "7581:17:11"
													},
													"referencedDeclaration": 248,
													"src": "7581:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7580:25:11"
									},
									"returnParameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "7658:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7658:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7657:6:11"
									},
									"scope": 2605,
									"src": "7557:161:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2603,
										"nodeType": "Block",
										"src": "7788:50:11",
										"statements": [
											{
												"expression": {
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2597,
														"name": "farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "7798:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2598,
														"name": "_farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2590,
														"src": "7805:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"src": "7798:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"id": 2600,
												"nodeType": "ExpressionStatement",
												"src": "7798:12:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7827:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2596,
												"id": 2602,
												"nodeType": "Return",
												"src": "7820:11:11"
											}
										]
									},
									"functionSelector": "d4f26c51",
									"id": 2604,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2593,
											"modifierName": {
												"id": 2592,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "7763:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7763:9:11"
										}
									],
									"name": "setFarm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "_farm",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "7741:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFarm_$1804",
													"typeString": "contract IFarm"
												},
												"typeName": {
													"id": 2589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2588,
														"name": "IFarm",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1804,
														"src": "7741:5:11"
													},
													"referencedDeclaration": 1804,
													"src": "7741:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7740:13:11"
									},
									"returnParameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "7782:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2594,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7782:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7781:6:11"
									},
									"scope": 2605,
									"src": "7724:114:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2606,
							"src": "909:6931:11"
						}
					],
					"src": "32:7809:11"
				},
				"id": 11
			}
		}
	}
}
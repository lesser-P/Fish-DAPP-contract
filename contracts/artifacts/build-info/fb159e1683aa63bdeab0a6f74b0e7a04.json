{
	"id": "fb159e1683aa63bdeab0a6f74b0e7a04",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/helperLogic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\n\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\";\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\";\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\";\n\ninterface IFarm {\n    function setPool(\n        uint256 _pid,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) external;\n}\n\ninterface IStabilizer {\n    function goStabilizer() external returns (bool);\n}\n\ncontract helperLogic is Initializable, OwnableUpgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n    using SafeMathUpgradeable for uint256;\n\n    //Executor\n    mapping(address => bool) public executor;\n    IERC20Upgradeable public usc;\n    IERC20Upgradeable public usdc;\n    IERC20Upgradeable public sea;\n    IERC20Upgradeable public ssea;\n    address public op;\n    address public dev;\n\n    IUniswapV2Router02 public Router;\n    IUniswapV2Factory public Factory;\n\n    uint256 public toSseaPercent;\n    uint256 public toOpPercent;\n    uint256 public toDevPercent;\n    uint256 public PRECISION;\n\n    uint256 public basePoint;\n    uint256 public pid;\n\n    IFarm public farm;\n\n    bool public autoAdjustFarm;\n    bool public openStabilizer;\n\n    address public stabilizer;\n\n    function initialize(\n        // address _mirrorseaMain,\n        IUniswapV2Factory _Factory,\n        IUniswapV2Router02 _Router,\n        IERC20Upgradeable _usc,\n        IERC20Upgradeable _usdc,\n        IERC20Upgradeable _sea,\n        IERC20Upgradeable _ssea,\n        IFarm _farm\n    )\n        external\n        // address _stabilizer\n        initializer\n    {\n        __Ownable_init();\n        // executor[_mirrorseaMain] = true;\n        Router = _Router;\n        Factory = _Factory;\n        usc = _usc;\n        sea = _sea;\n        ssea = _ssea;\n        op = msg.sender;\n        dev = msg.sender;\n        toSseaPercent = 5000;\n        toOpPercent = 2500;\n        toDevPercent = 2500;\n        PRECISION = 10000;\n        basePoint = 1000;\n        autoAdjustFarm = true;\n        openStabilizer = false;\n        farm = _farm;\n        usdc = _usdc;\n        // stabilizer = _stabilizer;\n    }\n\n    function setExecutor(address _address, bool _type)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        executor[_address] = _type;\n        return true;\n    }\n\n    modifier onlyExecutor() {\n        require(executor[msg.sender], \"executor: caller is not the executor\");\n        _;\n    }\n\n    function getAmountOut(\n        uint256 amountIn,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) internal pure returns (uint256 amountOut) {\n        uint256 amountInWithFee = amountIn.mul(997);\n        uint256 numerator = amountInWithFee.mul(reserveOut);\n        uint256 denominator = reserveIn.mul(1000).add(amountInWithFee);\n        amountOut = numerator / denominator;\n    }\n\n    function buySea(uint256 uscAmt) internal returns (uint256) {\n        address sea_usc_lpAddress = Factory.getPair(address(sea), address(usc));\n        usc.safeTransfer(sea_usc_lpAddress, uscAmt);\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(\n            sea_usc_lpAddress\n        ).getReserves();\n        address token0 = IUniswapV2Pair(sea_usc_lpAddress).token0();\n        (uint256 reserveIn, uint256 reserveOut) = token0 == address(usc)\n            ? (reserve0, reserve1)\n            : (reserve1, reserve0);\n        uint256 amountOut = getAmountOut(uscAmt, reserveIn, reserveOut);\n        (uint256 amount0Out, uint256 amount1Out) = token0 == address(usc)\n            ? (uint256(0), amountOut)\n            : (amountOut, uint256(0));\n        IUniswapV2Pair(sea_usc_lpAddress).swap(\n            amount0Out,\n            amount1Out,\n            address(this),\n            new bytes(0)\n        );\n        return amountOut;\n    }\n\n    function jointExecution() external onlyExecutor returns (bool) {\n        uint256 uscBalanceOf = usc.balanceOf(address(this));\n        uint256 toSsea = uscBalanceOf.mul(toSseaPercent).div(PRECISION);\n        uint256 toOp = uscBalanceOf.mul(toOpPercent).div(PRECISION);\n        uint256 toDev = uscBalanceOf.sub(toSsea).sub(toOp);\n\n        uint256 seaAmt = buySea(toSsea);\n        sea.safeTransfer(address(ssea), seaAmt);\n        usc.safeTransfer(address(op), toOp);\n        usc.safeTransfer(address(dev), toDev);\n\n        if (autoAdjustFarm) {\n            adjustFarm();\n        }\n\n        if (openStabilizer) {\n            IStabilizer(stabilizer).goStabilizer();\n        }\n\n        return true;\n    }\n\n    function adjustFarm() internal {\n        address pairAddress = Factory.getPair(address(usdc), address(usc));\n        uint256 uscBalanceOf = usc.balanceOf(pairAddress);\n        uint256 usdcBalanceOf = usdc.balanceOf(pairAddress);\n        uint256 e18 = 1e18;\n        uint256 uscPrice = usdcBalanceOf.mul(e18).div(uscBalanceOf);\n        uint256 USDC_USC_LP_farmPoint;\n        uint256 diffPoint;\n        if (uscPrice > 1e18) {\n            //higt 1\n            diffPoint = (uscPrice.sub(1e18)).div(1e14);\n            if (diffPoint > basePoint) {\n                USDC_USC_LP_farmPoint = 0;\n            } else {\n                USDC_USC_LP_farmPoint = basePoint.sub(diffPoint);\n            }\n        } else {\n            //low 1\n            diffPoint = (1e18 - uscPrice).div(1e14);\n            USDC_USC_LP_farmPoint = basePoint.add(diffPoint);\n        }\n        farm.setPool(pid, USDC_USC_LP_farmPoint, true);\n    }\n\n    function withdrawalERC20(address _address, uint256 _amt)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt);\n        return true;\n    }\n\n    function setOp(address _address) external onlyOwner returns (bool) {\n        op = _address;\n        return true;\n    }\n\n    function setDev(address _address) external onlyOwner returns (bool) {\n        dev = _address;\n        return true;\n    }\n\n    function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {\n        toSseaPercent = _val;\n        return true;\n    }\n\n    function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {\n        toOpPercent = _val;\n        return true;\n    }\n\n    function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {\n        toDevPercent = _val;\n        return true;\n    }\n\n    function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {\n        autoAdjustFarm = _bool;\n        return true;\n    }\n\n    function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {\n        openStabilizer = _bool;\n        return true;\n    }\n\n    function setStabilizer(address _address) external onlyOwner returns (bool) {\n        stabilizer = _address;\n        return true;\n    }\n\n    function setPid(uint256 _val) external onlyOwner returns (bool) {\n        pid = _val;\n        return true;\n    }\n\n    function setUSDCAddress(IERC20Upgradeable _usdc)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        usdc = _usdc;\n        return true;\n    }\n\n    function setFarm(IFarm _farm) external onlyOwner returns (bool) {\n        farm = _farm;\n        return true;\n    }\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n    function migrator() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n    function setMigrator(address) external;\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMathUpgradeable {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal initializer {\n        __Context_init_unchained();\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal initializer {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.0;\n\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        require(_initializing || !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    function safeTransfer(\n        IERC20Upgradeable token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20Upgradeable token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal initializer {\n        __Context_init_unchained();\n    }\n\n    function __Context_init_unchained() internal initializer {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n    uint256[50] private __gap;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 124,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x2A LOG2 0xE7 0xF BLOCKHASH ORIGIN 0xEA PUSH31 0xCE6BC3109703F1FFD6DBFE4036E1B35C6D58456AFD9EC564736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "667:3358:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;667:3358:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x2A LOG2 0xE7 0xF BLOCKHASH ORIGIN 0xEA PUSH31 0xCE6BC3109703F1FFD6DBFE4036E1B35C6D58456AFD9EC564736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "667:3358:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
									".code": [
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":179:6969  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":179:6969  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x5E 0x5F BLOCKHASH 0xC9 0x4F 0xC0 SGT MSIZE PUSH24 0x103E57C2C3FF43FD9677A246F2877F83EE01753F390A6473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "179:6790:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:6790:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x5E 0x5F BLOCKHASH 0xC9 0x4F 0xC0 SGT MSIZE PUSH24 0x103E57C2C3FF43FD9677A246F2877F83EE01753F390A6473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "179:6790:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
									".code": [
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"SafeMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":467:6779  library SafeMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":467:6779  library SafeMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SGT PUSH5 0xF0CCAFFF09 PUSH17 0xBBA1DD59BC3AFE606CCC747E9960FEAAD4 0xCA 0xF7 0xD2 SWAP5 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6312:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6312:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SGT PUSH5 0xF0CCAFFF09 PUSH17 0xBBA1DD59BC3AFE606CCC747E9960FEAAD4 0xCA 0xF7 0xD2 SWAP5 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6312:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
									".code": [
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":\"SafeMathUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"migrator()": "7cd07e47",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6",
							"setMigrator(address)": "23cf3118"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/helperLogic.sol": {
				"IFarm": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "setPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setPool(uint256,uint256,bool)": "46ca6bea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"IFarm\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0x0735dcfb659782978f1a8576ed946d3efa9a46f2b8e98b598895872071670f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f948551495e9d0856dfc715f831d034b5b308cdcf5da1d599a0182010e6698dd\",\"dweb:/ipfs/QmSdFRqtMt999DpQoNUg9kWfV9CpLuD6aJzy56YCxgwGzR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStabilizer": {
					"abi": [
						{
							"inputs": [],
							"name": "goStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"goStabilizer()": "796c7be7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"goStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"IStabilizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0x0735dcfb659782978f1a8576ed946d3efa9a46f2b8e98b598895872071670f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f948551495e9d0856dfc715f831d034b5b308cdcf5da1d599a0182010e6698dd\",\"dweb:/ipfs/QmSdFRqtMt999DpQoNUg9kWfV9CpLuD6aJzy56YCxgwGzR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"helperLogic": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Factory",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Factory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "autoAdjustFarm",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "basePoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dev",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "executor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "farm",
							"outputs": [
								{
									"internalType": "contract IFarm",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IUniswapV2Factory",
									"name": "_Factory",
									"type": "address"
								},
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "_Router",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usc",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_sea",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_ssea",
									"type": "address"
								},
								{
									"internalType": "contract IFarm",
									"name": "_farm",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "jointExecution",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "op",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sea",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setAutoAdjustFarm",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setDev",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_type",
									"type": "bool"
								}
							],
							"name": "setExecutor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IFarm",
									"name": "_farm",
									"type": "address"
								}
							],
							"name": "setFarm",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setOp",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setOpenStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setPid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToDevPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToOpPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToSseaPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usdc",
									"type": "address"
								}
							],
							"name": "setUSDCAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ssea",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stabilizer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toDevPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toOpPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toSseaPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usc",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amt",
									"type": "uint256"
								}
							],
							"name": "withdrawalERC20",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/helperLogic.sol\":909:7560  contract helperLogic is Initializable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/helperLogic.sol\":909:7560  contract helperLogic is Initializable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xbd0b1f44\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xdb7f521a\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xdb7f521a\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xec1f1f69\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf1068454\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf6d7eade\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0xbd0b1f44\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc83dd231\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd10c06a2\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd477f05f\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd4f26c51\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0xa36a7526\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xa36a7526\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xaaf5bfc3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xaaf5eb68\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xaf5518c4\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb8bb97a1\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x91cca3db\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x930ed033\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9da5b0d5\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x3e413bee\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x4ecaac41\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x4ecaac41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x55c746d1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x58de5de8\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7e47961c\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x3e413bee\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4591db50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x48c7e528\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4ae6a027\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x2c535a52\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x2c535a52\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3011d3d5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x35876476\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36e9332d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3c850e1e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x16d03993\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b0d8aab\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1e1bff3f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x27c42a50\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/helperLogic.sol\":1525:1549  uint256 public basePoint */\n    tag_3:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":7159:7271  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_4:\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n    tag_5:\n      tag_51\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6333:6465  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_6:\n      tag_51\n      tag_63\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1429:1455  uint256 public toOpPercent */\n    tag_7:\n      tag_47\n      tag_67\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1132:1160  IERC20Upgradeable public usc */\n    tag_8:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n    tag_9:\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/helperLogic.sol\":1580:1597  IFarm public farm */\n    tag_10:\n      tag_69\n      tag_78\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6605:6735  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_11:\n      tag_51\n      tag_82\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1166:1195  IERC20Upgradeable public usdc */\n    tag_12:\n      tag_69\n      tag_86\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6741:6874  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n    tag_13:\n      tag_51\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1086:1126  mapping(address => bool) public executor */\n    tag_14:\n      tag_51\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1461:1488  uint256 public toDevPercent */\n    tag_15:\n      tag_47\n      tag_99\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1201:1229  IERC20Upgradeable public sea */\n    tag_16:\n      tag_69\n      tag_102\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6880:7013  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n    tag_17:\n      tag_51\n      tag_105\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1636:1662  bool public openStabilizer */\n    tag_18:\n      tag_51\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      tag_73\n      tag_112\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1669:1694  address public stabilizer */\n    tag_20:\n      tag_69\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_69\n      tag_118\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1293:1311  address public dev */\n    tag_22:\n      tag_69\n      tag_121\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5862:6077  function withdrawalERC20(address _address, uint256 _amt)... */\n    tag_23:\n      tag_51\n      tag_124\n      calldatasize\n      0x04\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1604:1630  bool public autoAdjustFarm */\n    tag_24:\n      tag_51\n      tag_129\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6083:6201  function setOp(address _address) external onlyOwner returns (bool) {... */\n    tag_25:\n      tag_51\n      tag_132\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":7277:7438  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n    tag_26:\n      tag_51\n      tag_136\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1494:1518  uint256 public PRECISION */\n    tag_27:\n      tag_47\n      tag_141\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6471:6599  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_28:\n      tag_51\n      tag_144\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1235:1264  IERC20Upgradeable public ssea */\n    tag_29:\n      tag_69\n      tag_148\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1395:1423  uint256 public toSseaPercent */\n    tag_30:\n      tag_47\n      tag_151\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1356:1388  IUniswapV2Factory public Factory */\n    tag_31:\n      tag_69\n      tag_154\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":4244:4942  function jointExecution() external onlyExecutor returns (bool) {... */\n    tag_32:\n      tag_51\n      tag_158\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":6207:6327  function setDev(address _address) external onlyOwner returns (bool) {... */\n    tag_33:\n      tag_51\n      tag_161\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":7444:7558  function setFarm(IFarm _farm) external onlyOwner returns (bool) {... */\n    tag_34:\n      tag_51\n      tag_165\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_165:\n      tag_167\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":7019:7153  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n    tag_35:\n      tag_51\n      tag_170\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_170:\n      tag_171\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1270:1287  address public op */\n    tag_36:\n      tag_69\n      tag_174\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1555:1573  uint256 public pid */\n    tag_37:\n      tag_47\n      tag_177\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n      tag_73\n      tag_180\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1318:1350  IUniswapV2Router02 public Router */\n    tag_39:\n      tag_69\n      tag_183\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1525:1549  uint256 public basePoint */\n    tag_48:\n      sload(0x72)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":7159:7271  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_54:\n        /* \"contracts/helperLogic.sol\":7217:7221  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n      pop\n        /* \"contracts/helperLogic.sol\":7233:7236  pid */\n      0x73\n        /* \"contracts/helperLogic.sol\":7233:7243  pid = _val */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":7260:7264  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1584:1585  _ */\n    tag_193:\n        /* \"contracts/helperLogic.sol\":7159:7271  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n    tag_60:\n        /* \"contracts/helperLogic.sol\":2694:2698  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_197:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":2714:2732  executor[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":2714:2722  executor */\n      0x65\n        /* \"contracts/helperLogic.sol\":2714:2732  executor[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/helperLogic.sol\":2714:2740  executor[_address] = _type */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6333:6465  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_64:\n        /* \"contracts/helperLogic.sol\":6401:6405  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_201\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_203:\n      pop\n        /* \"contracts/helperLogic.sol\":6417:6430  toSseaPercent */\n      0x6e\n        /* \"contracts/helperLogic.sol\":6417:6437  toSseaPercent = _val */\n      sstore\n        /* \"contracts/helperLogic.sol\":6454:6458  true */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":6333:6465  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1429:1455  uint256 public toOpPercent */\n    tag_67:\n      sload(0x6f)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1132:1160  IERC20Upgradeable public usc */\n    tag_70:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x66))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_207\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_210\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_211:\n        /* \"contracts/helperLogic.sol\":2067:2083  __Ownable_init() */\n      tag_213\n        /* \"contracts/helperLogic.sol\":2067:2081  __Ownable_init */\n      tag_214\n        /* \"contracts/helperLogic.sol\":2067:2083  __Ownable_init() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/helperLogic.sol\":2137:2143  Router */\n      0x6c\n        /* \"contracts/helperLogic.sol\":2137:2153  Router = _Router */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/helperLogic.sol\":2163:2170  Factory */\n      0x6d\n        /* \"contracts/helperLogic.sol\":2163:2181  Factory = _Factory */\n      dup1\n      sload\n      dup3\n      and\n      dup12\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2191:2194  usc */\n      0x66\n        /* \"contracts/helperLogic.sol\":2191:2201  usc = _usc */\n      dup1\n      sload\n      dup3\n      and\n      dup10\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2211:2214  sea */\n      0x68\n        /* \"contracts/helperLogic.sol\":2211:2221  sea = _sea */\n      dup1\n      sload\n      dup3\n      and\n      dup8\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2231:2235  ssea */\n      0x69\n        /* \"contracts/helperLogic.sol\":2231:2243  ssea = _ssea */\n      dup1\n      sload\n      dup3\n      and\n      dup7\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2253:2255  op */\n      0x6a\n        /* \"contracts/helperLogic.sol\":2253:2268  op = msg.sender */\n      dup1\n      sload\n        /* \"contracts/helperLogic.sol\":2258:2268  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":2253:2268  op = msg.sender */\n      swap1\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/helperLogic.sol\":2278:2281  dev */\n      0x6b\n        /* \"contracts/helperLogic.sol\":2278:2294  dev = msg.sender */\n      dup1\n      sload\n      dup4\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2320:2324  5000 */\n      0x1388\n        /* \"contracts/helperLogic.sol\":2304:2317  toSseaPercent */\n      0x6e\n        /* \"contracts/helperLogic.sol\":2304:2324  toSseaPercent = 5000 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2348:2352  2500 */\n      0x09c4\n        /* \"contracts/helperLogic.sol\":2334:2345  toOpPercent */\n      0x6f\n        /* \"contracts/helperLogic.sol\":2334:2352  toOpPercent = 2500 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2362:2374  toDevPercent */\n      0x70\n        /* \"contracts/helperLogic.sol\":2362:2381  toDevPercent = 2500 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2403:2408  10000 */\n      0x2710\n        /* \"contracts/helperLogic.sol\":2391:2400  PRECISION */\n      0x71\n        /* \"contracts/helperLogic.sol\":2391:2408  PRECISION = 10000 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2430:2434  1000 */\n      0x03e8\n        /* \"contracts/helperLogic.sol\":2418:2427  basePoint */\n      0x72\n        /* \"contracts/helperLogic.sol\":2418:2434  basePoint = 1000 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2444:2458  autoAdjustFarm */\n      0x74\n        /* \"contracts/helperLogic.sol\":2444:2465  autoAdjustFarm = true */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      not(shl(0xa0, 0xff))\n      swap1\n      swap2\n      and\n      or\n      not(sub(shl(0xa0, 0xff01), 0x01))\n        /* \"contracts/helperLogic.sol\":2507:2519  farm = _farm */\n      and\n      dup6\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2529:2533  usdc */\n      0x67\n        /* \"contracts/helperLogic.sol\":2529:2541  usdc = _usdc */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap2\n      dup8\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n    tag_215:\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1580:1597  IFarm public farm */\n    tag_78:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x74))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6605:6735  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_83:\n        /* \"contracts/helperLogic.sol\":6672:6676  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_218:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_219:\n      pop\n        /* \"contracts/helperLogic.sol\":6688:6700  toDevPercent */\n      0x70\n        /* \"contracts/helperLogic.sol\":6688:6707  toDevPercent = _val */\n      sstore\n        /* \"contracts/helperLogic.sol\":6724:6728  true */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":6605:6735  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1166:1195  IERC20Upgradeable public usdc */\n    tag_86:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x67))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6741:6874  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n    tag_91:\n        /* \"contracts/helperLogic.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_225:\n      pop\n        /* \"contracts/helperLogic.sol\":6824:6838  autoAdjustFarm */\n      0x74\n        /* \"contracts/helperLogic.sol\":6824:6846  autoAdjustFarm = _bool */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(shl(0xa0, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":6741:6874  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1086:1126  mapping(address => bool) public executor */\n    tag_96:\n      mstore(0x20, 0x65)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1461:1488  uint256 public toDevPercent */\n    tag_99:\n      sload(0x70)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1201:1229  IERC20Upgradeable public sea */\n    tag_102:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x68))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6880:7013  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n    tag_106:\n        /* \"contracts/helperLogic.sol\":6947:6951  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_231:\n      pop\n        /* \"contracts/helperLogic.sol\":6963:6977  openStabilizer */\n      0x74\n        /* \"contracts/helperLogic.sol\":6963:6985  openStabilizer = _bool */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      shl(0xa8, 0x01)\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":6880:7013  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1636:1662  bool public openStabilizer */\n    tag_109:\n      sload(0x74)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2028  _transferOwnership(address(0)) */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2025:2026  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2016  _transferOwnership */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2028  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1669:1694  address public stabilizer */\n    tag_114:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x75))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1374:1380  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1293:1311  address public dev */\n    tag_121:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6b))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5862:6077  function withdrawalERC20(address _address, uint256 _amt)... */\n    tag_126:\n        /* \"contracts/helperLogic.sol\":5971:5975  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_246:\n        /* \"contracts/helperLogic.sol\":5991:6049  IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt) */\n      tag_249\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":5991:6031  IERC20Upgradeable(_address).safeTransfer */\n      dup5\n      and\n        /* \"contracts/helperLogic.sol\":6032:6042  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":6044:6048  _amt */\n      dup5\n        /* \"contracts/helperLogic.sol\":5991:6031  IERC20Upgradeable(_address).safeTransfer */\n      tag_250\n        /* \"contracts/helperLogic.sol\":5991:6049  IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt) */\n      jump\t// in\n    tag_249:\n      pop\n        /* \"contracts/helperLogic.sol\":6066:6070  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":5862:6077  function withdrawalERC20(address _address, uint256 _amt)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1604:1630  bool public autoAdjustFarm */\n    tag_129:\n      sload(0x74)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6083:6201  function setOp(address _address) external onlyOwner returns (bool) {... */\n    tag_133:\n        /* \"contracts/helperLogic.sol\":6144:6148  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_254:\n      pop\n        /* \"contracts/helperLogic.sol\":6160:6162  op */\n      0x6a\n        /* \"contracts/helperLogic.sol\":6160:6173  op = _address */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":6083:6201  function setOp(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":7277:7438  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n    tag_138:\n        /* \"contracts/helperLogic.sol\":7378:7382  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_260:\n      pop\n        /* \"contracts/helperLogic.sol\":7398:7402  usdc */\n      0x67\n        /* \"contracts/helperLogic.sol\":7398:7410  usdc = _usdc */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":7277:7438  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1494:1518  uint256 public PRECISION */\n    tag_141:\n      sload(0x71)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6471:6599  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_145:\n        /* \"contracts/helperLogic.sol\":6537:6541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_266:\n      pop\n        /* \"contracts/helperLogic.sol\":6553:6564  toOpPercent */\n      0x6f\n        /* \"contracts/helperLogic.sol\":6553:6571  toOpPercent = _val */\n      sstore\n        /* \"contracts/helperLogic.sol\":6588:6592  true */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":6471:6599  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1235:1264  IERC20Upgradeable public ssea */\n    tag_148:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x69))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1395:1423  uint256 public toSseaPercent */\n    tag_151:\n      sload(0x6e)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1356:1388  IUniswapV2Factory public Factory */\n    tag_154:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6d))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":4244:4942  function jointExecution() external onlyExecutor returns (bool) {... */\n    tag_158:\n        /* \"contracts/helperLogic.sol\":2825:2835  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":4301:4305  bool */\n      0x00\n        /* \"contracts/helperLogic.sol\":2816:2836  executor[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":2816:2824  executor */\n      0x65\n        /* \"contracts/helperLogic.sol\":2816:2836  executor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":2808:2877  require(executor[msg.sender], \"executor: caller is not the executor\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_272\n      jump\t// in\n    tag_270:\n        /* \"contracts/helperLogic.sol\":4340:4343  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":4340:4368  usc.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":4317:4337  uint256 uscBalanceOf */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4340:4343  usc */\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":4340:4353  usc.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/helperLogic.sol\":4340:4368  usc.balanceOf(address(this)) */\n      tag_274\n      swap1\n        /* \"contracts/helperLogic.sol\":4362:4366  this */\n      address\n      swap1\n        /* \"contracts/helperLogic.sol\":4340:4368  usc.balanceOf(address(this)) */\n      0x04\n      add\n      tag_116\n      jump\t// in\n    tag_274:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"contracts/helperLogic.sol\":4317:4368  uint256 uscBalanceOf = usc.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4378:4392  uint256 toSsea */\n      0x00\n        /* \"contracts/helperLogic.sol\":4395:4441  uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      tag_280\n        /* \"contracts/helperLogic.sol\":4431:4440  PRECISION */\n      sload(0x71)\n        /* \"contracts/helperLogic.sol\":4395:4426  uscBalanceOf.mul(toSseaPercent) */\n      tag_281\n        /* \"contracts/helperLogic.sol\":4412:4425  toSseaPercent */\n      sload(0x6e)\n        /* \"contracts/helperLogic.sol\":4395:4407  uscBalanceOf */\n      dup6\n        /* \"contracts/helperLogic.sol\":4395:4411  uscBalanceOf.mul */\n      tag_282\n      swap1\n        /* \"contracts/helperLogic.sol\":4395:4426  uscBalanceOf.mul(toSseaPercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"contracts/helperLogic.sol\":4395:4430  uscBalanceOf.mul(toSseaPercent).div */\n      swap1\n      tag_283\n        /* \"contracts/helperLogic.sol\":4395:4441  uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/helperLogic.sol\":4378:4441  uint256 toSsea = uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4451:4463  uint256 toOp */\n      0x00\n        /* \"contracts/helperLogic.sol\":4466:4510  uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      tag_284\n        /* \"contracts/helperLogic.sol\":4500:4509  PRECISION */\n      sload(0x71)\n        /* \"contracts/helperLogic.sol\":4466:4495  uscBalanceOf.mul(toOpPercent) */\n      tag_281\n        /* \"contracts/helperLogic.sol\":4483:4494  toOpPercent */\n      sload(0x6f)\n        /* \"contracts/helperLogic.sol\":4466:4478  uscBalanceOf */\n      dup7\n        /* \"contracts/helperLogic.sol\":4466:4482  uscBalanceOf.mul */\n      tag_282\n      swap1\n        /* \"contracts/helperLogic.sol\":4466:4495  uscBalanceOf.mul(toOpPercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":4466:4510  uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n    tag_284:\n        /* \"contracts/helperLogic.sol\":4451:4510  uint256 toOp = uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4520:4533  uint256 toDev */\n      0x00\n        /* \"contracts/helperLogic.sol\":4536:4570  uscBalanceOf.sub(toSsea).sub(toOp) */\n      tag_286\n        /* \"contracts/helperLogic.sol\":4451:4510  uint256 toOp = uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      dup3\n        /* \"contracts/helperLogic.sol\":4536:4560  uscBalanceOf.sub(toSsea) */\n      tag_287\n        /* \"contracts/helperLogic.sol\":4536:4548  uscBalanceOf */\n      dup7\n        /* \"contracts/helperLogic.sol\":4553:4559  toSsea */\n      dup7\n        /* \"contracts/helperLogic.sol\":4536:4552  uscBalanceOf.sub */\n      tag_288\n        /* \"contracts/helperLogic.sol\":4536:4560  uscBalanceOf.sub(toSsea) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/helperLogic.sol\":4536:4564  uscBalanceOf.sub(toSsea).sub */\n      swap1\n      tag_288\n        /* \"contracts/helperLogic.sol\":4536:4570  uscBalanceOf.sub(toSsea).sub(toOp) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/helperLogic.sol\":4520:4570  uint256 toDev = uscBalanceOf.sub(toSsea).sub(toOp) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4581:4595  uint256 seaAmt */\n      0x00\n        /* \"contracts/helperLogic.sol\":4598:4612  buySea(toSsea) */\n      tag_289\n        /* \"contracts/helperLogic.sol\":4605:4611  toSsea */\n      dup5\n        /* \"contracts/helperLogic.sol\":4598:4604  buySea */\n      tag_290\n        /* \"contracts/helperLogic.sol\":4598:4612  buySea(toSsea) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/helperLogic.sol\":4647:4651  ssea */\n      sload(0x69)\n        /* \"contracts/helperLogic.sol\":4622:4625  sea */\n      sload(0x68)\n        /* \"contracts/helperLogic.sol\":4581:4612  uint256 seaAmt = buySea(toSsea) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/helperLogic.sol\":4622:4661  sea.safeTransfer(address(ssea), seaAmt) */\n      tag_291\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4622:4625  sea */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"contracts/helperLogic.sol\":4647:4651  ssea */\n      and\n        /* \"contracts/helperLogic.sol\":4581:4612  uint256 seaAmt = buySea(toSsea) */\n      dup4\n        /* \"contracts/helperLogic.sol\":4622:4638  sea.safeTransfer */\n      tag_250\n        /* \"contracts/helperLogic.sol\":4622:4661  sea.safeTransfer(address(ssea), seaAmt) */\n      jump\t// in\n    tag_291:\n        /* \"contracts/helperLogic.sol\":4696:4698  op */\n      sload(0x6a)\n        /* \"contracts/helperLogic.sol\":4671:4674  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":4671:4706  usc.safeTransfer(address(op), toOp) */\n      tag_292\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4671:4674  usc */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/helperLogic.sol\":4696:4698  op */\n      and\n        /* \"contracts/helperLogic.sol\":4701:4705  toOp */\n      dup6\n        /* \"contracts/helperLogic.sol\":4671:4687  usc.safeTransfer */\n      tag_250\n        /* \"contracts/helperLogic.sol\":4671:4706  usc.safeTransfer(address(op), toOp) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/helperLogic.sol\":4741:4744  dev */\n      sload(0x6b)\n        /* \"contracts/helperLogic.sol\":4716:4719  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":4716:4753  usc.safeTransfer(address(dev), toDev) */\n      tag_293\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4716:4719  usc */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/helperLogic.sol\":4741:4744  dev */\n      and\n        /* \"contracts/helperLogic.sol\":4747:4752  toDev */\n      dup5\n        /* \"contracts/helperLogic.sol\":4716:4732  usc.safeTransfer */\n      tag_250\n        /* \"contracts/helperLogic.sol\":4716:4753  usc.safeTransfer(address(dev), toDev) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/helperLogic.sol\":4768:4782  autoAdjustFarm */\n      sload(0x74)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":4764:4821  if (autoAdjustFarm) {... */\n      iszero\n      tag_295\n      jumpi\n        /* \"contracts/helperLogic.sol\":4798:4810  adjustFarm() */\n      tag_295\n        /* \"contracts/helperLogic.sol\":4798:4808  adjustFarm */\n      tag_296\n        /* \"contracts/helperLogic.sol\":4798:4810  adjustFarm() */\n      jump\t// in\n    tag_295:\n        /* \"contracts/helperLogic.sol\":4835:4849  openStabilizer */\n      sload(0x74)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":4831:4914  if (openStabilizer) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"contracts/helperLogic.sol\":4877:4887  stabilizer */\n      0x75\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4865:4901  IStabilizer(stabilizer).goStabilizer */\n      and\n      0x796c7be7\n        /* \"contracts/helperLogic.sol\":4865:4903  IStabilizer(stabilizer).goStabilizer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_298:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_300\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_300:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_301\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      pop\n        /* \"contracts/helperLogic.sol\":4831:4914  if (openStabilizer) {... */\n    tag_297:\n        /* \"contracts/helperLogic.sol\":4931:4935  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":4924:4935  return true */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/helperLogic.sol\":4244:4942  function jointExecution() external onlyExecutor returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6207:6327  function setDev(address _address) external onlyOwner returns (bool) {... */\n    tag_162:\n        /* \"contracts/helperLogic.sol\":6269:6273  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_304\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_304:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_305\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_306:\n      pop\n        /* \"contracts/helperLogic.sol\":6285:6288  dev */\n      0x6b\n        /* \"contracts/helperLogic.sol\":6285:6299  dev = _address */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":6207:6327  function setDev(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":7444:7558  function setFarm(IFarm _farm) external onlyOwner returns (bool) {... */\n    tag_167:\n        /* \"contracts/helperLogic.sol\":7502:7506  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_310\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_310:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_311\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_312:\n      pop\n        /* \"contracts/helperLogic.sol\":7518:7522  farm */\n      0x74\n        /* \"contracts/helperLogic.sol\":7518:7530  farm = _farm */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":7444:7558  function setFarm(IFarm _farm) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":7019:7153  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n    tag_171:\n        /* \"contracts/helperLogic.sol\":7088:7092  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_317:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_318:\n      pop\n        /* \"contracts/helperLogic.sol\":7104:7114  stabilizer */\n      0x75\n        /* \"contracts/helperLogic.sol\":7104:7125  stabilizer = _address */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":7019:7153  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1270:1287  address public op */\n    tag_174:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6a))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1555:1573  uint256 public pid */\n    tag_177:\n      sload(0x73)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_322:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_323:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_324:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2272:2294  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2264:2337  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_329\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2375  _transferOwnership(newOwner) */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2366:2374  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2365  _transferOwnership */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2375  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1318:1350  IUniswapV2Router02 public Router */\n    tag_183:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6c))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":876:972  function _msgSender() internal view virtual returns (address) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":955:965  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":876:972  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1114  function __Ownable_init() internal initializer {... */\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_333\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_333:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_210\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1071  __Context_init_unchained() */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1069  __Context_init_unchained */\n      tag_339\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1071  __Context_init_unchained() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1107  __Ownable_init_unchained() */\n      tag_340\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1105  __Ownable_init_unchained */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1107  __Ownable_init_unchained() */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1114  function __Ownable_init() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2536:2723  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2644:2661  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2644:2661  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2609:2625  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2536:2723  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":888:893  token */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":918:941  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":943:945  to */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":947:952  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":895:953  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_346\n      swap3\n      swap2\n      swap1\n      tag_347\n      jump\t// in\n    tag_346:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:887  _callOptionalReturn */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3462:3558  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3520:3527  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3551  a * b */\n      tag_350\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3550:3551  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3547  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3551  a * b */\n      tag_351\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3539:3551  return a * b */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3462:3558  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3847:3943  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3905:3912  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3936  a / b */\n      tag_350\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3935:3936  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3932  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3936  a / b */\n      tag_354\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3119:3215  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3177:3184  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3208  a - b */\n      tag_350\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3207:3208  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3204  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3208  a - b */\n      tag_357\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":3296:4238  function buySea(uint256 uscAmt) internal returns (uint256) {... */\n    tag_290:\n        /* \"contracts/helperLogic.sol\":3393:3400  Factory */\n      sload(0x6d)\n        /* \"contracts/helperLogic.sol\":3417:3420  sea */\n      sload(0x68)\n        /* \"contracts/helperLogic.sol\":3431:3434  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3393:3436  Factory.getPair(address(sea), address(usc)) */\n      mload(0x40)\n      shl(0xe0, 0xe6a43905)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":3346:3353  uint256 */\n      0x00\n      swap4\n      dup5\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3393:3400  Factory */\n      swap2\n      dup3\n      and\n      swap4\n        /* \"contracts/helperLogic.sol\":3393:3408  Factory.getPair */\n      0xe6a43905\n      swap4\n        /* \"contracts/helperLogic.sol\":3393:3436  Factory.getPair(address(sea), address(usc)) */\n      tag_359\n      swap4\n        /* \"contracts/helperLogic.sol\":3417:3420  sea */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"contracts/helperLogic.sol\":3431:3434  usc */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":3393:3436  Factory.getPair(address(sea), address(usc)) */\n      0x04\n      add\n      tag_360\n      jump\t// in\n    tag_359:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_361\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_361:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_363\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_363:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_364\n      swap2\n      swap1\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"contracts/helperLogic.sol\":3446:3449  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3365:3436  address sea_usc_lpAddress = Factory.getPair(address(sea), address(usc)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":3446:3489  usc.safeTransfer(sea_usc_lpAddress, uscAmt) */\n      tag_366\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3446:3449  usc */\n      and\n        /* \"contracts/helperLogic.sol\":3365:3436  address sea_usc_lpAddress = Factory.getPair(address(sea), address(usc)) */\n      dup3\n        /* \"contracts/helperLogic.sol\":3482:3488  uscAmt */\n      dup6\n        /* \"contracts/helperLogic.sol\":3446:3462  usc.safeTransfer */\n      tag_250\n        /* \"contracts/helperLogic.sol\":3446:3489  usc.safeTransfer(sea_usc_lpAddress, uscAmt) */\n      jump\t// in\n    tag_366:\n        /* \"contracts/helperLogic.sol\":3500:3516  uint256 reserve0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":3518:3534  uint256 reserve1 */\n      dup1\n        /* \"contracts/helperLogic.sol\":3568:3585  sea_usc_lpAddress */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3540:3607  IUniswapV2Pair(... */\n      and\n      0x0902f1ac\n        /* \"contracts/helperLogic.sol\":3540:3609  IUniswapV2Pair(... */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_367\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_367:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_369\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_369:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_370\n      swap2\n      swap1\n      tag_371\n      jump\t// in\n    tag_370:\n        /* \"contracts/helperLogic.sol\":3499:3609  (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(... */\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      swap2\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":3619:3633  address token0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":3651:3668  sea_usc_lpAddress */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3636:3676  IUniswapV2Pair(sea_usc_lpAddress).token0 */\n      and\n      0x0dfe1681\n        /* \"contracts/helperLogic.sol\":3636:3678  IUniswapV2Pair(sea_usc_lpAddress).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_372\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_372:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_374\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_374:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_375\n      swap2\n      swap1\n      tag_365\n      jump\t// in\n    tag_375:\n        /* \"contracts/helperLogic.sol\":3748:3751  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3619:3678  address token0 = IUniswapV2Pair(sea_usc_lpAddress).token0() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":3689:3706  uint256 reserveIn */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3730:3752  token0 == address(usc) */\n      dup1\n      dup6\n      and\n        /* \"contracts/helperLogic.sol\":3748:3751  usc */\n      swap2\n      and\n        /* \"contracts/helperLogic.sol\":3730:3752  token0 == address(usc) */\n      eq\n        /* \"contracts/helperLogic.sol\":3730:3822  token0 == address(usc)... */\n      tag_376\n      jumpi\n        /* \"contracts/helperLogic.sol\":3803:3811  reserve1 */\n      dup4\n        /* \"contracts/helperLogic.sol\":3813:3821  reserve0 */\n      dup6\n        /* \"contracts/helperLogic.sol\":3730:3822  token0 == address(usc)... */\n      jump(tag_377)\n    tag_376:\n        /* \"contracts/helperLogic.sol\":3768:3776  reserve0 */\n      dup5\n        /* \"contracts/helperLogic.sol\":3778:3786  reserve1 */\n      dup5\n        /* \"contracts/helperLogic.sol\":3730:3822  token0 == address(usc)... */\n    tag_377:\n        /* \"contracts/helperLogic.sol\":3688:3822  (uint256 reserveIn, uint256 reserveOut) = token0 == address(usc)... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":3832:3849  uint256 amountOut */\n      0x00\n        /* \"contracts/helperLogic.sol\":3852:3895  getAmountOut(uscAmt, reserveIn, reserveOut) */\n      tag_378\n        /* \"contracts/helperLogic.sol\":3865:3871  uscAmt */\n      dup10\n        /* \"contracts/helperLogic.sol\":3873:3882  reserveIn */\n      dup5\n        /* \"contracts/helperLogic.sol\":3884:3894  reserveOut */\n      dup5\n        /* \"contracts/helperLogic.sol\":3852:3864  getAmountOut */\n      tag_379\n        /* \"contracts/helperLogic.sol\":3852:3895  getAmountOut(uscAmt, reserveIn, reserveOut) */\n      jump\t// in\n    tag_378:\n        /* \"contracts/helperLogic.sol\":3966:3969  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3832:3895  uint256 amountOut = getAmountOut(uscAmt, reserveIn, reserveOut) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":3906:3924  uint256 amount0Out */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3948:3970  token0 == address(usc) */\n      dup8\n      dup2\n      and\n        /* \"contracts/helperLogic.sol\":3966:3969  usc */\n      swap2\n      and\n        /* \"contracts/helperLogic.sol\":3948:3970  token0 == address(usc) */\n      eq\n        /* \"contracts/helperLogic.sol\":3948:4046  token0 == address(usc)... */\n      tag_380\n      jumpi\n        /* \"contracts/helperLogic.sol\":4024:4033  amountOut */\n      dup3\n        /* \"contracts/helperLogic.sol\":4043:4044  0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":3948:4046  token0 == address(usc)... */\n      jump(tag_381)\n    tag_380:\n        /* \"contracts/helperLogic.sol\":3994:3995  0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":3998:4007  amountOut */\n      dup4\n        /* \"contracts/helperLogic.sol\":3948:4046  token0 == address(usc)... */\n    tag_381:\n        /* \"contracts/helperLogic.sol\":4183:4195  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/helperLogic.sol\":4193:4194  0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":4183:4195  new bytes(0) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      dup3\n      swap1\n      mstore\n      shl(0xe0, 0x022c0d9f)\n        /* \"contracts/helperLogic.sol\":4056:4205  IUniswapV2Pair(sea_usc_lpAddress).swap(... */\n      swap1\n      swap2\n      mstore\n        /* \"contracts/helperLogic.sol\":3905:4046  (uint256 amount0Out, uint256 amount1Out) = token0 == address(usc)... */\n      swap2\n      swap4\n      pop\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4056:4094  IUniswapV2Pair(sea_usc_lpAddress).swap */\n      dup11\n      and\n      swap1\n      0x022c0d9f\n      swap1\n        /* \"contracts/helperLogic.sol\":4056:4205  IUniswapV2Pair(sea_usc_lpAddress).swap(... */\n      tag_384\n      swap1\n        /* \"contracts/helperLogic.sol\":3905:4046  (uint256 amount0Out, uint256 amount1Out) = token0 == address(usc)... */\n      dup6\n      swap1\n      dup6\n      swap1\n        /* \"contracts/helperLogic.sol\":4164:4168  this */\n      address\n      swap1\n        /* \"contracts/helperLogic.sol\":4056:4205  IUniswapV2Pair(sea_usc_lpAddress).swap(... */\n      0x24\n      dup2\n      add\n      tag_385\n      jump\t// in\n    tag_384:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_386\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_386:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_388\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_388:\n      pop\n        /* \"contracts/helperLogic.sol\":4222:4231  amountOut */\n      swap5\n      swap14\n        /* \"contracts/helperLogic.sol\":3296:4238  function buySea(uint256 uscAmt) internal returns (uint256) {... */\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":4948:5856  function adjustFarm() internal {... */\n    tag_296:\n        /* \"contracts/helperLogic.sol\":5011:5018  Factory */\n      sload(0x6d)\n        /* \"contracts/helperLogic.sol\":5035:5039  usdc */\n      sload(0x67)\n        /* \"contracts/helperLogic.sol\":5050:5053  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":5011:5055  Factory.getPair(address(usdc), address(usc)) */\n      mload(0x40)\n      shl(0xe0, 0xe6a43905)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":4989:5008  address pairAddress */\n      0x00\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":5011:5018  Factory */\n      swap1\n      dup2\n      and\n      swap4\n        /* \"contracts/helperLogic.sol\":5011:5026  Factory.getPair */\n      0xe6a43905\n      swap4\n        /* \"contracts/helperLogic.sol\":5011:5055  Factory.getPair(address(usdc), address(usc)) */\n      tag_390\n      swap4\n        /* \"contracts/helperLogic.sol\":5035:5039  usdc */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"contracts/helperLogic.sol\":5050:5053  usc */\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":5011:5055  Factory.getPair(address(usdc), address(usc)) */\n      0x04\n      add\n      tag_360\n      jump\t// in\n    tag_390:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_391\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_391:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_393\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_393:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_394\n      swap2\n      swap1\n      tag_365\n      jump\t// in\n    tag_394:\n        /* \"contracts/helperLogic.sol\":5088:5091  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":5088:5114  usc.balanceOf(pairAddress) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":4989:5055  address pairAddress = Factory.getPair(address(usdc), address(usc)) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/helperLogic.sol\":5065:5085  uint256 uscBalanceOf */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":5088:5091  usc */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":5088:5101  usc.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/helperLogic.sol\":5088:5114  usc.balanceOf(pairAddress) */\n      tag_395\n      swap1\n        /* \"contracts/helperLogic.sol\":4989:5055  address pairAddress = Factory.getPair(address(usdc), address(usc)) */\n      dup6\n      swap1\n        /* \"contracts/helperLogic.sol\":5088:5114  usc.balanceOf(pairAddress) */\n      0x04\n      add\n      tag_116\n      jump\t// in\n    tag_395:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_396\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_396:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_398\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_398:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_399\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_399:\n        /* \"contracts/helperLogic.sol\":5148:5152  usdc */\n      sload(0x67)\n        /* \"contracts/helperLogic.sol\":5148:5175  usdc.balanceOf(pairAddress) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":5065:5114  uint256 uscBalanceOf = usc.balanceOf(pairAddress) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/helperLogic.sol\":5124:5145  uint256 usdcBalanceOf */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":5148:5152  usdc */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":5148:5162  usdc.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/helperLogic.sol\":5148:5175  usdc.balanceOf(pairAddress) */\n      tag_400\n      swap1\n        /* \"contracts/helperLogic.sol\":5163:5174  pairAddress */\n      dup7\n      swap1\n        /* \"contracts/helperLogic.sol\":5148:5175  usdc.balanceOf(pairAddress) */\n      0x04\n      add\n      tag_116\n      jump\t// in\n    tag_400:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_401\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_401:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_403\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_403:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_404\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_404:\n        /* \"contracts/helperLogic.sol\":5124:5175  uint256 usdcBalanceOf = usdc.balanceOf(pairAddress) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5199:5203  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":5185:5196  uint256 e18 */\n      0x00\n        /* \"contracts/helperLogic.sol\":5232:5272  usdcBalanceOf.mul(e18).div(uscBalanceOf) */\n      tag_405\n        /* \"contracts/helperLogic.sol\":5259:5271  uscBalanceOf */\n      dup5\n        /* \"contracts/helperLogic.sol\":5232:5254  usdcBalanceOf.mul(e18) */\n      tag_281\n        /* \"contracts/helperLogic.sol\":5124:5175  uint256 usdcBalanceOf = usdc.balanceOf(pairAddress) */\n      dup6\n        /* \"contracts/helperLogic.sol\":5199:5203  1e18 */\n      dup6\n        /* \"contracts/helperLogic.sol\":5232:5249  usdcBalanceOf.mul */\n      tag_282\n        /* \"contracts/helperLogic.sol\":5232:5254  usdcBalanceOf.mul(e18) */\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5232:5272  usdcBalanceOf.mul(e18).div(uscBalanceOf) */\n    tag_405:\n        /* \"contracts/helperLogic.sol\":5213:5272  uint256 uscPrice = usdcBalanceOf.mul(e18).div(uscBalanceOf) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5282:5311  uint256 USDC_USC_LP_farmPoint */\n      0x00\n        /* \"contracts/helperLogic.sol\":5321:5338  uint256 diffPoint */\n      dup1\n        /* \"contracts/helperLogic.sol\":5363:5367  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":5352:5360  uscPrice */\n      dup4\n        /* \"contracts/helperLogic.sol\":5352:5367  uscPrice > 1e18 */\n      gt\n        /* \"contracts/helperLogic.sol\":5348:5794  if (uscPrice > 1e18) {... */\n      iszero\n      tag_407\n      jumpi\n        /* \"contracts/helperLogic.sol\":5416:5446  (uscPrice.sub(1e18)).div(1e14) */\n      tag_408\n        /* \"contracts/helperLogic.sol\":5441:5445  1e14 */\n      0x5af3107a4000\n        /* \"contracts/helperLogic.sol\":5417:5435  uscPrice.sub(1e18) */\n      tag_281\n        /* \"contracts/helperLogic.sol\":5417:5425  uscPrice */\n      dup6\n        /* \"contracts/helperLogic.sol\":5430:5434  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":5417:5429  uscPrice.sub */\n      tag_288\n        /* \"contracts/helperLogic.sol\":5417:5435  uscPrice.sub(1e18) */\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5416:5446  (uscPrice.sub(1e18)).div(1e14) */\n    tag_408:\n        /* \"contracts/helperLogic.sol\":5404:5446  diffPoint = (uscPrice.sub(1e18)).div(1e14) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5476:5485  basePoint */\n      sload(0x72)\n        /* \"contracts/helperLogic.sol\":5464:5473  diffPoint */\n      dup2\n        /* \"contracts/helperLogic.sol\":5464:5485  diffPoint > basePoint */\n      gt\n        /* \"contracts/helperLogic.sol\":5460:5632  if (diffPoint > basePoint) {... */\n      iszero\n      tag_410\n      jumpi\n        /* \"contracts/helperLogic.sol\":5529:5530  0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":5505:5530  USDC_USC_LP_farmPoint = 0 */\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":5460:5632  if (diffPoint > basePoint) {... */\n      jump(tag_411)\n    tag_410:\n        /* \"contracts/helperLogic.sol\":5593:5602  basePoint */\n      sload(0x72)\n        /* \"contracts/helperLogic.sol\":5593:5617  basePoint.sub(diffPoint) */\n      tag_412\n      swap1\n        /* \"contracts/helperLogic.sol\":5607:5616  diffPoint */\n      dup3\n        /* \"contracts/helperLogic.sol\":5593:5606  basePoint.sub */\n      tag_288\n        /* \"contracts/helperLogic.sol\":5593:5617  basePoint.sub(diffPoint) */\n      jump\t// in\n    tag_412:\n        /* \"contracts/helperLogic.sol\":5569:5617  USDC_USC_LP_farmPoint = basePoint.sub(diffPoint) */\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":5460:5632  if (diffPoint > basePoint) {... */\n    tag_411:\n        /* \"contracts/helperLogic.sol\":5348:5794  if (uscPrice > 1e18) {... */\n      jump(tag_413)\n    tag_407:\n        /* \"contracts/helperLogic.sol\":5694:5721  (1e18 - uscPrice).div(1e14) */\n      tag_414\n        /* \"contracts/helperLogic.sol\":5716:5720  1e14 */\n      0x5af3107a4000\n        /* \"contracts/helperLogic.sol\":5695:5710  1e18 - uscPrice */\n      tag_281\n        /* \"contracts/helperLogic.sol\":5702:5710  uscPrice */\n      dup6\n        /* \"contracts/helperLogic.sol\":5695:5699  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":5695:5710  1e18 - uscPrice */\n      tag_357\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5694:5721  (1e18 - uscPrice).div(1e14) */\n    tag_414:\n        /* \"contracts/helperLogic.sol\":5759:5768  basePoint */\n      sload(0x72)\n        /* \"contracts/helperLogic.sol\":5682:5721  diffPoint = (1e18 - uscPrice).div(1e14) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":5759:5783  basePoint.add(diffPoint) */\n      tag_416\n      swap1\n        /* \"contracts/helperLogic.sol\":5682:5721  diffPoint = (1e18 - uscPrice).div(1e14) */\n      dup3\n        /* \"contracts/helperLogic.sol\":5759:5772  basePoint.add */\n      tag_417\n        /* \"contracts/helperLogic.sol\":5759:5783  basePoint.add(diffPoint) */\n      jump\t// in\n    tag_416:\n        /* \"contracts/helperLogic.sol\":5735:5783  USDC_USC_LP_farmPoint = basePoint.add(diffPoint) */\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":5348:5794  if (uscPrice > 1e18) {... */\n    tag_413:\n        /* \"contracts/helperLogic.sol\":5803:5807  farm */\n      sload(0x74)\n        /* \"contracts/helperLogic.sol\":5816:5819  pid */\n      sload(0x73)\n        /* \"contracts/helperLogic.sol\":5803:5849  farm.setPool(pid, USDC_USC_LP_farmPoint, true) */\n      mload(0x40)\n      shl(0xe1, 0x236535f5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":5803:5807  farm */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/helperLogic.sol\":5803:5815  farm.setPool */\n      0x46ca6bea\n      swap2\n        /* \"contracts/helperLogic.sol\":5803:5849  farm.setPool(pid, USDC_USC_LP_farmPoint, true) */\n      tag_418\n      swap2\n        /* \"contracts/helperLogic.sol\":5821:5842  USDC_USC_LP_farmPoint */\n      dup7\n      swap1\n        /* \"contracts/helperLogic.sol\":5803:5807  farm */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":5803:5849  farm.setPool(pid, USDC_USC_LP_farmPoint, true) */\n      0x04\n      add\n      tag_419\n      jump\t// in\n    tag_418:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_420\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_420:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_422\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_422:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/helperLogic.sol\":4948:5856  function adjustFarm() internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":807:871  function __Context_init_unchained() internal initializer {... */\n    tag_339:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_424\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_424:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_210\n      jump\t// in\n    tag_425:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":807:871  function __Context_init_unchained() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1120:1226  function __Ownable_init_unchained() internal initializer {... */\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_431\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_431:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_432\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_210\n      jump\t// in\n    tag_432:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_434\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_434:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1219  _transferOwnership(_msgSender()) */\n      tag_340\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1218  _msgSender() */\n      tag_437\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1216  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1218  _msgSender() */\n      jump\t// in\n    tag_437:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1205  _transferOwnership */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1219  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3306:4023  function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {... */\n    tag_348:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3759  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_440\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3790:3794  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3770:3775  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3789  address(token).functionCall */\n      and\n      tag_441\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_440:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3862  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3831  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3866  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3841:4017  if (returndata.length > 0) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3940:3950  returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3929:3959  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_443\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_443:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3921:4006  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_446\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":2901:3290  function getAmountOut(... */\n    tag_379:\n        /* \"contracts/helperLogic.sol\":3033:3050  uint256 amountOut */\n      0x00\n      dup1\n        /* \"contracts/helperLogic.sol\":3088:3105  amountIn.mul(997) */\n      tag_448\n        /* \"contracts/helperLogic.sol\":3088:3096  amountIn */\n      dup6\n        /* \"contracts/helperLogic.sol\":3101:3104  997 */\n      0x03e5\n        /* \"contracts/helperLogic.sol\":3088:3100  amountIn.mul */\n      tag_282\n        /* \"contracts/helperLogic.sol\":3088:3105  amountIn.mul(997) */\n      jump\t// in\n    tag_448:\n        /* \"contracts/helperLogic.sol\":3062:3105  uint256 amountInWithFee = amountIn.mul(997) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3115:3132  uint256 numerator */\n      0x00\n        /* \"contracts/helperLogic.sol\":3135:3166  amountInWithFee.mul(reserveOut) */\n      tag_449\n        /* \"contracts/helperLogic.sol\":3062:3105  uint256 amountInWithFee = amountIn.mul(997) */\n      dup3\n        /* \"contracts/helperLogic.sol\":3155:3165  reserveOut */\n      dup6\n        /* \"contracts/helperLogic.sol\":3135:3154  amountInWithFee.mul */\n      tag_282\n        /* \"contracts/helperLogic.sol\":3135:3166  amountInWithFee.mul(reserveOut) */\n      jump\t// in\n    tag_449:\n        /* \"contracts/helperLogic.sol\":3115:3166  uint256 numerator = amountInWithFee.mul(reserveOut) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3176:3195  uint256 denominator */\n      0x00\n        /* \"contracts/helperLogic.sol\":3198:3238  reserveIn.mul(1000).add(amountInWithFee) */\n      tag_450\n        /* \"contracts/helperLogic.sol\":3222:3237  amountInWithFee */\n      dup4\n        /* \"contracts/helperLogic.sol\":3198:3217  reserveIn.mul(1000) */\n      tag_451\n        /* \"contracts/helperLogic.sol\":3198:3207  reserveIn */\n      dup9\n        /* \"contracts/helperLogic.sol\":3212:3216  1000 */\n      0x03e8\n        /* \"contracts/helperLogic.sol\":3198:3211  reserveIn.mul */\n      tag_282\n        /* \"contracts/helperLogic.sol\":3198:3217  reserveIn.mul(1000) */\n      jump\t// in\n    tag_451:\n        /* \"contracts/helperLogic.sol\":3198:3221  reserveIn.mul(1000).add */\n      swap1\n      tag_417\n        /* \"contracts/helperLogic.sol\":3198:3238  reserveIn.mul(1000).add(amountInWithFee) */\n      jump\t// in\n    tag_450:\n        /* \"contracts/helperLogic.sol\":3176:3238  uint256 denominator = reserveIn.mul(1000).add(amountInWithFee) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3260:3283  numerator / denominator */\n      tag_452\n        /* \"contracts/helperLogic.sol\":3176:3238  uint256 denominator = reserveIn.mul(1000).add(amountInWithFee) */\n      dup2\n        /* \"contracts/helperLogic.sol\":3260:3269  numerator */\n      dup4\n        /* \"contracts/helperLogic.sol\":3260:3283  numerator / denominator */\n      tag_354\n      jump\t// in\n    tag_452:\n        /* \"contracts/helperLogic.sol\":3248:3283  amountOut = numerator / denominator */\n      swap8\n        /* \"contracts/helperLogic.sol\":2901:3290  function getAmountOut(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2752:2848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2810:2817  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2836:2841  a + b */\n      tag_350\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2840:2841  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2836:2837  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2836:2841  a + b */\n      tag_455\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3525:3748  function functionCall(... */\n    tag_441:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3658:3670  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3741  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_457\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3711:3717  target */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3719:3723  data */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3725:3726  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3728:3740  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3710  functionCallWithValue */\n      tag_458\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3741  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_457:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3682:3741  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3525:3748  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4612:5111  function functionCallWithValue(... */\n    tag_458:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4777:4789  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4834:4839  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4809:4830  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4809:4839  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4801:4882  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_460\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_462\n      jump\t// in\n    tag_460:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4918  isContract(target) */\n      tag_463\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4911:4917  target */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4910  isContract */\n      tag_464\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4918  isContract(target) */\n      jump\t// in\n    tag_463:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4892:4952  require(isContract(target), \"Address: call to non-contract\") */\n      tag_465\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_467\n      jump\t// in\n    tag_465:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4964:4976  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4978:5001  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5011  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5016  target.call */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5024:5029  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5031:5035  data */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5036  target.call{value: value}(data) */\n      mload(0x40)\n      tag_468\n      swap2\n      swap1\n      tag_469\n      jump\t// in\n    tag_468:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_472\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_471)\n    tag_472:\n      0x60\n      swap2\n      pop\n    tag_471:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4963:5036  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5104  verifyCallResult(success, returndata, errorMessage) */\n      tag_452\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5070:5077  success */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5079:5089  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5091:5103  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5069  verifyCallResult */\n      tag_474\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5104  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":782:1159  function isContract(address account) internal view returns (bool) {... */\n    tag_464:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1098:1118  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1144:1152  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":782:1159  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6275:6967  function verifyCallResult(... */\n    tag_474:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6421:6433  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6449:6456  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6445:6961  if (success) {... */\n      iszero\n      tag_477\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6479:6489  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6472:6489  return returndata */\n      jump(tag_350)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6445:6961  if (success) {... */\n    tag_477:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6590:6607  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6590:6611  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6586:6951  if (returndata.length > 0) {... */\n      tag_479\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6784:6794  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6778:6795  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6844:6859  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6831:6841  returndata */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6827:6829  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6823:6842  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6816:6860  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6733:6878  {... */\n    tag_479:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6923:6935  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6916:6936  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_482\n      jump\t// in\n        /* \"#utility.yul\":14:204   */\n    tag_484:\n        /* \"#utility.yul\":95:108   */\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"#utility.yul\":137:179   */\n      dup2\n      and\n        /* \"#utility.yul\":127:180   */\n      dup2\n      eq\n        /* \"#utility.yul\":117:119   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":191:192   */\n      dup1\n        /* \"#utility.yul\":184:196   */\n      revert\n        /* \"#utility.yul\":209:468   */\n    tag_95:\n      0x00\n        /* \"#utility.yul\":321:323   */\n      0x20\n        /* \"#utility.yul\":309:318   */\n      dup3\n        /* \"#utility.yul\":300:307   */\n      dup5\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:291   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":342:348   */\n      dup1\n        /* \"#utility.yul\":334:340   */\n      dup2\n        /* \"#utility.yul\":327:349   */\n      revert\n        /* \"#utility.yul\":289:291   */\n    tag_488:\n        /* \"#utility.yul\":386:395   */\n      dup2\n        /* \"#utility.yul\":373:396   */\n      calldataload\n        /* \"#utility.yul\":405:438   */\n      tag_350\n        /* \"#utility.yul\":432:437   */\n      dup2\n        /* \"#utility.yul\":405:438   */\n      tag_490\n      jump\t// in\n        /* \"#utility.yul\":473:736   */\n    tag_365:\n      0x00\n        /* \"#utility.yul\":596:598   */\n      0x20\n        /* \"#utility.yul\":584:593   */\n      dup3\n        /* \"#utility.yul\":575:582   */\n      dup5\n        /* \"#utility.yul\":571:594   */\n      sub\n        /* \"#utility.yul\":567:599   */\n      slt\n        /* \"#utility.yul\":564:566   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":617:623   */\n      dup1\n        /* \"#utility.yul\":609:615   */\n      dup2\n        /* \"#utility.yul\":602:624   */\n      revert\n        /* \"#utility.yul\":564:566   */\n    tag_492:\n        /* \"#utility.yul\":654:663   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      mload\n        /* \"#utility.yul\":673:706   */\n      tag_350\n        /* \"#utility.yul\":700:705   */\n      dup2\n        /* \"#utility.yul\":673:706   */\n      tag_490\n      jump\t// in\n        /* \"#utility.yul\":741:1137   */\n    tag_59:\n      0x00\n      dup1\n        /* \"#utility.yul\":867:869   */\n      0x40\n        /* \"#utility.yul\":855:864   */\n      dup4\n        /* \"#utility.yul\":846:853   */\n      dup6\n        /* \"#utility.yul\":842:865   */\n      sub\n        /* \"#utility.yul\":838:870   */\n      slt\n        /* \"#utility.yul\":835:837   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":888:894   */\n      dup1\n        /* \"#utility.yul\":880:886   */\n      dup2\n        /* \"#utility.yul\":873:895   */\n      revert\n        /* \"#utility.yul\":835:837   */\n    tag_495:\n        /* \"#utility.yul\":932:941   */\n      dup3\n        /* \"#utility.yul\":919:942   */\n      calldataload\n        /* \"#utility.yul\":951:984   */\n      tag_496\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":951:984   */\n      tag_490\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":1003:1008   */\n      swap2\n      pop\n        /* \"#utility.yul\":1060:1062   */\n      0x20\n        /* \"#utility.yul\":1045:1063   */\n      dup4\n      add\n        /* \"#utility.yul\":1032:1064   */\n      calldataload\n        /* \"#utility.yul\":1073:1105   */\n      tag_497\n        /* \"#utility.yul\":1032:1064   */\n      dup2\n        /* \"#utility.yul\":1073:1105   */\n      tag_498\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":1124:1131   */\n      dup1\n        /* \"#utility.yul\":1114:1131   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":825:1137   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1142:1469   */\n    tag_125:\n      0x00\n      dup1\n        /* \"#utility.yul\":1271:1273   */\n      0x40\n        /* \"#utility.yul\":1259:1268   */\n      dup4\n        /* \"#utility.yul\":1250:1257   */\n      dup6\n        /* \"#utility.yul\":1246:1269   */\n      sub\n        /* \"#utility.yul\":1242:1274   */\n      slt\n        /* \"#utility.yul\":1239:1241   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":1292:1298   */\n      dup2\n        /* \"#utility.yul\":1284:1290   */\n      dup3\n        /* \"#utility.yul\":1277:1299   */\n      revert\n        /* \"#utility.yul\":1239:1241   */\n    tag_500:\n        /* \"#utility.yul\":1336:1345   */\n      dup3\n        /* \"#utility.yul\":1323:1346   */\n      calldataload\n        /* \"#utility.yul\":1355:1388   */\n      tag_501\n        /* \"#utility.yul\":1382:1387   */\n      dup2\n        /* \"#utility.yul\":1355:1388   */\n      tag_490\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":1407:1412   */\n      swap5\n        /* \"#utility.yul\":1459:1461   */\n      0x20\n        /* \"#utility.yul\":1444:1462   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1431:1463   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1229:1469   */\n      jump\t// out\n        /* \"#utility.yul\":1474:1727   */\n    tag_90:\n      0x00\n        /* \"#utility.yul\":1583:1585   */\n      0x20\n        /* \"#utility.yul\":1571:1580   */\n      dup3\n        /* \"#utility.yul\":1562:1569   */\n      dup5\n        /* \"#utility.yul\":1558:1581   */\n      sub\n        /* \"#utility.yul\":1554:1586   */\n      slt\n        /* \"#utility.yul\":1551:1553   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":1604:1610   */\n      dup1\n        /* \"#utility.yul\":1596:1602   */\n      dup2\n        /* \"#utility.yul\":1589:1611   */\n      revert\n        /* \"#utility.yul\":1551:1553   */\n    tag_503:\n        /* \"#utility.yul\":1648:1657   */\n      dup2\n        /* \"#utility.yul\":1635:1658   */\n      calldataload\n        /* \"#utility.yul\":1667:1697   */\n      tag_350\n        /* \"#utility.yul\":1691:1696   */\n      dup2\n        /* \"#utility.yul\":1667:1697   */\n      tag_498\n      jump\t// in\n        /* \"#utility.yul\":1732:1989   */\n    tag_302:\n      0x00\n        /* \"#utility.yul\":1852:1854   */\n      0x20\n        /* \"#utility.yul\":1840:1849   */\n      dup3\n        /* \"#utility.yul\":1831:1838   */\n      dup5\n        /* \"#utility.yul\":1827:1850   */\n      sub\n        /* \"#utility.yul\":1823:1855   */\n      slt\n        /* \"#utility.yul\":1820:1822   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":1873:1879   */\n      dup1\n        /* \"#utility.yul\":1865:1871   */\n      dup2\n        /* \"#utility.yul\":1858:1880   */\n      revert\n        /* \"#utility.yul\":1820:1822   */\n    tag_506:\n        /* \"#utility.yul\":1910:1919   */\n      dup2\n        /* \"#utility.yul\":1904:1920   */\n      mload\n        /* \"#utility.yul\":1929:1959   */\n      tag_350\n        /* \"#utility.yul\":1953:1958   */\n      dup2\n        /* \"#utility.yul\":1929:1959   */\n      tag_498\n      jump\t// in\n        /* \"#utility.yul\":2561:3849   */\n    tag_75:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2942:2945   */\n      0xe0\n        /* \"#utility.yul\":2930:2939   */\n      dup9\n        /* \"#utility.yul\":2921:2928   */\n      dup11\n        /* \"#utility.yul\":2917:2940   */\n      sub\n        /* \"#utility.yul\":2913:2946   */\n      slt\n        /* \"#utility.yul\":2910:2912   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":2964:2970   */\n      dup3\n        /* \"#utility.yul\":2956:2962   */\n      dup4\n        /* \"#utility.yul\":2949:2971   */\n      revert\n        /* \"#utility.yul\":2910:2912   */\n    tag_515:\n        /* \"#utility.yul\":3008:3017   */\n      dup8\n        /* \"#utility.yul\":2995:3018   */\n      calldataload\n        /* \"#utility.yul\":3027:3060   */\n      tag_516\n        /* \"#utility.yul\":3054:3059   */\n      dup2\n        /* \"#utility.yul\":3027:3060   */\n      tag_490\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":3079:3084   */\n      swap7\n      pop\n        /* \"#utility.yul\":3136:3138   */\n      0x20\n        /* \"#utility.yul\":3121:3139   */\n      dup9\n      add\n        /* \"#utility.yul\":3108:3140   */\n      calldataload\n        /* \"#utility.yul\":3149:3184   */\n      tag_517\n        /* \"#utility.yul\":3108:3140   */\n      dup2\n        /* \"#utility.yul\":3149:3184   */\n      tag_490\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":3203:3210   */\n      swap6\n      pop\n        /* \"#utility.yul\":3262:3264   */\n      0x40\n        /* \"#utility.yul\":3247:3265   */\n      dup9\n      add\n        /* \"#utility.yul\":3234:3266   */\n      calldataload\n        /* \"#utility.yul\":3275:3310   */\n      tag_518\n        /* \"#utility.yul\":3234:3266   */\n      dup2\n        /* \"#utility.yul\":3275:3310   */\n      tag_490\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":3329:3336   */\n      swap5\n      pop\n        /* \"#utility.yul\":3388:3390   */\n      0x60\n        /* \"#utility.yul\":3373:3391   */\n      dup9\n      add\n        /* \"#utility.yul\":3360:3392   */\n      calldataload\n        /* \"#utility.yul\":3401:3436   */\n      tag_519\n        /* \"#utility.yul\":3360:3392   */\n      dup2\n        /* \"#utility.yul\":3401:3436   */\n      tag_490\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":3455:3462   */\n      swap4\n      pop\n        /* \"#utility.yul\":3514:3517   */\n      0x80\n        /* \"#utility.yul\":3499:3518   */\n      dup9\n      add\n        /* \"#utility.yul\":3486:3519   */\n      calldataload\n        /* \"#utility.yul\":3528:3563   */\n      tag_520\n        /* \"#utility.yul\":3486:3519   */\n      dup2\n        /* \"#utility.yul\":3528:3563   */\n      tag_490\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":3582:3589   */\n      swap3\n      pop\n        /* \"#utility.yul\":3641:3644   */\n      0xa0\n        /* \"#utility.yul\":3626:3645   */\n      dup9\n      add\n        /* \"#utility.yul\":3613:3646   */\n      calldataload\n        /* \"#utility.yul\":3655:3690   */\n      tag_521\n        /* \"#utility.yul\":3613:3646   */\n      dup2\n        /* \"#utility.yul\":3655:3690   */\n      tag_490\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":3709:3716   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3771   */\n      0xc0\n        /* \"#utility.yul\":3753:3772   */\n      dup9\n      add\n        /* \"#utility.yul\":3740:3773   */\n      calldataload\n        /* \"#utility.yul\":3782:3817   */\n      tag_522\n        /* \"#utility.yul\":3740:3773   */\n      dup2\n        /* \"#utility.yul\":3782:3817   */\n      tag_490\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":3836:3843   */\n      dup1\n        /* \"#utility.yul\":3826:3843   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2900:3849   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3854:4328   */\n    tag_371:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":4010:4012   */\n      0x60\n        /* \"#utility.yul\":3998:4007   */\n      dup5\n        /* \"#utility.yul\":3989:3996   */\n      dup7\n        /* \"#utility.yul\":3985:4008   */\n      sub\n        /* \"#utility.yul\":3981:4013   */\n      slt\n        /* \"#utility.yul\":3978:3980   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":4031:4037   */\n      dup3\n        /* \"#utility.yul\":4023:4029   */\n      dup4\n        /* \"#utility.yul\":4016:4038   */\n      revert\n        /* \"#utility.yul\":3978:3980   */\n    tag_524:\n        /* \"#utility.yul\":4059:4101   */\n      tag_525\n        /* \"#utility.yul\":4091:4100   */\n      dup5\n        /* \"#utility.yul\":4059:4101   */\n      tag_484\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":4049:4101   */\n      swap3\n      pop\n        /* \"#utility.yul\":4120:4171   */\n      tag_526\n        /* \"#utility.yul\":4167:4169   */\n      0x20\n        /* \"#utility.yul\":4156:4165   */\n      dup6\n        /* \"#utility.yul\":4152:4170   */\n      add\n        /* \"#utility.yul\":4120:4171   */\n      tag_484\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":4110:4171   */\n      swap2\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4203:4212   */\n      dup5\n        /* \"#utility.yul\":4199:4217   */\n      add\n        /* \"#utility.yul\":4193:4218   */\n      mload\n        /* \"#utility.yul\":4258:4268   */\n      0xffffffff\n        /* \"#utility.yul\":4251:4256   */\n      dup2\n        /* \"#utility.yul\":4247:4269   */\n      and\n        /* \"#utility.yul\":4240:4245   */\n      dup2\n        /* \"#utility.yul\":4237:4270   */\n      eq\n        /* \"#utility.yul\":4227:4229   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":4289:4295   */\n      dup2\n        /* \"#utility.yul\":4281:4287   */\n      dup3\n        /* \"#utility.yul\":4274:4296   */\n      revert\n        /* \"#utility.yul\":4227:4229   */\n    tag_527:\n        /* \"#utility.yul\":4317:4322   */\n      dup1\n        /* \"#utility.yul\":4307:4322   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3968:4328   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4333:4523   */\n    tag_53:\n      0x00\n        /* \"#utility.yul\":4445:4447   */\n      0x20\n        /* \"#utility.yul\":4433:4442   */\n      dup3\n        /* \"#utility.yul\":4424:4431   */\n      dup5\n        /* \"#utility.yul\":4420:4443   */\n      sub\n        /* \"#utility.yul\":4416:4448   */\n      slt\n        /* \"#utility.yul\":4413:4415   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":4466:4472   */\n      dup1\n        /* \"#utility.yul\":4458:4464   */\n      dup2\n        /* \"#utility.yul\":4451:4473   */\n      revert\n        /* \"#utility.yul\":4413:4415   */\n    tag_529:\n      pop\n        /* \"#utility.yul\":4494:4517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4403:4523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4528:4722   */\n    tag_279:\n      0x00\n        /* \"#utility.yul\":4651:4653   */\n      0x20\n        /* \"#utility.yul\":4639:4648   */\n      dup3\n        /* \"#utility.yul\":4630:4637   */\n      dup5\n        /* \"#utility.yul\":4626:4649   */\n      sub\n        /* \"#utility.yul\":4622:4654   */\n      slt\n        /* \"#utility.yul\":4619:4621   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":4672:4678   */\n      dup1\n        /* \"#utility.yul\":4664:4670   */\n      dup2\n        /* \"#utility.yul\":4657:4679   */\n      revert\n        /* \"#utility.yul\":4619:4621   */\n    tag_531:\n      pop\n        /* \"#utility.yul\":4700:4716   */\n      mload\n      swap2\n        /* \"#utility.yul\":4609:4722   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4727:4986   */\n    tag_532:\n      0x00\n        /* \"#utility.yul\":4808:4813   */\n      dup2\n        /* \"#utility.yul\":4802:4814   */\n      mload\n        /* \"#utility.yul\":4835:4841   */\n      dup1\n        /* \"#utility.yul\":4830:4833   */\n      dup5\n        /* \"#utility.yul\":4823:4842   */\n      mstore\n        /* \"#utility.yul\":4851:4914   */\n      tag_534\n        /* \"#utility.yul\":4907:4913   */\n      dup2\n        /* \"#utility.yul\":4900:4904   */\n      0x20\n        /* \"#utility.yul\":4895:4898   */\n      dup7\n        /* \"#utility.yul\":4891:4905   */\n      add\n        /* \"#utility.yul\":4884:4888   */\n      0x20\n        /* \"#utility.yul\":4877:4882   */\n      dup7\n        /* \"#utility.yul\":4873:4889   */\n      add\n        /* \"#utility.yul\":4851:4914   */\n      tag_535\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":4968:4970   */\n      0x1f\n        /* \"#utility.yul\":4947:4962   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4943:4972   */\n      and\n        /* \"#utility.yul\":4934:4973   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4975:4979   */\n      0x20\n        /* \"#utility.yul\":4930:4980   */\n      add\n      swap3\n        /* \"#utility.yul\":4778:4986   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4991:5265   */\n    tag_469:\n      0x00\n        /* \"#utility.yul\":5158:5164   */\n      dup3\n        /* \"#utility.yul\":5152:5165   */\n      mload\n        /* \"#utility.yul\":5174:5227   */\n      tag_537\n        /* \"#utility.yul\":5220:5226   */\n      dup2\n        /* \"#utility.yul\":5215:5218   */\n      dup5\n        /* \"#utility.yul\":5208:5212   */\n      0x20\n        /* \"#utility.yul\":5200:5206   */\n      dup8\n        /* \"#utility.yul\":5196:5213   */\n      add\n        /* \"#utility.yul\":5174:5227   */\n      tag_535\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":5243:5259   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":5128:5265   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5270:5473   */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5434:5466   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5416:5467   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5404:5406   */\n      0x20\n        /* \"#utility.yul\":5389:5407   */\n      add\n      swap1\n        /* \"#utility.yul\":5371:5473   */\n      jump\t// out\n        /* \"#utility.yul\":5478:5782   */\n    tag_360:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5708:5723   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":5690:5724   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5760:5775   */\n      swap2\n      and\n        /* \"#utility.yul\":5755:5757   */\n      0x20\n        /* \"#utility.yul\":5740:5758   */\n      dup3\n      add\n        /* \"#utility.yul\":5733:5776   */\n      mstore\n        /* \"#utility.yul\":5640:5642   */\n      0x40\n        /* \"#utility.yul\":5625:5643   */\n      add\n      swap1\n        /* \"#utility.yul\":5607:5782   */\n      jump\t// out\n        /* \"#utility.yul\":5787:6061   */\n    tag_347:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5979:6011   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":5961:6012   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6043:6045   */\n      0x20\n        /* \"#utility.yul\":6028:6046   */\n      dup3\n      add\n        /* \"#utility.yul\":6021:6055   */\n      mstore\n        /* \"#utility.yul\":5949:5951   */\n      0x40\n        /* \"#utility.yul\":5934:5952   */\n      add\n      swap1\n        /* \"#utility.yul\":5916:6061   */\n      jump\t// out\n        /* \"#utility.yul\":6066:6253   */\n    tag_56:\n        /* \"#utility.yul\":6231:6245   */\n      swap1\n      iszero\n        /* \"#utility.yul\":6224:6246   */\n      iszero\n        /* \"#utility.yul\":6206:6247   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6194:6196   */\n      0x20\n        /* \"#utility.yul\":6179:6197   */\n      add\n      swap1\n        /* \"#utility.yul\":6161:6253   */\n      jump\t// out\n        /* \"#utility.yul\":7182:7403   */\n    tag_482:\n      0x00\n        /* \"#utility.yul\":7331:7333   */\n      0x20\n        /* \"#utility.yul\":7320:7329   */\n      dup3\n        /* \"#utility.yul\":7313:7334   */\n      mstore\n        /* \"#utility.yul\":7351:7397   */\n      tag_350\n        /* \"#utility.yul\":7393:7395   */\n      0x20\n        /* \"#utility.yul\":7382:7391   */\n      dup4\n        /* \"#utility.yul\":7378:7396   */\n      add\n        /* \"#utility.yul\":7370:7376   */\n      dup5\n        /* \"#utility.yul\":7351:7397   */\n      tag_532\n      jump\t// in\n        /* \"#utility.yul\":7408:7810   */\n    tag_329:\n        /* \"#utility.yul\":7610:7612   */\n      0x20\n        /* \"#utility.yul\":7592:7613   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7649:7651   */\n      0x26\n        /* \"#utility.yul\":7629:7647   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7622:7652   */\n      mstore\n        /* \"#utility.yul\":7688:7722   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7683:7685   */\n      0x40\n        /* \"#utility.yul\":7668:7686   */\n      dup3\n      add\n        /* \"#utility.yul\":7661:7723   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7754:7756   */\n      0x60\n        /* \"#utility.yul\":7739:7757   */\n      dup3\n      add\n        /* \"#utility.yul\":7732:7768   */\n      mstore\n        /* \"#utility.yul\":7800:7803   */\n      0x80\n        /* \"#utility.yul\":7785:7804   */\n      add\n      swap1\n        /* \"#utility.yul\":7582:7810   */\n      jump\t// out\n        /* \"#utility.yul\":7815:8215   */\n    tag_272:\n        /* \"#utility.yul\":8017:8019   */\n      0x20\n        /* \"#utility.yul\":7999:8020   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8056:8058   */\n      0x24\n        /* \"#utility.yul\":8036:8054   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8029:8059   */\n      mstore\n        /* \"#utility.yul\":8095:8129   */\n      0x6578656375746f723a2063616c6c6572206973206e6f74207468652065786563\n        /* \"#utility.yul\":8090:8092   */\n      0x40\n        /* \"#utility.yul\":8075:8093   */\n      dup3\n      add\n        /* \"#utility.yul\":8068:8130   */\n      mstore\n      shl(0xe1, 0x3aba37b9)\n        /* \"#utility.yul\":8161:8163   */\n      0x60\n        /* \"#utility.yul\":8146:8164   */\n      dup3\n      add\n        /* \"#utility.yul\":8139:8173   */\n      mstore\n        /* \"#utility.yul\":8205:8208   */\n      0x80\n        /* \"#utility.yul\":8190:8209   */\n      add\n      swap1\n        /* \"#utility.yul\":7989:8215   */\n      jump\t// out\n        /* \"#utility.yul\":8220:8622   */\n    tag_462:\n        /* \"#utility.yul\":8422:8424   */\n      0x20\n        /* \"#utility.yul\":8404:8425   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8461:8463   */\n      0x26\n        /* \"#utility.yul\":8441:8459   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8434:8464   */\n      mstore\n        /* \"#utility.yul\":8500:8534   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":8495:8497   */\n      0x40\n        /* \"#utility.yul\":8480:8498   */\n      dup3\n      add\n        /* \"#utility.yul\":8473:8535   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":8566:8568   */\n      0x60\n        /* \"#utility.yul\":8551:8569   */\n      dup3\n      add\n        /* \"#utility.yul\":8544:8580   */\n      mstore\n        /* \"#utility.yul\":8612:8615   */\n      0x80\n        /* \"#utility.yul\":8597:8616   */\n      add\n      swap1\n        /* \"#utility.yul\":8394:8622   */\n      jump\t// out\n        /* \"#utility.yul\":8627:9037   */\n    tag_210:\n        /* \"#utility.yul\":8829:8831   */\n      0x20\n        /* \"#utility.yul\":8811:8832   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8868:8870   */\n      0x2e\n        /* \"#utility.yul\":8848:8866   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8841:8871   */\n      mstore\n        /* \"#utility.yul\":8907:8941   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":8902:8904   */\n      0x40\n        /* \"#utility.yul\":8887:8905   */\n      dup3\n      add\n        /* \"#utility.yul\":8880:8942   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":8973:8975   */\n      0x60\n        /* \"#utility.yul\":8958:8976   */\n      dup3\n      add\n        /* \"#utility.yul\":8951:8995   */\n      mstore\n        /* \"#utility.yul\":9027:9030   */\n      0x80\n        /* \"#utility.yul\":9012:9031   */\n      add\n      swap1\n        /* \"#utility.yul\":8801:9037   */\n      jump\t// out\n        /* \"#utility.yul\":9042:9398   */\n    tag_192:\n        /* \"#utility.yul\":9244:9246   */\n      0x20\n        /* \"#utility.yul\":9226:9247   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9263:9281   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9256:9286   */\n      mstore\n        /* \"#utility.yul\":9322:9356   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9317:9319   */\n      0x40\n        /* \"#utility.yul\":9302:9320   */\n      dup3\n      add\n        /* \"#utility.yul\":9295:9357   */\n      mstore\n        /* \"#utility.yul\":9389:9391   */\n      0x60\n        /* \"#utility.yul\":9374:9392   */\n      add\n      swap1\n        /* \"#utility.yul\":9216:9398   */\n      jump\t// out\n        /* \"#utility.yul\":9403:9756   */\n    tag_467:\n        /* \"#utility.yul\":9605:9607   */\n      0x20\n        /* \"#utility.yul\":9587:9608   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9644:9646   */\n      0x1d\n        /* \"#utility.yul\":9624:9642   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9617:9647   */\n      mstore\n        /* \"#utility.yul\":9683:9714   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":9678:9680   */\n      0x40\n        /* \"#utility.yul\":9663:9681   */\n      dup3\n      add\n        /* \"#utility.yul\":9656:9715   */\n      mstore\n        /* \"#utility.yul\":9747:9749   */\n      0x60\n        /* \"#utility.yul\":9732:9750   */\n      add\n      swap1\n        /* \"#utility.yul\":9577:9756   */\n      jump\t// out\n        /* \"#utility.yul\":9761:10167   */\n    tag_446:\n        /* \"#utility.yul\":9963:9965   */\n      0x20\n        /* \"#utility.yul\":9945:9966   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10002:10004   */\n      0x2a\n        /* \"#utility.yul\":9982:10000   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9975:10005   */\n      mstore\n        /* \"#utility.yul\":10041:10075   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":10036:10038   */\n      0x40\n        /* \"#utility.yul\":10021:10039   */\n      dup3\n      add\n        /* \"#utility.yul\":10014:10076   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":10107:10109   */\n      0x60\n        /* \"#utility.yul\":10092:10110   */\n      dup3\n      add\n        /* \"#utility.yul\":10085:10125   */\n      mstore\n        /* \"#utility.yul\":10157:10160   */\n      0x80\n        /* \"#utility.yul\":10142:10161   */\n      add\n      swap1\n        /* \"#utility.yul\":9935:10167   */\n      jump\t// out\n        /* \"#utility.yul\":10172:10349   */\n    tag_50:\n        /* \"#utility.yul\":10318:10343   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10306:10308   */\n      0x20\n        /* \"#utility.yul\":10291:10309   */\n      add\n      swap1\n        /* \"#utility.yul\":10273:10349   */\n      jump\t// out\n        /* \"#utility.yul\":10354:10814   */\n    tag_385:\n      0x00\n        /* \"#utility.yul\":10585:10591   */\n      dup6\n        /* \"#utility.yul\":10574:10583   */\n      dup3\n        /* \"#utility.yul\":10567:10592   */\n      mstore\n        /* \"#utility.yul\":10628:10634   */\n      dup5\n        /* \"#utility.yul\":10623:10625   */\n      0x20\n        /* \"#utility.yul\":10612:10621   */\n      dup4\n        /* \"#utility.yul\":10608:10626   */\n      add\n        /* \"#utility.yul\":10601:10635   */\n      mstore\n        /* \"#utility.yul\":10700:10701   */\n      0x01\n        /* \"#utility.yul\":10696:10697   */\n      dup1\n        /* \"#utility.yul\":10691:10694   */\n      0xa0\n        /* \"#utility.yul\":10687:10698   */\n      shl\n        /* \"#utility.yul\":10683:10702   */\n      sub\n        /* \"#utility.yul\":10675:10681   */\n      dup5\n        /* \"#utility.yul\":10671:10703   */\n      and\n        /* \"#utility.yul\":10666:10668   */\n      0x40\n        /* \"#utility.yul\":10655:10664   */\n      dup4\n        /* \"#utility.yul\":10651:10669   */\n      add\n        /* \"#utility.yul\":10644:10704   */\n      mstore\n        /* \"#utility.yul\":10740:10743   */\n      0x80\n        /* \"#utility.yul\":10735:10737   */\n      0x60\n        /* \"#utility.yul\":10724:10733   */\n      dup4\n        /* \"#utility.yul\":10720:10738   */\n      add\n        /* \"#utility.yul\":10713:10744   */\n      mstore\n        /* \"#utility.yul\":10761:10808   */\n      tag_557\n        /* \"#utility.yul\":10803:10806   */\n      0x80\n        /* \"#utility.yul\":10792:10801   */\n      dup4\n        /* \"#utility.yul\":10788:10807   */\n      add\n        /* \"#utility.yul\":10780:10786   */\n      dup5\n        /* \"#utility.yul\":10761:10808   */\n      tag_532\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":10753:10808   */\n      swap7\n        /* \"#utility.yul\":10557:10814   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10819:11148   */\n    tag_419:\n        /* \"#utility.yul\":11015:11040   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":11071:11073   */\n      0x20\n        /* \"#utility.yul\":11056:11074   */\n      dup4\n      add\n        /* \"#utility.yul\":11049:11083   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":11126:11140   */\n      iszero\n        /* \"#utility.yul\":11119:11141   */\n      iszero\n        /* \"#utility.yul\":11114:11116   */\n      0x40\n        /* \"#utility.yul\":11099:11117   */\n      dup3\n      add\n        /* \"#utility.yul\":11092:11142   */\n      mstore\n        /* \"#utility.yul\":11003:11005   */\n      0x60\n        /* \"#utility.yul\":10988:11006   */\n      add\n      swap1\n        /* \"#utility.yul\":10970:11148   */\n      jump\t// out\n        /* \"#utility.yul\":11153:11281   */\n    tag_455:\n      0x00\n        /* \"#utility.yul\":11224:11225   */\n      dup3\n        /* \"#utility.yul\":11220:11226   */\n      not\n        /* \"#utility.yul\":11217:11218   */\n      dup3\n        /* \"#utility.yul\":11214:11227   */\n      gt\n        /* \"#utility.yul\":11211:11213   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":11230:11248   */\n      tag_561\n      tag_562\n      jump\t// in\n    tag_561:\n      pop\n        /* \"#utility.yul\":11266:11275   */\n      add\n      swap1\n        /* \"#utility.yul\":11201:11281   */\n      jump\t// out\n        /* \"#utility.yul\":11286:11503   */\n    tag_354:\n      0x00\n        /* \"#utility.yul\":11352:11353   */\n      dup3\n        /* \"#utility.yul\":11342:11344   */\n      tag_564\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":11377:11408   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11431:11435   */\n      0x12\n        /* \"#utility.yul\":11428:11429   */\n      0x04\n        /* \"#utility.yul\":11421:11436   */\n      mstore\n        /* \"#utility.yul\":11459:11463   */\n      0x24\n        /* \"#utility.yul\":11384:11385   */\n      dup2\n        /* \"#utility.yul\":11449:11464   */\n      revert\n        /* \"#utility.yul\":11342:11344   */\n    tag_564:\n      pop\n        /* \"#utility.yul\":11488:11497   */\n      div\n      swap1\n        /* \"#utility.yul\":11332:11503   */\n      jump\t// out\n        /* \"#utility.yul\":11508:11676   */\n    tag_351:\n      0x00\n        /* \"#utility.yul\":11614:11615   */\n      dup2\n        /* \"#utility.yul\":11610:11611   */\n      0x00\n        /* \"#utility.yul\":11606:11612   */\n      not\n        /* \"#utility.yul\":11602:11616   */\n      div\n        /* \"#utility.yul\":11599:11600   */\n      dup4\n        /* \"#utility.yul\":11596:11617   */\n      gt\n        /* \"#utility.yul\":11591:11592   */\n      dup3\n        /* \"#utility.yul\":11584:11593   */\n      iszero\n        /* \"#utility.yul\":11577:11594   */\n      iszero\n        /* \"#utility.yul\":11573:11618   */\n      and\n        /* \"#utility.yul\":11570:11572   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":11621:11639   */\n      tag_567\n      tag_562\n      jump\t// in\n    tag_567:\n      pop\n        /* \"#utility.yul\":11661:11670   */\n      mul\n      swap1\n        /* \"#utility.yul\":11560:11676   */\n      jump\t// out\n        /* \"#utility.yul\":11681:11806   */\n    tag_357:\n      0x00\n        /* \"#utility.yul\":11749:11750   */\n      dup3\n        /* \"#utility.yul\":11746:11747   */\n      dup3\n        /* \"#utility.yul\":11743:11751   */\n      lt\n        /* \"#utility.yul\":11740:11742   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":11754:11772   */\n      tag_570\n      tag_562\n      jump\t// in\n    tag_570:\n      pop\n        /* \"#utility.yul\":11791:11800   */\n      sub\n      swap1\n        /* \"#utility.yul\":11730:11806   */\n      jump\t// out\n        /* \"#utility.yul\":11811:12069   */\n    tag_535:\n        /* \"#utility.yul\":11883:11884   */\n      0x00\n        /* \"#utility.yul\":11893:12006   */\n    tag_572:\n        /* \"#utility.yul\":11907:11913   */\n      dup4\n        /* \"#utility.yul\":11904:11905   */\n      dup2\n        /* \"#utility.yul\":11901:11914   */\n      lt\n        /* \"#utility.yul\":11893:12006   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":11983:11994   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11977:11995   */\n      mload\n        /* \"#utility.yul\":11964:11975   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":11957:11996   */\n      mstore\n        /* \"#utility.yul\":11929:11931   */\n      0x20\n        /* \"#utility.yul\":11922:11932   */\n      add\n        /* \"#utility.yul\":11893:12006   */\n      jump(tag_572)\n    tag_574:\n        /* \"#utility.yul\":12024:12030   */\n      dup4\n        /* \"#utility.yul\":12021:12022   */\n      dup2\n        /* \"#utility.yul\":12018:12031   */\n      gt\n        /* \"#utility.yul\":12015:12017   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":12059:12060   */\n      0x00\n        /* \"#utility.yul\":12050:12056   */\n      dup5\n        /* \"#utility.yul\":12045:12048   */\n      dup5\n        /* \"#utility.yul\":12041:12057   */\n      add\n        /* \"#utility.yul\":12034:12061   */\n      mstore\n        /* \"#utility.yul\":12015:12017   */\n    tag_575:\n      pop\n        /* \"#utility.yul\":11864:12069   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12074:12201   */\n    tag_562:\n        /* \"#utility.yul\":12135:12145   */\n      0x4e487b71\n        /* \"#utility.yul\":12130:12133   */\n      0xe0\n        /* \"#utility.yul\":12126:12146   */\n      shl\n        /* \"#utility.yul\":12123:12124   */\n      0x00\n        /* \"#utility.yul\":12116:12147   */\n      mstore\n        /* \"#utility.yul\":12166:12170   */\n      0x11\n        /* \"#utility.yul\":12163:12164   */\n      0x04\n        /* \"#utility.yul\":12156:12171   */\n      mstore\n        /* \"#utility.yul\":12190:12194   */\n      0x24\n        /* \"#utility.yul\":12187:12188   */\n      0x00\n        /* \"#utility.yul\":12180:12195   */\n      revert\n        /* \"#utility.yul\":12206:12339   */\n    tag_490:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12283:12314   */\n      dup2\n      and\n        /* \"#utility.yul\":12273:12315   */\n      dup2\n      eq\n        /* \"#utility.yul\":12263:12265   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":12329:12330   */\n      0x00\n        /* \"#utility.yul\":12326:12327   */\n      dup1\n        /* \"#utility.yul\":12319:12331   */\n      revert\n        /* \"#utility.yul\":12344:12464   */\n    tag_498:\n        /* \"#utility.yul\":12432:12437   */\n      dup1\n        /* \"#utility.yul\":12425:12438   */\n      iszero\n        /* \"#utility.yul\":12418:12439   */\n      iszero\n        /* \"#utility.yul\":12411:12416   */\n      dup2\n        /* \"#utility.yul\":12408:12440   */\n      eq\n        /* \"#utility.yul\":12398:12400   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":12454:12455   */\n      0x00\n        /* \"#utility.yul\":12451:12452   */\n      dup1\n        /* \"#utility.yul\":12444:12456   */\n      revert\n\n    auxdata: 0xa2646970667358221220fe4f0876aeeed841450feaf276246c4ac1fd36740e07862d6a9a7a4c89fb308264736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611d82806100206000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80638da5cb5b11610130578063bd0b1f44116100b8578063db7f521a1161007c578063db7f521a146103f8578063ec1f1f691461040b578063f106845414610413578063f2fde38b1461041b578063f6d7eade1461042e57610227565b8063bd0b1f44146103ba578063c83dd231146103c2578063d10c06a2146103ca578063d477f05f146103d2578063d4f26c51146103e557610227565b8063a36a7526116100ff578063a36a752614610371578063aaf5bfc314610384578063aaf5eb6814610397578063af5518c41461039f578063b8bb97a1146103b257610227565b80638da5cb5b1461034657806391cca3db1461034e578063930ed033146103565780639da5b0d51461036957610227565b80633e413bee116101b35780634ecaac41116101825780634ecaac411461031357806355c746d11461031b57806358de5de81461032e578063715018a6146103365780637e47961c1461033e57610227565b80633e413bee146102dd5780634591db50146102e557806348c7e528146102f85780634ae6a0271461030b57610227565b80632c535a52116101fa5780632c535a52146102905780633011d3d51461029857806335876476146102ad57806336e9332d146102c25780633c850e1e146102ca57610227565b806316d039931461022c5780631b0d8aab1461024a5780631e1bff3f1461026a57806327c42a501461027d575b600080fd5b610234610436565b6040516102419190611c1d565b60405180910390f35b61025d61025836600461196c565b61043c565b6040516102419190611a2b565b61025d6102783660046117ee565b610494565b61025d61028b36600461196c565b610504565b61023461054e565b6102a0610554565b60405161024191906119e4565b6102c06102bb366004611889565b610563565b005b6102a06106a2565b61025d6102d836600461196c565b6106b1565b6102a06106fb565b61025d6102f3366004611851565b61070a565b61025d6103063660046117b6565b61076c565b610234610781565b6102a0610787565b61025d610329366004611851565b610796565b61025d6107f8565b6102c0610808565b6102a0610853565b6102a0610862565b6102a0610871565b61025d610364366004611826565b610880565b61025d6108de565b61025d61037f3660046117b6565b6108ee565b61025d6103923660046117b6565b610954565b6102346109ba565b61025d6103ad36600461196c565b6109c0565b6102a0610a0a565b610234610a19565b6102a0610a1f565b61025d610a2e565b61025d6103e03660046117b6565b610c63565b61025d6103f33660046117b6565b610cc9565b61025d6104063660046117b6565b610d2f565b6102a0610d95565b610234610da4565b6102c06104293660046117b6565b610daa565b6102a0610e1b565b60725481565b6000610446610e2a565b6001600160a01b0316610457610862565b6001600160a01b0316146104865760405162461bcd60e51b815260040161047d90611b67565b60405180910390fd5b50607381905560015b919050565b600061049e610e2a565b6001600160a01b03166104af610862565b6001600160a01b0316146104d55760405162461bcd60e51b815260040161047d90611b67565b506001600160a01b0382166000908152606560205260409020805482151560ff19909116179055600192915050565b600061050e610e2a565b6001600160a01b031661051f610862565b6001600160a01b0316146105455760405162461bcd60e51b815260040161047d90611b67565b50606e55600190565b606f5481565b6066546001600160a01b031681565b600054610100900460ff168061057c575060005460ff16155b6105985760405162461bcd60e51b815260040161047d90611b19565b600054610100900460ff161580156105c3576000805460ff1961ff0019909116610100171660011790555b6105cb610e2e565b606c80546001600160a01b03199081166001600160a01b038a811691909117909255606d805482168b8416179055606680548216898416179055606880548216878416179055606980548216868416179055606a8054339083168117909155606b805483169091179055611388606e556109c4606f8190556070556127106071556103e860725560748054600160a01b60ff60a01b1990911617600161ff0160a01b031916858416179055606780549091169187169190911790558015610698576000805461ff00191690555b5050505050505050565b6074546001600160a01b031681565b60006106bb610e2a565b6001600160a01b03166106cc610862565b6001600160a01b0316146106f25760405162461bcd60e51b815260040161047d90611b67565b50607055600190565b6067546001600160a01b031681565b6000610714610e2a565b6001600160a01b0316610725610862565b6001600160a01b03161461074b5760405162461bcd60e51b815260040161047d90611b67565b5060748054821515600160a01b0260ff60a01b199091161790556001919050565b60656020526000908152604090205460ff1681565b60705481565b6068546001600160a01b031681565b60006107a0610e2a565b6001600160a01b03166107b1610862565b6001600160a01b0316146107d75760405162461bcd60e51b815260040161047d90611b67565b5060748054821515600160a81b0260ff60a81b199091161790556001919050565b607454600160a81b900460ff1681565b610810610e2a565b6001600160a01b0316610821610862565b6001600160a01b0316146108475760405162461bcd60e51b815260040161047d90611b67565b6108516000610eb2565b565b6075546001600160a01b031681565b6033546001600160a01b031690565b606b546001600160a01b031681565b600061088a610e2a565b6001600160a01b031661089b610862565b6001600160a01b0316146108c15760405162461bcd60e51b815260040161047d90611b67565b6108d56001600160a01b0384163384610f04565b50600192915050565b607454600160a01b900460ff1681565b60006108f8610e2a565b6001600160a01b0316610909610862565b6001600160a01b03161461092f5760405162461bcd60e51b815260040161047d90611b67565b50606a80546001600160a01b0383166001600160a01b03199091161790556001919050565b600061095e610e2a565b6001600160a01b031661096f610862565b6001600160a01b0316146109955760405162461bcd60e51b815260040161047d90611b67565b50606780546001600160a01b0383166001600160a01b03199091161790556001919050565b60715481565b60006109ca610e2a565b6001600160a01b03166109db610862565b6001600160a01b031614610a015760405162461bcd60e51b815260040161047d90611b67565b50606f55600190565b6069546001600160a01b031681565b606e5481565b606d546001600160a01b031681565b3360009081526065602052604081205460ff16610a5d5760405162461bcd60e51b815260040161047d90611a8f565b6066546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a8e9030906004016119e4565b60206040518083038186803b158015610aa657600080fd5b505afa158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade9190611984565b90506000610b03607154610afd606e5485610f5f90919063ffffffff16565b90610f72565b90506000610b22607154610afd606f5486610f5f90919063ffffffff16565b90506000610b3a82610b348686610f7e565b90610f7e565b90506000610b4784610f8a565b606954606854919250610b67916001600160a01b03908116911683610f04565b606a54606654610b84916001600160a01b03918216911685610f04565b606b54606654610ba1916001600160a01b03918216911684610f04565b607454600160a01b900460ff1615610bbb57610bbb611219565b607454600160a81b900460ff1615610c5757607560009054906101000a90046001600160a01b03166001600160a01b031663796c7be76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c1d57600080fd5b505af1158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c55919061186d565b505b60019550505050505090565b6000610c6d610e2a565b6001600160a01b0316610c7e610862565b6001600160a01b031614610ca45760405162461bcd60e51b815260040161047d90611b67565b50606b80546001600160a01b0383166001600160a01b03199091161790556001919050565b6000610cd3610e2a565b6001600160a01b0316610ce4610862565b6001600160a01b031614610d0a5760405162461bcd60e51b815260040161047d90611b67565b50607480546001600160a01b0383166001600160a01b03199091161790556001919050565b6000610d39610e2a565b6001600160a01b0316610d4a610862565b6001600160a01b031614610d705760405162461bcd60e51b815260040161047d90611b67565b50607580546001600160a01b0383166001600160a01b03199091161790556001919050565b606a546001600160a01b031681565b60735481565b610db2610e2a565b6001600160a01b0316610dc3610862565b6001600160a01b031614610de95760405162461bcd60e51b815260040161047d90611b67565b6001600160a01b038116610e0f5760405162461bcd60e51b815260040161047d90611a49565b610e1881610eb2565b50565b606c546001600160a01b031681565b3390565b600054610100900460ff1680610e47575060005460ff16155b610e635760405162461bcd60e51b815260040161047d90611b19565b600054610100900460ff16158015610e8e576000805460ff1961ff0019909116610100171660011790555b610e966114c8565b610e9e61153b565b8015610e18576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f5a8363a9059cbb60e01b8484604051602401610f23929190611a12565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526115ab565b505050565b6000610f6b8284611cad565b9392505050565b6000610f6b8284611c8d565b6000610f6b8284611ccc565b606d5460685460665460405163e6a4390560e01b815260009384936001600160a01b039182169363e6a4390593610fcb9392831692909116906004016119f8565b60206040518083038186803b158015610fe357600080fd5b505afa158015610ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101b91906117d2565b606654909150611035906001600160a01b03168285610f04565b600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561107157600080fd5b505afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a9919061191e565b506001600160701b031691506001600160701b031691506000836001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156110fb57600080fd5b505afa15801561110f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113391906117d2565b60665490915060009081906001600160a01b0380851691161461115757838561115a565b84845b91509150600061116b89848461163a565b60665490915060009081906001600160a01b0387811691161461119057826000611194565b6000835b6040805160008152602081019182905263022c0d9f60e01b90915291935091506001600160a01b038a169063022c0d9f906111d89085908590309060248101611c26565b600060405180830381600087803b1580156111f257600080fd5b505af1158015611206573d6000803e3d6000fd5b50949d9c50505050505050505050505050565b606d5460675460665460405163e6a4390560e01b81526000936001600160a01b039081169363e6a4390593611256939183169216906004016119f8565b60206040518083038186803b15801561126e57600080fd5b505afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a691906117d2565b6066546040516370a0823160e01b81529192506000916001600160a01b03909116906370a08231906112dc9085906004016119e4565b60206040518083038186803b1580156112f457600080fd5b505afa158015611308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132c9190611984565b6067546040516370a0823160e01b81529192506000916001600160a01b03909116906370a08231906113629086906004016119e4565b60206040518083038186803b15801561137a57600080fd5b505afa15801561138e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b29190611984565b9050670de0b6b3a764000060006113cd84610afd8585610f5f565b9050600080670de0b6b3a7640000831115611428576113fe655af3107a4000610afd85670de0b6b3a7640000610f7e565b90506072548111156114135760009150611423565b6072546114209082610f7e565b91505b611457565b611444655af3107a4000610afd85670de0b6b3a7640000611ccc565b6072549091506114549082611688565b91505b60745460735460405163236535f560e11b81526001600160a01b03909216916346ca6bea9161148d918690600190600401611c5d565b600060405180830381600087803b1580156114a757600080fd5b505af11580156114bb573d6000803e3d6000fd5b5050505050505050505050565b600054610100900460ff16806114e1575060005460ff16155b6114fd5760405162461bcd60e51b815260040161047d90611b19565b600054610100900460ff16158015610e9e576000805460ff1961ff0019909116610100171660011790558015610e18576000805461ff001916905550565b600054610100900460ff1680611554575060005460ff16155b6115705760405162461bcd60e51b815260040161047d90611b19565b600054610100900460ff1615801561159b576000805460ff1961ff0019909116610100171660011790555b610e9e6115a6610e2a565b610eb2565b6000611600826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116949092919063ffffffff16565b805190915015610f5a578080602001905181019061161e919061186d565b610f5a5760405162461bcd60e51b815260040161047d90611bd3565b600080611649856103e5610f5f565b905060006116578285610f5f565b905060006116718361166b886103e8610f5f565b90611688565b905061167d8183611c8d565b979650505050505050565b6000610f6b8284611c75565b60606116a384846000856116ab565b949350505050565b6060824710156116cd5760405162461bcd60e51b815260040161047d90611ad3565b6116d685611760565b6116f25760405162461bcd60e51b815260040161047d90611b9c565b600080866001600160a01b0316858760405161170e91906119c8565b60006040518083038185875af1925050503d806000811461174b576040519150601f19603f3d011682016040523d82523d6000602084013e611750565b606091505b509150915061167d828286611766565b3b151590565b60608315611775575081610f6b565b8251156117855782518084602001fd5b8160405162461bcd60e51b815260040161047d9190611a36565b80516001600160701b038116811461048f57600080fd5b6000602082840312156117c7578081fd5b8135610f6b81611d29565b6000602082840312156117e3578081fd5b8151610f6b81611d29565b60008060408385031215611800578081fd5b823561180b81611d29565b9150602083013561181b81611d3e565b809150509250929050565b60008060408385031215611838578182fd5b823561184381611d29565b946020939093013593505050565b600060208284031215611862578081fd5b8135610f6b81611d3e565b60006020828403121561187e578081fd5b8151610f6b81611d3e565b600080600080600080600060e0888a0312156118a3578283fd5b87356118ae81611d29565b965060208801356118be81611d29565b955060408801356118ce81611d29565b945060608801356118de81611d29565b935060808801356118ee81611d29565b925060a08801356118fe81611d29565b915060c088013561190e81611d29565b8091505092959891949750929550565b600080600060608486031215611932578283fd5b61193b8461179f565b92506119496020850161179f565b9150604084015163ffffffff81168114611961578182fd5b809150509250925092565b60006020828403121561197d578081fd5b5035919050565b600060208284031215611995578081fd5b5051919050565b600081518084526119b4816020860160208601611ce3565b601f01601f19169290920160200192915050565b600082516119da818460208701611ce3565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b600060208252610f6b602083018461199c565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526024908201527f6578656375746f723a2063616c6c6572206973206e6f742074686520657865636040820152633aba37b960e11b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b600085825284602083015260018060a01b038416604083015260806060830152611c53608083018461199c565b9695505050505050565b92835260208301919091521515604082015260600190565b60008219821115611c8857611c88611d13565b500190565b600082611ca857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611cc757611cc7611d13565b500290565b600082821015611cde57611cde611d13565b500390565b60005b83811015611cfe578181015183820152602001611ce6565b83811115611d0d576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610e1857600080fd5b8015158114610e1857600080fdfea2646970667358221220fe4f0876aeeed841450feaf276246c4ac1fd36740e07862d6a9a7a4c89fb308264736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D82 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xBD0B1F44 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDB7F521A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDB7F521A EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xF1068454 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xF6D7EADE EQ PUSH2 0x42E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xBD0B1F44 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xC83DD231 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xD10C06A2 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xD477F05F EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xD4F26C51 EQ PUSH2 0x3E5 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xA36A7526 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xAAF5BFC3 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xAF5518C4 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xB8BB97A1 EQ PUSH2 0x3B2 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x91CCA3DB EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x930ED033 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x9DA5B0D5 EQ PUSH2 0x369 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x4ECAAC41 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4ECAAC41 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x55C746D1 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x58DE5DE8 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x7E47961C EQ PUSH2 0x33E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x4591DB50 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x48C7E528 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x4AE6A027 EQ PUSH2 0x30B JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x2C535A52 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x2C535A52 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x3011D3D5 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x35876476 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x36E9332D EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x3C850E1E EQ PUSH2 0x2CA JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x16D03993 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x1B0D8AAB EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x27C42A50 EQ PUSH2 0x27D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x25D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x19E4 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x25D PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST PUSH2 0x25D PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x234 PUSH2 0x781 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x853 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x25D PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x25D PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x234 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x25D PUSH2 0xA2E JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x234 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x72 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x457 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x73 DUP2 SWAP1 SSTORE PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4AF PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x51F PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x6E SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x57C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x5CB PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x6C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x6D DUP1 SLOAD DUP3 AND DUP12 DUP5 AND OR SWAP1 SSTORE PUSH1 0x66 DUP1 SLOAD DUP3 AND DUP10 DUP5 AND OR SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x69 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0x6A DUP1 SLOAD CALLER SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6B DUP1 SLOAD DUP4 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1388 PUSH1 0x6E SSTORE PUSH2 0x9C4 PUSH1 0x6F DUP2 SWAP1 SSTORE PUSH1 0x70 SSTORE PUSH2 0x2710 PUSH1 0x71 SSTORE PUSH2 0x3E8 PUSH1 0x72 SSTORE PUSH1 0x74 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH2 0xFF01 PUSH1 0xA0 SHL SUB NOT AND DUP6 DUP5 AND OR SWAP1 SSTORE PUSH1 0x67 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BB PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6CC PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x70 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x725 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A0 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B1 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x810 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x821 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x851 PUSH1 0x0 PUSH2 0xEB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x75 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88A PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x89B PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x8D5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0xF04 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F8 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x909 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x92F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x6A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95E PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x96F PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CA PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9DB PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x6F SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA8E SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADE SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB03 PUSH1 0x71 SLOAD PUSH2 0xAFD PUSH1 0x6E SLOAD DUP6 PUSH2 0xF5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xF72 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB22 PUSH1 0x71 SLOAD PUSH2 0xAFD PUSH1 0x6F SLOAD DUP7 PUSH2 0xF5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB3A DUP3 PUSH2 0xB34 DUP7 DUP7 PUSH2 0xF7E JUMP JUMPDEST SWAP1 PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB47 DUP5 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x68 SLOAD SWAP2 SWAP3 POP PUSH2 0xB67 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x66 SLOAD PUSH2 0xB84 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP6 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x66 SLOAD PUSH2 0xBA1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBB PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC57 JUMPI PUSH1 0x75 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x796C7BE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC55 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6D PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC7E PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x6B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD3 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE4 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD39 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD4A PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x75 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDB2 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDC3 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH2 0xE18 DUP2 PUSH2 0xEB2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xE47 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xE96 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0xE9E PUSH2 0x153B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF5A DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF23 SWAP3 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x15AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6B DUP3 DUP5 PUSH2 0x1CAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6B DUP3 DUP5 PUSH2 0x1C8D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6B DUP3 DUP5 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x68 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0xFCB SWAP4 SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101B SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH2 0x1035 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP6 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1085 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A9 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1133 SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND EQ PUSH2 0x1157 JUMPI DUP4 DUP6 PUSH2 0x115A JUMP JUMPDEST DUP5 DUP5 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x116B DUP10 DUP5 DUP5 PUSH2 0x163A JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x1190 JUMPI DUP3 PUSH1 0x0 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x11D8 SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1206 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP5 SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x67 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0x1256 SWAP4 SWAP2 DUP4 AND SWAP3 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1282 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A6 SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x12DC SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1308 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x132C SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1362 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x137A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x138E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B2 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 PUSH2 0x13CD DUP5 PUSH2 0xAFD DUP6 DUP6 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 GT ISZERO PUSH2 0x1428 JUMPI PUSH2 0x13FE PUSH6 0x5AF3107A4000 PUSH2 0xAFD DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH1 0x72 SLOAD DUP2 GT ISZERO PUSH2 0x1413 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x1420 SWAP1 DUP3 PUSH2 0xF7E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x1457 JUMP JUMPDEST PUSH2 0x1444 PUSH6 0x5AF3107A4000 PUSH2 0xAFD DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x72 SLOAD SWAP1 SWAP2 POP PUSH2 0x1454 SWAP1 DUP3 PUSH2 0x1688 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x73 SLOAD PUSH1 0x40 MLOAD PUSH4 0x236535F5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x46CA6BEA SWAP2 PUSH2 0x148D SWAP2 DUP7 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x14E1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1554 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xE9E PUSH2 0x15A6 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1600 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1694 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF5A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x161E SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1649 DUP6 PUSH2 0x3E5 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1657 DUP3 DUP6 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1671 DUP4 PUSH2 0x166B DUP9 PUSH2 0x3E8 PUSH2 0xF5F JUMP JUMPDEST SWAP1 PUSH2 0x1688 JUMP JUMPDEST SWAP1 POP PUSH2 0x167D DUP2 DUP4 PUSH2 0x1C8D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6B DUP3 DUP5 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x16A3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x16AB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x16CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x16D6 DUP6 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x16F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x170E SWAP2 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x174B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x167D DUP3 DUP3 DUP7 PUSH2 0x1766 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1775 JUMPI POP DUP2 PUSH2 0xF6B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1785 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF6B DUP2 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF6B DUP2 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1800 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x180B DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x181B DUP2 PUSH2 0x1D3E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1838 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1843 DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1862 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF6B DUP2 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF6B DUP2 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x18A3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x18AE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x18BE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x18CE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH2 0x18DE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x18EE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x18FE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH2 0x190E DUP2 PUSH2 0x1D29 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1932 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x193B DUP5 PUSH2 0x179F JUMP JUMPDEST SWAP3 POP PUSH2 0x1949 PUSH1 0x20 DUP6 ADD PUSH2 0x179F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1961 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1995 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19B4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x19DA DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1CE3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xF6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578656375746F723A2063616C6C6572206973206E6F74207468652065786563 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3ABA37B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C53 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x199C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C88 JUMPI PUSH2 0x1C88 PUSH2 0x1D13 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CC7 JUMPI PUSH2 0x1CC7 PUSH2 0x1D13 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1CDE JUMPI PUSH2 0x1CDE PUSH2 0x1D13 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CFE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CE6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D0D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x4F ADDMOD PUSH23 0xAEEED841450FEAF276246C4AC1FD36740E07862D6A9A7A 0x4C DUP10 0xFB ADDRESS DUP3 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "909:6651:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12466:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:128:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "182:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "191:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "194:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "184:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "184:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "184:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "130:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "141:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "148:30:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "137:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "137:42:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "127:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:53:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:61:12"
															},
															"nodeType": "YulIf",
															"src": "117:2:12"
														}
													]
												},
												"name": "abi_decode_t_uint112_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:12",
														"type": ""
													}
												],
												"src": "14:190:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:189:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "334:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "342:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:12"
															},
															"nodeType": "YulIf",
															"src": "289:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "360:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "386:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "373:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "364:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "432:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "405:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "405:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "447:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "457:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "447:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "245:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "256:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "268:6:12",
														"type": ""
													}
												],
												"src": "209:259:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "554:182:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "600:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "609:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "617:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "602:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "602:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "602:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "575:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "584:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "571:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "571:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "596:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "567:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "567:32:12"
															},
															"nodeType": "YulIf",
															"src": "564:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "635:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "654:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "648:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "639:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "700:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "673:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "673:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "673:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "715:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "725:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "715:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "520:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "531:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "543:6:12",
														"type": ""
													}
												],
												"src": "473:263:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "825:312:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "871:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "880:6:12"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "888:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "873:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "873:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "873:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "846:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "855:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "842:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "842:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "867:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "838:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "838:32:12"
															},
															"nodeType": "YulIf",
															"src": "835:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "906:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "919:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "910:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "951:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "951:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "951:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1017:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1049:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1060:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1045:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1045:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1032:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1032:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1021:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1097:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1073:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1073:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1114:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1124:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "783:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "794:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "806:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "814:6:12",
														"type": ""
													}
												],
												"src": "741:396:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1229:240:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1275:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1284:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1292:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1277:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1277:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1277:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1250:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1259:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1246:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1271:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1242:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:32:12"
															},
															"nodeType": "YulIf",
															"src": "1239:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1310:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1336:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1323:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1314:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1382:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1355:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1355:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1397:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1407:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1397:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1421:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1459:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1431:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1421:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1187:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1198:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1210:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1218:6:12",
														"type": ""
													}
												],
												"src": "1142:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1541:186:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1587:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1596:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1604:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1589:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1589:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1589:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1562:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1571:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1554:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:32:12"
															},
															"nodeType": "YulIf",
															"src": "1551:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1622:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1648:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1635:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1626:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1691:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1667:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1667:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1706:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1716:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1706:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1507:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1518:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1530:6:12",
														"type": ""
													}
												],
												"src": "1474:253:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1810:179:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1856:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1865:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1873:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1858:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1858:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1858:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1831:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1840:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1852:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1823:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:32:12"
															},
															"nodeType": "YulIf",
															"src": "1820:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1891:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1910:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1904:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1904:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1895:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1953:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1929:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1929:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1929:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1968:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1978:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1776:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1787:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1799:6:12",
														"type": ""
													}
												],
												"src": "1732:257:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:189:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2135:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2144:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2152:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2137:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2137:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2137:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2110:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2119:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2106:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2106:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:32:12"
															},
															"nodeType": "YulIf",
															"src": "2099:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2170:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2196:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2183:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2174:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2242:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2215:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2215:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2215:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2257:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2267:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2257:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20Upgradeable_$248",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2055:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2066:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2078:6:12",
														"type": ""
													}
												],
												"src": "1994:284:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2367:189:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2413:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2422:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2430:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2415:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2415:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2415:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2388:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2397:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2384:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2384:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:32:12"
															},
															"nodeType": "YulIf",
															"src": "2377:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2448:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2474:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2461:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2452:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2520:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2493:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2493:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2535:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2545:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IFarm_$1804",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2333:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2344:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2356:6:12",
														"type": ""
													}
												],
												"src": "2283:273:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2900:949:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2947:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2956:6:12"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2964:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2949:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2949:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2949:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2921:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2930:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2917:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2917:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2942:3:12",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2913:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2913:33:12"
															},
															"nodeType": "YulIf",
															"src": "2910:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2982:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3008:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2995:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2986:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3054:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3027:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3027:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3069:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3079:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3093:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3136:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3108:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3108:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3097:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3176:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3149:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3149:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3193:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3203:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3193:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3219:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3251:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3262:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3247:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3234:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:32:12"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "3223:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "3302:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3275:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3275:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3275:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3319:17:12",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "3329:7:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3319:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3345:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3377:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3388:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3373:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3373:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3360:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:32:12"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "3349:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "3428:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3401:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3401:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3445:17:12",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "3455:7:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3471:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3503:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3514:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3486:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:33:12"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nodeType": "YulTypedName",
																	"src": "3475:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nodeType": "YulIdentifier",
																		"src": "3555:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3528:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3528:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3528:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3572:17:12",
															"value": {
																"name": "value_4",
																"nodeType": "YulIdentifier",
																"src": "3582:7:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3598:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3630:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3641:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3626:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3626:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3613:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:33:12"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nodeType": "YulTypedName",
																	"src": "3602:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nodeType": "YulIdentifier",
																		"src": "3682:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3655:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3655:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3655:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3699:17:12",
															"value": {
																"name": "value_5",
																"nodeType": "YulIdentifier",
																"src": "3709:7:12"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3699:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3725:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:33:12"
															},
															"variables": [
																{
																	"name": "value_6",
																	"nodeType": "YulTypedName",
																	"src": "3729:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_6",
																		"nodeType": "YulIdentifier",
																		"src": "3809:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3782:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3782:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3782:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:17:12",
															"value": {
																"name": "value_6",
																"nodeType": "YulIdentifier",
																"src": "3836:7:12"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IUniswapV2Factory_$1146t_contract$_IUniswapV2Router02_$1784t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IFarm_$1804",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2818:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2829:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2841:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2849:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2857:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2865:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2873:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2881:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2889:6:12",
														"type": ""
													}
												],
												"src": "2561:1288:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3968:360:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4014:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4023:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4031:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4016:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4016:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4016:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3985:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:32:12"
															},
															"nodeType": "YulIf",
															"src": "3978:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4049:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4091:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4059:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:42:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4110:61:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4167:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4120:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4120:51:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4110:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4180:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4203:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4214:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4199:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4193:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:25:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4184:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4272:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4281:6:12"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4289:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4274:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4274:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4274:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4240:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4251:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4258:10:12",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4247:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4247:22:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4237:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4237:33:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4230:41:12"
															},
															"nodeType": "YulIf",
															"src": "4227:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4307:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4317:5:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3918:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3929:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3941:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3949:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3957:6:12",
														"type": ""
													}
												],
												"src": "3854:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4403:120:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4449:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4458:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4466:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4451:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4451:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4451:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4424:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4433:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4420:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4445:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4416:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4416:32:12"
															},
															"nodeType": "YulIf",
															"src": "4413:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4507:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4494:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4494:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4369:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4380:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4392:6:12",
														"type": ""
													}
												],
												"src": "4333:190:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4609:113:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4655:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4664:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4672:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4657:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4657:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4657:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4630:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4639:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4626:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4626:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4651:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4622:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4622:32:12"
															},
															"nodeType": "YulIf",
															"src": "4619:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4690:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4706:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4700:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4700:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4575:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4586:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4598:6:12",
														"type": ""
													}
												],
												"src": "4528:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4778:208:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4788:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4808:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4802:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4802:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4792:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4830:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4835:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4823:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4877:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4884:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4873:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4873:16:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4895:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4900:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4891:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4891:14:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4907:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4851:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:63:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4851:63:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4923:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4938:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4951:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4959:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4947:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4947:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4968:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4964:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4964:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4943:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4943:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4934:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4934:39:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4975:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4930:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4930:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4923:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4755:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4762:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4770:3:12",
														"type": ""
													}
												],
												"src": "4727:259:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5128:137:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5138:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5158:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5152:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5142:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5200:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5208:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5196:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5196:17:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5215:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5220:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5174:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:53:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5174:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5236:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5247:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5252:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5243:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5243:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5236:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5104:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5109:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5120:3:12",
														"type": ""
													}
												],
												"src": "4991:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5371:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5381:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5393:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5404:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5389:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5389:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5381:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5423:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5438:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5454:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5459:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5450:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5450:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5463:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5446:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5446:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5434:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5434:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5416:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5416:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5340:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5351:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5362:4:12",
														"type": ""
													}
												],
												"src": "5270:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5607:175:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5617:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5629:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5640:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5625:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5617:4:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5652:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5670:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5675:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5666:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5666:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5662:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5662:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5656:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5697:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5712:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5720:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5708:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5708:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5690:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5690:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5744:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5755:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5740:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5740:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5764:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5772:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5760:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5760:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5733:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5733:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5733:43:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5568:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5579:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5587:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5598:4:12",
														"type": ""
													}
												],
												"src": "5478:304:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5916:145:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5926:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5938:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5949:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5934:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5934:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5926:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5968:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5983:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5999:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6004:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5995:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5995:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6008:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5991:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5991:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5979:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5979:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5961:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5961:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5961:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6043:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6048:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6021:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5877:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5888:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5896:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5907:4:12",
														"type": ""
													}
												],
												"src": "5787:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6161:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6171:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6183:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6194:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6179:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6171:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6213:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6238:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6231:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6231:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6224:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6224:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6206:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6206:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6206:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6130:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6141:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6152:4:12",
														"type": ""
													}
												],
												"src": "6066:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6384:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6394:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6406:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6417:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6402:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6402:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6394:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6436:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6451:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6467:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6472:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6463:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6463:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6476:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6459:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6459:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6447:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6447:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6429:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$248__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6353:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6364:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6375:4:12",
														"type": ""
													}
												],
												"src": "6258:228:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6606:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6616:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6628:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6639:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6624:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6616:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6658:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6673:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6689:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6694:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6685:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6685:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6698:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6681:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6681:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6669:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6669:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6651:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6651:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6651:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IFarm_$1804__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6575:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6586:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6597:4:12",
														"type": ""
													}
												],
												"src": "6491:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6840:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6850:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6862:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6873:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6858:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6858:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6850:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6892:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6907:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6923:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6928:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6919:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6919:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6932:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6915:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6915:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6903:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6903:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6885:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6885:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6885:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Factory_$1146__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6809:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6820:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6831:4:12",
														"type": ""
													}
												],
												"src": "6713:229:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7075:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7085:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7097:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7108:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7093:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7093:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7085:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7127:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7142:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7158:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7163:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7154:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7154:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7167:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7150:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7150:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7138:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7138:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7120:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7120:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7120:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1784__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7044:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7055:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7066:4:12",
														"type": ""
													}
												],
												"src": "6947:230:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7303:100:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7320:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7331:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7313:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7313:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7313:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7343:54:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7370:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7382:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7393:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7378:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7378:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7351:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7351:46:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7343:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7272:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7283:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7294:4:12",
														"type": ""
													}
												],
												"src": "7182:221:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7582:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7599:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7610:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7592:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7592:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7592:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7633:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7644:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7629:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7629:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7649:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7672:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7683:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7668:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7668:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7688:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7661:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7661:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7743:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7754:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7739:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7739:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7759:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7732:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7732:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7777:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7789:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7800:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7785:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7785:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7777:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7559:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7573:4:12",
														"type": ""
													}
												],
												"src": "7408:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7989:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8006:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8017:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7999:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7999:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7999:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8040:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8051:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8036:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8036:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8056:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8029:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8029:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8029:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8079:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8090:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8075:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8075:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8095:34:12",
																		"type": "",
																		"value": "executor: caller is not the exec"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8068:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8068:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8068:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8150:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8161:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8146:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8146:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8166:6:12",
																		"type": "",
																		"value": "utor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8139:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8139:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8139:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8182:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8194:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8205:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8190:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8190:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8182:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7966:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7980:4:12",
														"type": ""
													}
												],
												"src": "7815:400:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8394:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8411:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8422:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8404:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8404:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8445:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8456:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8441:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8441:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8461:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8434:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8434:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8434:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8484:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8495:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8480:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8500:34:12",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8473:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8473:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8555:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8566:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8551:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8551:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8571:8:12",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8544:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8544:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8544:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8589:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8601:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8612:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8597:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8597:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8589:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8371:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8385:4:12",
														"type": ""
													}
												],
												"src": "8220:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8801:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8818:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8829:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8811:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8811:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8811:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8852:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8863:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8848:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8848:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8868:2:12",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8841:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8841:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8841:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8891:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8902:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8887:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8887:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8907:34:12",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8880:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8880:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8880:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8962:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8973:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8958:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8958:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8978:16:12",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8951:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8951:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8951:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9004:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9016:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9027:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9012:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9012:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9004:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8778:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8792:4:12",
														"type": ""
													}
												],
												"src": "8627:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9216:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9233:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9244:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9226:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9226:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9226:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9267:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9278:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9263:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9263:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9283:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9256:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9256:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9256:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9306:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9317:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9302:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9302:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9322:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9295:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9295:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9295:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9366:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9378:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9389:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9374:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9374:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9366:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9193:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9207:4:12",
														"type": ""
													}
												],
												"src": "9042:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9577:179:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9594:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9605:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9587:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9587:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9587:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9628:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9639:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9624:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9624:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9644:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9617:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9617:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9617:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9667:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9678:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9663:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9663:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9683:31:12",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9656:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9656:59:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9656:59:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9724:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9736:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9747:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9732:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9732:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9724:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9554:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9568:4:12",
														"type": ""
													}
												],
												"src": "9403:353:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9935:232:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9952:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9963:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9945:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9945:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9945:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9986:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9997:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9982:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9982:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10002:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9975:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9975:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10025:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10036:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10021:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10021:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10041:34:12",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10014:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10014:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10014:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10096:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10107:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10092:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10092:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10112:12:12",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10085:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10085:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10085:40:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10134:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10146:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10157:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10142:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10142:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10134:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9912:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9926:4:12",
														"type": ""
													}
												],
												"src": "9761:406:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10273:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10283:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10295:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10306:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10291:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10291:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10283:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10325:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10336:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10318:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10318:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10318:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10242:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10253:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10264:4:12",
														"type": ""
													}
												],
												"src": "10172:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10557:257:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10574:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10585:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10567:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10567:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10567:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10612:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10623:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10608:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10608:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10628:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10601:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10601:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10601:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10655:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10666:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10651:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10651:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "10675:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10691:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10696:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10687:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10687:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10700:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10683:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10683:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10671:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10671:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10644:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10644:60:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10644:60:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10724:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10735:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10720:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10720:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10740:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10713:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10713:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10753:55:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10780:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10792:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10803:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10788:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10788:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10761:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10761:47:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10753:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10502:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10513:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10521:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10529:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10537:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10548:4:12",
														"type": ""
													}
												],
												"src": "10354:460:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10970:178:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10980:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10992:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11003:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10988:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10988:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10980:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11022:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11033:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11015:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11015:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11015:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11060:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11071:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11056:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11056:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11076:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11049:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11049:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11049:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11103:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11114:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11099:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11099:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "11133:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11126:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11126:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11119:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11119:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11092:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11092:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11092:50:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10923:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10934:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10942:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10950:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10961:4:12",
														"type": ""
													}
												],
												"src": "10819:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11201:80:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11228:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11230:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11230:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11230:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11217:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11224:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11220:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11220:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11214:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11214:13:12"
															},
															"nodeType": "YulIf",
															"src": "11211:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11259:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11270:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11273:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11266:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11266:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11259:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11184:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11187:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11193:3:12",
														"type": ""
													}
												],
												"src": "11153:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11332:171:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11363:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "11384:1:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11391:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11396:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11387:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11387:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11377:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11377:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11377:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11428:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11431:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11421:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11421:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11421:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "11456:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11459:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11449:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11449:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11449:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11352:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11345:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11345:9:12"
															},
															"nodeType": "YulIf",
															"src": "11342:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11483:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11492:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11495:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11488:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11488:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11483:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11317:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11320:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11326:1:12",
														"type": ""
													}
												],
												"src": "11286:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11560:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11619:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11621:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11621:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11621:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11591:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11584:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11584:9:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11577:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11577:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11599:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11610:1:12",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11606:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11606:6:12"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11614:1:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11602:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11602:14:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11596:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11596:21:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11573:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11573:45:12"
															},
															"nodeType": "YulIf",
															"src": "11570:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11650:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11665:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11668:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11661:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11661:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11650:7:12"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11539:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11542:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11548:7:12",
														"type": ""
													}
												],
												"src": "11508:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11730:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11752:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11754:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11754:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11754:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11746:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11749:1:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11743:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11743:8:12"
															},
															"nodeType": "YulIf",
															"src": "11740:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11783:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11795:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11798:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11791:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11791:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11783:4:12"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11712:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11715:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11721:4:12",
														"type": ""
													}
												],
												"src": "11681:125:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11864:205:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11874:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11883:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11878:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11943:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11968:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11973:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11964:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11964:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11987:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11992:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11983:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11983:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11977:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11977:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11957:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11957:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11957:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11904:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11907:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11901:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11901:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11915:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11917:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11926:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11929:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11922:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11922:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11917:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11897:3:12",
																"statements": []
															},
															"src": "11893:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12032:31:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12045:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12050:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12041:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12041:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12059:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12034:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12034:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12034:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12021:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12024:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12018:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12018:13:12"
															},
															"nodeType": "YulIf",
															"src": "12015:2:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11852:6:12",
														"type": ""
													}
												],
												"src": "11811:258:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12106:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12123:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12130:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12135:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12126:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12126:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12116:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12116:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12116:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12163:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12166:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12156:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12156:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12156:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12187:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12190:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12180:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12180:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12180:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12074:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12253:86:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12317:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12326:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12329:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12319:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12319:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12319:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12276:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12287:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12302:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12307:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "12298:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12298:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12311:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "12294:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12294:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12283:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12283:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12273:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12273:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12266:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12266:50:12"
															},
															"nodeType": "YulIf",
															"src": "12263:2:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12242:5:12",
														"type": ""
													}
												],
												"src": "12206:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12388:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12442:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12451:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12454:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12444:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12444:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12444:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12411:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "12432:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "12425:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12425:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12418:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12418:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12408:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12408:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12401:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12401:40:12"
															},
															"nodeType": "YulIf",
															"src": "12398:2:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12377:5:12",
														"type": ""
													}
												],
												"src": "12344:120:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20Upgradeable_$248(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IFarm_$1804(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IUniswapV2Factory_$1146t_contract$_IUniswapV2Router02_$1784t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IFarm_$1804(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_t_address(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_t_address(value_4)\n        value4 := value_4\n        let value_5 := calldataload(add(headStart, 160))\n        validator_revert_t_address(value_5)\n        value5 := value_5\n        let value_6 := calldataload(add(headStart, 192))\n        validator_revert_t_address(value_6)\n        value6 := value_6\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_uint112_fromMemory(headStart)\n        value1 := abi_decode_t_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(value2, value2) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$248__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IFarm_$1804__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Factory_$1146__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1784__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"executor: caller is not the exec\")\n        mstore(add(headStart, 96), \"utor\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_t_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102275760003560e01c80638da5cb5b11610130578063bd0b1f44116100b8578063db7f521a1161007c578063db7f521a146103f8578063ec1f1f691461040b578063f106845414610413578063f2fde38b1461041b578063f6d7eade1461042e57610227565b8063bd0b1f44146103ba578063c83dd231146103c2578063d10c06a2146103ca578063d477f05f146103d2578063d4f26c51146103e557610227565b8063a36a7526116100ff578063a36a752614610371578063aaf5bfc314610384578063aaf5eb6814610397578063af5518c41461039f578063b8bb97a1146103b257610227565b80638da5cb5b1461034657806391cca3db1461034e578063930ed033146103565780639da5b0d51461036957610227565b80633e413bee116101b35780634ecaac41116101825780634ecaac411461031357806355c746d11461031b57806358de5de81461032e578063715018a6146103365780637e47961c1461033e57610227565b80633e413bee146102dd5780634591db50146102e557806348c7e528146102f85780634ae6a0271461030b57610227565b80632c535a52116101fa5780632c535a52146102905780633011d3d51461029857806335876476146102ad57806336e9332d146102c25780633c850e1e146102ca57610227565b806316d039931461022c5780631b0d8aab1461024a5780631e1bff3f1461026a57806327c42a501461027d575b600080fd5b610234610436565b6040516102419190611c1d565b60405180910390f35b61025d61025836600461196c565b61043c565b6040516102419190611a2b565b61025d6102783660046117ee565b610494565b61025d61028b36600461196c565b610504565b61023461054e565b6102a0610554565b60405161024191906119e4565b6102c06102bb366004611889565b610563565b005b6102a06106a2565b61025d6102d836600461196c565b6106b1565b6102a06106fb565b61025d6102f3366004611851565b61070a565b61025d6103063660046117b6565b61076c565b610234610781565b6102a0610787565b61025d610329366004611851565b610796565b61025d6107f8565b6102c0610808565b6102a0610853565b6102a0610862565b6102a0610871565b61025d610364366004611826565b610880565b61025d6108de565b61025d61037f3660046117b6565b6108ee565b61025d6103923660046117b6565b610954565b6102346109ba565b61025d6103ad36600461196c565b6109c0565b6102a0610a0a565b610234610a19565b6102a0610a1f565b61025d610a2e565b61025d6103e03660046117b6565b610c63565b61025d6103f33660046117b6565b610cc9565b61025d6104063660046117b6565b610d2f565b6102a0610d95565b610234610da4565b6102c06104293660046117b6565b610daa565b6102a0610e1b565b60725481565b6000610446610e2a565b6001600160a01b0316610457610862565b6001600160a01b0316146104865760405162461bcd60e51b815260040161047d90611b67565b60405180910390fd5b50607381905560015b919050565b600061049e610e2a565b6001600160a01b03166104af610862565b6001600160a01b0316146104d55760405162461bcd60e51b815260040161047d90611b67565b506001600160a01b0382166000908152606560205260409020805482151560ff19909116179055600192915050565b600061050e610e2a565b6001600160a01b031661051f610862565b6001600160a01b0316146105455760405162461bcd60e51b815260040161047d90611b67565b50606e55600190565b606f5481565b6066546001600160a01b031681565b600054610100900460ff168061057c575060005460ff16155b6105985760405162461bcd60e51b815260040161047d90611b19565b600054610100900460ff161580156105c3576000805460ff1961ff0019909116610100171660011790555b6105cb610e2e565b606c80546001600160a01b03199081166001600160a01b038a811691909117909255606d805482168b8416179055606680548216898416179055606880548216878416179055606980548216868416179055606a8054339083168117909155606b805483169091179055611388606e556109c4606f8190556070556127106071556103e860725560748054600160a01b60ff60a01b1990911617600161ff0160a01b031916858416179055606780549091169187169190911790558015610698576000805461ff00191690555b5050505050505050565b6074546001600160a01b031681565b60006106bb610e2a565b6001600160a01b03166106cc610862565b6001600160a01b0316146106f25760405162461bcd60e51b815260040161047d90611b67565b50607055600190565b6067546001600160a01b031681565b6000610714610e2a565b6001600160a01b0316610725610862565b6001600160a01b03161461074b5760405162461bcd60e51b815260040161047d90611b67565b5060748054821515600160a01b0260ff60a01b199091161790556001919050565b60656020526000908152604090205460ff1681565b60705481565b6068546001600160a01b031681565b60006107a0610e2a565b6001600160a01b03166107b1610862565b6001600160a01b0316146107d75760405162461bcd60e51b815260040161047d90611b67565b5060748054821515600160a81b0260ff60a81b199091161790556001919050565b607454600160a81b900460ff1681565b610810610e2a565b6001600160a01b0316610821610862565b6001600160a01b0316146108475760405162461bcd60e51b815260040161047d90611b67565b6108516000610eb2565b565b6075546001600160a01b031681565b6033546001600160a01b031690565b606b546001600160a01b031681565b600061088a610e2a565b6001600160a01b031661089b610862565b6001600160a01b0316146108c15760405162461bcd60e51b815260040161047d90611b67565b6108d56001600160a01b0384163384610f04565b50600192915050565b607454600160a01b900460ff1681565b60006108f8610e2a565b6001600160a01b0316610909610862565b6001600160a01b03161461092f5760405162461bcd60e51b815260040161047d90611b67565b50606a80546001600160a01b0383166001600160a01b03199091161790556001919050565b600061095e610e2a565b6001600160a01b031661096f610862565b6001600160a01b0316146109955760405162461bcd60e51b815260040161047d90611b67565b50606780546001600160a01b0383166001600160a01b03199091161790556001919050565b60715481565b60006109ca610e2a565b6001600160a01b03166109db610862565b6001600160a01b031614610a015760405162461bcd60e51b815260040161047d90611b67565b50606f55600190565b6069546001600160a01b031681565b606e5481565b606d546001600160a01b031681565b3360009081526065602052604081205460ff16610a5d5760405162461bcd60e51b815260040161047d90611a8f565b6066546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a8e9030906004016119e4565b60206040518083038186803b158015610aa657600080fd5b505afa158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade9190611984565b90506000610b03607154610afd606e5485610f5f90919063ffffffff16565b90610f72565b90506000610b22607154610afd606f5486610f5f90919063ffffffff16565b90506000610b3a82610b348686610f7e565b90610f7e565b90506000610b4784610f8a565b606954606854919250610b67916001600160a01b03908116911683610f04565b606a54606654610b84916001600160a01b03918216911685610f04565b606b54606654610ba1916001600160a01b03918216911684610f04565b607454600160a01b900460ff1615610bbb57610bbb611219565b607454600160a81b900460ff1615610c5757607560009054906101000a90046001600160a01b03166001600160a01b031663796c7be76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c1d57600080fd5b505af1158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c55919061186d565b505b60019550505050505090565b6000610c6d610e2a565b6001600160a01b0316610c7e610862565b6001600160a01b031614610ca45760405162461bcd60e51b815260040161047d90611b67565b50606b80546001600160a01b0383166001600160a01b03199091161790556001919050565b6000610cd3610e2a565b6001600160a01b0316610ce4610862565b6001600160a01b031614610d0a5760405162461bcd60e51b815260040161047d90611b67565b50607480546001600160a01b0383166001600160a01b03199091161790556001919050565b6000610d39610e2a565b6001600160a01b0316610d4a610862565b6001600160a01b031614610d705760405162461bcd60e51b815260040161047d90611b67565b50607580546001600160a01b0383166001600160a01b03199091161790556001919050565b606a546001600160a01b031681565b60735481565b610db2610e2a565b6001600160a01b0316610dc3610862565b6001600160a01b031614610de95760405162461bcd60e51b815260040161047d90611b67565b6001600160a01b038116610e0f5760405162461bcd60e51b815260040161047d90611a49565b610e1881610eb2565b50565b606c546001600160a01b031681565b3390565b600054610100900460ff1680610e47575060005460ff16155b610e635760405162461bcd60e51b815260040161047d90611b19565b600054610100900460ff16158015610e8e576000805460ff1961ff0019909116610100171660011790555b610e966114c8565b610e9e61153b565b8015610e18576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f5a8363a9059cbb60e01b8484604051602401610f23929190611a12565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526115ab565b505050565b6000610f6b8284611cad565b9392505050565b6000610f6b8284611c8d565b6000610f6b8284611ccc565b606d5460685460665460405163e6a4390560e01b815260009384936001600160a01b039182169363e6a4390593610fcb9392831692909116906004016119f8565b60206040518083038186803b158015610fe357600080fd5b505afa158015610ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101b91906117d2565b606654909150611035906001600160a01b03168285610f04565b600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561107157600080fd5b505afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a9919061191e565b506001600160701b031691506001600160701b031691506000836001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156110fb57600080fd5b505afa15801561110f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113391906117d2565b60665490915060009081906001600160a01b0380851691161461115757838561115a565b84845b91509150600061116b89848461163a565b60665490915060009081906001600160a01b0387811691161461119057826000611194565b6000835b6040805160008152602081019182905263022c0d9f60e01b90915291935091506001600160a01b038a169063022c0d9f906111d89085908590309060248101611c26565b600060405180830381600087803b1580156111f257600080fd5b505af1158015611206573d6000803e3d6000fd5b50949d9c50505050505050505050505050565b606d5460675460665460405163e6a4390560e01b81526000936001600160a01b039081169363e6a4390593611256939183169216906004016119f8565b60206040518083038186803b15801561126e57600080fd5b505afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a691906117d2565b6066546040516370a0823160e01b81529192506000916001600160a01b03909116906370a08231906112dc9085906004016119e4565b60206040518083038186803b1580156112f457600080fd5b505afa158015611308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132c9190611984565b6067546040516370a0823160e01b81529192506000916001600160a01b03909116906370a08231906113629086906004016119e4565b60206040518083038186803b15801561137a57600080fd5b505afa15801561138e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b29190611984565b9050670de0b6b3a764000060006113cd84610afd8585610f5f565b9050600080670de0b6b3a7640000831115611428576113fe655af3107a4000610afd85670de0b6b3a7640000610f7e565b90506072548111156114135760009150611423565b6072546114209082610f7e565b91505b611457565b611444655af3107a4000610afd85670de0b6b3a7640000611ccc565b6072549091506114549082611688565b91505b60745460735460405163236535f560e11b81526001600160a01b03909216916346ca6bea9161148d918690600190600401611c5d565b600060405180830381600087803b1580156114a757600080fd5b505af11580156114bb573d6000803e3d6000fd5b5050505050505050505050565b600054610100900460ff16806114e1575060005460ff16155b6114fd5760405162461bcd60e51b815260040161047d90611b19565b600054610100900460ff16158015610e9e576000805460ff1961ff0019909116610100171660011790558015610e18576000805461ff001916905550565b600054610100900460ff1680611554575060005460ff16155b6115705760405162461bcd60e51b815260040161047d90611b19565b600054610100900460ff1615801561159b576000805460ff1961ff0019909116610100171660011790555b610e9e6115a6610e2a565b610eb2565b6000611600826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116949092919063ffffffff16565b805190915015610f5a578080602001905181019061161e919061186d565b610f5a5760405162461bcd60e51b815260040161047d90611bd3565b600080611649856103e5610f5f565b905060006116578285610f5f565b905060006116718361166b886103e8610f5f565b90611688565b905061167d8183611c8d565b979650505050505050565b6000610f6b8284611c75565b60606116a384846000856116ab565b949350505050565b6060824710156116cd5760405162461bcd60e51b815260040161047d90611ad3565b6116d685611760565b6116f25760405162461bcd60e51b815260040161047d90611b9c565b600080866001600160a01b0316858760405161170e91906119c8565b60006040518083038185875af1925050503d806000811461174b576040519150601f19603f3d011682016040523d82523d6000602084013e611750565b606091505b509150915061167d828286611766565b3b151590565b60608315611775575081610f6b565b8251156117855782518084602001fd5b8160405162461bcd60e51b815260040161047d9190611a36565b80516001600160701b038116811461048f57600080fd5b6000602082840312156117c7578081fd5b8135610f6b81611d29565b6000602082840312156117e3578081fd5b8151610f6b81611d29565b60008060408385031215611800578081fd5b823561180b81611d29565b9150602083013561181b81611d3e565b809150509250929050565b60008060408385031215611838578182fd5b823561184381611d29565b946020939093013593505050565b600060208284031215611862578081fd5b8135610f6b81611d3e565b60006020828403121561187e578081fd5b8151610f6b81611d3e565b600080600080600080600060e0888a0312156118a3578283fd5b87356118ae81611d29565b965060208801356118be81611d29565b955060408801356118ce81611d29565b945060608801356118de81611d29565b935060808801356118ee81611d29565b925060a08801356118fe81611d29565b915060c088013561190e81611d29565b8091505092959891949750929550565b600080600060608486031215611932578283fd5b61193b8461179f565b92506119496020850161179f565b9150604084015163ffffffff81168114611961578182fd5b809150509250925092565b60006020828403121561197d578081fd5b5035919050565b600060208284031215611995578081fd5b5051919050565b600081518084526119b4816020860160208601611ce3565b601f01601f19169290920160200192915050565b600082516119da818460208701611ce3565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b600060208252610f6b602083018461199c565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526024908201527f6578656375746f723a2063616c6c6572206973206e6f742074686520657865636040820152633aba37b960e11b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b600085825284602083015260018060a01b038416604083015260806060830152611c53608083018461199c565b9695505050505050565b92835260208301919091521515604082015260600190565b60008219821115611c8857611c88611d13565b500190565b600082611ca857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611cc757611cc7611d13565b500290565b600082821015611cde57611cde611d13565b500390565b60005b83811015611cfe578181015183820152602001611ce6565b83811115611d0d576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610e1857600080fd5b8015158114610e1857600080fdfea2646970667358221220fe4f0876aeeed841450feaf276246c4ac1fd36740e07862d6a9a7a4c89fb308264736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xBD0B1F44 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDB7F521A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDB7F521A EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xF1068454 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xF6D7EADE EQ PUSH2 0x42E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xBD0B1F44 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xC83DD231 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xD10C06A2 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xD477F05F EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xD4F26C51 EQ PUSH2 0x3E5 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xA36A7526 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xAAF5BFC3 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xAF5518C4 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xB8BB97A1 EQ PUSH2 0x3B2 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x91CCA3DB EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x930ED033 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x9DA5B0D5 EQ PUSH2 0x369 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x4ECAAC41 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4ECAAC41 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x55C746D1 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x58DE5DE8 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x7E47961C EQ PUSH2 0x33E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x4591DB50 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x48C7E528 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x4AE6A027 EQ PUSH2 0x30B JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x2C535A52 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x2C535A52 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x3011D3D5 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x35876476 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x36E9332D EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x3C850E1E EQ PUSH2 0x2CA JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x16D03993 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x1B0D8AAB EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x27C42A50 EQ PUSH2 0x27D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x25D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x19E4 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x25D PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST PUSH2 0x25D PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x234 PUSH2 0x781 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x853 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x25D PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x25D PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x234 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x25D PUSH2 0xA2E JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0x25D PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x234 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x72 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x457 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x73 DUP2 SWAP1 SSTORE PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4AF PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x51F PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x6E SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x57C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x5CB PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x6C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x6D DUP1 SLOAD DUP3 AND DUP12 DUP5 AND OR SWAP1 SSTORE PUSH1 0x66 DUP1 SLOAD DUP3 AND DUP10 DUP5 AND OR SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x69 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0x6A DUP1 SLOAD CALLER SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6B DUP1 SLOAD DUP4 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1388 PUSH1 0x6E SSTORE PUSH2 0x9C4 PUSH1 0x6F DUP2 SWAP1 SSTORE PUSH1 0x70 SSTORE PUSH2 0x2710 PUSH1 0x71 SSTORE PUSH2 0x3E8 PUSH1 0x72 SSTORE PUSH1 0x74 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH2 0xFF01 PUSH1 0xA0 SHL SUB NOT AND DUP6 DUP5 AND OR SWAP1 SSTORE PUSH1 0x67 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BB PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6CC PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x70 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x725 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A0 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B1 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x810 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x821 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x851 PUSH1 0x0 PUSH2 0xEB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x75 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88A PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x89B PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x8D5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0xF04 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F8 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x909 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x92F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x6A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95E PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x96F PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CA PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9DB PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x6F SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA8E SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADE SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB03 PUSH1 0x71 SLOAD PUSH2 0xAFD PUSH1 0x6E SLOAD DUP6 PUSH2 0xF5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xF72 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB22 PUSH1 0x71 SLOAD PUSH2 0xAFD PUSH1 0x6F SLOAD DUP7 PUSH2 0xF5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB3A DUP3 PUSH2 0xB34 DUP7 DUP7 PUSH2 0xF7E JUMP JUMPDEST SWAP1 PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB47 DUP5 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x68 SLOAD SWAP2 SWAP3 POP PUSH2 0xB67 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x66 SLOAD PUSH2 0xB84 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP6 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x66 SLOAD PUSH2 0xBA1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBB PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC57 JUMPI PUSH1 0x75 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x796C7BE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC55 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6D PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC7E PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x6B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD3 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE4 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD39 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD4A PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x75 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDB2 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDC3 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH2 0xE18 DUP2 PUSH2 0xEB2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xE47 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xE96 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0xE9E PUSH2 0x153B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF5A DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF23 SWAP3 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x15AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6B DUP3 DUP5 PUSH2 0x1CAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6B DUP3 DUP5 PUSH2 0x1C8D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6B DUP3 DUP5 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x68 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0xFCB SWAP4 SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101B SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH2 0x1035 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP6 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1085 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A9 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1133 SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND EQ PUSH2 0x1157 JUMPI DUP4 DUP6 PUSH2 0x115A JUMP JUMPDEST DUP5 DUP5 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x116B DUP10 DUP5 DUP5 PUSH2 0x163A JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x1190 JUMPI DUP3 PUSH1 0x0 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x11D8 SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1206 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP5 SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x67 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0x1256 SWAP4 SWAP2 DUP4 AND SWAP3 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1282 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A6 SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x12DC SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1308 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x132C SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1362 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x137A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x138E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B2 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 PUSH2 0x13CD DUP5 PUSH2 0xAFD DUP6 DUP6 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 GT ISZERO PUSH2 0x1428 JUMPI PUSH2 0x13FE PUSH6 0x5AF3107A4000 PUSH2 0xAFD DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH1 0x72 SLOAD DUP2 GT ISZERO PUSH2 0x1413 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x1420 SWAP1 DUP3 PUSH2 0xF7E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x1457 JUMP JUMPDEST PUSH2 0x1444 PUSH6 0x5AF3107A4000 PUSH2 0xAFD DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x72 SLOAD SWAP1 SWAP2 POP PUSH2 0x1454 SWAP1 DUP3 PUSH2 0x1688 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x73 SLOAD PUSH1 0x40 MLOAD PUSH4 0x236535F5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x46CA6BEA SWAP2 PUSH2 0x148D SWAP2 DUP7 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x14E1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1554 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xE9E PUSH2 0x15A6 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1600 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1694 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF5A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x161E SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1649 DUP6 PUSH2 0x3E5 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1657 DUP3 DUP6 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1671 DUP4 PUSH2 0x166B DUP9 PUSH2 0x3E8 PUSH2 0xF5F JUMP JUMPDEST SWAP1 PUSH2 0x1688 JUMP JUMPDEST SWAP1 POP PUSH2 0x167D DUP2 DUP4 PUSH2 0x1C8D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6B DUP3 DUP5 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x16A3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x16AB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x16CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x16D6 DUP6 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x16F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x170E SWAP2 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x174B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x167D DUP3 DUP3 DUP7 PUSH2 0x1766 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1775 JUMPI POP DUP2 PUSH2 0xF6B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1785 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF6B DUP2 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF6B DUP2 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1800 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x180B DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x181B DUP2 PUSH2 0x1D3E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1838 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1843 DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1862 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF6B DUP2 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF6B DUP2 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x18A3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x18AE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x18BE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x18CE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH2 0x18DE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x18EE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x18FE DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH2 0x190E DUP2 PUSH2 0x1D29 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1932 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x193B DUP5 PUSH2 0x179F JUMP JUMPDEST SWAP3 POP PUSH2 0x1949 PUSH1 0x20 DUP6 ADD PUSH2 0x179F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1961 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1995 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19B4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x19DA DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1CE3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xF6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578656375746F723A2063616C6C6572206973206E6F74207468652065786563 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3ABA37B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C53 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x199C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C88 JUMPI PUSH2 0x1C88 PUSH2 0x1D13 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CC7 JUMPI PUSH2 0x1CC7 PUSH2 0x1D13 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1CDE JUMPI PUSH2 0x1CDE PUSH2 0x1D13 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CFE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CE6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D0D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x4F ADDMOD PUSH23 0xAEEED841450FEAF276246C4AC1FD36740E07862D6A9A7A 0x4C DUP10 0xFB ADDRESS DUP3 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "909:6651:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1525:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7159:112;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2591:177::-;;;;;;:::i;:::-;;:::i;6333:132::-;;;;;;:::i;:::-;;:::i;1429:26::-;;;:::i;1132:28::-;;;:::i;:::-;;;;;;;:::i;1701:884::-;;;;;;:::i;:::-;;:::i;:::-;;1580:17;;;:::i;6605:130::-;;;;;;:::i;:::-;;:::i;1166:29::-;;;:::i;6741:133::-;;;;;;:::i;:::-;;:::i;1086:40::-;;;;;;:::i;:::-;;:::i;1461:27::-;;;:::i;1201:28::-;;;:::i;6880:133::-;;;;;;:::i;:::-;;:::i;1636:26::-;;;:::i;1934:101:0:-;;;:::i;1669:25:11:-;;;:::i;1302:85:0:-;;;:::i;1293:18:11:-;;;:::i;5862:215::-;;;;;;:::i;:::-;;:::i;1604:26::-;;;:::i;6083:118::-;;;;;;:::i;:::-;;:::i;7277:161::-;;;;;;:::i;:::-;;:::i;1494:24::-;;;:::i;6471:128::-;;;;;;:::i;:::-;;:::i;1235:29::-;;;:::i;1395:28::-;;;:::i;1356:32::-;;;:::i;4244:698::-;;;:::i;6207:120::-;;;;;;:::i;:::-;;:::i;7444:114::-;;;;;;:::i;:::-;;:::i;7019:134::-;;;;;;:::i;:::-;;:::i;1270:17::-;;;:::i;1555:18::-;;;:::i;2184:198:0:-;;;;;;:::i;:::-;;:::i;1318:32:11:-;;;:::i;1525:24::-;;;;:::o;7159:112::-;7217:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;7233:3:11::1;:10:::0;;;7260:4:::1;1584:1:0;7159:112:11::0;;;:::o;2591:177::-;2694:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2714:18:11;::::1;;::::0;;;:8:::1;:18;::::0;;;;:26;;;::::1;;-1:-1:-1::0;;2714:26:11;;::::1;;::::0;;;2591:177;;;;:::o;6333:132::-;6401:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6417:13:11::1;:20:::0;6454:4:::1;::::0;6333:132::o;1429:26::-;;;;:::o;1132:28::-;;;-1:-1:-1;;;;;1132:28:11;;:::o;1701:884::-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;2067:16:11::1;:14;:16::i;:::-;2137:6;:16:::0;;-1:-1:-1;;;;;;2137:16:11;;::::1;-1:-1:-1::0;;;;;2137:16:11;;::::1;::::0;;;::::1;::::0;;;2163:7:::1;:18:::0;;;::::1;::::0;;::::1;;::::0;;2191:3:::1;:10:::0;;;::::1;::::0;;::::1;;::::0;;2211:3:::1;:10:::0;;;::::1;::::0;;::::1;;::::0;;2231:4:::1;:12:::0;;;::::1;::::0;;::::1;;::::0;;2253:2:::1;:15:::0;;2258:10:::1;2253:15:::0;;::::1;::::0;::::1;::::0;;;2278:3:::1;:16:::0;;;::::1;::::0;;::::1;::::0;;2320:4:::1;2304:13;:20:::0;2348:4:::1;2334:11;:18:::0;;;2362:12:::1;:19:::0;2403:5:::1;2391:9;:17:::0;2430:4:::1;2418:9;:16:::0;2444:14:::1;:21:::0;;-1:-1:-1;;;;;;;2444:21:11;;::::1;;-1:-1:-1::0;;;;;;2507:12:11;;;::::1;;::::0;;2529:4:::1;:12:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;797:66:1;;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;797:66;1701:884:11;;;;;;;;:::o;1580:17::-;;;-1:-1:-1;;;;;1580:17:11;;:::o;6605:130::-;6672:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6688:12:11::1;:19:::0;6724:4:::1;::::0;6605:130::o;1166:29::-;;;-1:-1:-1;;;;;1166:29:11;;:::o;6741:133::-;6808:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6824:14:11::1;:22:::0;;;::::1;;-1:-1:-1::0;;;6824:22:11::1;-1:-1:-1::0;;;;6824:22:11;;::::1;;::::0;;-1:-1:-1;6741:133:11;;;:::o;1086:40::-;;;;;;;;;;;;;;;:::o;1461:27::-;;;;:::o;1201:28::-;;;-1:-1:-1;;;;;1201:28:11;;:::o;6880:133::-;6947:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6963:14:11::1;:22:::0;;;::::1;;-1:-1:-1::0;;;6963:22:11::1;-1:-1:-1::0;;;;6963:22:11;;::::1;;::::0;;-1:-1:-1;6880:133:11;;;:::o;1636:26::-;;;-1:-1:-1;;;1636:26:11;;;;;:::o;1934:101:0:-;1525:12;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;1998:30:::1;2025:1;1998:18;:30::i;:::-;1934:101::o:0;1669:25:11:-;;;-1:-1:-1;;;;;1669:25:11;;:::o;1302:85:0:-;1374:6;;-1:-1:-1;;;;;1374:6:0;1302:85;:::o;1293:18:11:-;;;-1:-1:-1;;;;;1293:18:11;;:::o;5862:215::-;5971:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;5991:58:11::1;-1:-1:-1::0;;;;;5991:40:11;::::1;6032:10;6044:4:::0;5991:40:::1;:58::i;:::-;-1:-1:-1::0;6066:4:11::1;5862:215:::0;;;;:::o;1604:26::-;;;-1:-1:-1;;;1604:26:11;;;;;:::o;6083:118::-;6144:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6160:2:11::1;:13:::0;;-1:-1:-1;;;;;6160:13:11;::::1;-1:-1:-1::0;;;;;;6160:13:11;;::::1;;::::0;;;6083:118;;;:::o;7277:161::-;7378:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;7398:4:11::1;:12:::0;;-1:-1:-1;;;;;7398:12:11;::::1;-1:-1:-1::0;;;;;;7398:12:11;;::::1;;::::0;;;7277:161;;;:::o;1494:24::-;;;;:::o;6471:128::-;6537:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6553:11:11::1;:18:::0;6588:4:::1;::::0;6471:128::o;1235:29::-;;;-1:-1:-1;;;;;1235:29:11;;:::o;1395:28::-;;;;:::o;1356:32::-;;;-1:-1:-1;;;;;1356:32:11;;:::o;4244:698::-;2825:10;4301:4;2816:20;;;:8;:20;;;;;;;;2808:69;;;;-1:-1:-1;;;2808:69:11;;;;;;;:::i;:::-;4340:3:::1;::::0;:28:::1;::::0;-1:-1:-1;;;4340:28:11;;4317:20:::1;::::0;-1:-1:-1;;;;;4340:3:11::1;::::0;:13:::1;::::0;:28:::1;::::0;4362:4:::1;::::0;4340:28:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4317:51;;4378:14;4395:46;4431:9;;4395:31;4412:13;;4395:12;:16;;:31;;;;:::i;:::-;:35:::0;::::1;:46::i;:::-;4378:63;;4451:12;4466:44;4500:9;;4466:29;4483:11;;4466:12;:16;;:29;;;;:::i;:44::-;4451:59:::0;-1:-1:-1;4520:13:11::1;4536:34;4451:59:::0;4536:24:::1;:12:::0;4553:6;4536:16:::1;:24::i;:::-;:28:::0;::::1;:34::i;:::-;4520:50;;4581:14;4598;4605:6;4598;:14::i;:::-;4647:4;::::0;4622:3:::1;::::0;4581:31;;-1:-1:-1;4622:39:11::1;::::0;-1:-1:-1;;;;;4622:3:11;;::::1;::::0;4647:4:::1;4581:31:::0;4622:16:::1;:39::i;:::-;4696:2;::::0;4671:3:::1;::::0;:35:::1;::::0;-1:-1:-1;;;;;4671:3:11;;::::1;::::0;4696:2:::1;4701:4:::0;4671:16:::1;:35::i;:::-;4741:3;::::0;4716::::1;::::0;:37:::1;::::0;-1:-1:-1;;;;;4716:3:11;;::::1;::::0;4741::::1;4747:5:::0;4716:16:::1;:37::i;:::-;4768:14;::::0;-1:-1:-1;;;4768:14:11;::::1;;;4764:57;;;4798:12;:10;:12::i;:::-;4835:14;::::0;-1:-1:-1;;;4835:14:11;::::1;;;4831:83;;;4877:10;;;;;;;;;-1:-1:-1::0;;;;;4877:10:11::1;-1:-1:-1::0;;;;;4865:36:11::1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4831:83;4931:4;4924:11;;;;;;;4244:698:::0;:::o;6207:120::-;6269:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6285:3:11::1;:14:::0;;-1:-1:-1;;;;;6285:14:11;::::1;-1:-1:-1::0;;;;;;6285:14:11;;::::1;;::::0;;;6207:120;;;:::o;7444:114::-;7502:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;7518:4:11::1;:12:::0;;-1:-1:-1;;;;;7518:12:11;::::1;-1:-1:-1::0;;;;;;7518:12:11;;::::1;;::::0;;;7444:114;;;:::o;7019:134::-;7088:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;7104:10:11::1;:21:::0;;-1:-1:-1;;;;;7104:21:11;::::1;-1:-1:-1::0;;;;;;7104:21:11;;::::1;;::::0;;;7019:134;;;:::o;1270:17::-;;;-1:-1:-1;;;;;1270:17:11;;:::o;1555:18::-;;;;:::o;2184:198:0:-;1525:12;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2272:22:0;::::1;2264:73;;;;-1:-1:-1::0;;;2264:73:0::1;;;;;;;:::i;:::-;2347:28;2366:8;2347:18;:28::i;:::-;2184:198:::0;:::o;1318:32:11:-;;;-1:-1:-1;;;;;1318:32:11;;:::o;876:96:5:-;955:10;876:96;:::o;988:126:0:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;1045:26:0::1;:24;:26::i;:::-;1081;:24;:26::i;:::-;801:14:1::0;797:66;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;988:126:0;:::o;2536:187::-;2628:6;;;-1:-1:-1;;;;;2644:17:0;;;-1:-1:-1;;;;;;2644:17:0;;;;;;;2676:40;;2628:6;;;2644:17;2628:6;;2676:40;;2609:16;;2676:40;2536:187;;:::o;745:216:3:-;868:86;888:5;918:23;;;943:2;947:5;895:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;895:58:3;;;;;;;;;;;;;;-1:-1:-1;;;;;895:58:3;-1:-1:-1;;;;;;895:58:3;;;;;;;;;;868:19;:86::i;:::-;745:216;;;:::o;3462:96:6:-;3520:7;3546:5;3550:1;3546;:5;:::i;:::-;3539:12;3462:96;-1:-1:-1;;;3462:96:6:o;3847:::-;3905:7;3931:5;3935:1;3931;:5;:::i;3119:96::-;3177:7;3203:5;3207:1;3203;:5;:::i;3296:942:11:-;3393:7;;3417:3;;3431;;3393:43;;-1:-1:-1;;;3393:43:11;;3346:7;;;;-1:-1:-1;;;;;3393:7:11;;;;:15;;:43;;3417:3;;;;3431;;;;3393:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3446:3;;3365:71;;-1:-1:-1;3446:43:11;;-1:-1:-1;;;;;3446:3:11;3365:71;3482:6;3446:16;:43::i;:::-;3500:16;3518;3568:17;-1:-1:-1;;;;;3540:67:11;;:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3499:110;-1:-1:-1;;;;;3499:110:11;;;-1:-1:-1;;;;;3499:110:11;;;3619:14;3651:17;-1:-1:-1;;;;;3636:40:11;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3748:3;;3619:59;;-1:-1:-1;3689:17:11;;;;-1:-1:-1;;;;;3730:22:11;;;3748:3;;3730:22;:92;;3803:8;3813;3730:92;;;3768:8;3778;3730:92;3688:134;;;;3832:17;3852:43;3865:6;3873:9;3884:10;3852:12;:43::i;:::-;3966:3;;3832:63;;-1:-1:-1;3906:18:11;;;;-1:-1:-1;;;;;3948:22:11;;;3966:3;;3948:22;:98;;4024:9;4043:1;3948:98;;;3994:1;3998:9;3948:98;4183:12;;;4193:1;4183:12;;;;;;;;;-1:-1:-1;;;4056:149:11;;;3905:141;;-1:-1:-1;3905:141:11;-1:-1:-1;;;;;;4056:38:11;;;;;:149;;3905:141;;;;4164:4;;4056:149;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4222:9:11;;3296:942;-1:-1:-1;;;;;;;;;;;;;3296:942:11:o;4948:908::-;5011:7;;5035:4;;5050:3;;5011:44;;-1:-1:-1;;;5011:44:11;;4989:19;;-1:-1:-1;;;;;5011:7:11;;;;:15;;:44;;5035:4;;;;5050:3;;5011:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5088:3;;:26;;-1:-1:-1;;;5088:26:11;;4989:66;;-1:-1:-1;5065:20:11;;-1:-1:-1;;;;;5088:3:11;;;;:13;;:26;;4989:66;;5088:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5148:4;;:27;;-1:-1:-1;;;5148:27:11;;5065:49;;-1:-1:-1;5124:21:11;;-1:-1:-1;;;;;5148:4:11;;;;:14;;:27;;5163:11;;5148:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5124:51;-1:-1:-1;5199:4:11;5185:11;5232:40;5259:12;5232:22;5124:51;5199:4;5232:17;:22::i;:40::-;5213:59;;5282:29;5321:17;5363:4;5352:8;:15;5348:446;;;5416:30;5441:4;5417:18;:8;5430:4;5417:12;:18::i;5416:30::-;5404:42;;5476:9;;5464;:21;5460:172;;;5529:1;5505:25;;5460:172;;;5593:9;;:24;;5607:9;5593:13;:24::i;:::-;5569:48;;5460:172;5348:446;;;5694:27;5716:4;5695:15;5702:8;5695:4;:15;:::i;5694:27::-;5759:9;;5682:39;;-1:-1:-1;5759:24:11;;5682:39;5759:13;:24::i;:::-;5735:48;;5348:446;5803:4;;5816:3;;5803:46;;-1:-1:-1;;;5803:46:11;;-1:-1:-1;;;;;5803:4:11;;;;:12;;:46;;5821:21;;5803:4;;:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4948:908;;;;;;;:::o;807:64:5:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;801:14;797:66;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;807:64:5;:::o;1120:106:0:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;1187:32:0::1;1206:12;:10;:12::i;:::-;1187:18;:32::i;3306:717:3:-:0;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:3;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:3;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:3;;;;;;;:::i;2901:389:11:-;3033:17;;3088;:8;3101:3;3088:12;:17::i;:::-;3062:43;-1:-1:-1;3115:17:11;3135:31;3062:43;3155:10;3135:19;:31::i;:::-;3115:51;-1:-1:-1;3176:19:11;3198:40;3222:15;3198:19;:9;3212:4;3198:13;:19::i;:::-;:23;;:40::i;:::-;3176:62;-1:-1:-1;3260:23:11;3176:62;3260:9;:23;:::i;:::-;3248:35;2901:389;-1:-1:-1;;;;;;;2901:389:11:o;2752:96:6:-;2810:7;2836:5;2840:1;2836;:5;:::i;3525:223:4:-;3658:12;3689:52;3711:6;3719:4;3725:1;3728:12;3689:21;:52::i;:::-;3682:59;3525:223;-1:-1:-1;;;;3525:223:4:o;4612:499::-;4777:12;4834:5;4809:21;:30;;4801:81;;;;-1:-1:-1;;;4801:81:4;;;;;;;:::i;:::-;4900:18;4911:6;4900:10;:18::i;:::-;4892:60;;;;-1:-1:-1;;;4892:60:4;;;;;;;:::i;:::-;4964:12;4978:23;5005:6;-1:-1:-1;;;;;5005:11:4;5024:5;5031:4;5005:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4963:73;;;;5053:51;5070:7;5079:10;5091:12;5053:16;:51::i;782:377::-;1098:20;1144:8;;;782:377::o;6275:692::-;6421:12;6449:7;6445:516;;;-1:-1:-1;6479:10:4;6472:17;;6445:516;6590:17;;:21;6586:365;;6784:10;6778:17;6844:15;6831:10;6827:2;6823:19;6816:44;6733:145;6923:12;6916:20;;-1:-1:-1;;;6916:20:4;;;;;;;;:::i;14:190:12:-;95:13;;-1:-1:-1;;;;;137:42:12;;127:53;;117:2;;194:1;191;184:12;209:259;;321:2;309:9;300:7;296:23;292:32;289:2;;;342:6;334;327:22;289:2;386:9;373:23;405:33;432:5;405:33;:::i;473:263::-;;596:2;584:9;575:7;571:23;567:32;564:2;;;617:6;609;602:22;564:2;654:9;648:16;673:33;700:5;673:33;:::i;741:396::-;;;867:2;855:9;846:7;842:23;838:32;835:2;;;888:6;880;873:22;835:2;932:9;919:23;951:33;978:5;951:33;:::i;:::-;1003:5;-1:-1:-1;1060:2:12;1045:18;;1032:32;1073;1032;1073;:::i;:::-;1124:7;1114:17;;;825:312;;;;;:::o;1142:327::-;;;1271:2;1259:9;1250:7;1246:23;1242:32;1239:2;;;1292:6;1284;1277:22;1239:2;1336:9;1323:23;1355:33;1382:5;1355:33;:::i;:::-;1407:5;1459:2;1444:18;;;;1431:32;;-1:-1:-1;;;1229:240:12:o;1474:253::-;;1583:2;1571:9;1562:7;1558:23;1554:32;1551:2;;;1604:6;1596;1589:22;1551:2;1648:9;1635:23;1667:30;1691:5;1667:30;:::i;1732:257::-;;1852:2;1840:9;1831:7;1827:23;1823:32;1820:2;;;1873:6;1865;1858:22;1820:2;1910:9;1904:16;1929:30;1953:5;1929:30;:::i;2561:1288::-;;;;;;;;2942:3;2930:9;2921:7;2917:23;2913:33;2910:2;;;2964:6;2956;2949:22;2910:2;3008:9;2995:23;3027:33;3054:5;3027:33;:::i;:::-;3079:5;-1:-1:-1;3136:2:12;3121:18;;3108:32;3149:35;3108:32;3149:35;:::i;:::-;3203:7;-1:-1:-1;3262:2:12;3247:18;;3234:32;3275:35;3234:32;3275:35;:::i;:::-;3329:7;-1:-1:-1;3388:2:12;3373:18;;3360:32;3401:35;3360:32;3401:35;:::i;:::-;3455:7;-1:-1:-1;3514:3:12;3499:19;;3486:33;3528:35;3486:33;3528:35;:::i;:::-;3582:7;-1:-1:-1;3641:3:12;3626:19;;3613:33;3655:35;3613:33;3655:35;:::i;:::-;3709:7;-1:-1:-1;3768:3:12;3753:19;;3740:33;3782:35;3740:33;3782:35;:::i;:::-;3836:7;3826:17;;;2900:949;;;;;;;;;;:::o;3854:474::-;;;;4010:2;3998:9;3989:7;3985:23;3981:32;3978:2;;;4031:6;4023;4016:22;3978:2;4059:42;4091:9;4059:42;:::i;:::-;4049:52;;4120:51;4167:2;4156:9;4152:18;4120:51;:::i;:::-;4110:61;;4214:2;4203:9;4199:18;4193:25;4258:10;4251:5;4247:22;4240:5;4237:33;4227:2;;4289:6;4281;4274:22;4227:2;4317:5;4307:15;;;3968:360;;;;;:::o;4333:190::-;;4445:2;4433:9;4424:7;4420:23;4416:32;4413:2;;;4466:6;4458;4451:22;4413:2;-1:-1:-1;4494:23:12;;4403:120;-1:-1:-1;4403:120:12:o;4528:194::-;;4651:2;4639:9;4630:7;4626:23;4622:32;4619:2;;;4672:6;4664;4657:22;4619:2;-1:-1:-1;4700:16:12;;4609:113;-1:-1:-1;4609:113:12:o;4727:259::-;;4808:5;4802:12;4835:6;4830:3;4823:19;4851:63;4907:6;4900:4;4895:3;4891:14;4884:4;4877:5;4873:16;4851:63;:::i;:::-;4968:2;4947:15;-1:-1:-1;;4943:29:12;4934:39;;;;4975:4;4930:50;;4778:208;-1:-1:-1;;4778:208:12:o;4991:274::-;;5158:6;5152:13;5174:53;5220:6;5215:3;5208:4;5200:6;5196:17;5174:53;:::i;:::-;5243:16;;;;;5128:137;-1:-1:-1;;5128:137:12:o;5270:203::-;-1:-1:-1;;;;;5434:32:12;;;;5416:51;;5404:2;5389:18;;5371:102::o;5478:304::-;-1:-1:-1;;;;;5708:15:12;;;5690:34;;5760:15;;5755:2;5740:18;;5733:43;5640:2;5625:18;;5607:175::o;5787:274::-;-1:-1:-1;;;;;5979:32:12;;;;5961:51;;6043:2;6028:18;;6021:34;5949:2;5934:18;;5916:145::o;6066:187::-;6231:14;;6224:22;6206:41;;6194:2;6179:18;;6161:92::o;7182:221::-;;7331:2;7320:9;7313:21;7351:46;7393:2;7382:9;7378:18;7370:6;7351:46;:::i;7408:402::-;7610:2;7592:21;;;7649:2;7629:18;;;7622:30;7688:34;7683:2;7668:18;;7661:62;-1:-1:-1;;;7754:2:12;7739:18;;7732:36;7800:3;7785:19;;7582:228::o;7815:400::-;8017:2;7999:21;;;8056:2;8036:18;;;8029:30;8095:34;8090:2;8075:18;;8068:62;-1:-1:-1;;;8161:2:12;8146:18;;8139:34;8205:3;8190:19;;7989:226::o;8220:402::-;8422:2;8404:21;;;8461:2;8441:18;;;8434:30;8500:34;8495:2;8480:18;;8473:62;-1:-1:-1;;;8566:2:12;8551:18;;8544:36;8612:3;8597:19;;8394:228::o;8627:410::-;8829:2;8811:21;;;8868:2;8848:18;;;8841:30;8907:34;8902:2;8887:18;;8880:62;-1:-1:-1;;;8973:2:12;8958:18;;8951:44;9027:3;9012:19;;8801:236::o;9042:356::-;9244:2;9226:21;;;9263:18;;;9256:30;9322:34;9317:2;9302:18;;9295:62;9389:2;9374:18;;9216:182::o;9403:353::-;9605:2;9587:21;;;9644:2;9624:18;;;9617:30;9683:31;9678:2;9663:18;;9656:59;9747:2;9732:18;;9577:179::o;9761:406::-;9963:2;9945:21;;;10002:2;9982:18;;;9975:30;10041:34;10036:2;10021:18;;10014:62;-1:-1:-1;;;10107:2:12;10092:18;;10085:40;10157:3;10142:19;;9935:232::o;10172:177::-;10318:25;;;10306:2;10291:18;;10273:76::o;10354:460::-;;10585:6;10574:9;10567:25;10628:6;10623:2;10612:9;10608:18;10601:34;10700:1;10696;10691:3;10687:11;10683:19;10675:6;10671:32;10666:2;10655:9;10651:18;10644:60;10740:3;10735:2;10724:9;10720:18;10713:31;10761:47;10803:3;10792:9;10788:19;10780:6;10761:47;:::i;:::-;10753:55;10557:257;-1:-1:-1;;;;;;10557:257:12:o;10819:329::-;11015:25;;;11071:2;11056:18;;11049:34;;;;11126:14;11119:22;11114:2;11099:18;;11092:50;11003:2;10988:18;;10970:178::o;11153:128::-;;11224:1;11220:6;11217:1;11214:13;11211:2;;;11230:18;;:::i;:::-;-1:-1:-1;11266:9:12;;11201:80::o;11286:217::-;;11352:1;11342:2;;-1:-1:-1;;;11377:31:12;;11431:4;11428:1;11421:15;11459:4;11384:1;11449:15;11342:2;-1:-1:-1;11488:9:12;;11332:171::o;11508:168::-;;11614:1;11610;11606:6;11602:14;11599:1;11596:21;11591:1;11584:9;11577:17;11573:45;11570:2;;;11621:18;;:::i;:::-;-1:-1:-1;11661:9:12;;11560:116::o;11681:125::-;;11749:1;11746;11743:8;11740:2;;;11754:18;;:::i;:::-;-1:-1:-1;11791:9:12;;11730:76::o;11811:258::-;11883:1;11893:113;11907:6;11904:1;11901:13;11893:113;;;11983:11;;;11977:18;11964:11;;;11957:39;11929:2;11922:10;11893:113;;;12024:6;12021:1;12018:13;12015:2;;;12059:1;12050:6;12045:3;12041:16;12034:27;12015:2;;11864:205;;;:::o;12074:127::-;12135:10;12130:3;12126:20;12123:1;12116:31;12166:4;12163:1;12156:15;12190:4;12187:1;12180:15;12206:133;-1:-1:-1;;;;;12283:31:12;;12273:42;;12263:2;;12329:1;12326;12319:12;12344:120;12432:5;12425:13;12418:21;12411:5;12408:32;12398:2;;12454:1;12451;12444:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1510800",
								"executionCost": "1582",
								"totalCost": "1512382"
							},
							"external": {
								"Factory()": "1137",
								"PRECISION()": "1117",
								"Router()": "1202",
								"autoAdjustFarm()": "1169",
								"basePoint()": "1075",
								"dev()": "1138",
								"executor(address)": "1348",
								"farm()": "1182",
								"initialize(address,address,address,address,address,address,address)": "infinite",
								"jointExecution()": "infinite",
								"op()": "1136",
								"openStabilizer()": "1146",
								"owner()": "1116",
								"pid()": "1116",
								"renounceOwnership()": "23618",
								"sea()": "1115",
								"setAutoAdjustFarm(bool)": "22238",
								"setDev(address)": "22297",
								"setExecutor(address,bool)": "infinite",
								"setFarm(address)": "22319",
								"setOp(address)": "22231",
								"setOpenStabilizer(bool)": "22237",
								"setPid(uint256)": "21330",
								"setStabilizer(address)": "22230",
								"setToDevPercent(uint256)": "21383",
								"setToOpPercent(uint256)": "21360",
								"setToSseaPercent(uint256)": "21362",
								"setUSDCAddress(address)": "22253",
								"ssea()": "1203",
								"stabilizer()": "1203",
								"toDevPercent()": "1140",
								"toOpPercent()": "1074",
								"toSseaPercent()": "1073",
								"transferOwnership(address)": "infinite",
								"usc()": "1138",
								"usdc()": "1116",
								"withdrawalERC20(address,uint256)": "infinite"
							},
							"internal": {
								"adjustFarm()": "infinite",
								"buySea(uint256)": "infinite",
								"getAmountOut(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 909,
									"end": 7560,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 7560,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe4f0876aeeed841450feaf276246c4ac1fd36740e07862d6a9a7a4c89fb308264736f6c63430008000033",
									".code": [
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "BD0B1F44"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "DB7F521A"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "DB7F521A"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "EC1F1F69"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "F1068454"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "F6D7EADE"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "BD0B1F44"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "C83DD231"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "D10C06A2"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "D477F05F"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "D4F26C51"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "A36A7526"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "A36A7526"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "AAF5BFC3"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "AAF5EB68"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "AF5518C4"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "B8BB97A1"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "91CCA3DB"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "930ED033"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "9DA5B0D5"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "3E413BEE"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "4ECAAC41"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "4ECAAC41"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "55C746D1"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "58DE5DE8"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "7E47961C"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "3E413BEE"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "4591DB50"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "48C7E528"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "4AE6A027"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "2C535A52"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "2C535A52"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "3011D3D5"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "35876476"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "36E9332D"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "3C850E1E"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "16D03993"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "1B0D8AAB"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "1E1BFF3F"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "27C42A50"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 7560,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4942,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 4244,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4244,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 4244,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 4244,
											"end": 4942,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7217,
											"end": 7221,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7233,
											"end": 7236,
											"name": "PUSH",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7260,
											"end": 7264,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7271,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2722,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6401,
											"end": 6405,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6417,
											"end": 6430,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 6417,
											"end": 6437,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2067,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "6C"
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2194,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2214,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2281,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "1388"
										},
										{
											"begin": 2304,
											"end": 2317,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 11,
											"value": "9C4"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2362,
											"end": 2381,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2430,
											"end": 2434,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 2418,
											"end": 2427,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 2418,
											"end": 2434,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "OR",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2533,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 797,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6672,
											"end": 6676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 6688,
											"end": 6707,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6724,
											"end": 6728,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6724,
											"end": 6728,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6605,
											"end": 6735,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6824,
											"end": 6838,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6741,
											"end": 6874,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6947,
											"end": 6951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6963,
											"end": 6977,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6880,
											"end": 7013,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5971,
											"end": 5975,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5991,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5991,
											"end": 6031,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5991,
											"end": 6031,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6032,
											"end": 6042,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6048,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5991,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 5991,
											"end": 6049,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5991,
											"end": 6049,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 5991,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6066,
											"end": 6070,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5862,
											"end": 6077,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6144,
											"end": 6148,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6160,
											"end": 6162,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7382,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7398,
											"end": 7402,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7277,
											"end": 7438,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6541,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6553,
											"end": 6564,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 6553,
											"end": 6571,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6588,
											"end": 6592,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6588,
											"end": 6592,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6471,
											"end": 6599,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4942,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 4244,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2835,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2824,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4343,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4340,
											"end": 4343,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4337,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4337,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4340,
											"end": 4343,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4353,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 4340,
											"end": 4353,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4378,
											"end": 4392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4431,
											"end": 4440,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 4431,
											"end": 4440,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 4412,
											"end": 4425,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 4412,
											"end": 4425,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4395,
											"end": 4411,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4426,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4426,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4426,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4395,
											"end": 4426,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 4395,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 4395,
											"end": 4441,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4395,
											"end": 4441,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4395,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4378,
											"end": 4441,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4378,
											"end": 4441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4463,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 4500,
											"end": 4509,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 4500,
											"end": 4509,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4466,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 4483,
											"end": 4494,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 4483,
											"end": 4494,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4466,
											"end": 4478,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4466,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4466,
											"end": 4482,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4466,
											"end": 4495,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4466,
											"end": 4495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4466,
											"end": 4495,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4466,
											"end": 4495,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4466,
											"end": 4495,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4466,
											"end": 4510,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 4466,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4520,
											"end": 4533,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 4451,
											"end": 4510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4536,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 4536,
											"end": 4548,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4559,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4536,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 4536,
											"end": 4560,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4536,
											"end": 4560,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 4536,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4536,
											"end": 4564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4536,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 4536,
											"end": 4570,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4536,
											"end": 4570,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 4536,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4520,
											"end": 4570,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4520,
											"end": 4570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4581,
											"end": 4595,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 4605,
											"end": 4611,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4598,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 4598,
											"end": 4612,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4598,
											"end": 4612,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 4598,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4647,
											"end": 4651,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 4647,
											"end": 4651,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4622,
											"end": 4625,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 4622,
											"end": 4625,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4622,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 4622,
											"end": 4661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4622,
											"end": 4625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4622,
											"end": 4625,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4622,
											"end": 4625,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4622,
											"end": 4625,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4647,
											"end": 4651,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4622,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 4622,
											"end": 4661,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4622,
											"end": 4661,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 4622,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4696,
											"end": 4698,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 4696,
											"end": 4698,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4674,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4671,
											"end": 4674,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 4671,
											"end": 4706,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4671,
											"end": 4674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4674,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4674,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4696,
											"end": 4698,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4701,
											"end": 4705,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 4671,
											"end": 4706,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4671,
											"end": 4706,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 4671,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4716,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 4716,
											"end": 4753,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4752,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4716,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 4716,
											"end": 4753,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4716,
											"end": 4753,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 4716,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4764,
											"end": 4821,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4764,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 4764,
											"end": 4821,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 4798,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 4798,
											"end": 4810,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4798,
											"end": 4810,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 4798,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4849,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 4835,
											"end": 4849,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4835,
											"end": 4849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4849,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4849,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4835,
											"end": 4849,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4831,
											"end": 4914,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4831,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4831,
											"end": 4914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4901,
											"name": "PUSH",
											"source": 11,
											"value": "796C7BE7"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4831,
											"end": 4914,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4831,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4924,
											"end": 4935,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4244,
											"end": 4942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4244,
											"end": 4942,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6269,
											"end": 6273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6285,
											"end": 6288,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 6285,
											"end": 6299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6285,
											"end": 6299,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6285,
											"end": 6299,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6285,
											"end": 6299,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6285,
											"end": 6299,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6285,
											"end": 6299,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6285,
											"end": 6299,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6285,
											"end": 6299,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6285,
											"end": 6299,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6285,
											"end": 6299,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6285,
											"end": 6299,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6327,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7502,
											"end": 7506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7518,
											"end": 7522,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7558,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7104,
											"end": 7114,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7153,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2366,
											"end": 2374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 11,
											"value": "6C"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 955,
											"end": 965,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 876,
											"end": 972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 1045,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 1081,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 888,
											"end": 893,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 943,
											"end": 945,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 947,
											"end": 952,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 868,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3547,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3935,
											"end": 3936,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3932,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3207,
											"end": 3208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3296,
											"end": 4238,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 3296,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 3393,
											"end": 3400,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3420,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 3417,
											"end": 3420,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6A43905"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3346,
											"end": 3353,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3353,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3346,
											"end": 3353,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3346,
											"end": 3353,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3393,
											"end": 3400,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3400,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3400,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3400,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3408,
											"name": "PUSH",
											"source": 11,
											"value": "E6A43905"
										},
										{
											"begin": 3393,
											"end": 3408,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3420,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3420,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3420,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3420,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 3393,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3449,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3446,
											"end": 3449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3436,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3436,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3446,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 3446,
											"end": 3489,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3446,
											"end": 3449,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3436,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 3446,
											"end": 3489,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3446,
											"end": 3489,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 3446,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3516,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "PUSH",
											"source": 11,
											"value": "902F1AC"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3540,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3609,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3609,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3609,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3609,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3619,
											"end": 3633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3668,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3636,
											"end": 3676,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3676,
											"name": "PUSH",
											"source": 11,
											"value": "DFE1681"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3619,
											"end": 3678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3619,
											"end": 3678,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3689,
											"end": 3706,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3706,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3689,
											"end": 3706,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3689,
											"end": 3706,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 3752,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3730,
											"end": 3752,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3730,
											"end": 3752,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3730,
											"end": 3752,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3730,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3730,
											"end": 3822,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3803,
											"end": 3811,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3821,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3730,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 3730,
											"end": 3822,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3730,
											"end": 3822,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3730,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3776,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3786,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3730,
											"end": 3822,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 3730,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3822,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3822,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3822,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3822,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3832,
											"end": 3849,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 3865,
											"end": 3871,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3884,
											"end": 3894,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3852,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 3852,
											"end": 3895,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3852,
											"end": 3895,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 3852,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3832,
											"end": 3895,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3832,
											"end": 3895,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3948,
											"end": 3970,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3948,
											"end": 3970,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3948,
											"end": 3970,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3948,
											"end": 3970,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3948,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 3948,
											"end": 4046,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4044,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 3948,
											"end": 4046,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3948,
											"end": 4046,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 3948,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3994,
											"end": 3995,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3948,
											"end": 4046,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 3948,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4193,
											"end": 4194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22C0D9F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3905,
											"end": 4046,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3905,
											"end": 4046,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3905,
											"end": 4046,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4056,
											"end": 4094,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4094,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4094,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4094,
											"name": "PUSH",
											"source": 11,
											"value": "22C0D9F"
										},
										{
											"begin": 4056,
											"end": 4094,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3905,
											"end": 4046,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3905,
											"end": 4046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3905,
											"end": 4046,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3905,
											"end": 4046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4164,
											"end": 4168,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4164,
											"end": 4168,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 4056,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4222,
											"end": 4231,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4222,
											"end": 4231,
											"name": "SWAP14",
											"source": 11
										},
										{
											"begin": 3296,
											"end": 4238,
											"name": "SWAP13",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3296,
											"end": 4238,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5856,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 4948,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5035,
											"end": 5039,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5035,
											"end": 5039,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5050,
											"end": 5053,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 5050,
											"end": 5053,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6A43905"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5008,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 5008,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 11,
											"value": "E6A43905"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5035,
											"end": 5039,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5035,
											"end": 5039,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5035,
											"end": 5039,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5035,
											"end": 5039,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5050,
											"end": 5053,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5050,
											"end": 5053,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 5011,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5091,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 5088,
											"end": 5091,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5055,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5055,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5088,
											"end": 5091,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5091,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5091,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5091,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5101,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 5088,
											"end": 5101,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5055,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5055,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5152,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5148,
											"end": 5152,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5065,
											"end": 5114,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5065,
											"end": 5114,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5124,
											"end": 5145,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5145,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5148,
											"end": 5152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5152,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5124,
											"end": 5175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5203,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5185,
											"end": 5196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 5259,
											"end": 5271,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5232,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5124,
											"end": 5175,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5203,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5232,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5232,
											"end": 5254,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5272,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5272,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5282,
											"end": 5311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5338,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5363,
											"end": 5367,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5352,
											"end": 5360,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5352,
											"end": 5367,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5348,
											"end": 5794,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5348,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 5348,
											"end": 5794,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5441,
											"end": 5445,
											"name": "PUSH",
											"source": 11,
											"value": "5AF3107A4000"
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5417,
											"end": 5425,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5430,
											"end": 5434,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5417,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5416,
											"end": 5446,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5416,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5446,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5446,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5476,
											"end": 5485,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 5476,
											"end": 5485,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5485,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5632,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 5460,
											"end": 5632,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5530,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 5460,
											"end": 5632,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5632,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 5460,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5593,
											"end": 5602,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 5593,
											"end": 5602,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5593,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 5593,
											"end": 5617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5607,
											"end": 5616,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5593,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 5593,
											"end": 5617,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5593,
											"end": 5617,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 5593,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5569,
											"end": 5617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5569,
											"end": 5617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5632,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 5460,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5348,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 5348,
											"end": 5794,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5348,
											"end": 5794,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 5348,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5694,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 5716,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "5AF3107A4000"
										},
										{
											"begin": 5695,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5702,
											"end": 5710,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5695,
											"end": 5699,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5695,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 5695,
											"end": 5710,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5694,
											"end": 5721,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 5694,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5759,
											"end": 5768,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 5759,
											"end": 5768,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5682,
											"end": 5721,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5682,
											"end": 5721,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5759,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5759,
											"end": 5783,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5682,
											"end": 5721,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5759,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 5759,
											"end": 5783,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5759,
											"end": 5783,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5759,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5735,
											"end": 5783,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5735,
											"end": 5783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5348,
											"end": 5794,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 5348,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5807,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 5803,
											"end": 5807,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5816,
											"end": 5819,
											"name": "PUSH",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 5816,
											"end": 5819,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "236535F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5803,
											"end": 5807,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5807,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5807,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5807,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5815,
											"name": "PUSH",
											"source": 11,
											"value": "46CA6BEA"
										},
										{
											"begin": 5803,
											"end": 5815,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5821,
											"end": 5842,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5821,
											"end": 5842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5807,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5803,
											"end": 5807,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4948,
											"end": 5856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4948,
											"end": 5856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4948,
											"end": 5856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4948,
											"end": 5856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4948,
											"end": 5856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4948,
											"end": 5856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4948,
											"end": 5856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4948,
											"end": 5856,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 807,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 1206,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 3790,
											"end": 3794,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3775,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "tag",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 3950,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "tag",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2901,
											"end": 3290,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 2901,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3050,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3050,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3088,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 3088,
											"end": 3096,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 3104,
											"name": "PUSH",
											"source": 11,
											"value": "3E5"
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3088,
											"end": 3105,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3105,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 3088,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3062,
											"end": 3105,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3115,
											"end": 3132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 3062,
											"end": 3105,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3155,
											"end": 3165,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3135,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3135,
											"end": 3166,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3166,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 3135,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3166,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3176,
											"end": 3195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 3222,
											"end": 3237,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3198,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 3198,
											"end": 3207,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3212,
											"end": 3216,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 3198,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3198,
											"end": 3217,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3198,
											"end": 3217,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 3198,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3198,
											"end": 3221,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3198,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 3198,
											"end": 3238,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3198,
											"end": 3238,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 3198,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 3238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 3176,
											"end": 3238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3269,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3248,
											"end": 3283,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3290,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 3290,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3719,
											"end": 3723,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3740,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "tag",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3682,
											"end": 3741,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "tag",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4777,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4834,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "tag",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "tag",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 5001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5011,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5005,
											"end": 5016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5024,
											"end": 5029,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 5103,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "tag",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "tag",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6433,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6449,
											"end": 6456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6479,
											"end": 6489,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "tag",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6586,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 6586,
											"end": 6951,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6794,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6778,
											"end": 6795,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6859,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6841,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6823,
											"end": 6842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6733,
											"end": 6878,
											"name": "tag",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 6733,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6923,
											"end": 6935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 204,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 14,
											"end": 204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 95,
											"end": 108,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 95,
											"end": 108,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 137,
											"end": 179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 137,
											"end": 179,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 127,
											"end": 180,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 127,
											"end": 180,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 117,
											"end": 119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 117,
											"end": 119,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 192,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 184,
											"end": 196,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 209,
											"end": 468,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 209,
											"end": 468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 209,
											"end": 468,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 289,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 289,
											"end": 291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 342,
											"end": 348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 340,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 327,
											"end": 349,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 291,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 289,
											"end": 291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 386,
											"end": 395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 373,
											"end": 396,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 405,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 432,
											"end": 437,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 405,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 405,
											"end": 438,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 736,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 473,
											"end": 736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 473,
											"end": 736,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 575,
											"end": 582,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 567,
											"end": 599,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 564,
											"end": 566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 564,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 564,
											"end": 566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 617,
											"end": 623,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 602,
											"end": 624,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 564,
											"end": 566,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 564,
											"end": 566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 654,
											"end": 663,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 648,
											"end": 664,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 673,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 700,
											"end": 705,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 673,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 673,
											"end": 706,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 741,
											"end": 1137,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 741,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 741,
											"end": 1137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 1137,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 867,
											"end": 869,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 846,
											"end": 853,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 842,
											"end": 865,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 838,
											"end": 870,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 835,
											"end": 837,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 835,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 835,
											"end": 837,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 888,
											"end": 894,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 880,
											"end": 886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 873,
											"end": 895,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 835,
											"end": 837,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 835,
											"end": 837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 919,
											"end": 942,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 951,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 951,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 951,
											"end": 984,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 951,
											"end": 984,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 951,
											"end": 984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1064,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 1032,
											"end": 1064,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1131,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 825,
											"end": 1137,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1142,
											"end": 1469,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1142,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1469,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1469,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1271,
											"end": 1273,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1268,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1250,
											"end": 1257,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1274,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1336,
											"end": 1345,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1346,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 1382,
											"end": 1387,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 1412,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1229,
											"end": 1469,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1474,
											"end": 1727,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1474,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1474,
											"end": 1727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1585,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1558,
											"end": 1581,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1586,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1604,
											"end": 1610,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1589,
											"end": 1611,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1635,
											"end": 1658,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 1691,
											"end": 1696,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 1667,
											"end": 1697,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1989,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 1732,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1732,
											"end": 1989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1854,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1838,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1823,
											"end": 1855,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1873,
											"end": 1879,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1865,
											"end": 1871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1858,
											"end": 1880,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 1929,
											"end": 1959,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2945,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2930,
											"end": 2939,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2921,
											"end": 2928,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 2940,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2913,
											"end": 2946,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2970,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2971,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3018,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3084,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3136,
											"end": 3138,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3140,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 3108,
											"end": 3140,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3203,
											"end": 3210,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3262,
											"end": 3264,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3265,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3265,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3234,
											"end": 3266,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 3234,
											"end": 3266,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 3275,
											"end": 3310,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3275,
											"end": 3310,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 3275,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3329,
											"end": 3336,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3388,
											"end": 3390,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3373,
											"end": 3391,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3391,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3360,
											"end": 3392,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3401,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 3360,
											"end": 3392,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3401,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 3401,
											"end": 3436,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3401,
											"end": 3436,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 3401,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3514,
											"end": 3517,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3499,
											"end": 3518,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3519,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 3486,
											"end": 3519,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3589,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3644,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 3626,
											"end": 3645,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3626,
											"end": 3645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3646,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 3613,
											"end": 3646,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 3655,
											"end": 3690,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3655,
											"end": 3690,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 3655,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3716,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3768,
											"end": 3771,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 3753,
											"end": 3772,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3753,
											"end": 3772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3773,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 3740,
											"end": 3773,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3836,
											"end": 3843,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3826,
											"end": 3843,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3826,
											"end": 3843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3826,
											"end": 3843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 3849,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3854,
											"end": 4328,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 3854,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 4328,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 4328,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 4328,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 4013,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4031,
											"end": 4037,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4029,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4016,
											"end": 4038,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 4091,
											"end": 4100,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 4059,
											"end": 4101,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4059,
											"end": 4101,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 4059,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 4167,
											"end": 4169,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 4120,
											"end": 4171,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4120,
											"end": 4171,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 4120,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4110,
											"end": 4171,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4110,
											"end": 4171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4193,
											"end": 4218,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4268,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4247,
											"end": 4269,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4240,
											"end": 4245,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4237,
											"end": 4270,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4289,
											"end": 4295,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4281,
											"end": 4287,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4274,
											"end": 4296,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4317,
											"end": 4322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4322,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4328,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4333,
											"end": 4523,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 4333,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4442,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4424,
											"end": 4431,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4416,
											"end": 4448,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4466,
											"end": 4472,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4464,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4451,
											"end": 4473,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4494,
											"end": 4517,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4517,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4403,
											"end": 4523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4403,
											"end": 4523,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4528,
											"end": 4722,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4528,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4528,
											"end": 4722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4651,
											"end": 4653,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4639,
											"end": 4648,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4626,
											"end": 4649,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4622,
											"end": 4654,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4672,
											"end": 4678,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4664,
											"end": 4670,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4657,
											"end": 4679,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4609,
											"end": 4722,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4609,
											"end": 4722,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4727,
											"end": 4986,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 4727,
											"end": 4986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4813,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4830,
											"end": 4833,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4823,
											"end": 4842,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 4907,
											"end": 4913,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4900,
											"end": 4904,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4898,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4891,
											"end": 4905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4888,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 4851,
											"end": 4914,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4851,
											"end": 4914,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 4851,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4968,
											"end": 4970,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4947,
											"end": 4962,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4943,
											"end": 4972,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4934,
											"end": 4973,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4934,
											"end": 4973,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4934,
											"end": 4973,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4934,
											"end": 4973,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4979,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4930,
											"end": 4980,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4980,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4778,
											"end": 4986,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4778,
											"end": 4986,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4991,
											"end": 5265,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 4991,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4991,
											"end": 5265,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5164,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5165,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 5220,
											"end": 5226,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5218,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5212,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5200,
											"end": 5206,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5196,
											"end": 5213,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5243,
											"end": 5259,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5243,
											"end": 5259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5243,
											"end": 5259,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5243,
											"end": 5259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5243,
											"end": 5259,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5128,
											"end": 5265,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5128,
											"end": 5265,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5270,
											"end": 5473,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 5270,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5434,
											"end": 5466,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5434,
											"end": 5466,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5434,
											"end": 5466,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5434,
											"end": 5466,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5416,
											"end": 5467,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5416,
											"end": 5467,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5404,
											"end": 5406,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5407,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5389,
											"end": 5407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5371,
											"end": 5473,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5478,
											"end": 5782,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 5478,
											"end": 5782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5708,
											"end": 5723,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5708,
											"end": 5723,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5708,
											"end": 5723,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5755,
											"end": 5757,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5733,
											"end": 5776,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5640,
											"end": 5642,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5607,
											"end": 5782,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5787,
											"end": 6061,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 5787,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5979,
											"end": 6011,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5979,
											"end": 6011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5979,
											"end": 6011,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5979,
											"end": 6011,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5961,
											"end": 6012,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5961,
											"end": 6012,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6043,
											"end": 6045,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6021,
											"end": 6055,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5949,
											"end": 5951,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5916,
											"end": 6061,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6066,
											"end": 6253,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 6066,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6231,
											"end": 6245,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6231,
											"end": 6245,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6224,
											"end": 6246,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6206,
											"end": 6247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6206,
											"end": 6247,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6194,
											"end": 6196,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6161,
											"end": 6253,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7182,
											"end": 7403,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 7182,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7182,
											"end": 7403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7331,
											"end": 7333,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7320,
											"end": 7329,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7313,
											"end": 7334,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7351,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 7393,
											"end": 7395,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7396,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7370,
											"end": 7376,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7351,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 7351,
											"end": 7397,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7408,
											"end": 7810,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 7408,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7612,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7613,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7592,
											"end": 7613,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7592,
											"end": 7613,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7649,
											"end": 7651,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 7652,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7722,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7683,
											"end": 7685,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7661,
											"end": 7723,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7754,
											"end": 7756,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7732,
											"end": 7768,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7800,
											"end": 7803,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7785,
											"end": 7804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7785,
											"end": 7804,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7810,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7815,
											"end": 8215,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 7815,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8019,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8020,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7999,
											"end": 8020,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7999,
											"end": 8020,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8056,
											"end": 8058,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8029,
											"end": 8059,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8129,
											"name": "PUSH",
											"source": 12,
											"value": "6578656375746F723A2063616C6C6572206973206E6F74207468652065786563"
										},
										{
											"begin": 8090,
											"end": 8092,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8075,
											"end": 8093,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8075,
											"end": 8093,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8068,
											"end": 8130,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3ABA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8161,
											"end": 8163,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8146,
											"end": 8164,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8146,
											"end": 8164,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8205,
											"end": 8208,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8190,
											"end": 8209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8190,
											"end": 8209,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7989,
											"end": 8215,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8220,
											"end": 8622,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 8220,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8422,
											"end": 8424,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8404,
											"end": 8425,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8404,
											"end": 8425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8404,
											"end": 8425,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8461,
											"end": 8463,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 8441,
											"end": 8459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8459,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8459,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8464,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8500,
											"end": 8534,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 8495,
											"end": 8497,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8473,
											"end": 8535,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8566,
											"end": 8568,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8551,
											"end": 8569,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8551,
											"end": 8569,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8544,
											"end": 8580,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8612,
											"end": 8615,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8597,
											"end": 8616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8597,
											"end": 8616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8622,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8627,
											"end": 9037,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 8627,
											"end": 9037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 8831,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8811,
											"end": 8832,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8811,
											"end": 8832,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8811,
											"end": 8832,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8868,
											"end": 8870,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 8848,
											"end": 8866,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8848,
											"end": 8866,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8848,
											"end": 8866,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8841,
											"end": 8871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8907,
											"end": 8941,
											"name": "PUSH",
											"source": 12,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 8902,
											"end": 8904,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8880,
											"end": 8942,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8973,
											"end": 8975,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8958,
											"end": 8976,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8958,
											"end": 8976,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8951,
											"end": 8995,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9027,
											"end": 9030,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9012,
											"end": 9031,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9037,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9042,
											"end": 9398,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 9042,
											"end": 9398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9246,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9263,
											"end": 9281,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9263,
											"end": 9281,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9263,
											"end": 9281,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9256,
											"end": 9286,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9322,
											"end": 9356,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9317,
											"end": 9319,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9295,
											"end": 9357,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9391,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9374,
											"end": 9392,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9374,
											"end": 9392,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9216,
											"end": 9398,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9403,
											"end": 9756,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 9403,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9605,
											"end": 9607,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9587,
											"end": 9608,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9587,
											"end": 9608,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9587,
											"end": 9608,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9646,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9617,
											"end": 9647,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9683,
											"end": 9714,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 9678,
											"end": 9680,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9656,
											"end": 9715,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9747,
											"end": 9749,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9732,
											"end": 9750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9732,
											"end": 9750,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9577,
											"end": 9756,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9761,
											"end": 10167,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 9761,
											"end": 10167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9963,
											"end": 9965,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9945,
											"end": 9966,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9945,
											"end": 9966,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9945,
											"end": 9966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10004,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9975,
											"end": 10005,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"name": "PUSH",
											"source": 12,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 10036,
											"end": 10038,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10021,
											"end": 10039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10039,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10014,
											"end": 10076,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10107,
											"end": 10109,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10092,
											"end": 10110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10092,
											"end": 10110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10085,
											"end": 10125,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10157,
											"end": 10160,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10142,
											"end": 10161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10142,
											"end": 10161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9935,
											"end": 10167,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10172,
											"end": 10349,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 10172,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10318,
											"end": 10343,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10318,
											"end": 10343,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10318,
											"end": 10343,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10306,
											"end": 10308,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10291,
											"end": 10309,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10291,
											"end": 10309,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10273,
											"end": 10349,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10354,
											"end": 10814,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 10354,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10354,
											"end": 10814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10585,
											"end": 10591,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10574,
											"end": 10583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10567,
											"end": 10592,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10634,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10623,
											"end": 10625,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10612,
											"end": 10621,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10601,
											"end": 10635,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 10701,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10696,
											"end": 10697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 10687,
											"end": 10698,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 10683,
											"end": 10702,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10675,
											"end": 10681,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10671,
											"end": 10703,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10666,
											"end": 10668,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10655,
											"end": 10664,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10651,
											"end": 10669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10644,
											"end": 10704,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10740,
											"end": 10743,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10735,
											"end": 10737,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10724,
											"end": 10733,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10713,
											"end": 10744,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10761,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 10803,
											"end": 10806,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10792,
											"end": 10801,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10788,
											"end": 10807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10780,
											"end": 10786,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10761,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 10761,
											"end": 10808,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10761,
											"end": 10808,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 10761,
											"end": 10808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10753,
											"end": 10808,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 10557,
											"end": 10814,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10557,
											"end": 10814,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10819,
											"end": 11148,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 10819,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11071,
											"end": 11073,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11056,
											"end": 11074,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11056,
											"end": 11074,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11049,
											"end": 11083,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11049,
											"end": 11083,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11049,
											"end": 11083,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11049,
											"end": 11083,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11126,
											"end": 11140,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11119,
											"end": 11141,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11114,
											"end": 11116,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11092,
											"end": 11142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11003,
											"end": 11005,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10988,
											"end": 11006,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10988,
											"end": 11006,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10970,
											"end": 11148,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11153,
											"end": 11281,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 11153,
											"end": 11281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11153,
											"end": 11281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11224,
											"end": 11225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11220,
											"end": 11226,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 11217,
											"end": 11218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11214,
											"end": 11227,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11211,
											"end": 11213,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11211,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 11211,
											"end": 11213,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11230,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 11230,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 11230,
											"end": 11248,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11230,
											"end": 11248,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 11230,
											"end": 11248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11266,
											"end": 11275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11266,
											"end": 11275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11201,
											"end": 11281,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11286,
											"end": 11503,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 11286,
											"end": 11503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11286,
											"end": 11503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11352,
											"end": 11353,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11342,
											"end": 11344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 11342,
											"end": 11344,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11377,
											"end": 11408,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11377,
											"end": 11408,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11431,
											"end": 11435,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 11428,
											"end": 11429,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11421,
											"end": 11436,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11459,
											"end": 11463,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11384,
											"end": 11385,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11449,
											"end": 11464,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11342,
											"end": 11344,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 11342,
											"end": 11344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11488,
											"end": 11497,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11332,
											"end": 11503,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11508,
											"end": 11676,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 11508,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11508,
											"end": 11676,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11614,
											"end": 11615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11610,
											"end": 11611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11606,
											"end": 11612,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 11602,
											"end": 11616,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11599,
											"end": 11600,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11596,
											"end": 11617,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11591,
											"end": 11592,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11584,
											"end": 11593,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11577,
											"end": 11594,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11573,
											"end": 11618,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11570,
											"end": 11572,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11570,
											"end": 11572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 11570,
											"end": 11572,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11621,
											"end": 11639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 11621,
											"end": 11639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 11621,
											"end": 11639,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11621,
											"end": 11639,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 11621,
											"end": 11639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11661,
											"end": 11670,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11661,
											"end": 11670,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11676,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11681,
											"end": 11806,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 11681,
											"end": 11806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11681,
											"end": 11806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11743,
											"end": 11751,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11740,
											"end": 11742,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11740,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 11740,
											"end": 11742,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11754,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 11754,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 11754,
											"end": 11772,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11754,
											"end": 11772,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 11754,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11791,
											"end": 11800,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11791,
											"end": 11800,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11730,
											"end": 11806,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11811,
											"end": 12069,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 11811,
											"end": 12069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 11884,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11893,
											"end": 12006,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 11893,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11907,
											"end": 11913,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11904,
											"end": 11905,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11901,
											"end": 11914,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11893,
											"end": 12006,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11893,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 11893,
											"end": 12006,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11983,
											"end": 11994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11983,
											"end": 11994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11983,
											"end": 11994,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11977,
											"end": 11995,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 11975,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 11975,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 11975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 11996,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11931,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11922,
											"end": 11932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11893,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 11893,
											"end": 12006,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11893,
											"end": 12006,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 11893,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12024,
											"end": 12030,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12021,
											"end": 12022,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12018,
											"end": 12031,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12059,
											"end": 12060,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12050,
											"end": 12056,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12045,
											"end": 12048,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12041,
											"end": 12057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12034,
											"end": 12061,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11864,
											"end": 12069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11864,
											"end": 12069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11864,
											"end": 12069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11864,
											"end": 12069,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12074,
											"end": 12201,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 12074,
											"end": 12201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 12130,
											"end": 12133,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 12126,
											"end": 12146,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 12123,
											"end": 12124,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12116,
											"end": 12147,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12166,
											"end": 12170,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 12163,
											"end": 12164,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12156,
											"end": 12171,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12187,
											"end": 12188,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12195,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12206,
											"end": 12339,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 12206,
											"end": 12339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12283,
											"end": 12314,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12283,
											"end": 12314,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12273,
											"end": 12315,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12273,
											"end": 12315,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12263,
											"end": 12265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 12263,
											"end": 12265,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12329,
											"end": 12330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12326,
											"end": 12327,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12319,
											"end": 12331,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12344,
											"end": 12464,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 12344,
											"end": 12464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12432,
											"end": 12437,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12425,
											"end": 12438,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12418,
											"end": 12439,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12411,
											"end": 12416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12408,
											"end": 12440,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 12398,
											"end": 12400,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12454,
											"end": 12455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12451,
											"end": 12452,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12444,
											"end": 12456,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Factory()": "c83dd231",
							"PRECISION()": "aaf5eb68",
							"Router()": "f6d7eade",
							"autoAdjustFarm()": "9da5b0d5",
							"basePoint()": "16d03993",
							"dev()": "91cca3db",
							"executor(address)": "48c7e528",
							"farm()": "36e9332d",
							"initialize(address,address,address,address,address,address,address)": "35876476",
							"jointExecution()": "d10c06a2",
							"op()": "ec1f1f69",
							"openStabilizer()": "58de5de8",
							"owner()": "8da5cb5b",
							"pid()": "f1068454",
							"renounceOwnership()": "715018a6",
							"sea()": "4ecaac41",
							"setAutoAdjustFarm(bool)": "4591db50",
							"setDev(address)": "d477f05f",
							"setExecutor(address,bool)": "1e1bff3f",
							"setFarm(address)": "d4f26c51",
							"setOp(address)": "a36a7526",
							"setOpenStabilizer(bool)": "55c746d1",
							"setPid(uint256)": "1b0d8aab",
							"setStabilizer(address)": "db7f521a",
							"setToDevPercent(uint256)": "3c850e1e",
							"setToOpPercent(uint256)": "af5518c4",
							"setToSseaPercent(uint256)": "27c42a50",
							"setUSDCAddress(address)": "aaf5bfc3",
							"ssea()": "b8bb97a1",
							"stabilizer()": "7e47961c",
							"toDevPercent()": "4ae6a027",
							"toOpPercent()": "2c535a52",
							"toSseaPercent()": "bd0b1f44",
							"transferOwnership(address)": "f2fde38b",
							"usc()": "3011d3d5",
							"usdc()": "3e413bee",
							"withdrawalERC20(address,uint256)": "930ed033"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoAdjustFarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basePoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farm\",\"outputs\":[{\"internalType\":\"contract IFarm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"_Factory\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"_Router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usc\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_sea\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_ssea\",\"type\":\"address\"},{\"internalType\":\"contract IFarm\",\"name\":\"_farm\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jointExecution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"op\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sea\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setAutoAdjustFarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setDev\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_type\",\"type\":\"bool\"}],\"name\":\"setExecutor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFarm\",\"name\":\"_farm\",\"type\":\"address\"}],\"name\":\"setFarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setOp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setOpenStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setPid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToDevPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToOpPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToSseaPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usdc\",\"type\":\"address\"}],\"name\":\"setUSDCAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssea\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toDevPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toOpPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toSseaPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usc\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"withdrawalERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"helperLogic\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0x0735dcfb659782978f1a8576ed946d3efa9a46f2b8e98b598895872071670f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f948551495e9d0856dfc715f831d034b5b308cdcf5da1d599a0182010e6698dd\",\"dweb:/ipfs/QmSdFRqtMt999DpQoNUg9kWfV9CpLuD6aJzy56YCxgwGzR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 124,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1825,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "executor",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1828,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "usc",
								"offset": 0,
								"slot": "102",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1831,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "usdc",
								"offset": 0,
								"slot": "103",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1834,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "sea",
								"offset": 0,
								"slot": "104",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1837,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "ssea",
								"offset": 0,
								"slot": "105",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1839,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "op",
								"offset": 0,
								"slot": "106",
								"type": "t_address"
							},
							{
								"astId": 1841,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "dev",
								"offset": 0,
								"slot": "107",
								"type": "t_address"
							},
							{
								"astId": 1844,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "Router",
								"offset": 0,
								"slot": "108",
								"type": "t_contract(IUniswapV2Router02)1784"
							},
							{
								"astId": 1847,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "Factory",
								"offset": 0,
								"slot": "109",
								"type": "t_contract(IUniswapV2Factory)1146"
							},
							{
								"astId": 1849,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toSseaPercent",
								"offset": 0,
								"slot": "110",
								"type": "t_uint256"
							},
							{
								"astId": 1851,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toOpPercent",
								"offset": 0,
								"slot": "111",
								"type": "t_uint256"
							},
							{
								"astId": 1853,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toDevPercent",
								"offset": 0,
								"slot": "112",
								"type": "t_uint256"
							},
							{
								"astId": 1855,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "PRECISION",
								"offset": 0,
								"slot": "113",
								"type": "t_uint256"
							},
							{
								"astId": 1857,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "basePoint",
								"offset": 0,
								"slot": "114",
								"type": "t_uint256"
							},
							{
								"astId": 1859,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "pid",
								"offset": 0,
								"slot": "115",
								"type": "t_uint256"
							},
							{
								"astId": 1862,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "farm",
								"offset": 0,
								"slot": "116",
								"type": "t_contract(IFarm)1804"
							},
							{
								"astId": 1864,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "autoAdjustFarm",
								"offset": 20,
								"slot": "116",
								"type": "t_bool"
							},
							{
								"astId": 1866,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "openStabilizer",
								"offset": 21,
								"slot": "116",
								"type": "t_bool"
							},
							{
								"astId": 1868,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "stabilizer",
								"offset": 0,
								"slot": "117",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20Upgradeable)248": {
								"encoding": "inplace",
								"label": "contract IERC20Upgradeable",
								"numberOfBytes": "20"
							},
							"t_contract(IFarm)1804": {
								"encoding": "inplace",
								"label": "contract IFarm",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Factory)1146": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Factory",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)1784": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							761
						],
						"Initializable": [
							170
						],
						"OwnableUpgradeable": [
							125
						]
					},
					"id": 126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 762,
							"src": "112:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 171,
							"src": "154:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "733:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "733:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 761,
										"src": "748:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "748:18:0"
								}
							],
							"contractDependencies": [
								170,
								761
							],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "198:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								761,
								170
							],
							"name": "OwnableUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "773:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "829:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "860:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:57:0"
									},
									"src": "802:84:0"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "1035:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "1045:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1045:26:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1081:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "1081:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "892:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"modifierName": {
												"id": 19,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "1023:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1023:11:0"
										}
									],
									"name": "__Ownable_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:0:0"
									},
									"scope": 125,
									"src": "988:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 35,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "1206:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1206:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 34,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1187:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1187:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1187:32:0"
											}
										]
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 32,
											"modifierName": {
												"id": 31,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "1165:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1165:11:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 125,
									"src": "1120:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1357:30:0",
										"statements": [
											{
												"expression": {
													"id": 46,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1374:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 45,
												"id": 47,
												"nodeType": "Return",
												"src": "1367:13:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1232:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1348:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:9:0"
									},
									"scope": 125,
									"src": "1302:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1496:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 53,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1514:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1514:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 55,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "1525:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1525:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1514:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1506:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1506:68:0"
											},
											{
												"id": 61,
												"nodeType": "PlaceholderStatement",
												"src": "1584:1:0"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1393:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 63,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:0"
									},
									"src": "1475:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1988:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2025:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2017:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 70,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2017:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 69,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1998:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1998:30:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1598:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 67,
											"modifierName": {
												"id": 66,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1960:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 125,
									"src": "1934:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2254:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 86,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2272:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2292:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2284:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 87,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2284:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2284:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2272:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2296:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 85,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "2264:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "2366:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2347:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2347:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "2347:28:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2041:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 83,
											"modifierName": {
												"id": 82,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "2244:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2244:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2211:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:18:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2254:0:0"
									},
									"scope": 125,
									"src": "2184:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "2599:124:0",
										"statements": [
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "2609:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 106,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2609:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 109,
												"initialValue": {
													"id": 108,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2628:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2609:25:0"
											},
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 110,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2644:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 111,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2653:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2644:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2644:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 115,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "2697:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2707:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 114,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2676:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2676:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "EmitStatement",
												"src": "2671:45:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2388:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "2564:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2599:0:0"
									},
									"scope": 125,
									"src": "2536:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 124,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "2728:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 121,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2728:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 123,
										"length": {
											"hexValue": "3439",
											"id": 122,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2736:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "2728:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 126,
							"src": "693:2063:0"
						}
					],
					"src": "87:2670:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							170
						]
					},
					"id": 171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "161:73:1",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 130,
									"mutability": "mutable",
									"name": "_initialized",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "239:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "239:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "271:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 133,
									"mutability": "mutable",
									"name": "_initializing",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "367:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 132,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "367:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "521:348:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "539:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "556:13:1",
																"subExpression": {
																	"id": 138,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "557:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "539:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "571:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "531:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "531:89:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "531:89:1"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"scope": 168,
														"src": "631:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 144,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "631:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "653:14:1",
													"subExpression": {
														"id": 146,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "654:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "631:36:1"
											},
											{
												"condition": {
													"id": 149,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "681:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "IfStatement",
												"src": "677:98:1",
												"trueBody": {
													"id": 158,
													"nodeType": "Block",
													"src": "697:78:1",
													"statements": [
														{
															"expression": {
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 150,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "711:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "727:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "711:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 153,
															"nodeType": "ExpressionStatement",
															"src": "711:20:1"
														},
														{
															"expression": {
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 154,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "745:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "760:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "745:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 157,
															"nodeType": "ExpressionStatement",
															"src": "745:19:1"
														}
													]
												}
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "785:1:1"
											},
											{
												"condition": {
													"id": 161,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "801:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "IfStatement",
												"src": "797:66:1",
												"trueBody": {
													"id": 166,
													"nodeType": "Block",
													"src": "817:46:1",
													"statements": [
														{
															"expression": {
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 162,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "831:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "847:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "831:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 165,
															"nodeType": "ExpressionStatement",
															"src": "831:21:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "400:93:1",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 169,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:2:1"
									},
									"src": "498:371:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 171,
							"src": "123:748:1"
						}
					],
					"src": "98:774:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							248
						]
					},
					"id": 249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 172,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 173,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 248,
							"linearizedBaseContracts": [
								248
							],
							"name": "IERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "221:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "338:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:9:2"
									},
									"scope": 248,
									"src": "292:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "353:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "449:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:17:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "489:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:2"
									},
									"scope": 248,
									"src": "430:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "504:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "736:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "755:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:35:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "789:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "789:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:6:2"
									},
									"scope": 248,
									"src": "718:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "801:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1089:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1104:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:32:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1144:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:9:2"
									},
									"scope": 248,
									"src": "1070:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1159:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1823:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1840:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:33:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1874:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1874:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:6:2"
									},
									"scope": 248,
									"src": "1806:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1886:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2218:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2242:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2269:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:81:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2308:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:6:2"
									},
									"scope": 248,
									"src": "2187:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2320:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 238,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2498:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2520:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2540:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2540:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2497:57:2"
									},
									"src": "2483:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2561:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 247,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2729:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2752:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2777:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:63:2"
									},
									"src": "2714:78:2"
								}
							],
							"scope": 249,
							"src": "187:2607:2"
						}
					],
					"src": "91:2704:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						],
						"IERC20Upgradeable": [
							248
						],
						"SafeERC20Upgradeable": [
							472
						]
					},
					"id": 473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 251,
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 249,
							"src": "125:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 252,
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 718,
							"src": "160:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "209:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 472,
							"linearizedBaseContracts": [
								472
							],
							"name": "SafeERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 256,
									"libraryName": {
										"id": 254,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 717,
										"src": "708:18:3"
									},
									"nodeType": "UsingForDirective",
									"src": "702:37:3",
									"typeName": {
										"id": 255,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "858:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 267,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "888:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 270,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "918:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 197,
																		"src": "918:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "918:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 273,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "943:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "947:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 268,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "895:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "895:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "895:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 266,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "868:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "868:86:3"
											}
										]
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "776:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 257,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "776:17:3"
													},
													"referencedDeclaration": 248,
													"src": "776:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "809:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "829:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:82:3"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:3"
									},
									"scope": 472,
									"src": "745:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1106:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1136:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 295,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1166:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 229,
																		"src": "1166:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1166:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 298,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "1195:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 299,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1201:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 300,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "1205:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 293,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1143:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1143:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1143:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 291,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1116:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "1116:96:3"
											}
										]
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1002:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 280,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1002:17:3"
													},
													"referencedDeclaration": 248,
													"src": "1002:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1035:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1057:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1077:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:104:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:0:3"
									},
									"scope": 472,
									"src": "967:252:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1596:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "1845:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1854:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1845:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 320,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1844:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 325,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1885:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 324,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1877:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 323,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1877:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1877:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 327,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "1892:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "1861:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 207,
																				"src": "1861:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1861:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1904:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1861:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1860:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1844:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1920:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1823:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "1823:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "2016:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 340,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 309,
																			"src": "2046:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2046:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2046:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 343,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "2070:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "2079:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2023:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2023:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2023:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 336,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1996:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1996:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1996:90:3"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "1225:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1509:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 307,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1509:17:3"
													},
													"referencedDeclaration": 248,
													"src": "1509:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1542:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:87:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:0:3"
									},
									"scope": 472,
									"src": "1479:614:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "2226:194:3",
										"statements": [
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 384,
														"src": "2236:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2236:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 365,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2283:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	],
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2275:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 363,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2275:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2275:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 367,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "2290:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 361,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "2259:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 207,
															"src": "2259:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 369,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2301:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2259:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2236:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "2336:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 376,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 352,
																			"src": "2366:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2366:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2366:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 379,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2390:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 380,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "2399:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 374,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2343:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2343:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2343:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 372,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2316:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "2316:97:3"
											}
										]
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2139:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 350,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "2139:17:3"
													},
													"referencedDeclaration": 248,
													"src": "2139:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2172:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2197:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:87:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:3"
									},
									"scope": 472,
									"src": "2099:321:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2553:370:3",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "2563:354:3",
												"statements": [
													{
														"assignments": [
															396
														],
														"declarations": [
															{
																"constant": false,
																"id": 396,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "2587:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 395,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2587:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 405,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 401,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2634:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2626:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 399,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2626:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2626:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 403,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 397,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2610:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 207,
																"src": "2610:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2610:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2587:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 407,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "2671:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 408,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2687:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2671:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2694:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 406,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2663:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "2663:75:3"
													},
													{
														"assignments": [
															414
														],
														"declarations": [
															{
																"constant": false,
																"id": 414,
																"mutability": "mutable",
																"name": "newAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "2752:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 413,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2752:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 418,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "2775:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 416,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "2790:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2775:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2752:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2829:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 423,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "2859:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 217,
																				"src": "2859:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2859:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 426,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "2883:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 427,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 414,
																			"src": "2892:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 421,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2836:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2836:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2836:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 419,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "2809:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2809:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "2809:97:3"
													}
												]
											}
										]
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2466:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 386,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "2466:17:3"
													},
													"referencedDeclaration": 248,
													"src": "2466:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2499:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2524:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:87:3"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:3"
									},
									"scope": 472,
									"src": "2426:497:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3387:636:3",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "3736:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 442,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3736:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"id": 449,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "3790:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3796:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 446,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "3770:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3762:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 444,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3762:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3762:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 563,
														"src": "3762:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3762:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 453,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "3845:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3845:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3865:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3845:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 469,
												"nodeType": "IfStatement",
												"src": "3841:176:3",
												"trueBody": {
													"id": 468,
													"nodeType": "Block",
													"src": "3868:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 460,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 443,
																				"src": "3940:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3953:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 461,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3953:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 463,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3952:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 458,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3929:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3929:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3929:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3961:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 457,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3921:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3921:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "3921:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2929:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3335:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "3335:17:3"
													},
													"referencedDeclaration": 248,
													"src": "3335:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3360:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3360:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3334:44:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3387:0:3"
									},
									"scope": 472,
									"src": "3306:717:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 473,
							"src": "667:3358:3"
						}
					],
					"src": "100:3926:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						]
					},
					"id": 718,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 475,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 717,
							"linearizedBaseContracts": [
								717
							],
							"name": "AddressUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "848:311:4",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "1045:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1045:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"nodeType": "VariableDeclarationStatement",
												"src": "1045:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1090:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1110:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1098:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1090:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 478,
														"isOffset": false,
														"isSlot": false,
														"src": "1110:7:4",
														"valueSize": 1
													},
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:4:4",
														"valueSize": 1
													}
												],
												"id": 486,
												"nodeType": "InlineAssembly",
												"src": "1067:61:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 487,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "1144:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1151:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1144:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 482,
												"id": 490,
												"nodeType": "Return",
												"src": "1137:15:4"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "212:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "802:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:17:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "842:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "842:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:6:4"
									},
									"scope": 717,
									"src": "782:377:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "2147:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 503,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2173:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2165:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 501,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2165:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2165:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2165:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 506,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2190:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2165:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2198:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2157:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2157:73:4"
											},
											{
												"assignments": [
													512,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "2242:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 511,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2242:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 519,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2290:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 513,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "2260:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2260:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 515,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2282:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2260:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2260:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2241:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "2311:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2320:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2303:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "2303:78:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1165:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2095:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2095:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2122:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:43:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2147:0:4"
									},
									"scope": 717,
									"src": "2076:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "3219:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3249:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3257:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3263:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 536,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															543,
															563
														],
														"referencedDeclaration": 563,
														"src": "3236:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 535,
												"id": 541,
												"nodeType": "Return",
												"src": "3229:67:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2394:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3152:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3168:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3168:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:35:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3205:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3205:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:14:4"
									},
									"scope": 717,
									"src": "3130:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "3672:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "3711:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3719:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3725:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 559,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3728:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 555,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "3689:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3689:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 554,
												"id": 561,
												"nodeType": "Return",
												"src": "3682:59:4"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "3309:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3556:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3580:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3580:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3607:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3607:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3546:93:4"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3658:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3658:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:14:4"
									},
									"scope": 717,
									"src": "3525:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "4253:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "4292:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "4306:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4313:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 575,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "4270:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 574,
												"id": 581,
												"nodeType": "Return",
												"src": "4263:94:4"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3754:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4150:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4174:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4201:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:80:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4239:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4239:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:14:4"
									},
									"scope": 717,
									"src": "4110:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4791:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 600,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4817:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4809:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 598,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4809:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4809:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4809:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 603,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "4834:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4809:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4841:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4801:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "4801:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 610,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "4911:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 609,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "4900:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4900:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4920:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4892:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4892:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "4892:60:4"
											},
											{
												"assignments": [
													616,
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4964:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 615,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4964:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4978:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 617,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4978:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"id": 623,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5031:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 619,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "5005:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5005:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 621,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "5024:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5005:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5005:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4963:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 628,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5079:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 629,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "5091:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 626,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5053:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5053:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 596,
												"id": 631,
												"nodeType": "Return",
												"src": "5046:58:4"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "4370:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4676:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4676:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4703:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4726:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4642:116:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4777:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4777:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4776:14:4"
									},
									"scope": 717,
									"src": "4612:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "5388:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "5424:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5432:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5438:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 643,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															650,
															685
														],
														"referencedDeclaration": 685,
														"src": "5405:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5405:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 642,
												"id": 648,
												"nodeType": "Return",
												"src": "5398:80:4"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5117:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5316:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5332:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5332:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:35:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5374:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5374:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:14:4"
									},
									"scope": 717,
									"src": "5288:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "5827:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 664,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "5856:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 663,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "5845:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5845:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5865:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5837:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5837:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5837:67:4"
											},
											{
												"assignments": [
													670,
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "5916:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 669,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5916:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "5930:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 671,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5930:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"arguments": [
														{
															"id": 675,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "5975:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 673,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "5957:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5957:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5957:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5915:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 679,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "6014:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 680,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "6023:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 681,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "6035:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 678,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5997:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5997:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 661,
												"id": 683,
												"nodeType": "Return",
												"src": "5990:58:4"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "5491:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5706:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5706:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5730:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5730:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5757:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5757:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:93:4"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5813:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5813:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5812:14:4"
									},
									"scope": 717,
									"src": "5669:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "6435:532:4",
										"statements": [
											{
												"condition": {
													"id": 697,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 688,
													"src": "6449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 713,
													"nodeType": "Block",
													"src": "6506:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 701,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "6590:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6590:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6610:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6590:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 711,
																"nodeType": "Block",
																"src": "6898:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 708,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 692,
																					"src": "6923:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 707,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "6916:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6916:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 710,
																		"nodeType": "ExpressionStatement",
																		"src": "6916:20:4"
																	}
																]
															},
															"id": 712,
															"nodeType": "IfStatement",
															"src": "6586:365:4",
															"trueBody": {
																"id": 706,
																"nodeType": "Block",
																"src": "6613:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6733:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6755:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6784:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6778:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6778:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6759:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6827:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6831:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6823:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6823:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6844:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6816:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6816:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6816:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 690,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6784:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 690,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6831:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 705,
																		"nodeType": "InlineAssembly",
																		"src": "6724:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 714,
												"nodeType": "IfStatement",
												"src": "6445:516:4",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "6458:42:4",
													"statements": [
														{
															"expression": {
																"id": 698,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "6479:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 696,
															"id": 699,
															"nodeType": "Return",
															"src": "6472:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "6061:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6310:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6310:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6332:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6332:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6365:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6365:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6300:97:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6421:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6421:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:14:4"
									},
									"scope": 717,
									"src": "6275:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 718,
							"src": "179:6790:4"
						}
					],
					"src": "86:6884:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							761
						],
						"Initializable": [
							170
						]
					},
					"id": 762,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 719,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 720,
							"nodeType": "ImportDirective",
							"scope": 762,
							"sourceUnit": 171,
							"src": "110:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 722,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "691:13:5"
									},
									"id": 723,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:5"
								}
							],
							"contractDependencies": [
								170
							],
							"contractKind": "contract",
							"documentation": {
								"id": 721,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 761,
							"linearizedBaseContracts": [
								761,
								170
							],
							"name": "ContextUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "758:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 728,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "768:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "768:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "768:26:5"
											}
										]
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 726,
											"modifierName": {
												"id": 725,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "746:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:11:5"
										}
									],
									"name": "__Context_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:5"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:0:5"
									},
									"scope": 761,
									"src": "711:90:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "864:7:5",
										"statements": []
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 735,
											"modifierName": {
												"id": 734,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "852:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "852:11:5"
										}
									],
									"name": "__Context_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "864:0:5"
									},
									"scope": 761,
									"src": "807:64:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "938:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 743,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "955:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "955:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 742,
												"id": 745,
												"nodeType": "Return",
												"src": "948:17:5"
											}
										]
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "895:2:5"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "929:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:9:5"
									},
									"scope": 761,
									"src": "876:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "1045:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 752,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1062:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1062:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 751,
												"id": 754,
												"nodeType": "Return",
												"src": "1055:15:5"
											}
										]
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:2:5"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1029:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1029:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:16:5"
									},
									"scope": 761,
									"src": "978:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 760,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 761,
									"src": "1082:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 757,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 759,
										"length": {
											"hexValue": "3530",
											"id": 758,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1090:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1082:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 762,
							"src": "651:459:5"
						}
					],
					"src": "86:1025:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
					"exportedSymbols": {
						"SafeMathUpgradeable": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 763,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 764,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1073,
							"linearizedBaseContracts": [
								1073
							],
							"name": "SafeMathUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "713:140:6",
										"statements": [
											{
												"id": 794,
												"nodeType": "UncheckedBlock",
												"src": "723:124:6",
												"statements": [
													{
														"assignments": [
															777
														],
														"declarations": [
															{
																"constant": false,
																"id": 777,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 794,
																"src": "747:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 776,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "747:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 781,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "759:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 779,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "759:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "747:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 782,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "782:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 783,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "786:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "782:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 789,
														"nodeType": "IfStatement",
														"src": "778:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "797:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "796:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 775,
															"id": 788,
															"nodeType": "Return",
															"src": "789:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "828:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 791,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "834:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 792,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "827:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 775,
														"id": 793,
														"nodeType": "Return",
														"src": "820:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "501:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "653:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "664:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:22:6"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "698:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "704:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:15:6"
									},
									"scope": 1073,
									"src": "637:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "1075:113:6",
										"statements": [
											{
												"id": 822,
												"nodeType": "UncheckedBlock",
												"src": "1085:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 808,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "1113:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 809,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "1117:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1113:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 815,
														"nodeType": "IfStatement",
														"src": "1109:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1128:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1135:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 807,
															"id": 814,
															"nodeType": "Return",
															"src": "1120:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1159:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 817,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "1165:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 818,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "1169:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1165:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 820,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1158:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 807,
														"id": 821,
														"nodeType": "Return",
														"src": "1151:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "859:135:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1015:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1026:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:22:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1060:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1060:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1066:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:15:6"
									},
									"scope": 1073,
									"src": "999:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "1412:417:6",
										"statements": [
											{
												"id": 864,
												"nodeType": "UncheckedBlock",
												"src": "1422:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1680:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1685:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1680:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "1676:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1702:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1695:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 835,
															"id": 842,
															"nodeType": "Return",
															"src": "1688:16:6"
														}
													},
													{
														"assignments": [
															845
														],
														"declarations": [
															{
																"constant": false,
																"id": 845,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 864,
																"src": "1718:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 844,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1718:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 849,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1730:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 847,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1730:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1718:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 850,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1753:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 851,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "1757:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1753:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 853,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1762:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1753:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 859,
														"nodeType": "IfStatement",
														"src": "1749:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1773:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1780:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1772:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 835,
															"id": 858,
															"nodeType": "Return",
															"src": "1765:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1804:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 861,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1810:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 862,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1803:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 835,
														"id": 863,
														"nodeType": "Return",
														"src": "1796:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "1194:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1352:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1363:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:22:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1397:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1397:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1403:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:15:6"
									},
									"scope": 1073,
									"src": "1336:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "2054:114:6",
										"statements": [
											{
												"id": 892,
												"nodeType": "UncheckedBlock",
												"src": "2064:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 878,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "2092:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2097:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2092:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 885,
														"nodeType": "IfStatement",
														"src": "2088:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2108:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2115:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2107:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 877,
															"id": 884,
															"nodeType": "Return",
															"src": "2100:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2139:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 887,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "2145:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 888,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "2149:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2145:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 890,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2138:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 877,
														"id": 891,
														"nodeType": "Return",
														"src": "2131:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1835:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "1994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2005:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:22:6"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2039:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2039:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2045:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:15:6"
									},
									"scope": 1073,
									"src": "1978:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2403:114:6",
										"statements": [
											{
												"id": 920,
												"nodeType": "UncheckedBlock",
												"src": "2413:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "2441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2446:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2441:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 913,
														"nodeType": "IfStatement",
														"src": "2437:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2457:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2464:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2456:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 905,
															"id": 912,
															"nodeType": "Return",
															"src": "2449:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2488:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 915,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "2494:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 916,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "2498:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2494:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 918,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2487:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 905,
														"id": 919,
														"nodeType": "Return",
														"src": "2480:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "2174:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2354:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:22:6"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2388:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2388:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2394:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:15:6"
									},
									"scope": 1073,
									"src": "2327:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "2819:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 932,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2836:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 933,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2840:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2836:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 931,
												"id": 935,
												"nodeType": "Return",
												"src": "2829:12:6"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "2523:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2765:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2776:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2764:22:6"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2810:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:9:6"
									},
									"scope": 1073,
									"src": "2752:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "3186:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 947,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "3203:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 948,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3207:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3203:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 946,
												"id": 950,
												"nodeType": "Return",
												"src": "3196:12:6"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "2854:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3132:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3143:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:22:6"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3177:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:9:6"
									},
									"scope": 1073,
									"src": "3119:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "3529:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3546:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 963,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "3550:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3546:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 961,
												"id": 965,
												"nodeType": "Return",
												"src": "3539:12:6"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "3221:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3475:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3486:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3474:22:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3520:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3519:9:6"
									},
									"scope": 1073,
									"src": "3462:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "3914:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "3931:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 978,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "3935:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3931:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 976,
												"id": 980,
												"nodeType": "Return",
												"src": "3924:12:6"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "3564:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3860:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3871:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3871:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3859:22:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3905:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3905:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:9:6"
									},
									"scope": 1073,
									"src": "3847:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "4463:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "4480:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 993,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "4484:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4480:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 991,
												"id": 995,
												"nodeType": "Return",
												"src": "4473:12:6"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "3949:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4409:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4420:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4408:22:6"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4454:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4454:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4453:9:6"
									},
									"scope": 1073,
									"src": "4396:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "5081:106:6",
										"statements": [
											{
												"id": 1020,
												"nodeType": "UncheckedBlock",
												"src": "5091:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1010,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "5123:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1011,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "5128:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5123:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1013,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "5131:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1009,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5115:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5115:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1015,
														"nodeType": "ExpressionStatement",
														"src": "5115:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "5165:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1017,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "5169:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5165:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1008,
														"id": 1019,
														"nodeType": "Return",
														"src": "5158:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "4498:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4978:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5016:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1003,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5016:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:80:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5072:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5072:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5071:9:6"
									},
									"scope": 1073,
									"src": "4956:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "5796:105:6",
										"statements": [
											{
												"id": 1045,
												"nodeType": "UncheckedBlock",
												"src": "5806:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1035,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "5838:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5842:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5838:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1038,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5845:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1034,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5830:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5830:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1040,
														"nodeType": "ExpressionStatement",
														"src": "5830:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "5879:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1042,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "5883:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5879:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1033,
														"id": 1044,
														"nodeType": "Return",
														"src": "5872:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "5193:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5693:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5712:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5712:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5731:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5731:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5683:80:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5787:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5786:9:6"
									},
									"scope": 1073,
									"src": "5671:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "6672:105:6",
										"statements": [
											{
												"id": 1070,
												"nodeType": "UncheckedBlock",
												"src": "6682:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1060,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "6714:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6718:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6714:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1063,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "6721:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1059,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6706:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6706:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1065,
														"nodeType": "ExpressionStatement",
														"src": "6706:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1066,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "6755:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1067,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "6759:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6755:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1058,
														"id": 1069,
														"nodeType": "Return",
														"src": "6748:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "5907:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6569:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6569:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6588:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6607:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1053,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6607:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6559:80:6"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6663:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6662:9:6"
									},
									"scope": 1073,
									"src": "6547:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1074,
							"src": "467:6312:6"
						}
					],
					"src": "92:6688:6"
				},
				"id": 6
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1146
						]
					},
					"id": 1147,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1075,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1146,
							"linearizedBaseContracts": [
								1146
							],
							"name": "IUniswapV2Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1085,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "115:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "139:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "163:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "177:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "177:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:68:7"
									},
									"src": "97:86:7"
								},
								{
									"functionSelector": "017e7e58",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:2:7"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "229:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:9:7"
									},
									"scope": 1146,
									"src": "189:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:7"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "289:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:9:7"
									},
									"scope": 1146,
									"src": "243:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7cd07e47",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "320:2:7"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "346:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:7"
									},
									"scope": 1146,
									"src": "303:52:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "378:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "394:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:32:7"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "433:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:14:7"
									},
									"scope": 1146,
									"src": "361:86:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "470:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:6:7"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "499:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:14:7"
									},
									"scope": 1146,
									"src": "452:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:2:7"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "567:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "567:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:6:7"
									},
									"scope": 1146,
									"src": "518:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 1130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "599:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "615:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:32:7"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "649:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:14:7"
									},
									"scope": 1146,
									"src": "579:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 1135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "687:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:9:7"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:0:7"
									},
									"scope": 1146,
									"src": "669:36:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 1140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "734:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:9:7"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:0:7"
									},
									"scope": 1146,
									"src": "710:42:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23cf3118",
									"id": 1145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMigrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "778:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:9:7"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:0:7"
									},
									"scope": 1146,
									"src": "757:39:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1147,
							"src": "63:735:7"
						}
					],
					"src": "37:762:7"
				},
				"id": 7
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1388
						]
					},
					"id": 1389,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1148,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1388,
							"linearizedBaseContracts": [
								1388
							],
							"name": "IUniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1156,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "109:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "132:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "157:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "157:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:60:8"
									},
									"src": "94:75:8"
								},
								{
									"anonymous": false,
									"id": 1164,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "189:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "211:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "231:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "231:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:54:8"
									},
									"src": "174:69:8"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:8"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "288:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "288:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:15:8"
									},
									"scope": 1388,
									"src": "249:54:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:8"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "349:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "349:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:15:8"
									},
									"scope": 1388,
									"src": "308:56:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:2:8"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "412:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1176,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "412:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:7:8"
									},
									"scope": 1388,
									"src": "369:50:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:2:8"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "470:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:6:8"
									},
									"scope": 1388,
									"src": "424:52:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "500:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:15:8"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "538:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "538:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:6:8"
									},
									"scope": 1388,
									"src": "481:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "568:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "583:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:32:8"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "623:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:6:8"
									},
									"scope": 1388,
									"src": "549:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "652:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "669:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:29:8"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "699:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "699:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:6:8"
									},
									"scope": 1388,
									"src": "635:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "728:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "740:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "740:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:24:8"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "770:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "770:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "769:6:8"
									},
									"scope": 1388,
									"src": "710:66:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "803:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "817:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "829:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:38:8"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "859:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "859:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:6:8"
									},
									"scope": 1388,
									"src": "781:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:2:8"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "922:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:9:8"
									},
									"scope": 1388,
									"src": "871:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:8"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "986:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:9:8"
									},
									"scope": 1388,
									"src": "936:59:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1016:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:15:8"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1054:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1054:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:6:8"
									},
									"scope": 1388,
									"src": "1000:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1082:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1097:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1114:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1114:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1126:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1126:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1141:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1141:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1150:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1161:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:90:8"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1180:0:8"
									},
									"scope": 1388,
									"src": "1066:115:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1271,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1198:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1222:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1222:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1236:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1236:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:52:8"
									},
									"src": "1187:63:8"
								},
								{
									"anonymous": false,
									"id": 1281,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1266:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1290:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1304:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1304:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1318:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:72:8"
									},
									"src": "1255:83:8"
								},
								{
									"anonymous": false,
									"id": 1295,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1363:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1395:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1395:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1419:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1419:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1443:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1443:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1468:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1493:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:164:8"
									},
									"src": "1343:175:8"
								},
								{
									"anonymous": false,
									"id": 1301,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1534:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1296,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1552:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1298,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:36:8"
									},
									"src": "1523:47:8"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 1306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:2:8"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1628:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1628:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:6:8"
									},
									"scope": 1388,
									"src": "1576:58:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1655:2:8"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1681:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:8"
									},
									"scope": 1388,
									"src": "1639:51:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:8"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1736:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1735:9:8"
									},
									"scope": 1388,
									"src": "1695:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:8"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "1791:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:9:8"
									},
									"scope": 1388,
									"src": "1750:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:2:8"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1851:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1323,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1869:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1325,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1887:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1327,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1887:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:63:8"
									},
									"scope": 1388,
									"src": "1805:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1948:2:8"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1974:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1974:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:6:8"
									},
									"scope": 1388,
									"src": "1919:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 1340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2014:2:8"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2040:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2040:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:6:8"
									},
									"scope": 1388,
									"src": "1985:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2065:2:8"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "2091:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2091:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:6:8"
									},
									"scope": 1388,
									"src": "2051:46:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2117:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2116:12:8"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2147:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2147:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:16:8"
									},
									"scope": 1388,
									"src": "2103:60:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 1361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2182:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:12:8"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2212:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2212:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2226:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2226:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:28:8"
									},
									"scope": 1388,
									"src": "2168:72:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2259:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2259:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2276:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2276:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2293:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2305:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2305:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2258:67:8"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2334:0:8"
									},
									"scope": 1388,
									"src": "2245:90:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2354:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:12:8"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:8"
									},
									"scope": 1388,
									"src": "2340:35:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2393:2:8"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2404:0:8"
									},
									"scope": 1388,
									"src": "2380:25:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2431:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2440:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:18:8"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2457:0:8"
									},
									"scope": 1388,
									"src": "2411:47:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1389,
							"src": "63:2397:8"
						}
					],
					"src": "37:2423:8"
				},
				"id": 8
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1696
						]
					},
					"id": 1697,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1390,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1696,
							"linearizedBaseContracts": [
								1696
							],
							"name": "IUniswapV2Router01",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:9"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "140:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:9:9"
									},
									"scope": 1696,
									"src": "98:51:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:9"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "193:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:9:9"
									},
									"scope": 1696,
									"src": "154:48:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "239:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "263:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "amountADesired",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "287:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "287:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "316:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "316:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "345:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "370:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "370:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "395:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "415:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "415:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:205:9"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "453:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "453:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "467:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "467:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "481:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "481:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:44:9"
									},
									"scope": 1696,
									"src": "208:289:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "536:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "559:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "592:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "592:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "621:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "621:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "648:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "668:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "668:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:161:9"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "714:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "714:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "732:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "732:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "748:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "748:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:50:9"
									},
									"scope": 1696,
									"src": "502:262:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "803:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "827:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "851:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "851:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "875:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "900:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "900:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "925:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "945:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "945:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:171:9"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "983:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "983:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "997:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:28:9"
									},
									"scope": 1696,
									"src": "769:242:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1053:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1076:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1076:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1100:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1100:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1129:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1129:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1156:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1176:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1176:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:152:9"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1214:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1214:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1232:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1232:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:34:9"
									},
									"scope": 1696,
									"src": "1016:232:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1297:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1321:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1345:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1345:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1369:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1369:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1394:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1394:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1419:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1439:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1439:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1462:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1462:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1479:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1503,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1479:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1488:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1505,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1499:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:227:9"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1533:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1533:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1547:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1547:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1532:28:9"
									},
									"scope": 1696,
									"src": "1253:308:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1613:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1636:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1636:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1660:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1660:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1689:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1689:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1716:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1736:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1736:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1759:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1759:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1776:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1776:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1785:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1796:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:208:9"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1830:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1830:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1848:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1848:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:34:9"
									},
									"scope": 1696,
									"src": "1566:298:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1912:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1912:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1935:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1935:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1962:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1547,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1962:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1548,
													"nodeType": "ArrayTypeName",
													"src": "1962:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1995:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2015:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2015:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:132:9"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2053:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1555,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2053:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1556,
													"nodeType": "ArrayTypeName",
													"src": "2053:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:23:9"
									},
									"scope": 1696,
									"src": "1869:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2124:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2124:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2148:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2148:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2174:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1564,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2174:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1565,
													"nodeType": "ArrayTypeName",
													"src": "2174:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2207:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2227:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2227:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:132:9"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2265:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2265:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "2265:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2264:23:9"
									},
									"scope": 1696,
									"src": "2081:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2324:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2324:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2343:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1579,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2343:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1580,
													"nodeType": "ArrayTypeName",
													"src": "2343:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2368:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2380:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2380:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:71:9"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2445:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1587,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2445:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1588,
													"nodeType": "ArrayTypeName",
													"src": "2445:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:23:9"
									},
									"scope": 1696,
									"src": "2293:175:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2504:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2504:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2520:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2520:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2538:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1596,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2538:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1597,
													"nodeType": "ArrayTypeName",
													"src": "2538:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2563:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2575:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2575:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2503:86:9"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2624:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1604,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2624:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1605,
													"nodeType": "ArrayTypeName",
													"src": "2624:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2623:23:9"
									},
									"scope": 1696,
									"src": "2473:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2683:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2683:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2698:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2698:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2717:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1613,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2717:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1614,
													"nodeType": "ArrayTypeName",
													"src": "2717:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2742:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2754:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2754:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:86:9"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2803:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1621,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2803:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1622,
													"nodeType": "ArrayTypeName",
													"src": "2803:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2802:23:9"
									},
									"scope": 1696,
									"src": "2652:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2862:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2878:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1628,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2878:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1629,
													"nodeType": "ArrayTypeName",
													"src": "2878:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2903:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2915:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2915:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:68:9"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2980:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1636,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2980:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1637,
													"nodeType": "ArrayTypeName",
													"src": "2980:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2979:23:9"
									},
									"scope": 1696,
									"src": "2831:172:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3024:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3024:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3038:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3038:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3053:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3053:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3023:44:9"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3091:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3091:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3090:14:9"
									},
									"scope": 1696,
									"src": "3009:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3132:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3132:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3147:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3147:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3163:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3163:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:48:9"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3203:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3203:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:16:9"
									},
									"scope": 1696,
									"src": "3110:109:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3245:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3245:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3261:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3261:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3277:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3277:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3244:49:9"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3317:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3317:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:15:9"
									},
									"scope": 1696,
									"src": "3224:108:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3360:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3360:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3375:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1676,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3375:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1677,
													"nodeType": "ArrayTypeName",
													"src": "3375:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3359:40:9"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3423:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1680,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3423:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1681,
													"nodeType": "ArrayTypeName",
													"src": "3423:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3422:23:9"
									},
									"scope": 1696,
									"src": "3337:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3473:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3473:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3489:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3489:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1688,
													"nodeType": "ArrayTypeName",
													"src": "3489:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:41:9"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3537:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1691,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3537:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1692,
													"nodeType": "ArrayTypeName",
													"src": "3537:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:23:9"
									},
									"scope": 1696,
									"src": "3451:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1697,
							"src": "63:3499:9"
						}
					],
					"src": "37:3525:9"
				},
				"id": 9
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1696
						],
						"IUniswapV2Router02": [
							1784
						]
					},
					"id": 1785,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1698,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:10"
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1699,
							"nodeType": "ImportDirective",
							"scope": 1785,
							"sourceUnit": 1697,
							"src": "63:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1700,
										"name": "IUniswapV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1696,
										"src": "131:18:10"
									},
									"id": 1701,
									"nodeType": "InheritanceSpecifier",
									"src": "131:18:10"
								}
							],
							"contractDependencies": [
								1696
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1784,
							"linearizedBaseContracts": [
								1784,
								1696
							],
							"name": "IUniswapV2Router02",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "222:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "245:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "245:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "269:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "298:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "298:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "325:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "345:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:152:10"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "383:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "383:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:16:10"
									},
									"scope": 1784,
									"src": "156:243:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "480:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "503:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "503:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "527:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "527:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "556:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "556:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "583:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "603:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "603:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "626:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "626:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "643:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1733,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "643:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "652:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "663:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:208:10"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "697:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "697:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:16:10"
									},
									"scope": 1784,
									"src": "404:309:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "791:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "814:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "841:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1748,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "841:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1749,
													"nodeType": "ArrayTypeName",
													"src": "841:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "874:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "894:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "894:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:132:10"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:0:10"
									},
									"scope": 1784,
									"src": "719:204:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "997:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1024:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1760,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1024:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1761,
													"nodeType": "ArrayTypeName",
													"src": "1024:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1057:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1077:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:109:10"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:0:10"
									},
									"scope": 1784,
									"src": "928:186:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1188:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1188:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1211:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1211:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1238:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1774,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1238:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1775,
													"nodeType": "ArrayTypeName",
													"src": "1238:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1271:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1291:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1291:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:132:10"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1319:0:10"
									},
									"scope": 1784,
									"src": "1119:201:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1785,
							"src": "99:1223:10"
						}
					],
					"src": "37:1285:10"
				},
				"id": 10
			},
			"contracts/helperLogic.sol": {
				"ast": {
					"absolutePath": "contracts/helperLogic.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						],
						"ContextUpgradeable": [
							761
						],
						"IERC20Upgradeable": [
							248
						],
						"IFarm": [
							1804
						],
						"IStabilizer": [
							1810
						],
						"IUniswapV2Factory": [
							1146
						],
						"IUniswapV2Pair": [
							1388
						],
						"IUniswapV2Router01": [
							1696
						],
						"IUniswapV2Router02": [
							1784
						],
						"Initializable": [
							170
						],
						"OwnableUpgradeable": [
							125
						],
						"SafeERC20Upgradeable": [
							472
						],
						"SafeMathUpgradeable": [
							1073
						],
						"helperLogic": [
							2567
						]
					},
					"id": 2568,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1786,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 1787,
							"nodeType": "ImportDirective",
							"scope": 2568,
							"sourceUnit": 249,
							"src": "55:79:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 1788,
							"nodeType": "ImportDirective",
							"scope": 2568,
							"sourceUnit": 473,
							"src": "135:88:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1789,
							"nodeType": "ImportDirective",
							"scope": 2568,
							"sourceUnit": 171,
							"src": "224:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1790,
							"nodeType": "ImportDirective",
							"scope": 2568,
							"sourceUnit": 126,
							"src": "300:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"id": 1791,
							"nodeType": "ImportDirective",
							"scope": 2568,
							"sourceUnit": 1074,
							"src": "376:80:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
							"id": 1792,
							"nodeType": "ImportDirective",
							"scope": 2568,
							"sourceUnit": 1389,
							"src": "458:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
							"id": 1793,
							"nodeType": "ImportDirective",
							"scope": 2568,
							"sourceUnit": 1147,
							"src": "534:78:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
							"id": 1794,
							"nodeType": "ImportDirective",
							"scope": 2568,
							"sourceUnit": 1785,
							"src": "613:79:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1804,
							"linearizedBaseContracts": [
								1804
							],
							"name": "IFarm",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "46ca6bea",
									"id": 1803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "742:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "764:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "793:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:83:11"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "824:0:11"
									},
									"scope": 1804,
									"src": "716:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2568,
							"src": "694:133:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1810,
							"linearizedBaseContracts": [
								1810
							],
							"name": "IStabilizer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "796c7be7",
									"id": 1809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "goStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:2:11"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "899:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "899:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:6:11"
									},
									"scope": 1810,
									"src": "857:48:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2568,
							"src": "829:78:11"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1811,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "933:13:11"
									},
									"id": 1812,
									"nodeType": "InheritanceSpecifier",
									"src": "933:13:11"
								},
								{
									"baseName": {
										"id": 1813,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "948:18:11"
									},
									"id": 1814,
									"nodeType": "InheritanceSpecifier",
									"src": "948:18:11"
								}
							],
							"contractDependencies": [
								125,
								170,
								761
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2567,
							"linearizedBaseContracts": [
								2567,
								125,
								761,
								170
							],
							"name": "helperLogic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1818,
									"libraryName": {
										"id": 1815,
										"name": "SafeERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "979:20:11"
									},
									"nodeType": "UsingForDirective",
									"src": "973:49:11",
									"typeName": {
										"id": 1817,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1816,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1004:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1004:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									}
								},
								{
									"id": 1821,
									"libraryName": {
										"id": 1819,
										"name": "SafeMathUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1073,
										"src": "1033:19:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1027:38:11",
									"typeName": {
										"id": 1820,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1057:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "48c7e528",
									"id": 1825,
									"mutability": "mutable",
									"name": "executor",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1086:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1824,
										"keyType": {
											"id": 1822,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1094:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1086:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1823,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1105:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3011d3d5",
									"id": 1828,
									"mutability": "mutable",
									"name": "usc",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1132:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1827,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1826,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1132:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1132:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e413bee",
									"id": 1831,
									"mutability": "mutable",
									"name": "usdc",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1166:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1830,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1829,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1166:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1166:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ecaac41",
									"id": 1834,
									"mutability": "mutable",
									"name": "sea",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1201:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1833,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1832,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1201:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1201:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8bb97a1",
									"id": 1837,
									"mutability": "mutable",
									"name": "ssea",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1235:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1836,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1835,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1235:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1235:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec1f1f69",
									"id": 1839,
									"mutability": "mutable",
									"name": "op",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1270:17:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1838,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1270:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "91cca3db",
									"id": 1841,
									"mutability": "mutable",
									"name": "dev",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1293:18:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1840,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1293:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f6d7eade",
									"id": 1844,
									"mutability": "mutable",
									"name": "Router",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1318:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1843,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1842,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1784,
											"src": "1318:18:11"
										},
										"referencedDeclaration": 1784,
										"src": "1318:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c83dd231",
									"id": 1847,
									"mutability": "mutable",
									"name": "Factory",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1356:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
										"typeString": "contract IUniswapV2Factory"
									},
									"typeName": {
										"id": 1846,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1845,
											"name": "IUniswapV2Factory",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1146,
											"src": "1356:17:11"
										},
										"referencedDeclaration": 1146,
										"src": "1356:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
											"typeString": "contract IUniswapV2Factory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bd0b1f44",
									"id": 1849,
									"mutability": "mutable",
									"name": "toSseaPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1395:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1848,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1395:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c535a52",
									"id": 1851,
									"mutability": "mutable",
									"name": "toOpPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1429:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1850,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1429:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ae6a027",
									"id": 1853,
									"mutability": "mutable",
									"name": "toDevPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1461:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1852,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1461:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aaf5eb68",
									"id": 1855,
									"mutability": "mutable",
									"name": "PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1494:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1494:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16d03993",
									"id": 1857,
									"mutability": "mutable",
									"name": "basePoint",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1525:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1856,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1525:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f1068454",
									"id": 1859,
									"mutability": "mutable",
									"name": "pid",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1555:18:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1858,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1555:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36e9332d",
									"id": 1862,
									"mutability": "mutable",
									"name": "farm",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1580:17:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFarm_$1804",
										"typeString": "contract IFarm"
									},
									"typeName": {
										"id": 1861,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1860,
											"name": "IFarm",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1804,
											"src": "1580:5:11"
										},
										"referencedDeclaration": 1804,
										"src": "1580:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFarm_$1804",
											"typeString": "contract IFarm"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9da5b0d5",
									"id": 1864,
									"mutability": "mutable",
									"name": "autoAdjustFarm",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1604:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1863,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1604:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "58de5de8",
									"id": 1866,
									"mutability": "mutable",
									"name": "openStabilizer",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1636:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1865,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1636:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e47961c",
									"id": 1868,
									"mutability": "mutable",
									"name": "stabilizer",
									"nodeType": "VariableDeclaration",
									"scope": 2567,
									"src": "1669:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1867,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1669:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "2057:528:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1894,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2067:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "2067:16:11"
											},
											{
												"expression": {
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1897,
														"name": "Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "2137:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1898,
														"name": "_Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "2146:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "2137:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "2137:16:11"
											},
											{
												"expression": {
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1901,
														"name": "Factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "2163:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
															"typeString": "contract IUniswapV2Factory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1902,
														"name": "_Factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1871,
														"src": "2173:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
															"typeString": "contract IUniswapV2Factory"
														}
													},
													"src": "2163:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
														"typeString": "contract IUniswapV2Factory"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "2163:18:11"
											},
											{
												"expression": {
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1905,
														"name": "usc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "2191:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1906,
														"name": "_usc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "2197:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2191:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1908,
												"nodeType": "ExpressionStatement",
												"src": "2191:10:11"
											},
											{
												"expression": {
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1909,
														"name": "sea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "2211:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1910,
														"name": "_sea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "2217:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2211:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "2211:10:11"
											},
											{
												"expression": {
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1913,
														"name": "ssea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "2231:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1914,
														"name": "_ssea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "2238:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2231:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "2231:12:11"
											},
											{
												"expression": {
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1917,
														"name": "op",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "2253:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1918,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2258:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2258:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2253:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "2253:15:11"
											},
											{
												"expression": {
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1922,
														"name": "dev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "2278:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1923,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2284:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2284:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2278:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "2278:16:11"
											},
											{
												"expression": {
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1927,
														"name": "toSseaPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "2304:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35303030",
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000_by_1",
															"typeString": "int_const 5000"
														},
														"value": "5000"
													},
													"src": "2304:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1930,
												"nodeType": "ExpressionStatement",
												"src": "2304:20:11"
											},
											{
												"expression": {
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1931,
														"name": "toOpPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "2334:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030",
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2348:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500_by_1",
															"typeString": "int_const 2500"
														},
														"value": "2500"
													},
													"src": "2334:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "2334:18:11"
											},
											{
												"expression": {
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1935,
														"name": "toDevPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "2362:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030",
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500_by_1",
															"typeString": "int_const 2500"
														},
														"value": "2500"
													},
													"src": "2362:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "2362:19:11"
											},
											{
												"expression": {
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1939,
														"name": "PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "2391:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030",
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2403:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2391:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "2391:17:11"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1943,
														"name": "basePoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "2418:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2430:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2418:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "2418:16:11"
											},
											{
												"expression": {
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1947,
														"name": "autoAdjustFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2444:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2461:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2444:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "2444:21:11"
											},
											{
												"expression": {
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1951,
														"name": "openStabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "2475:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2492:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2475:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "2475:22:11"
											},
											{
												"expression": {
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1955,
														"name": "farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "2507:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1956,
														"name": "_farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "2514:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"src": "2507:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "2507:12:11"
											},
											{
												"expression": {
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1959,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "2529:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1960,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "2536:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2529:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "2529:12:11"
											}
										]
									},
									"functionSelector": "35876476",
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1892,
											"modifierName": {
												"id": 1891,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "2041:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2041:11:11"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "_Factory",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1765:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
													"typeString": "contract IUniswapV2Factory"
												},
												"typeName": {
													"id": 1870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1869,
														"name": "IUniswapV2Factory",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1146,
														"src": "1765:17:11"
													},
													"referencedDeclaration": 1146,
													"src": "1765:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
														"typeString": "contract IUniswapV2Factory"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "_Router",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1801:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
													"typeString": "contract IUniswapV2Router02"
												},
												"typeName": {
													"id": 1873,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1872,
														"name": "IUniswapV2Router02",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1784,
														"src": "1801:18:11"
													},
													"referencedDeclaration": 1784,
													"src": "1801:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "_usc",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1837:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1875,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1837:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1837:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "_usdc",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1869:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1879,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1878,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1869:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1869:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "_sea",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1902:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1882,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1881,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1902:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1902:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "_ssea",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1934:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1884,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1934:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1934:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "_farm",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1967:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFarm_$1804",
													"typeString": "contract IFarm"
												},
												"typeName": {
													"id": 1888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1887,
														"name": "IFarm",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1804,
														"src": "1967:5:11"
													},
													"referencedDeclaration": 1804,
													"src": "1967:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:264:11"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:11"
									},
									"scope": 2567,
									"src": "1701:884:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "2704:64:11",
										"statements": [
											{
												"expression": {
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1975,
															"name": "executor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "2714:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1977,
														"indexExpression": {
															"id": 1976,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "2723:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2714:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1978,
														"name": "_type",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "2735:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "2714:26:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2757:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1974,
												"id": 1982,
												"nodeType": "Return",
												"src": "2750:11:11"
											}
										]
									},
									"functionSelector": "1e1bff3f",
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1971,
											"modifierName": {
												"id": 1970,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "2667:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2667:9:11"
										}
									],
									"name": "setExecutor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2612:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2612:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "_type",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2630:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2630:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2611:30:11"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2694:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2694:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:6:11"
									},
									"scope": 2567,
									"src": "2591:177:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "2798:97:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1987,
																"name": "executor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "2816:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1990,
															"indexExpression": {
																"expression": {
																	"id": 1988,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2825:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2825:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2816:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6578656375746f723a2063616c6c6572206973206e6f7420746865206578656375746f72",
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2838:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a",
																"typeString": "literal_string \"executor: caller is not the executor\""
															},
															"value": "executor: caller is not the executor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a",
																"typeString": "literal_string \"executor: caller is not the executor\""
															}
														],
														"id": 1986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2808:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2808:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "2808:69:11"
											},
											{
												"id": 1994,
												"nodeType": "PlaceholderStatement",
												"src": "2887:1:11"
											}
										]
									},
									"id": 1996,
									"name": "onlyExecutor",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2795:2:11"
									},
									"src": "2774:121:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "3052:238:11",
										"statements": [
											{
												"assignments": [
													2008
												],
												"declarations": [
													{
														"constant": false,
														"id": 2008,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "3062:23:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3062:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2013,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "393937",
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3101:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															},
															"value": "997"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															}
														],
														"expression": {
															"id": 2009,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "3088:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 967,
														"src": "3088:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3062:43:11"
											},
											{
												"assignments": [
													2015
												],
												"declarations": [
													{
														"constant": false,
														"id": 2015,
														"mutability": "mutable",
														"name": "numerator",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "3115:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2014,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3115:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2020,
												"initialValue": {
													"arguments": [
														{
															"id": 2018,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "3155:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2016,
															"name": "amountInWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3135:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 967,
														"src": "3135:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3135:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3115:51:11"
											},
											{
												"assignments": [
													2022
												],
												"declarations": [
													{
														"constant": false,
														"id": 2022,
														"mutability": "mutable",
														"name": "denominator",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "3176:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2021,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3176:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2030,
												"initialValue": {
													"arguments": [
														{
															"id": 2028,
															"name": "amountInWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3222:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31303030",
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3212:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"expression": {
																	"id": 2023,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "3198:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "3198:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3198:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 937,
														"src": "3198:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3198:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3176:62:11"
											},
											{
												"expression": {
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2031,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "3248:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2032,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "3260:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2033,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "3272:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3260:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3248:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2036,
												"nodeType": "ExpressionStatement",
												"src": "3248:35:11"
											}
										]
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2932:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2958:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2958:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2985:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2985:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2922:87:11"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "3033:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:19:11"
									},
									"scope": 2567,
									"src": "2901:389:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "3355:883:11",
										"statements": [
											{
												"assignments": [
													2046
												],
												"declarations": [
													{
														"constant": false,
														"id": 2046,
														"mutability": "mutable",
														"name": "sea_usc_lpAddress",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3365:25:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2045,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3365:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2058,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2051,
																	"name": "sea",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "3417:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3409:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2049,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3409:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3409:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2055,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "3431:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3423:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2053,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3423:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3423:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2047,
															"name": "Factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "3393:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1109,
														"src": "3393:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) view external returns (address)"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3393:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3365:71:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2062,
															"name": "sea_usc_lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "3463:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2063,
															"name": "uscAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "3482:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2059,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "3446:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "3446:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3446:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2065,
												"nodeType": "ExpressionStatement",
												"src": "3446:43:11"
											},
											{
												"assignments": [
													2067,
													2069,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2067,
														"mutability": "mutable",
														"name": "reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3500:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3500:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2069,
														"mutability": "mutable",
														"name": "reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3518:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2068,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3518:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2075,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2071,
																	"name": "sea_usc_lpAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "3568:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2070,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3540:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1388_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3540:55:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1388",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1330,
														"src": "3540:67:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3540:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3499:110:11"
											},
											{
												"assignments": [
													2077
												],
												"declarations": [
													{
														"constant": false,
														"id": 2077,
														"mutability": "mutable",
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3619:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2076,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3619:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2083,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2079,
																	"name": "sea_usc_lpAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "3651:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2078,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3636:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1388_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3636:33:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1388",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1316,
														"src": "3636:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3636:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3619:59:11"
											},
											{
												"assignments": [
													2085,
													2087
												],
												"declarations": [
													{
														"constant": false,
														"id": 2085,
														"mutability": "mutable",
														"name": "reserveIn",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3689:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2084,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3689:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2087,
														"mutability": "mutable",
														"name": "reserveOut",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3708:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2086,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3708:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2101,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2088,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "3730:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2091,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "3748:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3740:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2089,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3740:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3730:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 2097,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "3803:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2098,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "3813:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2099,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3802:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3730:92:11",
													"trueExpression": {
														"components": [
															{
																"id": 2094,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "3768:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2095,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "3778:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2096,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3767:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3688:134:11"
											},
											{
												"assignments": [
													2103
												],
												"declarations": [
													{
														"constant": false,
														"id": 2103,
														"mutability": "mutable",
														"name": "amountOut",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3832:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3832:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2109,
												"initialValue": {
													"arguments": [
														{
															"id": 2105,
															"name": "uscAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "3865:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2106,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "3873:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2107,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "3884:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2104,
														"name": "getAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "3852:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3852:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3832:63:11"
											},
											{
												"assignments": [
													2111,
													2113
												],
												"declarations": [
													{
														"constant": false,
														"id": 2111,
														"mutability": "mutable",
														"name": "amount0Out",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3906:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3906:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2113,
														"mutability": "mutable",
														"name": "amount1Out",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3926:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3926:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2133,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2114,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "3948:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2117,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "3966:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3958:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2115,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3958:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3958:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3948:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 2126,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "4024:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4043:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4035:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2127,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4035:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4035:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2131,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4023:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3948:98:11",
													"trueExpression": {
														"components": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3994:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3986:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2120,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3986:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3986:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2124,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "3998:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2125,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3985:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3905:141:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2138,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "4108:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2139,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "4132:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2142,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4164:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_helperLogic_$2567",
																		"typeString": "contract helperLogic"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_helperLogic_$2567",
																		"typeString": "contract helperLogic"
																	}
																],
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4156:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2140,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4156:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4156:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4193:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "4183:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 2144,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "4187:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4183:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2135,
																	"name": "sea_usc_lpAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "4071:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2134,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "4056:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1388_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4056:33:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1388",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1372,
														"src": "4056:38:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,address,bytes memory) external"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4056:149:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "4056:149:11"
											},
											{
												"expression": {
													"id": 2150,
													"name": "amountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2103,
													"src": "4222:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2044,
												"id": 2151,
												"nodeType": "Return",
												"src": "4215:16:11"
											}
										]
									},
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buySea",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "uscAmt",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "3312:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3312:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:16:11"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "3346:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3346:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3345:9:11"
									},
									"scope": 2567,
									"src": "3296:942:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2253,
										"nodeType": "Block",
										"src": "4307:635:11",
										"statements": [
											{
												"assignments": [
													2161
												],
												"declarations": [
													{
														"constant": false,
														"id": 2161,
														"mutability": "mutable",
														"name": "uscBalanceOf",
														"nodeType": "VariableDeclaration",
														"scope": 2253,
														"src": "4317:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4317:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2169,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2166,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4362:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_helperLogic_$2567",
																		"typeString": "contract helperLogic"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_helperLogic_$2567",
																		"typeString": "contract helperLogic"
																	}
																],
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4354:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2164,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4354:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4354:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2162,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "4340:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "4340:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4340:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4317:51:11"
											},
											{
												"assignments": [
													2171
												],
												"declarations": [
													{
														"constant": false,
														"id": 2171,
														"mutability": "mutable",
														"name": "toSsea",
														"nodeType": "VariableDeclaration",
														"scope": 2253,
														"src": "4378:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4378:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2179,
												"initialValue": {
													"arguments": [
														{
															"id": 2177,
															"name": "PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "4431:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2174,
																	"name": "toSseaPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "4412:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2172,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "4395:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "4395:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4395:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "4395:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4395:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4378:63:11"
											},
											{
												"assignments": [
													2181
												],
												"declarations": [
													{
														"constant": false,
														"id": 2181,
														"mutability": "mutable",
														"name": "toOp",
														"nodeType": "VariableDeclaration",
														"scope": 2253,
														"src": "4451:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4451:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2189,
												"initialValue": {
													"arguments": [
														{
															"id": 2187,
															"name": "PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "4500:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2184,
																	"name": "toOpPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "4483:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2182,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "4466:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "4466:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4466:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "4466:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4466:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4451:59:11"
											},
											{
												"assignments": [
													2191
												],
												"declarations": [
													{
														"constant": false,
														"id": 2191,
														"mutability": "mutable",
														"name": "toDev",
														"nodeType": "VariableDeclaration",
														"scope": 2253,
														"src": "4520:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4520:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2199,
												"initialValue": {
													"arguments": [
														{
															"id": 2197,
															"name": "toOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "4565:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2194,
																	"name": "toSsea",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2171,
																	"src": "4553:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2192,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "4536:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 952,
																"src": "4536:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4536:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "4536:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4536:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4520:50:11"
											},
											{
												"assignments": [
													2201
												],
												"declarations": [
													{
														"constant": false,
														"id": 2201,
														"mutability": "mutable",
														"name": "seaAmt",
														"nodeType": "VariableDeclaration",
														"scope": 2253,
														"src": "4581:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2200,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4581:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2205,
												"initialValue": {
													"arguments": [
														{
															"id": 2203,
															"name": "toSsea",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2171,
															"src": "4605:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2202,
														"name": "buySea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "4598:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) returns (uint256)"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4598:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4581:31:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2211,
																	"name": "ssea",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "4647:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4639:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2209,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4639:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4639:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2213,
															"name": "seaAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "4654:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2206,
															"name": "sea",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "4622:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4622:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4622:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2215,
												"nodeType": "ExpressionStatement",
												"src": "4622:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2221,
																	"name": "op",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "4696:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4688:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2219,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4688:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4688:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2223,
															"name": "toOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "4701:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2216,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "4671:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4671:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4671:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2225,
												"nodeType": "ExpressionStatement",
												"src": "4671:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2231,
																	"name": "dev",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "4741:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4733:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2229,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4733:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4733:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2233,
															"name": "toDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "4747:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2226,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "4716:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4716:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4716:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "4716:37:11"
											},
											{
												"condition": {
													"id": 2236,
													"name": "autoAdjustFarm",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1864,
													"src": "4768:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2241,
												"nodeType": "IfStatement",
												"src": "4764:57:11",
												"trueBody": {
													"id": 2240,
													"nodeType": "Block",
													"src": "4784:37:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2237,
																	"name": "adjustFarm",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2365,
																	"src": "4798:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4798:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2239,
															"nodeType": "ExpressionStatement",
															"src": "4798:12:11"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2242,
													"name": "openStabilizer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1866,
													"src": "4835:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2250,
												"nodeType": "IfStatement",
												"src": "4831:83:11",
												"trueBody": {
													"id": 2249,
													"nodeType": "Block",
													"src": "4851:63:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2244,
																				"name": "stabilizer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1868,
																				"src": "4877:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2243,
																			"name": "IStabilizer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "4865:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IStabilizer_$1810_$",
																				"typeString": "type(contract IStabilizer)"
																			}
																		},
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4865:23:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IStabilizer_$1810",
																			"typeString": "contract IStabilizer"
																		}
																	},
																	"id": 2246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "goStabilizer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1809,
																	"src": "4865:36:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
																		"typeString": "function () external returns (bool)"
																	}
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:38:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2248,
															"nodeType": "ExpressionStatement",
															"src": "4865:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4931:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2159,
												"id": 2252,
												"nodeType": "Return",
												"src": "4924:11:11"
											}
										]
									},
									"functionSelector": "d10c06a2",
									"id": 2254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2156,
											"modifierName": {
												"id": 2155,
												"name": "onlyExecutor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1996,
												"src": "4279:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4279:12:11"
										}
									],
									"name": "jointExecution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4267:2:11"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "4301:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4301:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4300:6:11"
									},
									"scope": 2567,
									"src": "4244:698:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "4979:877:11",
										"statements": [
											{
												"assignments": [
													2258
												],
												"declarations": [
													{
														"constant": false,
														"id": 2258,
														"mutability": "mutable",
														"name": "pairAddress",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "4989:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2257,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4989:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2270,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2263,
																	"name": "usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "5035:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5027:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2261,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5027:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5027:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2267,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "5050:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5042:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2265,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5042:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5042:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2259,
															"name": "Factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "5011:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 2260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1109,
														"src": "5011:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) view external returns (address)"
														}
													},
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5011:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4989:66:11"
											},
											{
												"assignments": [
													2272
												],
												"declarations": [
													{
														"constant": false,
														"id": 2272,
														"mutability": "mutable",
														"name": "uscBalanceOf",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "5065:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5065:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2277,
												"initialValue": {
													"arguments": [
														{
															"id": 2275,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "5102:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2273,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "5088:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "5088:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5088:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5065:49:11"
											},
											{
												"assignments": [
													2279
												],
												"declarations": [
													{
														"constant": false,
														"id": 2279,
														"mutability": "mutable",
														"name": "usdcBalanceOf",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "5124:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5124:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2284,
												"initialValue": {
													"arguments": [
														{
															"id": 2282,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "5163:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2280,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "5148:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "5148:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5124:51:11"
											},
											{
												"assignments": [
													2286
												],
												"declarations": [
													{
														"constant": false,
														"id": 2286,
														"mutability": "mutable",
														"name": "e18",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "5185:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5185:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2288,
												"initialValue": {
													"hexValue": "31653138",
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5199:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5185:18:11"
											},
											{
												"assignments": [
													2290
												],
												"declarations": [
													{
														"constant": false,
														"id": 2290,
														"mutability": "mutable",
														"name": "uscPrice",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "5213:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2289,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5213:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2298,
												"initialValue": {
													"arguments": [
														{
															"id": 2296,
															"name": "uscBalanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "5259:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2293,
																	"name": "e18",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2286,
																	"src": "5250:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2291,
																	"name": "usdcBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2279,
																	"src": "5232:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "5232:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5232:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "5232:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5232:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5213:59:11"
											},
											{
												"assignments": [
													2300
												],
												"declarations": [
													{
														"constant": false,
														"id": 2300,
														"mutability": "mutable",
														"name": "USDC_USC_LP_farmPoint",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "5282:29:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2299,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5282:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2301,
												"nodeType": "VariableDeclarationStatement",
												"src": "5282:29:11"
											},
											{
												"assignments": [
													2303
												],
												"declarations": [
													{
														"constant": false,
														"id": 2303,
														"mutability": "mutable",
														"name": "diffPoint",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "5321:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2302,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5321:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2304,
												"nodeType": "VariableDeclarationStatement",
												"src": "5321:17:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2305,
														"name": "uscPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2290,
														"src": "5352:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5363:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "5352:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2354,
													"nodeType": "Block",
													"src": "5648:146:11",
													"statements": [
														{
															"expression": {
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2337,
																	"name": "diffPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2303,
																	"src": "5682:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653134",
																			"id": 2343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5716:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			},
																			"value": "1e14"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2340,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31653138",
																						"id": 2338,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5695:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"value": "1e18"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 2339,
																						"name": "uscPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2290,
																						"src": "5702:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5695:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2341,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5694:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 982,
																		"src": "5694:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5694:27:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5682:39:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2346,
															"nodeType": "ExpressionStatement",
															"src": "5682:39:11"
														},
														{
															"expression": {
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2347,
																	"name": "USDC_USC_LP_farmPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "5735:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2350,
																			"name": "diffPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2303,
																			"src": "5773:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2348,
																			"name": "basePoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "5759:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 937,
																		"src": "5759:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5759:24:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5735:48:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2353,
															"nodeType": "ExpressionStatement",
															"src": "5735:48:11"
														}
													]
												},
												"id": 2355,
												"nodeType": "IfStatement",
												"src": "5348:446:11",
												"trueBody": {
													"id": 2336,
													"nodeType": "Block",
													"src": "5369:273:11",
													"statements": [
														{
															"expression": {
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2308,
																	"name": "diffPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2303,
																	"src": "5404:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653134",
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5441:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			},
																			"value": "1e14"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"hexValue": "31653138",
																							"id": 2311,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5430:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"id": 2309,
																							"name": "uscPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2290,
																							"src": "5417:8:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2310,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 952,
																						"src": "5417:12:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2312,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5417:18:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2313,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5416:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 982,
																		"src": "5416:24:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5416:30:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5404:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2318,
															"nodeType": "ExpressionStatement",
															"src": "5404:42:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2319,
																	"name": "diffPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2303,
																	"src": "5464:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2320,
																	"name": "basePoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "5476:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5464:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2334,
																"nodeType": "Block",
																"src": "5551:81:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2327,
																				"name": "USDC_USC_LP_farmPoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "5569:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2330,
																						"name": "diffPoint",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2303,
																						"src": "5607:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2328,
																						"name": "basePoint",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1857,
																						"src": "5593:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2329,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 952,
																					"src": "5593:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5593:24:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5569:48:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2333,
																		"nodeType": "ExpressionStatement",
																		"src": "5569:48:11"
																	}
																]
															},
															"id": 2335,
															"nodeType": "IfStatement",
															"src": "5460:172:11",
															"trueBody": {
																"id": 2326,
																"nodeType": "Block",
																"src": "5487:58:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2322,
																				"name": "USDC_USC_LP_farmPoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "5505:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 2323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5529:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5505:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2325,
																		"nodeType": "ExpressionStatement",
																		"src": "5505:25:11"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2359,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "5816:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2360,
															"name": "USDC_USC_LP_farmPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2300,
															"src": "5821:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5844:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 2356,
															"name": "farm",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "5803:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFarm_$1804",
																"typeString": "contract IFarm"
															}
														},
														"id": 2358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1803,
														"src": "5803:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,bool) external"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5803:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2363,
												"nodeType": "ExpressionStatement",
												"src": "5803:46:11"
											}
										]
									},
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "adjustFarm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4967:2:11"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4979:0:11"
									},
									"scope": 2567,
									"src": "4948:908:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2387,
										"nodeType": "Block",
										"src": "5981:96:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2380,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6032:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6032:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2382,
															"name": "_amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2369,
															"src": "6044:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2377,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2367,
																	"src": "6009:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2376,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "5991:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$248_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5991:27:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "5991:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5991:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2384,
												"nodeType": "ExpressionStatement",
												"src": "5991:58:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6066:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2375,
												"id": 2386,
												"nodeType": "Return",
												"src": "6059:11:11"
											}
										]
									},
									"functionSelector": "930ed033",
									"id": 2388,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2372,
											"modifierName": {
												"id": 2371,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5944:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5944:9:11"
										}
									],
									"name": "withdrawalERC20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "5887:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5887:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "_amt",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "5905:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5905:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5886:32:11"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "5971:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5971:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5970:6:11"
									},
									"scope": 2567,
									"src": "5862:215:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2403,
										"nodeType": "Block",
										"src": "6150:51:11",
										"statements": [
											{
												"expression": {
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2397,
														"name": "op",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "6160:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2398,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2390,
														"src": "6165:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6160:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2400,
												"nodeType": "ExpressionStatement",
												"src": "6160:13:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6190:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2396,
												"id": 2402,
												"nodeType": "Return",
												"src": "6183:11:11"
											}
										]
									},
									"functionSelector": "a36a7526",
									"id": 2404,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2393,
											"modifierName": {
												"id": 2392,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6125:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6125:9:11"
										}
									],
									"name": "setOp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "6098:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6098:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6097:18:11"
									},
									"returnParameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "6144:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6144:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6143:6:11"
									},
									"scope": 2567,
									"src": "6083:118:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2419,
										"nodeType": "Block",
										"src": "6275:52:11",
										"statements": [
											{
												"expression": {
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2413,
														"name": "dev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "6285:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2414,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2406,
														"src": "6291:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6285:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2416,
												"nodeType": "ExpressionStatement",
												"src": "6285:14:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6316:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2412,
												"id": 2418,
												"nodeType": "Return",
												"src": "6309:11:11"
											}
										]
									},
									"functionSelector": "d477f05f",
									"id": 2420,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2409,
											"modifierName": {
												"id": 2408,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6250:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6250:9:11"
										}
									],
									"name": "setDev",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2420,
												"src": "6223:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6223:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6222:18:11"
									},
									"returnParameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2420,
												"src": "6269:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6269:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6268:6:11"
									},
									"scope": 2567,
									"src": "6207:120:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2435,
										"nodeType": "Block",
										"src": "6407:58:11",
										"statements": [
											{
												"expression": {
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2429,
														"name": "toSseaPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "6417:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2430,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2422,
														"src": "6433:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6417:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2432,
												"nodeType": "ExpressionStatement",
												"src": "6417:20:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6454:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2428,
												"id": 2434,
												"nodeType": "Return",
												"src": "6447:11:11"
											}
										]
									},
									"functionSelector": "27c42a50",
									"id": 2436,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2425,
											"modifierName": {
												"id": 2424,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6382:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6382:9:11"
										}
									],
									"name": "setToSseaPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "6359:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:14:11"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "6401:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6401:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6400:6:11"
									},
									"scope": 2567,
									"src": "6333:132:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2451,
										"nodeType": "Block",
										"src": "6543:56:11",
										"statements": [
											{
												"expression": {
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2445,
														"name": "toOpPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "6553:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2446,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2438,
														"src": "6567:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6553:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2448,
												"nodeType": "ExpressionStatement",
												"src": "6553:18:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6588:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2444,
												"id": 2450,
												"nodeType": "Return",
												"src": "6581:11:11"
											}
										]
									},
									"functionSelector": "af5518c4",
									"id": 2452,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2441,
											"modifierName": {
												"id": 2440,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6518:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6518:9:11"
										}
									],
									"name": "setToOpPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "6495:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6495:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6494:14:11"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "6537:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6537:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6536:6:11"
									},
									"scope": 2567,
									"src": "6471:128:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2467,
										"nodeType": "Block",
										"src": "6678:57:11",
										"statements": [
											{
												"expression": {
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2461,
														"name": "toDevPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "6688:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2462,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "6703:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6688:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2464,
												"nodeType": "ExpressionStatement",
												"src": "6688:19:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6724:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2460,
												"id": 2466,
												"nodeType": "Return",
												"src": "6717:11:11"
											}
										]
									},
									"functionSelector": "3c850e1e",
									"id": 2468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2457,
											"modifierName": {
												"id": 2456,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6653:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6653:9:11"
										}
									],
									"name": "setToDevPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "6630:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6630:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6629:14:11"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "6672:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6672:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6671:6:11"
									},
									"scope": 2567,
									"src": "6605:130:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2483,
										"nodeType": "Block",
										"src": "6814:60:11",
										"statements": [
											{
												"expression": {
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2477,
														"name": "autoAdjustFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "6824:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2478,
														"name": "_bool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2470,
														"src": "6841:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6824:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2480,
												"nodeType": "ExpressionStatement",
												"src": "6824:22:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2481,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6863:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2476,
												"id": 2482,
												"nodeType": "Return",
												"src": "6856:11:11"
											}
										]
									},
									"functionSelector": "4591db50",
									"id": 2484,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2473,
											"modifierName": {
												"id": 2472,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6789:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6789:9:11"
										}
									],
									"name": "setAutoAdjustFarm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "_bool",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "6768:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6768:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:12:11"
									},
									"returnParameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "6808:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:11"
									},
									"scope": 2567,
									"src": "6741:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2499,
										"nodeType": "Block",
										"src": "6953:60:11",
										"statements": [
											{
												"expression": {
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2493,
														"name": "openStabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "6963:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2494,
														"name": "_bool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2486,
														"src": "6980:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6963:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2496,
												"nodeType": "ExpressionStatement",
												"src": "6963:22:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7002:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2492,
												"id": 2498,
												"nodeType": "Return",
												"src": "6995:11:11"
											}
										]
									},
									"functionSelector": "55c746d1",
									"id": 2500,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2489,
											"modifierName": {
												"id": 2488,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6928:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6928:9:11"
										}
									],
									"name": "setOpenStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "_bool",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "6907:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6907:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6906:12:11"
									},
									"returnParameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "6947:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6947:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6946:6:11"
									},
									"scope": 2567,
									"src": "6880:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2515,
										"nodeType": "Block",
										"src": "7094:59:11",
										"statements": [
											{
												"expression": {
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2509,
														"name": "stabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "7104:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2510,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2502,
														"src": "7117:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7104:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2512,
												"nodeType": "ExpressionStatement",
												"src": "7104:21:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2513,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7142:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2508,
												"id": 2514,
												"nodeType": "Return",
												"src": "7135:11:11"
											}
										]
									},
									"functionSelector": "db7f521a",
									"id": 2516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2505,
											"modifierName": {
												"id": 2504,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "7069:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7069:9:11"
										}
									],
									"name": "setStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "7042:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7042:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7041:18:11"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "7088:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7088:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:6:11"
									},
									"scope": 2567,
									"src": "7019:134:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2531,
										"nodeType": "Block",
										"src": "7223:48:11",
										"statements": [
											{
												"expression": {
													"id": 2527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2525,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "7233:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2526,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "7239:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7233:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2528,
												"nodeType": "ExpressionStatement",
												"src": "7233:10:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7260:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2524,
												"id": 2530,
												"nodeType": "Return",
												"src": "7253:11:11"
											}
										]
									},
									"functionSelector": "1b0d8aab",
									"id": 2532,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2521,
											"modifierName": {
												"id": 2520,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "7198:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7198:9:11"
										}
									],
									"name": "setPid",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "7175:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7175:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7174:14:11"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "7217:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7217:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:6:11"
									},
									"scope": 2567,
									"src": "7159:112:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2548,
										"nodeType": "Block",
										"src": "7388:50:11",
										"statements": [
											{
												"expression": {
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2542,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "7398:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2543,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2535,
														"src": "7405:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "7398:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 2545,
												"nodeType": "ExpressionStatement",
												"src": "7398:12:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7427:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2541,
												"id": 2547,
												"nodeType": "Return",
												"src": "7420:11:11"
											}
										]
									},
									"functionSelector": "aaf5bfc3",
									"id": 2549,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2538,
											"modifierName": {
												"id": 2537,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "7351:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7351:9:11"
										}
									],
									"name": "setUSDCAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "_usdc",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "7301:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 2534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2533,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "7301:17:11"
													},
													"referencedDeclaration": 248,
													"src": "7301:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7300:25:11"
									},
									"returnParameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "7378:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7378:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7377:6:11"
									},
									"scope": 2567,
									"src": "7277:161:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2565,
										"nodeType": "Block",
										"src": "7508:50:11",
										"statements": [
											{
												"expression": {
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2559,
														"name": "farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "7518:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2560,
														"name": "_farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2552,
														"src": "7525:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"src": "7518:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"id": 2562,
												"nodeType": "ExpressionStatement",
												"src": "7518:12:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7547:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2558,
												"id": 2564,
												"nodeType": "Return",
												"src": "7540:11:11"
											}
										]
									},
									"functionSelector": "d4f26c51",
									"id": 2566,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2555,
											"modifierName": {
												"id": 2554,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "7483:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7483:9:11"
										}
									],
									"name": "setFarm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "_farm",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "7461:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFarm_$1804",
													"typeString": "contract IFarm"
												},
												"typeName": {
													"id": 2551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2550,
														"name": "IFarm",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1804,
														"src": "7461:5:11"
													},
													"referencedDeclaration": 1804,
													"src": "7461:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7460:13:11"
									},
									"returnParameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "7502:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7502:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:6:11"
									},
									"scope": 2567,
									"src": "7444:114:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2568,
							"src": "909:6651:11"
						}
					],
					"src": "32:7529:11"
				},
				"id": 11
			}
		}
	}
}
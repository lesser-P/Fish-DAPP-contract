{
	"id": "7baabf0b29f6f6bcc244a1223eacc5b0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/helperLogic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\n\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\";\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\";\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\";\n\ninterface IFarm {\n    function setPool(\n        uint256 _pid,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) external;\n}\n\ninterface IStabilizer {\n    function goStabilizer() external returns (bool);\n}\n\ncontract helperLogic is Initializable, OwnableUpgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n    using SafeMathUpgradeable for uint256;\n\n    //Executor\n    mapping(address => bool) public executor;\n    IERC20Upgradeable public usc;\n    IERC20Upgradeable public usdc;\n    IERC20Upgradeable public sea;\n    IERC20Upgradeable public ssea;\n    address public op;\n    address public dev;\n\n    IUniswapV2Router02 public Router;\n    IUniswapV2Factory public Factory;\n\n    uint256 public toSseaPercent;\n    uint256 public toOpPercent;\n    uint256 public toDevPercent;\n    uint256 public PRECISION;\n\n    uint256 public basePoint;\n    uint256 public pid;\n\n    IFarm public farm;\n\n    bool public autoAdjustFarm;\n    bool public openStabilizer;\n\n    address public stabilizer;\n\n    function initialize(\n        // address _mirrorseaMain,\n        IUniswapV2Factory _Factory,\n        IUniswapV2Router02 _Router,\n        IERC20Upgradeable _usc,\n        IERC20Upgradeable _usdc,\n        IERC20Upgradeable _sea,\n        IERC20Upgradeable _ssea,\n        IFarm _farm\n    )\n        external\n        // address _stabilizer\n        initializer\n    {\n        __Ownable_init();\n        // executor[_mirrorseaMain] = true;\n        Router = _Router;\n        Factory = _Factory;\n        usc = _usc;\n        sea = _sea;\n        ssea = _ssea;\n        op = msg.sender;\n        dev = msg.sender;\n        toSseaPercent = 5000;\n        toOpPercent = 2500;\n        toDevPercent = 2500;\n        PRECISION = 10000;\n        basePoint = 1000;\n        autoAdjustFarm = true;\n        openStabilizer = false;\n        farm = _farm;\n        usdc = _usdc;\n        // stabilizer = _stabilizer;\n    }\n\n    function setExecutor(address _address, bool _type)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        executor[_address] = _type;\n        return true;\n    }\n\n    modifier onlyExecutor() {\n        require(executor[msg.sender], \"executor: caller is not the executor\");\n        _;\n    }\n\n    function jointExecution() external onlyExecutor returns (bool) {\n        uint256 uscBalanceOf = usc.balanceOf(address(this));\n        uint256 toSsea = uscBalanceOf.mul(toSseaPercent).div(PRECISION);\n        uint256 toOp = uscBalanceOf.mul(toOpPercent).div(PRECISION);\n        uint256 toDev = uscBalanceOf.sub(toSsea).sub(toOp);\n\n        usc.safeTransfer(address(ssea), toSsea);\n        usc.safeTransfer(address(op), toOp);\n        usc.safeTransfer(address(dev), toDev);\n\n        if (autoAdjustFarm) {\n            adjustFarm();\n        }\n\n        if (openStabilizer) {\n            IStabilizer(stabilizer).goStabilizer();\n        }\n\n        return true;\n    }\n\n    function adjustFarm() internal {\n        address pairAddress = Factory.getPair(address(usdc), address(usc));\n        // uint256 uscBalanceOf = usc.balanceOf(pairAddress);\n        // uint256 usdcBalanceOf = usdc.balanceOf(pairAddress);\n        // uint256 uscPrice = usdcBalanceOf.mul(1e18).div(uscBalanceOf);\n        // uint256 USDC_USC_LP_farmPoint;\n        // uint256 diffPoint;\n        // if (uscPrice > 1e18) {\n        //     //higt 1\n        //     diffPoint = (uscPrice.sub(1e18)).div(1e14);\n        //     if (diffPoint > basePoint) {\n        //         USDC_USC_LP_farmPoint = 0;\n        //     } else {\n        //         USDC_USC_LP_farmPoint = basePoint.sub(diffPoint);\n        //     }\n        // } else {\n        //     //low 1\n        //     diffPoint = (1e18 - uscPrice).div(1e14);\n        //     USDC_USC_LP_farmPoint = basePoint.add(diffPoint);\n        // }\n        // farm.setPool(pid, USDC_USC_LP_farmPoint, true);\n    }\n\n    function withdrawalERC20(address _address, uint256 _amt)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt);\n        return true;\n    }\n\n    function setOp(address _address) external onlyOwner returns (bool) {\n        op = _address;\n        return true;\n    }\n\n    function setDev(address _address) external onlyOwner returns (bool) {\n        dev = _address;\n        return true;\n    }\n\n    function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {\n        toSseaPercent = _val;\n        return true;\n    }\n\n    function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {\n        toOpPercent = _val;\n        return true;\n    }\n\n    function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {\n        toDevPercent = _val;\n        return true;\n    }\n\n    function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {\n        autoAdjustFarm = _bool;\n        return true;\n    }\n\n    function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {\n        openStabilizer = _bool;\n        return true;\n    }\n\n    function setStabilizer(address _address) external onlyOwner returns (bool) {\n        stabilizer = _address;\n        return true;\n    }\n\n    function setPid(uint256 _val) external onlyOwner returns (bool) {\n        pid = _val;\n        return true;\n    }\n\n    function setUSDCAddress(IERC20Upgradeable _usdc)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        usdc = _usdc;\n        return true;\n    }\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n    function migrator() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n    function setMigrator(address) external;\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMathUpgradeable {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal initializer {\n        __Context_init_unchained();\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal initializer {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.0;\n\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        require(_initializing || !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    function safeTransfer(\n        IERC20Upgradeable token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20Upgradeable token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal initializer {\n        __Context_init_unchained();\n    }\n\n    function __Context_init_unchained() internal initializer {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n    uint256[50] private __gap;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 124,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x2A LOG2 0xE7 0xF BLOCKHASH ORIGIN 0xEA PUSH31 0xCE6BC3109703F1FFD6DBFE4036E1B35C6D58456AFD9EC564736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "667:3358:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;667:3358:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x2A LOG2 0xE7 0xF BLOCKHASH ORIGIN 0xEA PUSH31 0xCE6BC3109703F1FFD6DBFE4036E1B35C6D58456AFD9EC564736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "667:3358:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
									".code": [
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":179:6969  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":179:6969  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x5E 0x5F BLOCKHASH 0xC9 0x4F 0xC0 SGT MSIZE PUSH24 0x103E57C2C3FF43FD9677A246F2877F83EE01753F390A6473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "179:6790:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:6790:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x5E 0x5F BLOCKHASH 0xC9 0x4F 0xC0 SGT MSIZE PUSH24 0x103E57C2C3FF43FD9677A246F2877F83EE01753F390A6473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "179:6790:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
									".code": [
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"SafeMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":467:6779  library SafeMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":467:6779  library SafeMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SGT PUSH5 0xF0CCAFFF09 PUSH17 0xBBA1DD59BC3AFE606CCC747E9960FEAAD4 0xCA 0xF7 0xD2 SWAP5 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6312:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6312:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SGT PUSH5 0xF0CCAFFF09 PUSH17 0xBBA1DD59BC3AFE606CCC747E9960FEAAD4 0xCA 0xF7 0xD2 SWAP5 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6312:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
									".code": [
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":\"SafeMathUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"migrator()": "7cd07e47",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6",
							"setMigrator(address)": "23cf3118"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/helperLogic.sol": {
				"IFarm": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "setPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setPool(uint256,uint256,bool)": "46ca6bea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"IFarm\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0x841a9d6c4dca7bf27687dc7bfe898c618d329a07573277291a4a20443ab6cf98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35d7b6a6b740a8a82e505708863b4a46529b157261f8767680752215a7499ee8\",\"dweb:/ipfs/QmbUUkc3HLNCeWhYB3W5ADRV5foR2mrzhdZPdrkyQkdrf5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStabilizer": {
					"abi": [
						{
							"inputs": [],
							"name": "goStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"goStabilizer()": "796c7be7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"goStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"IStabilizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0x841a9d6c4dca7bf27687dc7bfe898c618d329a07573277291a4a20443ab6cf98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35d7b6a6b740a8a82e505708863b4a46529b157261f8767680752215a7499ee8\",\"dweb:/ipfs/QmbUUkc3HLNCeWhYB3W5ADRV5foR2mrzhdZPdrkyQkdrf5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"helperLogic": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Factory",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Factory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "autoAdjustFarm",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "basePoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dev",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "executor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "farm",
							"outputs": [
								{
									"internalType": "contract IFarm",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IUniswapV2Factory",
									"name": "_Factory",
									"type": "address"
								},
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "_Router",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usc",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_sea",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_ssea",
									"type": "address"
								},
								{
									"internalType": "contract IFarm",
									"name": "_farm",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "jointExecution",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "op",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sea",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setAutoAdjustFarm",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setDev",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_type",
									"type": "bool"
								}
							],
							"name": "setExecutor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setOp",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setOpenStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setPid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToDevPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToOpPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToSseaPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usdc",
									"type": "address"
								}
							],
							"name": "setUSDCAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ssea",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stabilizer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toDevPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toOpPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toSseaPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usc",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amt",
									"type": "uint256"
								}
							],
							"name": "withdrawalERC20",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/helperLogic.sol\":909:6086  contract helperLogic is Initializable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/helperLogic.sol\":909:6086  contract helperLogic is Initializable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xbd0b1f44\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xdb7f521a\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xdb7f521a\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xec1f1f69\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf1068454\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf6d7eade\n      eq\n      tag_38\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0xbd0b1f44\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc83dd231\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd10c06a2\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd477f05f\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0xa36a7526\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xa36a7526\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xaaf5bfc3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xaaf5eb68\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xaf5518c4\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb8bb97a1\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x91cca3db\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x930ed033\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9da5b0d5\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x3e413bee\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x4ecaac41\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x4ecaac41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x55c746d1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x58de5de8\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7e47961c\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x3e413bee\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4591db50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x48c7e528\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4ae6a027\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x2c535a52\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x2c535a52\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3011d3d5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x35876476\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36e9332d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3c850e1e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x16d03993\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b0d8aab\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1e1bff3f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x27c42a50\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/helperLogic.sol\":1525:1549  uint256 public basePoint */\n    tag_3:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":5805:5917  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_4:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n    tag_5:\n      tag_50\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":4979:5111  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_6:\n      tag_50\n      tag_62\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1429:1455  uint256 public toOpPercent */\n    tag_7:\n      tag_46\n      tag_66\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1132:1160  IERC20Upgradeable public usc */\n    tag_8:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n    tag_9:\n      tag_72\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/helperLogic.sol\":1580:1597  IFarm public farm */\n    tag_10:\n      tag_68\n      tag_77\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5251:5381  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_11:\n      tag_50\n      tag_81\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1166:1195  IERC20Upgradeable public usdc */\n    tag_12:\n      tag_68\n      tag_85\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5387:5520  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n    tag_13:\n      tag_50\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1086:1126  mapping(address => bool) public executor */\n    tag_14:\n      tag_50\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1461:1488  uint256 public toDevPercent */\n    tag_15:\n      tag_46\n      tag_98\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1201:1229  IERC20Upgradeable public sea */\n    tag_16:\n      tag_68\n      tag_101\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5526:5659  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n    tag_17:\n      tag_50\n      tag_104\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1636:1662  bool public openStabilizer */\n    tag_18:\n      tag_50\n      tag_108\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      tag_72\n      tag_111\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1669:1694  address public stabilizer */\n    tag_20:\n      tag_68\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_68\n      tag_117\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1293:1311  address public dev */\n    tag_22:\n      tag_68\n      tag_120\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":4508:4723  function withdrawalERC20(address _address, uint256 _amt)... */\n    tag_23:\n      tag_50\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1604:1630  bool public autoAdjustFarm */\n    tag_24:\n      tag_50\n      tag_128\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":4729:4847  function setOp(address _address) external onlyOwner returns (bool) {... */\n    tag_25:\n      tag_50\n      tag_131\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5923:6084  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n    tag_26:\n      tag_50\n      tag_135\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_135:\n      tag_137\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1494:1518  uint256 public PRECISION */\n    tag_27:\n      tag_46\n      tag_140\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5117:5245  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_28:\n      tag_50\n      tag_143\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1235:1264  IERC20Upgradeable public ssea */\n    tag_29:\n      tag_68\n      tag_147\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1395:1423  uint256 public toSseaPercent */\n    tag_30:\n      tag_46\n      tag_150\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1356:1388  IUniswapV2Factory public Factory */\n    tag_31:\n      tag_68\n      tag_153\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":2901:3558  function jointExecution() external onlyExecutor returns (bool) {... */\n    tag_32:\n      tag_50\n      tag_157\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":4853:4973  function setDev(address _address) external onlyOwner returns (bool) {... */\n    tag_33:\n      tag_50\n      tag_160\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":5665:5799  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n    tag_34:\n      tag_50\n      tag_164\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1270:1287  address public op */\n    tag_35:\n      tag_68\n      tag_168\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1555:1573  uint256 public pid */\n    tag_36:\n      tag_46\n      tag_171\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n      tag_72\n      tag_174\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1318:1350  IUniswapV2Router02 public Router */\n    tag_38:\n      tag_68\n      tag_177\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":1525:1549  uint256 public basePoint */\n    tag_47:\n      sload(0x72)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5805:5917  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_53:\n        /* \"contracts/helperLogic.sol\":5863:5867  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n      pop\n        /* \"contracts/helperLogic.sol\":5879:5882  pid */\n      0x73\n        /* \"contracts/helperLogic.sol\":5879:5889  pid = _val */\n      sstore\n        /* \"contracts/helperLogic.sol\":5906:5910  true */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":5805:5917  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n    tag_59:\n        /* \"contracts/helperLogic.sol\":2694:2698  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_191:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":2714:2732  executor[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":2714:2722  executor */\n      0x65\n        /* \"contracts/helperLogic.sol\":2714:2732  executor[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/helperLogic.sol\":2714:2740  executor[_address] = _type */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":4979:5111  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_63:\n        /* \"contracts/helperLogic.sol\":5047:5051  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_197:\n      pop\n        /* \"contracts/helperLogic.sol\":5063:5076  toSseaPercent */\n      0x6e\n        /* \"contracts/helperLogic.sol\":5063:5083  toSseaPercent = _val */\n      sstore\n        /* \"contracts/helperLogic.sol\":5100:5104  true */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":4979:5111  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1429:1455  uint256 public toOpPercent */\n    tag_66:\n      sload(0x6f)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1132:1160  IERC20Upgradeable public usc */\n    tag_69:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x66))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_201\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_204\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_205:\n        /* \"contracts/helperLogic.sol\":2067:2083  __Ownable_init() */\n      tag_207\n        /* \"contracts/helperLogic.sol\":2067:2081  __Ownable_init */\n      tag_208\n        /* \"contracts/helperLogic.sol\":2067:2083  __Ownable_init() */\n      jump\t// in\n    tag_207:\n        /* \"contracts/helperLogic.sol\":2137:2143  Router */\n      0x6c\n        /* \"contracts/helperLogic.sol\":2137:2153  Router = _Router */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/helperLogic.sol\":2163:2170  Factory */\n      0x6d\n        /* \"contracts/helperLogic.sol\":2163:2181  Factory = _Factory */\n      dup1\n      sload\n      dup3\n      and\n      dup12\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2191:2194  usc */\n      0x66\n        /* \"contracts/helperLogic.sol\":2191:2201  usc = _usc */\n      dup1\n      sload\n      dup3\n      and\n      dup10\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2211:2214  sea */\n      0x68\n        /* \"contracts/helperLogic.sol\":2211:2221  sea = _sea */\n      dup1\n      sload\n      dup3\n      and\n      dup8\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2231:2235  ssea */\n      0x69\n        /* \"contracts/helperLogic.sol\":2231:2243  ssea = _ssea */\n      dup1\n      sload\n      dup3\n      and\n      dup7\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2253:2255  op */\n      0x6a\n        /* \"contracts/helperLogic.sol\":2253:2268  op = msg.sender */\n      dup1\n      sload\n        /* \"contracts/helperLogic.sol\":2258:2268  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":2253:2268  op = msg.sender */\n      swap1\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/helperLogic.sol\":2278:2281  dev */\n      0x6b\n        /* \"contracts/helperLogic.sol\":2278:2294  dev = msg.sender */\n      dup1\n      sload\n      dup4\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2320:2324  5000 */\n      0x1388\n        /* \"contracts/helperLogic.sol\":2304:2317  toSseaPercent */\n      0x6e\n        /* \"contracts/helperLogic.sol\":2304:2324  toSseaPercent = 5000 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2348:2352  2500 */\n      0x09c4\n        /* \"contracts/helperLogic.sol\":2334:2345  toOpPercent */\n      0x6f\n        /* \"contracts/helperLogic.sol\":2334:2352  toOpPercent = 2500 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2362:2374  toDevPercent */\n      0x70\n        /* \"contracts/helperLogic.sol\":2362:2381  toDevPercent = 2500 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2403:2408  10000 */\n      0x2710\n        /* \"contracts/helperLogic.sol\":2391:2400  PRECISION */\n      0x71\n        /* \"contracts/helperLogic.sol\":2391:2408  PRECISION = 10000 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2430:2434  1000 */\n      0x03e8\n        /* \"contracts/helperLogic.sol\":2418:2427  basePoint */\n      0x72\n        /* \"contracts/helperLogic.sol\":2418:2434  basePoint = 1000 */\n      sstore\n        /* \"contracts/helperLogic.sol\":2444:2458  autoAdjustFarm */\n      0x74\n        /* \"contracts/helperLogic.sol\":2444:2465  autoAdjustFarm = true */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      not(shl(0xa0, 0xff))\n      swap1\n      swap2\n      and\n      or\n      not(sub(shl(0xa0, 0xff01), 0x01))\n        /* \"contracts/helperLogic.sol\":2507:2519  farm = _farm */\n      and\n      dup6\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/helperLogic.sol\":2529:2533  usdc */\n      0x67\n        /* \"contracts/helperLogic.sol\":2529:2541  usdc = _usdc */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap2\n      dup8\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n    tag_209:\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1580:1597  IFarm public farm */\n    tag_77:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x74))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5251:5381  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_82:\n        /* \"contracts/helperLogic.sol\":5318:5322  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_213:\n      pop\n        /* \"contracts/helperLogic.sol\":5334:5346  toDevPercent */\n      0x70\n        /* \"contracts/helperLogic.sol\":5334:5353  toDevPercent = _val */\n      sstore\n        /* \"contracts/helperLogic.sol\":5370:5374  true */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":5251:5381  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1166:1195  IERC20Upgradeable public usdc */\n    tag_85:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x67))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5387:5520  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n    tag_90:\n        /* \"contracts/helperLogic.sol\":5454:5458  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_218:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_219:\n      pop\n        /* \"contracts/helperLogic.sol\":5470:5484  autoAdjustFarm */\n      0x74\n        /* \"contracts/helperLogic.sol\":5470:5492  autoAdjustFarm = _bool */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(shl(0xa0, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":5387:5520  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1086:1126  mapping(address => bool) public executor */\n    tag_95:\n      mstore(0x20, 0x65)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1461:1488  uint256 public toDevPercent */\n    tag_98:\n      sload(0x70)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1201:1229  IERC20Upgradeable public sea */\n    tag_101:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x68))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5526:5659  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n    tag_105:\n        /* \"contracts/helperLogic.sol\":5593:5597  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_225:\n      pop\n        /* \"contracts/helperLogic.sol\":5609:5623  openStabilizer */\n      0x74\n        /* \"contracts/helperLogic.sol\":5609:5631  openStabilizer = _bool */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      shl(0xa8, 0x01)\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":5526:5659  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1636:1662  bool public openStabilizer */\n    tag_108:\n      sload(0x74)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2028  _transferOwnership(address(0)) */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2025:2026  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2016  _transferOwnership */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2028  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1669:1694  address public stabilizer */\n    tag_113:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x75))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1374:1380  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1293:1311  address public dev */\n    tag_120:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6b))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":4508:4723  function withdrawalERC20(address _address, uint256 _amt)... */\n    tag_125:\n        /* \"contracts/helperLogic.sol\":4617:4621  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_240:\n        /* \"contracts/helperLogic.sol\":4637:4695  IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt) */\n      tag_243\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":4637:4677  IERC20Upgradeable(_address).safeTransfer */\n      dup5\n      and\n        /* \"contracts/helperLogic.sol\":4678:4688  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":4690:4694  _amt */\n      dup5\n        /* \"contracts/helperLogic.sol\":4637:4677  IERC20Upgradeable(_address).safeTransfer */\n      tag_244\n        /* \"contracts/helperLogic.sol\":4637:4695  IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt) */\n      jump\t// in\n    tag_243:\n      pop\n        /* \"contracts/helperLogic.sol\":4712:4716  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":4508:4723  function withdrawalERC20(address _address, uint256 _amt)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1604:1630  bool public autoAdjustFarm */\n    tag_128:\n      sload(0x74)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":4729:4847  function setOp(address _address) external onlyOwner returns (bool) {... */\n    tag_132:\n        /* \"contracts/helperLogic.sol\":4790:4794  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_247\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_248:\n      pop\n        /* \"contracts/helperLogic.sol\":4806:4808  op */\n      0x6a\n        /* \"contracts/helperLogic.sol\":4806:4819  op = _address */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":4729:4847  function setOp(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5923:6084  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n    tag_137:\n        /* \"contracts/helperLogic.sol\":6024:6028  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_254:\n      pop\n        /* \"contracts/helperLogic.sol\":6044:6048  usdc */\n      0x67\n        /* \"contracts/helperLogic.sol\":6044:6056  usdc = _usdc */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":5923:6084  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1494:1518  uint256 public PRECISION */\n    tag_140:\n      sload(0x71)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5117:5245  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_144:\n        /* \"contracts/helperLogic.sol\":5183:5187  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_260:\n      pop\n        /* \"contracts/helperLogic.sol\":5199:5210  toOpPercent */\n      0x6f\n        /* \"contracts/helperLogic.sol\":5199:5217  toOpPercent = _val */\n      sstore\n        /* \"contracts/helperLogic.sol\":5234:5238  true */\n      0x01\n      swap1\n        /* \"contracts/helperLogic.sol\":5117:5245  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1235:1264  IERC20Upgradeable public ssea */\n    tag_147:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x69))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1395:1423  uint256 public toSseaPercent */\n    tag_150:\n      sload(0x6e)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1356:1388  IUniswapV2Factory public Factory */\n    tag_153:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6d))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":2901:3558  function jointExecution() external onlyExecutor returns (bool) {... */\n    tag_157:\n        /* \"contracts/helperLogic.sol\":2825:2835  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":2958:2962  bool */\n      0x00\n        /* \"contracts/helperLogic.sol\":2816:2836  executor[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":2816:2824  executor */\n      0x65\n        /* \"contracts/helperLogic.sol\":2816:2836  executor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":2808:2877  require(executor[msg.sender], \"executor: caller is not the executor\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_266\n      jump\t// in\n    tag_264:\n        /* \"contracts/helperLogic.sol\":2997:3000  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":2997:3025  usc.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":2974:2994  uint256 uscBalanceOf */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":2997:3000  usc */\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":2997:3010  usc.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/helperLogic.sol\":2997:3025  usc.balanceOf(address(this)) */\n      tag_268\n      swap1\n        /* \"contracts/helperLogic.sol\":3019:3023  this */\n      address\n      swap1\n        /* \"contracts/helperLogic.sol\":2997:3025  usc.balanceOf(address(this)) */\n      0x04\n      add\n      tag_115\n      jump\t// in\n    tag_268:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_271\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_271:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_272\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"contracts/helperLogic.sol\":2974:3025  uint256 uscBalanceOf = usc.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3035:3049  uint256 toSsea */\n      0x00\n        /* \"contracts/helperLogic.sol\":3052:3098  uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      tag_274\n        /* \"contracts/helperLogic.sol\":3088:3097  PRECISION */\n      sload(0x71)\n        /* \"contracts/helperLogic.sol\":3052:3083  uscBalanceOf.mul(toSseaPercent) */\n      tag_275\n        /* \"contracts/helperLogic.sol\":3069:3082  toSseaPercent */\n      sload(0x6e)\n        /* \"contracts/helperLogic.sol\":3052:3064  uscBalanceOf */\n      dup6\n        /* \"contracts/helperLogic.sol\":3052:3068  uscBalanceOf.mul */\n      tag_276\n      swap1\n        /* \"contracts/helperLogic.sol\":3052:3083  uscBalanceOf.mul(toSseaPercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_275:\n        /* \"contracts/helperLogic.sol\":3052:3087  uscBalanceOf.mul(toSseaPercent).div */\n      swap1\n      tag_277\n        /* \"contracts/helperLogic.sol\":3052:3098  uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/helperLogic.sol\":3035:3098  uint256 toSsea = uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3108:3120  uint256 toOp */\n      0x00\n        /* \"contracts/helperLogic.sol\":3123:3167  uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      tag_278\n        /* \"contracts/helperLogic.sol\":3157:3166  PRECISION */\n      sload(0x71)\n        /* \"contracts/helperLogic.sol\":3123:3152  uscBalanceOf.mul(toOpPercent) */\n      tag_275\n        /* \"contracts/helperLogic.sol\":3140:3151  toOpPercent */\n      sload(0x6f)\n        /* \"contracts/helperLogic.sol\":3123:3135  uscBalanceOf */\n      dup7\n        /* \"contracts/helperLogic.sol\":3123:3139  uscBalanceOf.mul */\n      tag_276\n      swap1\n        /* \"contracts/helperLogic.sol\":3123:3152  uscBalanceOf.mul(toOpPercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":3123:3167  uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n    tag_278:\n        /* \"contracts/helperLogic.sol\":3108:3167  uint256 toOp = uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3177:3190  uint256 toDev */\n      0x00\n        /* \"contracts/helperLogic.sol\":3193:3227  uscBalanceOf.sub(toSsea).sub(toOp) */\n      tag_280\n        /* \"contracts/helperLogic.sol\":3108:3167  uint256 toOp = uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      dup3\n        /* \"contracts/helperLogic.sol\":3193:3217  uscBalanceOf.sub(toSsea) */\n      tag_281\n        /* \"contracts/helperLogic.sol\":3193:3205  uscBalanceOf */\n      dup7\n        /* \"contracts/helperLogic.sol\":3210:3216  toSsea */\n      dup7\n        /* \"contracts/helperLogic.sol\":3193:3209  uscBalanceOf.sub */\n      tag_282\n        /* \"contracts/helperLogic.sol\":3193:3217  uscBalanceOf.sub(toSsea) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/helperLogic.sol\":3193:3221  uscBalanceOf.sub(toSsea).sub */\n      swap1\n      tag_282\n        /* \"contracts/helperLogic.sol\":3193:3227  uscBalanceOf.sub(toSsea).sub(toOp) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/helperLogic.sol\":3263:3267  ssea */\n      sload(0x69)\n        /* \"contracts/helperLogic.sol\":3238:3241  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3177:3227  uint256 toDev = uscBalanceOf.sub(toSsea).sub(toOp) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/helperLogic.sol\":3238:3277  usc.safeTransfer(address(ssea), toSsea) */\n      tag_283\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3238:3241  usc */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"contracts/helperLogic.sol\":3263:3267  ssea */\n      and\n        /* \"contracts/helperLogic.sol\":3270:3276  toSsea */\n      dup6\n        /* \"contracts/helperLogic.sol\":3238:3254  usc.safeTransfer */\n      tag_244\n        /* \"contracts/helperLogic.sol\":3238:3277  usc.safeTransfer(address(ssea), toSsea) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/helperLogic.sol\":3312:3314  op */\n      sload(0x6a)\n        /* \"contracts/helperLogic.sol\":3287:3290  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3287:3322  usc.safeTransfer(address(op), toOp) */\n      tag_284\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3287:3290  usc */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/helperLogic.sol\":3312:3314  op */\n      and\n        /* \"contracts/helperLogic.sol\":3317:3321  toOp */\n      dup5\n        /* \"contracts/helperLogic.sol\":3287:3303  usc.safeTransfer */\n      tag_244\n        /* \"contracts/helperLogic.sol\":3287:3322  usc.safeTransfer(address(op), toOp) */\n      jump\t// in\n    tag_284:\n        /* \"contracts/helperLogic.sol\":3357:3360  dev */\n      sload(0x6b)\n        /* \"contracts/helperLogic.sol\":3332:3335  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3332:3369  usc.safeTransfer(address(dev), toDev) */\n      tag_285\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3332:3335  usc */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/helperLogic.sol\":3357:3360  dev */\n      and\n        /* \"contracts/helperLogic.sol\":3363:3368  toDev */\n      dup4\n        /* \"contracts/helperLogic.sol\":3332:3348  usc.safeTransfer */\n      tag_244\n        /* \"contracts/helperLogic.sol\":3332:3369  usc.safeTransfer(address(dev), toDev) */\n      jump\t// in\n    tag_285:\n        /* \"contracts/helperLogic.sol\":3384:3398  autoAdjustFarm */\n      sload(0x74)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":3380:3437  if (autoAdjustFarm) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"contracts/helperLogic.sol\":3414:3426  adjustFarm() */\n      tag_287\n        /* \"contracts/helperLogic.sol\":3414:3424  adjustFarm */\n      tag_288\n        /* \"contracts/helperLogic.sol\":3414:3426  adjustFarm() */\n      jump\t// in\n    tag_287:\n        /* \"contracts/helperLogic.sol\":3451:3465  openStabilizer */\n      sload(0x74)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":3447:3530  if (openStabilizer) {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"contracts/helperLogic.sol\":3493:3503  stabilizer */\n      0x75\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3481:3517  IStabilizer(stabilizer).goStabilizer */\n      and\n      0x796c7be7\n        /* \"contracts/helperLogic.sol\":3481:3519  IStabilizer(stabilizer).goStabilizer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_290:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_292:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_293\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      pop\n        /* \"contracts/helperLogic.sol\":3447:3530  if (openStabilizer) {... */\n    tag_289:\n        /* \"contracts/helperLogic.sol\":3547:3551  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":3540:3551  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/helperLogic.sol\":2901:3558  function jointExecution() external onlyExecutor returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":4853:4973  function setDev(address _address) external onlyOwner returns (bool) {... */\n    tag_161:\n        /* \"contracts/helperLogic.sol\":4915:4919  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_296\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_298:\n      pop\n        /* \"contracts/helperLogic.sol\":4931:4934  dev */\n      0x6b\n        /* \"contracts/helperLogic.sol\":4931:4945  dev = _address */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":4853:4973  function setDev(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5665:5799  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n    tag_165:\n        /* \"contracts/helperLogic.sol\":5734:5738  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_302:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_303\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_304:\n      pop\n        /* \"contracts/helperLogic.sol\":5750:5760  stabilizer */\n      0x75\n        /* \"contracts/helperLogic.sol\":5750:5771  stabilizer = _address */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/helperLogic.sol\":5665:5799  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1270:1287  address public op */\n    tag_168:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6a))\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1555:1573  uint256 public pid */\n    tag_171:\n      sload(0x73)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_308\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_309:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_310:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2272:2294  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2264:2337  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_315\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2375  _transferOwnership(newOwner) */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2366:2374  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2365  _transferOwnership */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2375  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1318:1350  IUniswapV2Router02 public Router */\n    tag_177:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6c))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":876:972  function _msgSender() internal view virtual returns (address) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":955:965  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":876:972  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1114  function __Ownable_init() internal initializer {... */\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_319\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_204\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1071  __Context_init_unchained() */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1069  __Context_init_unchained */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1071  __Context_init_unchained() */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1107  __Ownable_init_unchained() */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1105  __Ownable_init_unchained */\n      tag_327\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1107  __Ownable_init_unchained() */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1114  function __Ownable_init() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2536:2723  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2644:2661  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2644:2661  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2609:2625  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2536:2723  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_331\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":888:893  token */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":918:941  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":943:945  to */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":947:952  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":895:953  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_332\n      swap3\n      swap2\n      swap1\n      tag_333\n      jump\t// in\n    tag_332:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:887  _callOptionalReturn */\n      tag_334\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3462:3558  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3520:3527  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3551  a * b */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3550:3551  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3547  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3551  a * b */\n      tag_337\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3539:3551  return a * b */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3462:3558  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3847:3943  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3905:3912  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3936  a / b */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3935:3936  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3932  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3936  a / b */\n      tag_340\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3119:3215  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3177:3184  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3208  a - b */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3207:3208  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3204  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3208  a - b */\n      tag_343\n      jump\t// in\n        /* \"contracts/helperLogic.sol\":3564:4502  function adjustFarm() internal {... */\n    tag_288:\n        /* \"contracts/helperLogic.sol\":3627:3634  Factory */\n      sload(0x6d)\n        /* \"contracts/helperLogic.sol\":3651:3655  usdc */\n      sload(0x67)\n        /* \"contracts/helperLogic.sol\":3666:3669  usc */\n      sload(0x66)\n        /* \"contracts/helperLogic.sol\":3627:3671  Factory.getPair(address(usdc), address(usc)) */\n      mload(0x40)\n      shl(0xe0, 0xe6a43905)\n      dup2\n      mstore\n        /* \"contracts/helperLogic.sol\":3605:3624  address pairAddress */\n      0x00\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/helperLogic.sol\":3627:3634  Factory */\n      swap1\n      dup2\n      and\n      swap4\n        /* \"contracts/helperLogic.sol\":3627:3642  Factory.getPair */\n      0xe6a43905\n      swap4\n        /* \"contracts/helperLogic.sol\":3627:3671  Factory.getPair(address(usdc), address(usc)) */\n      tag_345\n      swap4\n        /* \"contracts/helperLogic.sol\":3651:3655  usdc */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"contracts/helperLogic.sol\":3666:3669  usc */\n      and\n      swap1\n        /* \"contracts/helperLogic.sol\":3627:3671  Factory.getPair(address(usdc), address(usc)) */\n      0x04\n      add\n      tag_346\n      jump\t// in\n    tag_345:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_347\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_347:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_349\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_349:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_350\n      swap2\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n      pop\n      pop\n        /* \"contracts/helperLogic.sol\":3564:4502  function adjustFarm() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":807:871  function __Context_init_unchained() internal initializer {... */\n    tag_325:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_353\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_204\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":807:871  function __Context_init_unchained() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1120:1226  function __Ownable_init_unchained() internal initializer {... */\n    tag_327:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_360\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_204\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1219  _transferOwnership(_msgSender()) */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1218  _msgSender() */\n      tag_366\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1216  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1218  _msgSender() */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1205  _transferOwnership */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1219  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3306:4023  function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {... */\n    tag_334:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3759  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3790:3794  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3770:3775  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3789  address(token).functionCall */\n      and\n      tag_370\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3862  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3831  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3866  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3841:4017  if (returndata.length > 0) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3940:3950  returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3929:3959  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_372\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3921:4006  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_375\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3525:3748  function functionCall(... */\n    tag_370:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3658:3670  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3741  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3711:3717  target */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3719:3723  data */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3725:3726  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3728:3740  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3710  functionCallWithValue */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3741  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3682:3741  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3525:3748  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4612:5111  function functionCallWithValue(... */\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4777:4789  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4834:4839  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4809:4830  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4809:4839  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4801:4882  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_382\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4918  isContract(target) */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4911:4917  target */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4910  isContract */\n      tag_384\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4918  isContract(target) */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4892:4952  require(isContract(target), \"Address: call to non-contract\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_387\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4964:4976  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4978:5001  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5011  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5016  target.call */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5024:5029  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5031:5035  data */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5036  target.call{value: value}(data) */\n      mload(0x40)\n      tag_388\n      swap2\n      swap1\n      tag_389\n      jump\t// in\n    tag_388:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_392\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_391)\n    tag_392:\n      0x60\n      swap2\n      pop\n    tag_391:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4963:5036  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5104  verifyCallResult(success, returndata, errorMessage) */\n      tag_393\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5070:5077  success */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5079:5089  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5091:5103  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5069  verifyCallResult */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5104  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5046:5104  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4612:5111  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":782:1159  function isContract(address account) internal view returns (bool) {... */\n    tag_384:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1098:1118  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1144:1152  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":782:1159  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6275:6967  function verifyCallResult(... */\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6421:6433  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6449:6456  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6445:6961  if (success) {... */\n      iszero\n      tag_397\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6479:6489  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6472:6489  return returndata */\n      jump(tag_336)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6445:6961  if (success) {... */\n    tag_397:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6590:6607  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6590:6611  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6586:6951  if (returndata.length > 0) {... */\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6784:6794  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6778:6795  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6844:6859  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6831:6841  returndata */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6827:6829  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6823:6842  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6816:6860  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6733:6878  {... */\n    tag_399:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6923:6935  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6916:6936  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_402\n      jump\t// in\n        /* \"#utility.yul\":14:273   */\n    tag_94:\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_405:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:243   */\n      tag_336\n        /* \"#utility.yul\":237:242   */\n      dup2\n        /* \"#utility.yul\":210:243   */\n      tag_407\n      jump\t// in\n        /* \"#utility.yul\":278:541   */\n    tag_351:\n      0x00\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":389:398   */\n      dup3\n        /* \"#utility.yul\":380:387   */\n      dup5\n        /* \"#utility.yul\":376:399   */\n      sub\n        /* \"#utility.yul\":372:404   */\n      slt\n        /* \"#utility.yul\":369:371   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":422:428   */\n      dup1\n        /* \"#utility.yul\":414:420   */\n      dup2\n        /* \"#utility.yul\":407:429   */\n      revert\n        /* \"#utility.yul\":369:371   */\n    tag_409:\n        /* \"#utility.yul\":459:468   */\n      dup2\n        /* \"#utility.yul\":453:469   */\n      mload\n        /* \"#utility.yul\":478:511   */\n      tag_336\n        /* \"#utility.yul\":505:510   */\n      dup2\n        /* \"#utility.yul\":478:511   */\n      tag_407\n      jump\t// in\n        /* \"#utility.yul\":546:942   */\n    tag_58:\n      0x00\n      dup1\n        /* \"#utility.yul\":672:674   */\n      0x40\n        /* \"#utility.yul\":660:669   */\n      dup4\n        /* \"#utility.yul\":651:658   */\n      dup6\n        /* \"#utility.yul\":647:670   */\n      sub\n        /* \"#utility.yul\":643:675   */\n      slt\n        /* \"#utility.yul\":640:642   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":693:699   */\n      dup1\n        /* \"#utility.yul\":685:691   */\n      dup2\n        /* \"#utility.yul\":678:700   */\n      revert\n        /* \"#utility.yul\":640:642   */\n    tag_412:\n        /* \"#utility.yul\":737:746   */\n      dup3\n        /* \"#utility.yul\":724:747   */\n      calldataload\n        /* \"#utility.yul\":756:789   */\n      tag_413\n        /* \"#utility.yul\":783:788   */\n      dup2\n        /* \"#utility.yul\":756:789   */\n      tag_407\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":808:813   */\n      swap2\n      pop\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":850:868   */\n      dup4\n      add\n        /* \"#utility.yul\":837:869   */\n      calldataload\n        /* \"#utility.yul\":878:910   */\n      tag_414\n        /* \"#utility.yul\":837:869   */\n      dup2\n        /* \"#utility.yul\":878:910   */\n      tag_415\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":929:936   */\n      dup1\n        /* \"#utility.yul\":919:936   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":630:942   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":947:1274   */\n    tag_124:\n      0x00\n      dup1\n        /* \"#utility.yul\":1076:1078   */\n      0x40\n        /* \"#utility.yul\":1064:1073   */\n      dup4\n        /* \"#utility.yul\":1055:1062   */\n      dup6\n        /* \"#utility.yul\":1051:1074   */\n      sub\n        /* \"#utility.yul\":1047:1079   */\n      slt\n        /* \"#utility.yul\":1044:1046   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":1097:1103   */\n      dup2\n        /* \"#utility.yul\":1089:1095   */\n      dup3\n        /* \"#utility.yul\":1082:1104   */\n      revert\n        /* \"#utility.yul\":1044:1046   */\n    tag_417:\n        /* \"#utility.yul\":1141:1150   */\n      dup3\n        /* \"#utility.yul\":1128:1151   */\n      calldataload\n        /* \"#utility.yul\":1160:1193   */\n      tag_418\n        /* \"#utility.yul\":1187:1192   */\n      dup2\n        /* \"#utility.yul\":1160:1193   */\n      tag_407\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":1212:1217   */\n      swap5\n        /* \"#utility.yul\":1264:1266   */\n      0x20\n        /* \"#utility.yul\":1249:1267   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1236:1268   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1034:1274   */\n      jump\t// out\n        /* \"#utility.yul\":1279:1532   */\n    tag_89:\n      0x00\n        /* \"#utility.yul\":1388:1390   */\n      0x20\n        /* \"#utility.yul\":1376:1385   */\n      dup3\n        /* \"#utility.yul\":1367:1374   */\n      dup5\n        /* \"#utility.yul\":1363:1386   */\n      sub\n        /* \"#utility.yul\":1359:1391   */\n      slt\n        /* \"#utility.yul\":1356:1358   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":1409:1415   */\n      dup1\n        /* \"#utility.yul\":1401:1407   */\n      dup2\n        /* \"#utility.yul\":1394:1416   */\n      revert\n        /* \"#utility.yul\":1356:1358   */\n    tag_420:\n        /* \"#utility.yul\":1453:1462   */\n      dup2\n        /* \"#utility.yul\":1440:1463   */\n      calldataload\n        /* \"#utility.yul\":1472:1502   */\n      tag_336\n        /* \"#utility.yul\":1496:1501   */\n      dup2\n        /* \"#utility.yul\":1472:1502   */\n      tag_415\n      jump\t// in\n        /* \"#utility.yul\":1537:1794   */\n    tag_294:\n      0x00\n        /* \"#utility.yul\":1657:1659   */\n      0x20\n        /* \"#utility.yul\":1645:1654   */\n      dup3\n        /* \"#utility.yul\":1636:1643   */\n      dup5\n        /* \"#utility.yul\":1632:1655   */\n      sub\n        /* \"#utility.yul\":1628:1660   */\n      slt\n        /* \"#utility.yul\":1625:1627   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":1678:1684   */\n      dup1\n        /* \"#utility.yul\":1670:1676   */\n      dup2\n        /* \"#utility.yul\":1663:1685   */\n      revert\n        /* \"#utility.yul\":1625:1627   */\n    tag_423:\n        /* \"#utility.yul\":1715:1724   */\n      dup2\n        /* \"#utility.yul\":1709:1725   */\n      mload\n        /* \"#utility.yul\":1734:1764   */\n      tag_336\n        /* \"#utility.yul\":1758:1763   */\n      dup2\n        /* \"#utility.yul\":1734:1764   */\n      tag_415\n      jump\t// in\n        /* \"#utility.yul\":2088:3376   */\n    tag_74:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2469:2472   */\n      0xe0\n        /* \"#utility.yul\":2457:2466   */\n      dup9\n        /* \"#utility.yul\":2448:2455   */\n      dup11\n        /* \"#utility.yul\":2444:2467   */\n      sub\n        /* \"#utility.yul\":2440:2473   */\n      slt\n        /* \"#utility.yul\":2437:2439   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2491:2497   */\n      dup3\n        /* \"#utility.yul\":2483:2489   */\n      dup4\n        /* \"#utility.yul\":2476:2498   */\n      revert\n        /* \"#utility.yul\":2437:2439   */\n    tag_429:\n        /* \"#utility.yul\":2535:2544   */\n      dup8\n        /* \"#utility.yul\":2522:2545   */\n      calldataload\n        /* \"#utility.yul\":2554:2587   */\n      tag_430\n        /* \"#utility.yul\":2581:2586   */\n      dup2\n        /* \"#utility.yul\":2554:2587   */\n      tag_407\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2606:2611   */\n      swap7\n      pop\n        /* \"#utility.yul\":2663:2665   */\n      0x20\n        /* \"#utility.yul\":2648:2666   */\n      dup9\n      add\n        /* \"#utility.yul\":2635:2667   */\n      calldataload\n        /* \"#utility.yul\":2676:2711   */\n      tag_431\n        /* \"#utility.yul\":2635:2667   */\n      dup2\n        /* \"#utility.yul\":2676:2711   */\n      tag_407\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2730:2737   */\n      swap6\n      pop\n        /* \"#utility.yul\":2789:2791   */\n      0x40\n        /* \"#utility.yul\":2774:2792   */\n      dup9\n      add\n        /* \"#utility.yul\":2761:2793   */\n      calldataload\n        /* \"#utility.yul\":2802:2837   */\n      tag_432\n        /* \"#utility.yul\":2761:2793   */\n      dup2\n        /* \"#utility.yul\":2802:2837   */\n      tag_407\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2856:2863   */\n      swap5\n      pop\n        /* \"#utility.yul\":2915:2917   */\n      0x60\n        /* \"#utility.yul\":2900:2918   */\n      dup9\n      add\n        /* \"#utility.yul\":2887:2919   */\n      calldataload\n        /* \"#utility.yul\":2928:2963   */\n      tag_433\n        /* \"#utility.yul\":2887:2919   */\n      dup2\n        /* \"#utility.yul\":2928:2963   */\n      tag_407\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":2982:2989   */\n      swap4\n      pop\n        /* \"#utility.yul\":3041:3044   */\n      0x80\n        /* \"#utility.yul\":3026:3045   */\n      dup9\n      add\n        /* \"#utility.yul\":3013:3046   */\n      calldataload\n        /* \"#utility.yul\":3055:3090   */\n      tag_434\n        /* \"#utility.yul\":3013:3046   */\n      dup2\n        /* \"#utility.yul\":3055:3090   */\n      tag_407\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3109:3116   */\n      swap3\n      pop\n        /* \"#utility.yul\":3168:3171   */\n      0xa0\n        /* \"#utility.yul\":3153:3172   */\n      dup9\n      add\n        /* \"#utility.yul\":3140:3173   */\n      calldataload\n        /* \"#utility.yul\":3182:3217   */\n      tag_435\n        /* \"#utility.yul\":3140:3173   */\n      dup2\n        /* \"#utility.yul\":3182:3217   */\n      tag_407\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3236:3243   */\n      swap2\n      pop\n        /* \"#utility.yul\":3295:3298   */\n      0xc0\n        /* \"#utility.yul\":3280:3299   */\n      dup9\n      add\n        /* \"#utility.yul\":3267:3300   */\n      calldataload\n        /* \"#utility.yul\":3309:3344   */\n      tag_436\n        /* \"#utility.yul\":3267:3300   */\n      dup2\n        /* \"#utility.yul\":3309:3344   */\n      tag_407\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3363:3370   */\n      dup1\n        /* \"#utility.yul\":3353:3370   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2427:3376   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3381:3571   */\n    tag_52:\n      0x00\n        /* \"#utility.yul\":3493:3495   */\n      0x20\n        /* \"#utility.yul\":3481:3490   */\n      dup3\n        /* \"#utility.yul\":3472:3479   */\n      dup5\n        /* \"#utility.yul\":3468:3491   */\n      sub\n        /* \"#utility.yul\":3464:3496   */\n      slt\n        /* \"#utility.yul\":3461:3463   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":3514:3520   */\n      dup1\n        /* \"#utility.yul\":3506:3512   */\n      dup2\n        /* \"#utility.yul\":3499:3521   */\n      revert\n        /* \"#utility.yul\":3461:3463   */\n    tag_438:\n      pop\n        /* \"#utility.yul\":3542:3565   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3451:3571   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3770   */\n    tag_273:\n      0x00\n        /* \"#utility.yul\":3699:3701   */\n      0x20\n        /* \"#utility.yul\":3687:3696   */\n      dup3\n        /* \"#utility.yul\":3678:3685   */\n      dup5\n        /* \"#utility.yul\":3674:3697   */\n      sub\n        /* \"#utility.yul\":3670:3702   */\n      slt\n        /* \"#utility.yul\":3667:3669   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":3720:3726   */\n      dup1\n        /* \"#utility.yul\":3712:3718   */\n      dup2\n        /* \"#utility.yul\":3705:3727   */\n      revert\n        /* \"#utility.yul\":3667:3669   */\n    tag_440:\n      pop\n        /* \"#utility.yul\":3748:3764   */\n      mload\n      swap2\n        /* \"#utility.yul\":3657:3770   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3775:4049   */\n    tag_389:\n      0x00\n        /* \"#utility.yul\":3942:3948   */\n      dup3\n        /* \"#utility.yul\":3936:3949   */\n      mload\n        /* \"#utility.yul\":3958:4011   */\n      tag_442\n        /* \"#utility.yul\":4004:4010   */\n      dup2\n        /* \"#utility.yul\":3999:4002   */\n      dup5\n        /* \"#utility.yul\":3992:3996   */\n      0x20\n        /* \"#utility.yul\":3984:3990   */\n      dup8\n        /* \"#utility.yul\":3980:3997   */\n      add\n        /* \"#utility.yul\":3958:4011   */\n      tag_443\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4027:4043   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":3912:4049   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4054:4257   */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4218:4250   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4200:4251   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4188:4190   */\n      0x20\n        /* \"#utility.yul\":4173:4191   */\n      add\n      swap1\n        /* \"#utility.yul\":4155:4257   */\n      jump\t// out\n        /* \"#utility.yul\":4262:4566   */\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4492:4507   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":4474:4508   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4544:4559   */\n      swap2\n      and\n        /* \"#utility.yul\":4539:4541   */\n      0x20\n        /* \"#utility.yul\":4524:4542   */\n      dup3\n      add\n        /* \"#utility.yul\":4517:4560   */\n      mstore\n        /* \"#utility.yul\":4424:4426   */\n      0x40\n        /* \"#utility.yul\":4409:4427   */\n      add\n      swap1\n        /* \"#utility.yul\":4391:4566   */\n      jump\t// out\n        /* \"#utility.yul\":4571:4845   */\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4763:4795   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4745:4796   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4827:4829   */\n      0x20\n        /* \"#utility.yul\":4812:4830   */\n      dup3\n      add\n        /* \"#utility.yul\":4805:4839   */\n      mstore\n        /* \"#utility.yul\":4733:4735   */\n      0x40\n        /* \"#utility.yul\":4718:4736   */\n      add\n      swap1\n        /* \"#utility.yul\":4700:4845   */\n      jump\t// out\n        /* \"#utility.yul\":4850:5037   */\n    tag_55:\n        /* \"#utility.yul\":5015:5029   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5008:5030   */\n      iszero\n        /* \"#utility.yul\":4990:5031   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4978:4980   */\n      0x20\n        /* \"#utility.yul\":4963:4981   */\n      add\n      swap1\n        /* \"#utility.yul\":4945:5037   */\n      jump\t// out\n        /* \"#utility.yul\":5966:6349   */\n    tag_402:\n      0x00\n        /* \"#utility.yul\":6115:6117   */\n      0x20\n        /* \"#utility.yul\":6104:6113   */\n      dup3\n        /* \"#utility.yul\":6097:6118   */\n      mstore\n        /* \"#utility.yul\":6147:6153   */\n      dup3\n        /* \"#utility.yul\":6141:6154   */\n      mload\n        /* \"#utility.yul\":6190:6196   */\n      dup1\n        /* \"#utility.yul\":6185:6187   */\n      0x20\n        /* \"#utility.yul\":6174:6183   */\n      dup5\n        /* \"#utility.yul\":6170:6188   */\n      add\n        /* \"#utility.yul\":6163:6197   */\n      mstore\n        /* \"#utility.yul\":6206:6272   */\n      tag_453\n        /* \"#utility.yul\":6265:6271   */\n      dup2\n        /* \"#utility.yul\":6260:6262   */\n      0x40\n        /* \"#utility.yul\":6249:6258   */\n      dup6\n        /* \"#utility.yul\":6245:6263   */\n      add\n        /* \"#utility.yul\":6240:6242   */\n      0x20\n        /* \"#utility.yul\":6232:6238   */\n      dup8\n        /* \"#utility.yul\":6228:6243   */\n      add\n        /* \"#utility.yul\":6206:6272   */\n      tag_443\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":6333:6335   */\n      0x1f\n        /* \"#utility.yul\":6312:6327   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6308:6337   */\n      and\n        /* \"#utility.yul\":6293:6338   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6340:6342   */\n      0x40\n        /* \"#utility.yul\":6289:6343   */\n      add\n      swap3\n        /* \"#utility.yul\":6087:6349   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6354:6756   */\n    tag_315:\n        /* \"#utility.yul\":6556:6558   */\n      0x20\n        /* \"#utility.yul\":6538:6559   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6595:6597   */\n      0x26\n        /* \"#utility.yul\":6575:6593   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6568:6598   */\n      mstore\n        /* \"#utility.yul\":6634:6668   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6629:6631   */\n      0x40\n        /* \"#utility.yul\":6614:6632   */\n      dup3\n      add\n        /* \"#utility.yul\":6607:6669   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6700:6702   */\n      0x60\n        /* \"#utility.yul\":6685:6703   */\n      dup3\n      add\n        /* \"#utility.yul\":6678:6714   */\n      mstore\n        /* \"#utility.yul\":6746:6749   */\n      0x80\n        /* \"#utility.yul\":6731:6750   */\n      add\n      swap1\n        /* \"#utility.yul\":6528:6756   */\n      jump\t// out\n        /* \"#utility.yul\":6761:7161   */\n    tag_266:\n        /* \"#utility.yul\":6963:6965   */\n      0x20\n        /* \"#utility.yul\":6945:6966   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7002:7004   */\n      0x24\n        /* \"#utility.yul\":6982:7000   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6975:7005   */\n      mstore\n        /* \"#utility.yul\":7041:7075   */\n      0x6578656375746f723a2063616c6c6572206973206e6f74207468652065786563\n        /* \"#utility.yul\":7036:7038   */\n      0x40\n        /* \"#utility.yul\":7021:7039   */\n      dup3\n      add\n        /* \"#utility.yul\":7014:7076   */\n      mstore\n      shl(0xe1, 0x3aba37b9)\n        /* \"#utility.yul\":7107:7109   */\n      0x60\n        /* \"#utility.yul\":7092:7110   */\n      dup3\n      add\n        /* \"#utility.yul\":7085:7119   */\n      mstore\n        /* \"#utility.yul\":7151:7154   */\n      0x80\n        /* \"#utility.yul\":7136:7155   */\n      add\n      swap1\n        /* \"#utility.yul\":6935:7161   */\n      jump\t// out\n        /* \"#utility.yul\":7166:7568   */\n    tag_382:\n        /* \"#utility.yul\":7368:7370   */\n      0x20\n        /* \"#utility.yul\":7350:7371   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7407:7409   */\n      0x26\n        /* \"#utility.yul\":7387:7405   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7380:7410   */\n      mstore\n        /* \"#utility.yul\":7446:7480   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":7441:7443   */\n      0x40\n        /* \"#utility.yul\":7426:7444   */\n      dup3\n      add\n        /* \"#utility.yul\":7419:7481   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":7512:7514   */\n      0x60\n        /* \"#utility.yul\":7497:7515   */\n      dup3\n      add\n        /* \"#utility.yul\":7490:7526   */\n      mstore\n        /* \"#utility.yul\":7558:7561   */\n      0x80\n        /* \"#utility.yul\":7543:7562   */\n      add\n      swap1\n        /* \"#utility.yul\":7340:7568   */\n      jump\t// out\n        /* \"#utility.yul\":7573:7983   */\n    tag_204:\n        /* \"#utility.yul\":7775:7777   */\n      0x20\n        /* \"#utility.yul\":7757:7778   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7814:7816   */\n      0x2e\n        /* \"#utility.yul\":7794:7812   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7787:7817   */\n      mstore\n        /* \"#utility.yul\":7853:7887   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":7848:7850   */\n      0x40\n        /* \"#utility.yul\":7833:7851   */\n      dup3\n      add\n        /* \"#utility.yul\":7826:7888   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":7919:7921   */\n      0x60\n        /* \"#utility.yul\":7904:7922   */\n      dup3\n      add\n        /* \"#utility.yul\":7897:7941   */\n      mstore\n        /* \"#utility.yul\":7973:7976   */\n      0x80\n        /* \"#utility.yul\":7958:7977   */\n      add\n      swap1\n        /* \"#utility.yul\":7747:7983   */\n      jump\t// out\n        /* \"#utility.yul\":7988:8344   */\n    tag_186:\n        /* \"#utility.yul\":8190:8192   */\n      0x20\n        /* \"#utility.yul\":8172:8193   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8209:8227   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8202:8232   */\n      mstore\n        /* \"#utility.yul\":8268:8302   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8263:8265   */\n      0x40\n        /* \"#utility.yul\":8248:8266   */\n      dup3\n      add\n        /* \"#utility.yul\":8241:8303   */\n      mstore\n        /* \"#utility.yul\":8335:8337   */\n      0x60\n        /* \"#utility.yul\":8320:8338   */\n      add\n      swap1\n        /* \"#utility.yul\":8162:8344   */\n      jump\t// out\n        /* \"#utility.yul\":8349:8702   */\n    tag_387:\n        /* \"#utility.yul\":8551:8553   */\n      0x20\n        /* \"#utility.yul\":8533:8554   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8590:8592   */\n      0x1d\n        /* \"#utility.yul\":8570:8588   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8563:8593   */\n      mstore\n        /* \"#utility.yul\":8629:8660   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":8624:8626   */\n      0x40\n        /* \"#utility.yul\":8609:8627   */\n      dup3\n      add\n        /* \"#utility.yul\":8602:8661   */\n      mstore\n        /* \"#utility.yul\":8693:8695   */\n      0x60\n        /* \"#utility.yul\":8678:8696   */\n      add\n      swap1\n        /* \"#utility.yul\":8523:8702   */\n      jump\t// out\n        /* \"#utility.yul\":8707:9113   */\n    tag_375:\n        /* \"#utility.yul\":8909:8911   */\n      0x20\n        /* \"#utility.yul\":8891:8912   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8948:8950   */\n      0x2a\n        /* \"#utility.yul\":8928:8946   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8921:8951   */\n      mstore\n        /* \"#utility.yul\":8987:9021   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":8982:8984   */\n      0x40\n        /* \"#utility.yul\":8967:8985   */\n      dup3\n      add\n        /* \"#utility.yul\":8960:9022   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":9053:9055   */\n      0x60\n        /* \"#utility.yul\":9038:9056   */\n      dup3\n      add\n        /* \"#utility.yul\":9031:9071   */\n      mstore\n        /* \"#utility.yul\":9103:9106   */\n      0x80\n        /* \"#utility.yul\":9088:9107   */\n      add\n      swap1\n        /* \"#utility.yul\":8881:9113   */\n      jump\t// out\n        /* \"#utility.yul\":9118:9295   */\n    tag_49:\n        /* \"#utility.yul\":9264:9289   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":9252:9254   */\n      0x20\n        /* \"#utility.yul\":9237:9255   */\n      add\n      swap1\n        /* \"#utility.yul\":9219:9295   */\n      jump\t// out\n        /* \"#utility.yul\":9300:9517   */\n    tag_340:\n      0x00\n        /* \"#utility.yul\":9366:9367   */\n      dup3\n        /* \"#utility.yul\":9356:9358   */\n      tag_463\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":9391:9422   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9445:9449   */\n      0x12\n        /* \"#utility.yul\":9442:9443   */\n      0x04\n        /* \"#utility.yul\":9435:9450   */\n      mstore\n        /* \"#utility.yul\":9473:9477   */\n      0x24\n        /* \"#utility.yul\":9398:9399   */\n      dup2\n        /* \"#utility.yul\":9463:9478   */\n      revert\n        /* \"#utility.yul\":9356:9358   */\n    tag_463:\n      pop\n        /* \"#utility.yul\":9502:9511   */\n      div\n      swap1\n        /* \"#utility.yul\":9346:9517   */\n      jump\t// out\n        /* \"#utility.yul\":9522:9690   */\n    tag_337:\n      0x00\n        /* \"#utility.yul\":9628:9629   */\n      dup2\n        /* \"#utility.yul\":9624:9625   */\n      0x00\n        /* \"#utility.yul\":9620:9626   */\n      not\n        /* \"#utility.yul\":9616:9630   */\n      div\n        /* \"#utility.yul\":9613:9614   */\n      dup4\n        /* \"#utility.yul\":9610:9631   */\n      gt\n        /* \"#utility.yul\":9605:9606   */\n      dup3\n        /* \"#utility.yul\":9598:9607   */\n      iszero\n        /* \"#utility.yul\":9591:9608   */\n      iszero\n        /* \"#utility.yul\":9587:9632   */\n      and\n        /* \"#utility.yul\":9584:9586   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":9635:9653   */\n      tag_466\n      tag_467\n      jump\t// in\n    tag_466:\n      pop\n        /* \"#utility.yul\":9675:9684   */\n      mul\n      swap1\n        /* \"#utility.yul\":9574:9690   */\n      jump\t// out\n        /* \"#utility.yul\":9695:9820   */\n    tag_343:\n      0x00\n        /* \"#utility.yul\":9763:9764   */\n      dup3\n        /* \"#utility.yul\":9760:9761   */\n      dup3\n        /* \"#utility.yul\":9757:9765   */\n      lt\n        /* \"#utility.yul\":9754:9756   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":9768:9786   */\n      tag_470\n      tag_467\n      jump\t// in\n    tag_470:\n      pop\n        /* \"#utility.yul\":9805:9814   */\n      sub\n      swap1\n        /* \"#utility.yul\":9744:9820   */\n      jump\t// out\n        /* \"#utility.yul\":9825:10083   */\n    tag_443:\n        /* \"#utility.yul\":9897:9898   */\n      0x00\n        /* \"#utility.yul\":9907:10020   */\n    tag_472:\n        /* \"#utility.yul\":9921:9927   */\n      dup4\n        /* \"#utility.yul\":9918:9919   */\n      dup2\n        /* \"#utility.yul\":9915:9928   */\n      lt\n        /* \"#utility.yul\":9907:10020   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":9997:10008   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9991:10009   */\n      mload\n        /* \"#utility.yul\":9978:9989   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9971:10010   */\n      mstore\n        /* \"#utility.yul\":9943:9945   */\n      0x20\n        /* \"#utility.yul\":9936:9946   */\n      add\n        /* \"#utility.yul\":9907:10020   */\n      jump(tag_472)\n    tag_474:\n        /* \"#utility.yul\":10038:10044   */\n      dup4\n        /* \"#utility.yul\":10035:10036   */\n      dup2\n        /* \"#utility.yul\":10032:10045   */\n      gt\n        /* \"#utility.yul\":10029:10031   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":10073:10074   */\n      0x00\n        /* \"#utility.yul\":10064:10070   */\n      dup5\n        /* \"#utility.yul\":10059:10062   */\n      dup5\n        /* \"#utility.yul\":10055:10071   */\n      add\n        /* \"#utility.yul\":10048:10075   */\n      mstore\n        /* \"#utility.yul\":10029:10031   */\n    tag_475:\n      pop\n        /* \"#utility.yul\":9878:10083   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10088:10215   */\n    tag_467:\n        /* \"#utility.yul\":10149:10159   */\n      0x4e487b71\n        /* \"#utility.yul\":10144:10147   */\n      0xe0\n        /* \"#utility.yul\":10140:10160   */\n      shl\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10130:10161   */\n      mstore\n        /* \"#utility.yul\":10180:10184   */\n      0x11\n        /* \"#utility.yul\":10177:10178   */\n      0x04\n        /* \"#utility.yul\":10170:10185   */\n      mstore\n        /* \"#utility.yul\":10204:10208   */\n      0x24\n        /* \"#utility.yul\":10201:10202   */\n      0x00\n        /* \"#utility.yul\":10194:10209   */\n      revert\n        /* \"#utility.yul\":10220:10353   */\n    tag_407:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10297:10328   */\n      dup2\n      and\n        /* \"#utility.yul\":10287:10329   */\n      dup2\n      eq\n        /* \"#utility.yul\":10277:10279   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":10343:10344   */\n      0x00\n        /* \"#utility.yul\":10340:10341   */\n      dup1\n        /* \"#utility.yul\":10333:10345   */\n      revert\n        /* \"#utility.yul\":10358:10478   */\n    tag_415:\n        /* \"#utility.yul\":10446:10451   */\n      dup1\n        /* \"#utility.yul\":10439:10452   */\n      iszero\n        /* \"#utility.yul\":10432:10453   */\n      iszero\n        /* \"#utility.yul\":10425:10430   */\n      dup2\n        /* \"#utility.yul\":10422:10454   */\n      eq\n        /* \"#utility.yul\":10412:10414   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":10468:10469   */\n      0x00\n        /* \"#utility.yul\":10465:10466   */\n      dup1\n        /* \"#utility.yul\":10458:10470   */\n      revert\n\n    auxdata: 0xa264697066735822122070cc6a9ca8bdc19a8b3de12baacc67a7ad70b380fc6dced7195437f0d2c2430964736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611717806100206000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80638da5cb5b11610125578063bd0b1f44116100ad578063db7f521a1161007c578063db7f521a146103da578063ec1f1f69146103ed578063f1068454146103f5578063f2fde38b146103fd578063f6d7eade146104105761021c565b8063bd0b1f44146103af578063c83dd231146103b7578063d10c06a2146103bf578063d477f05f146103c75761021c565b8063a36a7526116100f4578063a36a752614610366578063aaf5bfc314610379578063aaf5eb681461038c578063af5518c414610394578063b8bb97a1146103a75761021c565b80638da5cb5b1461033b57806391cca3db14610343578063930ed0331461034b5780639da5b0d51461035e5761021c565b80633e413bee116101a85780634ecaac41116101775780634ecaac411461030857806355c746d11461031057806358de5de814610323578063715018a61461032b5780637e47961c146103335761021c565b80633e413bee146102d25780634591db50146102da57806348c7e528146102ed5780634ae6a027146103005761021c565b80632c535a52116101ef5780632c535a52146102855780633011d3d51461028d57806335876476146102a257806336e9332d146102b75780633c850e1e146102bf5761021c565b806316d03993146102215780631b0d8aab1461023f5780631e1bff3f1461025f57806327c42a5014610272575b600080fd5b610229610418565b6040516102369190611619565b60405180910390f35b61025261024d366004611374565b61041e565b6040516102369190611407565b61025261026d366004611244565b610471565b610252610280366004611374565b6104e1565b61022961052b565b610295610531565b60405161023691906113c0565b6102b56102b03660046112df565b610540565b005b61029561067f565b6102526102cd366004611374565b61068e565b6102956106d8565b6102526102e83660046112a7565b6106e7565b6102526102fb36600461120c565b610749565b61022961075e565b610295610764565b61025261031e3660046112a7565b610773565b6102526107d5565b6102b56107e5565b610295610830565b61029561083f565b61029561084e565b61025261035936600461127c565b61085d565b6102526108bb565b61025261037436600461120c565b6108cb565b61025261038736600461120c565b610931565b610229610997565b6102526103a2366004611374565b61099d565b6102956109e7565b6102296109f6565b6102956109fc565b610252610a0b565b6102526103d536600461120c565b610c32565b6102526103e836600461120c565b610c98565b610295610cfe565b610229610d0d565b6102b561040b36600461120c565b610d13565b610295610d84565b60725481565b6000610428610d93565b6001600160a01b031661043961083f565b6001600160a01b0316146104685760405162461bcd60e51b815260040161045f90611563565b60405180910390fd5b50607355600190565b600061047b610d93565b6001600160a01b031661048c61083f565b6001600160a01b0316146104b25760405162461bcd60e51b815260040161045f90611563565b506001600160a01b0382166000908152606560205260409020805482151560ff19909116179055600192915050565b60006104eb610d93565b6001600160a01b03166104fc61083f565b6001600160a01b0316146105225760405162461bcd60e51b815260040161045f90611563565b50606e55600190565b606f5481565b6066546001600160a01b031681565b600054610100900460ff1680610559575060005460ff16155b6105755760405162461bcd60e51b815260040161045f90611515565b600054610100900460ff161580156105a0576000805460ff1961ff0019909116610100171660011790555b6105a8610d97565b606c80546001600160a01b03199081166001600160a01b038a811691909117909255606d805482168b8416179055606680548216898416179055606880548216878416179055606980548216868416179055606a8054339083168117909155606b805483169091179055611388606e556109c4606f8190556070556127106071556103e860725560748054600160a01b60ff60a01b1990911617600161ff0160a01b031916858416179055606780549091169187169190911790558015610675576000805461ff00191690555b5050505050505050565b6074546001600160a01b031681565b6000610698610d93565b6001600160a01b03166106a961083f565b6001600160a01b0316146106cf5760405162461bcd60e51b815260040161045f90611563565b50607055600190565b6067546001600160a01b031681565b60006106f1610d93565b6001600160a01b031661070261083f565b6001600160a01b0316146107285760405162461bcd60e51b815260040161045f90611563565b5060748054821515600160a01b0260ff60a01b199091161790556001919050565b60656020526000908152604090205460ff1681565b60705481565b6068546001600160a01b031681565b600061077d610d93565b6001600160a01b031661078e61083f565b6001600160a01b0316146107b45760405162461bcd60e51b815260040161045f90611563565b5060748054821515600160a81b0260ff60a81b199091161790556001919050565b607454600160a81b900460ff1681565b6107ed610d93565b6001600160a01b03166107fe61083f565b6001600160a01b0316146108245760405162461bcd60e51b815260040161045f90611563565b61082e6000610e1b565b565b6075546001600160a01b031681565b6033546001600160a01b031690565b606b546001600160a01b031681565b6000610867610d93565b6001600160a01b031661087861083f565b6001600160a01b03161461089e5760405162461bcd60e51b815260040161045f90611563565b6108b26001600160a01b0384163384610e6d565b50600192915050565b607454600160a01b900460ff1681565b60006108d5610d93565b6001600160a01b03166108e661083f565b6001600160a01b03161461090c5760405162461bcd60e51b815260040161045f90611563565b50606a80546001600160a01b0383166001600160a01b03199091161790556001919050565b600061093b610d93565b6001600160a01b031661094c61083f565b6001600160a01b0316146109725760405162461bcd60e51b815260040161045f90611563565b50606780546001600160a01b0383166001600160a01b03199091161790556001919050565b60715481565b60006109a7610d93565b6001600160a01b03166109b861083f565b6001600160a01b0316146109de5760405162461bcd60e51b815260040161045f90611563565b50606f55600190565b6069546001600160a01b031681565b606e5481565b606d546001600160a01b031681565b3360009081526065602052604081205460ff16610a3a5760405162461bcd60e51b815260040161045f9061148b565b6066546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a6b9030906004016113c0565b60206040518083038186803b158015610a8357600080fd5b505afa158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb919061138c565b90506000610ae0607154610ada606e5485610ec890919063ffffffff16565b90610edb565b90506000610aff607154610ada606f5486610ec890919063ffffffff16565b90506000610b1782610b118686610ee7565b90610ee7565b606954606654919250610b37916001600160a01b03908116911685610e6d565b606a54606654610b54916001600160a01b03918216911684610e6d565b606b54606654610b71916001600160a01b03918216911683610e6d565b607454600160a01b900460ff1615610b8b57610b8b610ef3565b607454600160a81b900460ff1615610c2757607560009054906101000a90046001600160a01b03166001600160a01b031663796c7be76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610bed57600080fd5b505af1158015610c01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2591906112c3565b505b600194505050505090565b6000610c3c610d93565b6001600160a01b0316610c4d61083f565b6001600160a01b031614610c735760405162461bcd60e51b815260040161045f90611563565b50606b80546001600160a01b0383166001600160a01b03199091161790556001919050565b6000610ca2610d93565b6001600160a01b0316610cb361083f565b6001600160a01b031614610cd95760405162461bcd60e51b815260040161045f90611563565b50607580546001600160a01b0383166001600160a01b03199091161790556001919050565b606a546001600160a01b031681565b60735481565b610d1b610d93565b6001600160a01b0316610d2c61083f565b6001600160a01b031614610d525760405162461bcd60e51b815260040161045f90611563565b6001600160a01b038116610d785760405162461bcd60e51b815260040161045f90611445565b610d8181610e1b565b50565b606c546001600160a01b031681565b3390565b600054610100900460ff1680610db0575060005460ff16155b610dcc5760405162461bcd60e51b815260040161045f90611515565b600054610100900460ff16158015610df7576000805460ff1961ff0019909116610100171660011790555b610dff610f84565b610e07610ff7565b8015610d81576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610ec38363a9059cbb60e01b8484604051602401610e8c9291906113ee565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611067565b505050565b6000610ed48284611642565b9392505050565b6000610ed48284611622565b6000610ed48284611661565b606d5460675460665460405163e6a4390560e01b81526000936001600160a01b039081169363e6a4390593610f30939183169216906004016113d4565b60206040518083038186803b158015610f4857600080fd5b505afa158015610f5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f809190611228565b5050565b600054610100900460ff1680610f9d575060005460ff16155b610fb95760405162461bcd60e51b815260040161045f90611515565b600054610100900460ff16158015610e07576000805460ff1961ff0019909116610100171660011790558015610d81576000805461ff001916905550565b600054610100900460ff1680611010575060005460ff16155b61102c5760405162461bcd60e51b815260040161045f90611515565b600054610100900460ff16158015611057576000805460ff1961ff0019909116610100171660011790555b610e07611062610d93565b610e1b565b60006110bc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110f69092919063ffffffff16565b805190915015610ec357808060200190518101906110da91906112c3565b610ec35760405162461bcd60e51b815260040161045f906115cf565b6060611105848460008561110d565b949350505050565b60608247101561112f5760405162461bcd60e51b815260040161045f906114cf565b611138856111cd565b6111545760405162461bcd60e51b815260040161045f90611598565b600080866001600160a01b0316858760405161117091906113a4565b60006040518083038185875af1925050503d80600081146111ad576040519150601f19603f3d011682016040523d82523d6000602084013e6111b2565b606091505b50915091506111c28282866111d3565b979650505050505050565b3b151590565b606083156111e2575081610ed4565b8251156111f25782518084602001fd5b8160405162461bcd60e51b815260040161045f9190611412565b60006020828403121561121d578081fd5b8135610ed4816116be565b600060208284031215611239578081fd5b8151610ed4816116be565b60008060408385031215611256578081fd5b8235611261816116be565b91506020830135611271816116d3565b809150509250929050565b6000806040838503121561128e578182fd5b8235611299816116be565b946020939093013593505050565b6000602082840312156112b8578081fd5b8135610ed4816116d3565b6000602082840312156112d4578081fd5b8151610ed4816116d3565b600080600080600080600060e0888a0312156112f9578283fd5b8735611304816116be565b96506020880135611314816116be565b95506040880135611324816116be565b94506060880135611334816116be565b93506080880135611344816116be565b925060a0880135611354816116be565b915060c0880135611364816116be565b8091505092959891949750929550565b600060208284031215611385578081fd5b5035919050565b60006020828403121561139d578081fd5b5051919050565b600082516113b6818460208701611678565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152611431816040850160208701611678565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526024908201527f6578656375746f723a2063616c6c6572206973206e6f742074686520657865636040820152633aba37b960e11b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b60008261163d57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561165c5761165c6116a8565b500290565b600082821015611673576116736116a8565b500390565b60005b8381101561169357818101518382015260200161167b565b838111156116a2576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610d8157600080fd5b8015158114610d8157600080fdfea264697066735822122070cc6a9ca8bdc19a8b3de12baacc67a7ad70b380fc6dced7195437f0d2c2430964736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1717 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xBD0B1F44 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDB7F521A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDB7F521A EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF1068454 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xF6D7EADE EQ PUSH2 0x410 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xBD0B1F44 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xC83DD231 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xD10C06A2 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xD477F05F EQ PUSH2 0x3C7 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xA36A7526 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xAAF5BFC3 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xAF5518C4 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xB8BB97A1 EQ PUSH2 0x3A7 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x91CCA3DB EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x930ED033 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x9DA5B0D5 EQ PUSH2 0x35E JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x4ECAAC41 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x4ECAAC41 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x55C746D1 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x58DE5DE8 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x7E47961C EQ PUSH2 0x333 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x4591DB50 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x48C7E528 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x4AE6A027 EQ PUSH2 0x300 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x2C535A52 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2C535A52 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x3011D3D5 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x35876476 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x36E9332D EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x3C850E1E EQ PUSH2 0x2BF JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x16D03993 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x1B0D8AAB EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x27C42A50 EQ PUSH2 0x272 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x418 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x1244 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x295 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x295 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x252 PUSH2 0x2CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x295 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x75E JUMP JUMPDEST PUSH2 0x295 PUSH2 0x764 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x830 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x295 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x252 PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST PUSH2 0x252 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0x252 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x252 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH2 0x295 PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x9F6 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x9FC JUMP JUMPDEST PUSH2 0x252 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x252 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0xC32 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x295 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x229 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x295 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x72 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x439 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x73 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x48C PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4FC PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x6E SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x559 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x5A8 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x6C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x6D DUP1 SLOAD DUP3 AND DUP12 DUP5 AND OR SWAP1 SSTORE PUSH1 0x66 DUP1 SLOAD DUP3 AND DUP10 DUP5 AND OR SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x69 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0x6A DUP1 SLOAD CALLER SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6B DUP1 SLOAD DUP4 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1388 PUSH1 0x6E SSTORE PUSH2 0x9C4 PUSH1 0x6F DUP2 SWAP1 SSTORE PUSH1 0x70 SSTORE PUSH2 0x2710 PUSH1 0x71 SSTORE PUSH2 0x3E8 PUSH1 0x72 SSTORE PUSH1 0x74 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH2 0xFF01 PUSH1 0xA0 SHL SUB NOT AND DUP6 DUP5 AND OR SWAP1 SSTORE PUSH1 0x67 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A9 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x70 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x702 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x78E PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x7ED PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7FE PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x82E PUSH1 0x0 PUSH2 0xE1B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x75 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x867 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x878 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x8B2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0xE6D JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D5 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8E6 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x6A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93B PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x94C PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A7 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B8 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x6F SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x148B JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA6B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x138C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAE0 PUSH1 0x71 SLOAD PUSH2 0xADA PUSH1 0x6E SLOAD DUP6 PUSH2 0xEC8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xEDB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAFF PUSH1 0x71 SLOAD PUSH2 0xADA PUSH1 0x6F SLOAD DUP7 PUSH2 0xEC8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB17 DUP3 PUSH2 0xB11 DUP7 DUP7 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x66 SLOAD SWAP2 SWAP3 POP PUSH2 0xB37 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP6 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x66 SLOAD PUSH2 0xB54 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x66 SLOAD PUSH2 0xB71 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB8B PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC27 JUMPI PUSH1 0x75 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x796C7BE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC25 SWAP2 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3C PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC4D PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x6B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA2 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCB3 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x75 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD1B PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD2C PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH2 0xD81 DUP2 PUSH2 0xE1B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xDB0 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xDCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xDFF PUSH2 0xF84 JUMP JUMPDEST PUSH2 0xE07 PUSH2 0xFF7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEC3 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE8C SWAP3 SWAP2 SWAP1 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1067 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED4 DUP3 DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED4 DUP3 DUP5 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED4 DUP3 DUP5 PUSH2 0x1661 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x67 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0xF30 SWAP4 SWAP2 DUP4 AND SWAP3 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xF9D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xFB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE07 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1010 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x102C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1057 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xE07 PUSH2 0x1062 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10F6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xEC3 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10DA SWAP2 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1105 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x110D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH2 0x1138 DUP6 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x1154 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11C2 DUP3 DUP3 DUP7 PUSH2 0x11D3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x11E2 JUMPI POP DUP2 PUSH2 0xED4 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x11F2 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xED4 DUP2 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1239 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xED4 DUP2 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1256 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1261 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1271 DUP2 PUSH2 0x16D3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1299 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xED4 DUP2 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xED4 DUP2 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x12F9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1304 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1314 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x1324 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH2 0x1334 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x1344 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x1354 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH2 0x1364 DUP2 PUSH2 0x16BE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1385 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139D JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x13B6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1678 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1431 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578656375746F723A2063616C6C6572206973206E6F74207468652065786563 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3ABA37B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x163D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x165C JUMPI PUSH2 0x165C PUSH2 0x16A8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1673 PUSH2 0x16A8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1693 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x167B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16A2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xCC6A9CA8BDC19A8B3DE12BAACC67A7AD70 0xB3 DUP1 0xFC PUSH14 0xCED7195437F0D2C2430964736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "909:5177:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10480:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:189:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:12"
															},
															"nodeType": "YulIf",
															"src": "94:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "237:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "252:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "262:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "252:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:12",
														"type": ""
													}
												],
												"src": "14:259:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "359:182:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "405:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "414:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "422:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "407:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "407:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "380:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "389:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "376:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "372:32:12"
															},
															"nodeType": "YulIf",
															"src": "369:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "440:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "459:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "453:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "453:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "444:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "505:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "478:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "478:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "478:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "520:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "530:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "520:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "325:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "336:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "348:6:12",
														"type": ""
													}
												],
												"src": "278:263:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "630:312:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "676:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "685:6:12"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "693:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "678:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "678:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "678:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "651:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "660:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "647:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "647:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "643:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "643:32:12"
															},
															"nodeType": "YulIf",
															"src": "640:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "711:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "737:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "724:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "715:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "783:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "756:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "756:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "798:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "808:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "822:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "854:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "865:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "850:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "850:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "837:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "826:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "902:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "878:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "878:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "919:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "929:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "588:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "599:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "611:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "619:6:12",
														"type": ""
													}
												],
												"src": "546:396:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1034:240:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1080:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1089:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1097:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1082:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1082:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1082:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1055:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1064:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1051:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1051:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1076:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1047:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1047:32:12"
															},
															"nodeType": "YulIf",
															"src": "1044:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1115:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1141:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1128:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1119:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1202:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1212:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1202:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1226:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1264:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1236:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1226:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "992:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1003:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1015:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1023:6:12",
														"type": ""
													}
												],
												"src": "947:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:186:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1392:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1401:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1409:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1394:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1394:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1394:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1367:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1376:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1363:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1363:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1388:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1359:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:32:12"
															},
															"nodeType": "YulIf",
															"src": "1356:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1427:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1453:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1431:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1496:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1472:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1472:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1511:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1521:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1323:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1335:6:12",
														"type": ""
													}
												],
												"src": "1279:253:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1615:179:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1661:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1670:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1678:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1663:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1663:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1663:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1636:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1645:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1632:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1628:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:32:12"
															},
															"nodeType": "YulIf",
															"src": "1625:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1696:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1715:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1709:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1700:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1758:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1734:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1734:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1773:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1783:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1581:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1592:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1604:6:12",
														"type": ""
													}
												],
												"src": "1537:257:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1894:189:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1940:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1949:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1957:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1942:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1942:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1942:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1915:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1924:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1911:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1911:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1936:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1907:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:32:12"
															},
															"nodeType": "YulIf",
															"src": "1904:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1975:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2001:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1988:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1979:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2047:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2020:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2020:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2020:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2062:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2072:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2062:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20Upgradeable_$248",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1860:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1871:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:12",
														"type": ""
													}
												],
												"src": "1799:284:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2427:949:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2474:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2483:6:12"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2491:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2476:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2476:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2476:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2448:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2457:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2469:3:12",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2440:33:12"
															},
															"nodeType": "YulIf",
															"src": "2437:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2509:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2535:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2522:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2513:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2581:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2554:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2554:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2596:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2606:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2596:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2620:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2663:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2635:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2624:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2703:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2676:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2676:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2676:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2720:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2730:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2746:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2778:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2789:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2774:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2774:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2761:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:32:12"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "2750:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2829:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2802:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2802:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2846:17:12",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "2856:7:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2846:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2872:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2904:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2915:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2900:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2900:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2887:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2887:32:12"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "2876:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "2955:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2928:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2928:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2972:17:12",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "2982:7:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2972:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2998:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3030:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3041:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3026:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3026:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3013:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3013:33:12"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nodeType": "YulTypedName",
																	"src": "3002:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nodeType": "YulIdentifier",
																		"src": "3082:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3055:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3099:17:12",
															"value": {
																"name": "value_4",
																"nodeType": "YulIdentifier",
																"src": "3109:7:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3099:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3125:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3157:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3168:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3153:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3153:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3140:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:33:12"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nodeType": "YulTypedName",
																	"src": "3129:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nodeType": "YulIdentifier",
																		"src": "3209:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3182:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3226:17:12",
															"value": {
																"name": "value_5",
																"nodeType": "YulIdentifier",
																"src": "3236:7:12"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3226:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3252:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3267:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:33:12"
															},
															"variables": [
																{
																	"name": "value_6",
																	"nodeType": "YulTypedName",
																	"src": "3256:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_6",
																		"nodeType": "YulIdentifier",
																		"src": "3336:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3309:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3309:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3309:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3353:17:12",
															"value": {
																"name": "value_6",
																"nodeType": "YulIdentifier",
																"src": "3363:7:12"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "3353:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IUniswapV2Factory_$1146t_contract$_IUniswapV2Router02_$1784t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IFarm_$1804",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2345:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2356:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2368:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2376:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2384:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2392:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2400:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2408:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2416:6:12",
														"type": ""
													}
												],
												"src": "2088:1288:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3451:120:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3497:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3506:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3514:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3499:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3499:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3499:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3472:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3481:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3468:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3468:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3493:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3464:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3464:32:12"
															},
															"nodeType": "YulIf",
															"src": "3461:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3532:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3555:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3542:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3532:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3417:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3428:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3440:6:12",
														"type": ""
													}
												],
												"src": "3381:190:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3657:113:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3703:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3712:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3720:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3705:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3705:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3678:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3687:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3674:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3674:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3699:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3670:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3670:32:12"
															},
															"nodeType": "YulIf",
															"src": "3667:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3738:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3754:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3748:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3748:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3738:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3623:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3634:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3646:6:12",
														"type": ""
													}
												],
												"src": "3576:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3912:137:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3922:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3942:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3936:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3936:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3926:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3984:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3992:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3980:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3980:17:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3999:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4004:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3958:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3958:53:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3958:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4020:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4031:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4036:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4027:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4027:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4020:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3888:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3893:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3904:3:12",
														"type": ""
													}
												],
												"src": "3775:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4155:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4165:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4177:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4188:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4173:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4173:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4165:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4207:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4222:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4238:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4243:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4234:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4234:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4247:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4230:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4230:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4218:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4218:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4200:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4200:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4200:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4124:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4135:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4146:4:12",
														"type": ""
													}
												],
												"src": "4054:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4391:175:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4401:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4413:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4409:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4409:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4401:4:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4436:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4454:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4459:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4450:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4450:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4446:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4446:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4440:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4481:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4496:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4504:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4492:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4492:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4474:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4474:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4474:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4539:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4524:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4548:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4556:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4544:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4544:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4517:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4517:43:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4352:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4363:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4371:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4382:4:12",
														"type": ""
													}
												],
												"src": "4262:304:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4700:145:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4710:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4722:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4733:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4718:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4718:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4710:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4752:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4767:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4783:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4788:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4779:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4779:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4792:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4775:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4775:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4745:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4745:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4816:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4827:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4812:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4812:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4832:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4805:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4805:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4805:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4661:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4672:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4680:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4691:4:12",
														"type": ""
													}
												],
												"src": "4571:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4945:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4955:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4967:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4978:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4963:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4963:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4955:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4997:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5022:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5015:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5015:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5008:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5008:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4990:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4990:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4990:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4914:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4925:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4936:4:12",
														"type": ""
													}
												],
												"src": "4850:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5168:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5178:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5190:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5201:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5186:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5178:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5220:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5235:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5251:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5256:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5247:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5247:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5260:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5243:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5243:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5231:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5231:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5213:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5213:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5213:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$248__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5137:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5148:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5159:4:12",
														"type": ""
													}
												],
												"src": "5042:228:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5390:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5400:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5412:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5423:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5400:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5442:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5457:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5473:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5478:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5469:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5469:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5482:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5465:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5465:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5453:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5453:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5435:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5435:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5435:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IFarm_$1804__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5359:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5370:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5381:4:12",
														"type": ""
													}
												],
												"src": "5275:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5624:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5634:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5646:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5657:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5642:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5642:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5634:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5676:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5691:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5707:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5712:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5703:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5703:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5716:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5699:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5699:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5687:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5687:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5669:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5669:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5669:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Factory_$1146__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5593:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5604:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5615:4:12",
														"type": ""
													}
												],
												"src": "5497:229:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5859:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5869:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5881:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5892:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5877:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5877:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5869:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5911:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5926:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5942:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5947:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5938:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5938:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5951:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5934:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5934:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5922:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5922:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5904:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5904:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5904:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1784__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5828:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5839:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5850:4:12",
														"type": ""
													}
												],
												"src": "5731:230:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6087:262:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6104:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6115:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6097:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6097:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6097:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6127:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6147:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6141:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6141:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6131:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6174:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6185:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6170:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6170:18:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6190:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6163:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6163:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6163:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6232:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6240:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6228:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6228:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6249:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6260:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6245:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6245:18:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6265:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6206:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6206:66:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6206:66:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6281:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6297:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6316:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6324:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6312:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6312:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6333:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6329:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6329:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6308:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6308:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6293:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6293:45:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6340:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6289:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6289:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6281:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6056:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6067:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6078:4:12",
														"type": ""
													}
												],
												"src": "5966:383:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6528:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6545:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6556:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6538:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6538:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6538:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6579:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6590:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6575:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6575:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6595:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6568:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6568:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6568:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6618:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6629:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6614:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6614:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6634:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6607:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6607:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6607:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6689:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6700:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6685:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6685:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6705:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6678:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6678:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6678:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6723:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6746:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6723:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6519:4:12",
														"type": ""
													}
												],
												"src": "6354:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6935:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6952:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6963:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6945:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6945:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6945:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6986:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6997:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6982:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6982:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7002:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6975:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6975:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7025:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7036:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7021:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7021:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7041:34:12",
																		"type": "",
																		"value": "executor: caller is not the exec"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7014:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7014:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7014:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7096:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7107:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7092:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7092:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7112:6:12",
																		"type": "",
																		"value": "utor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7085:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7085:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7085:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7128:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7140:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7151:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7136:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7136:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7128:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6912:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6926:4:12",
														"type": ""
													}
												],
												"src": "6761:400:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7340:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7357:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7368:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7350:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7350:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7350:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7391:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7402:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7387:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7387:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7407:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7380:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7380:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7380:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7430:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7441:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7426:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7426:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7446:34:12",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7419:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7419:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7419:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7501:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7512:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7497:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7497:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7517:8:12",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7490:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7490:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7490:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7535:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7547:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7558:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7543:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7543:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7535:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7317:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7331:4:12",
														"type": ""
													}
												],
												"src": "7166:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7747:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7764:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7775:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7757:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7757:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7757:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7798:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7809:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7794:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7794:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7814:2:12",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7787:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7787:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7787:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7837:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7848:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7833:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7833:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7853:34:12",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7826:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7826:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7826:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7908:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7919:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7904:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7904:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7924:16:12",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7897:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7897:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7950:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7962:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7973:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7958:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7958:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7950:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7724:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7738:4:12",
														"type": ""
													}
												],
												"src": "7573:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8162:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8179:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8190:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8172:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8172:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8172:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8213:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8224:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8209:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8209:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8229:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8202:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8202:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8202:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8252:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8263:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8248:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8248:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8268:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8241:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8241:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8241:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8312:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8324:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8335:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8320:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8320:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8312:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8139:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8153:4:12",
														"type": ""
													}
												],
												"src": "7988:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8523:179:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8540:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8551:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8533:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8574:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8585:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8570:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8590:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8563:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8563:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8563:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8613:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8624:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8609:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8609:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8629:31:12",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8602:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8602:59:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8602:59:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8670:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8682:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8693:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8678:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8678:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8670:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8500:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8514:4:12",
														"type": ""
													}
												],
												"src": "8349:353:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8881:232:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8898:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8909:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8891:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8891:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8891:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8932:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8943:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8928:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8928:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8948:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8921:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8921:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8921:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8971:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8982:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8967:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8967:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8987:34:12",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8960:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8960:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8960:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9042:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9053:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9038:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9038:18:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9058:12:12",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9031:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9031:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9031:40:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9080:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9092:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9103:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9088:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9088:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9080:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8858:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8872:4:12",
														"type": ""
													}
												],
												"src": "8707:406:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9219:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9229:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9241:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9252:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9237:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9237:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9229:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9271:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9282:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9264:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9264:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9264:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9188:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9199:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9210:4:12",
														"type": ""
													}
												],
												"src": "9118:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9346:171:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9377:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "9398:1:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9405:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9410:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9401:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9401:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9391:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9391:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9391:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9442:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9445:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9435:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9435:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9435:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "9470:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9473:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9463:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9463:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9463:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9366:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9359:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9359:9:12"
															},
															"nodeType": "YulIf",
															"src": "9356:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9497:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9506:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9509:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9502:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9502:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9497:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9331:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9334:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9340:1:12",
														"type": ""
													}
												],
												"src": "9300:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9574:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9633:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9635:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9635:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9635:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9605:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9598:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9598:9:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9591:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9591:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9613:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9624:1:12",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9620:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9620:6:12"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9628:1:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9616:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9616:14:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9610:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9610:21:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9587:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9587:45:12"
															},
															"nodeType": "YulIf",
															"src": "9584:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9664:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9679:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9682:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9675:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9675:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9664:7:12"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9553:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9556:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9562:7:12",
														"type": ""
													}
												],
												"src": "9522:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9744:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9766:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9768:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9768:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9768:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9760:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9763:1:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9757:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9757:8:12"
															},
															"nodeType": "YulIf",
															"src": "9754:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9797:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9809:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9812:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9805:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9805:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9797:4:12"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9726:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9729:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9735:4:12",
														"type": ""
													}
												],
												"src": "9695:125:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9878:205:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9888:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9897:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9892:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9957:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9982:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9987:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9978:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9978:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10001:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10006:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9997:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9997:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9991:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9991:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9971:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9971:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9971:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9918:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9921:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9915:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9915:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9929:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9931:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9940:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9943:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9936:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9936:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9931:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9911:3:12",
																"statements": []
															},
															"src": "9907:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10046:31:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10059:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10064:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10055:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10055:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10073:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10048:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10048:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10048:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10035:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10038:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10032:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10032:13:12"
															},
															"nodeType": "YulIf",
															"src": "10029:2:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9856:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9861:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9866:6:12",
														"type": ""
													}
												],
												"src": "9825:258:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10120:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10144:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10149:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10140:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10140:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10130:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10130:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10177:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10180:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10170:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10170:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10170:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10201:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10204:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10194:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10194:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10194:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10088:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10267:86:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10331:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10340:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10343:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10333:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10333:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10333:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10290:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10301:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10316:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10321:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "10312:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10312:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10325:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "10308:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10308:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "10297:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10297:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10287:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10287:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10280:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10280:50:12"
															},
															"nodeType": "YulIf",
															"src": "10277:2:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10256:5:12",
														"type": ""
													}
												],
												"src": "10220:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10402:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10456:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10465:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10468:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10458:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10458:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10458:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10425:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "10446:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "10439:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10439:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10432:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10432:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10422:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10422:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10415:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10415:40:12"
															},
															"nodeType": "YulIf",
															"src": "10412:2:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10391:5:12",
														"type": ""
													}
												],
												"src": "10358:120:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20Upgradeable_$248(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IUniswapV2Factory_$1146t_contract$_IUniswapV2Router02_$1784t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IFarm_$1804(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_t_address(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_t_address(value_4)\n        value4 := value_4\n        let value_5 := calldataload(add(headStart, 160))\n        validator_revert_t_address(value_5)\n        value5 := value_5\n        let value_6 := calldataload(add(headStart, 192))\n        validator_revert_t_address(value_6)\n        value6 := value_6\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$248__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IFarm_$1804__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Factory_$1146__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1784__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"executor: caller is not the exec\")\n        mstore(add(headStart, 96), \"utor\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061021c5760003560e01c80638da5cb5b11610125578063bd0b1f44116100ad578063db7f521a1161007c578063db7f521a146103da578063ec1f1f69146103ed578063f1068454146103f5578063f2fde38b146103fd578063f6d7eade146104105761021c565b8063bd0b1f44146103af578063c83dd231146103b7578063d10c06a2146103bf578063d477f05f146103c75761021c565b8063a36a7526116100f4578063a36a752614610366578063aaf5bfc314610379578063aaf5eb681461038c578063af5518c414610394578063b8bb97a1146103a75761021c565b80638da5cb5b1461033b57806391cca3db14610343578063930ed0331461034b5780639da5b0d51461035e5761021c565b80633e413bee116101a85780634ecaac41116101775780634ecaac411461030857806355c746d11461031057806358de5de814610323578063715018a61461032b5780637e47961c146103335761021c565b80633e413bee146102d25780634591db50146102da57806348c7e528146102ed5780634ae6a027146103005761021c565b80632c535a52116101ef5780632c535a52146102855780633011d3d51461028d57806335876476146102a257806336e9332d146102b75780633c850e1e146102bf5761021c565b806316d03993146102215780631b0d8aab1461023f5780631e1bff3f1461025f57806327c42a5014610272575b600080fd5b610229610418565b6040516102369190611619565b60405180910390f35b61025261024d366004611374565b61041e565b6040516102369190611407565b61025261026d366004611244565b610471565b610252610280366004611374565b6104e1565b61022961052b565b610295610531565b60405161023691906113c0565b6102b56102b03660046112df565b610540565b005b61029561067f565b6102526102cd366004611374565b61068e565b6102956106d8565b6102526102e83660046112a7565b6106e7565b6102526102fb36600461120c565b610749565b61022961075e565b610295610764565b61025261031e3660046112a7565b610773565b6102526107d5565b6102b56107e5565b610295610830565b61029561083f565b61029561084e565b61025261035936600461127c565b61085d565b6102526108bb565b61025261037436600461120c565b6108cb565b61025261038736600461120c565b610931565b610229610997565b6102526103a2366004611374565b61099d565b6102956109e7565b6102296109f6565b6102956109fc565b610252610a0b565b6102526103d536600461120c565b610c32565b6102526103e836600461120c565b610c98565b610295610cfe565b610229610d0d565b6102b561040b36600461120c565b610d13565b610295610d84565b60725481565b6000610428610d93565b6001600160a01b031661043961083f565b6001600160a01b0316146104685760405162461bcd60e51b815260040161045f90611563565b60405180910390fd5b50607355600190565b600061047b610d93565b6001600160a01b031661048c61083f565b6001600160a01b0316146104b25760405162461bcd60e51b815260040161045f90611563565b506001600160a01b0382166000908152606560205260409020805482151560ff19909116179055600192915050565b60006104eb610d93565b6001600160a01b03166104fc61083f565b6001600160a01b0316146105225760405162461bcd60e51b815260040161045f90611563565b50606e55600190565b606f5481565b6066546001600160a01b031681565b600054610100900460ff1680610559575060005460ff16155b6105755760405162461bcd60e51b815260040161045f90611515565b600054610100900460ff161580156105a0576000805460ff1961ff0019909116610100171660011790555b6105a8610d97565b606c80546001600160a01b03199081166001600160a01b038a811691909117909255606d805482168b8416179055606680548216898416179055606880548216878416179055606980548216868416179055606a8054339083168117909155606b805483169091179055611388606e556109c4606f8190556070556127106071556103e860725560748054600160a01b60ff60a01b1990911617600161ff0160a01b031916858416179055606780549091169187169190911790558015610675576000805461ff00191690555b5050505050505050565b6074546001600160a01b031681565b6000610698610d93565b6001600160a01b03166106a961083f565b6001600160a01b0316146106cf5760405162461bcd60e51b815260040161045f90611563565b50607055600190565b6067546001600160a01b031681565b60006106f1610d93565b6001600160a01b031661070261083f565b6001600160a01b0316146107285760405162461bcd60e51b815260040161045f90611563565b5060748054821515600160a01b0260ff60a01b199091161790556001919050565b60656020526000908152604090205460ff1681565b60705481565b6068546001600160a01b031681565b600061077d610d93565b6001600160a01b031661078e61083f565b6001600160a01b0316146107b45760405162461bcd60e51b815260040161045f90611563565b5060748054821515600160a81b0260ff60a81b199091161790556001919050565b607454600160a81b900460ff1681565b6107ed610d93565b6001600160a01b03166107fe61083f565b6001600160a01b0316146108245760405162461bcd60e51b815260040161045f90611563565b61082e6000610e1b565b565b6075546001600160a01b031681565b6033546001600160a01b031690565b606b546001600160a01b031681565b6000610867610d93565b6001600160a01b031661087861083f565b6001600160a01b03161461089e5760405162461bcd60e51b815260040161045f90611563565b6108b26001600160a01b0384163384610e6d565b50600192915050565b607454600160a01b900460ff1681565b60006108d5610d93565b6001600160a01b03166108e661083f565b6001600160a01b03161461090c5760405162461bcd60e51b815260040161045f90611563565b50606a80546001600160a01b0383166001600160a01b03199091161790556001919050565b600061093b610d93565b6001600160a01b031661094c61083f565b6001600160a01b0316146109725760405162461bcd60e51b815260040161045f90611563565b50606780546001600160a01b0383166001600160a01b03199091161790556001919050565b60715481565b60006109a7610d93565b6001600160a01b03166109b861083f565b6001600160a01b0316146109de5760405162461bcd60e51b815260040161045f90611563565b50606f55600190565b6069546001600160a01b031681565b606e5481565b606d546001600160a01b031681565b3360009081526065602052604081205460ff16610a3a5760405162461bcd60e51b815260040161045f9061148b565b6066546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a6b9030906004016113c0565b60206040518083038186803b158015610a8357600080fd5b505afa158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb919061138c565b90506000610ae0607154610ada606e5485610ec890919063ffffffff16565b90610edb565b90506000610aff607154610ada606f5486610ec890919063ffffffff16565b90506000610b1782610b118686610ee7565b90610ee7565b606954606654919250610b37916001600160a01b03908116911685610e6d565b606a54606654610b54916001600160a01b03918216911684610e6d565b606b54606654610b71916001600160a01b03918216911683610e6d565b607454600160a01b900460ff1615610b8b57610b8b610ef3565b607454600160a81b900460ff1615610c2757607560009054906101000a90046001600160a01b03166001600160a01b031663796c7be76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610bed57600080fd5b505af1158015610c01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2591906112c3565b505b600194505050505090565b6000610c3c610d93565b6001600160a01b0316610c4d61083f565b6001600160a01b031614610c735760405162461bcd60e51b815260040161045f90611563565b50606b80546001600160a01b0383166001600160a01b03199091161790556001919050565b6000610ca2610d93565b6001600160a01b0316610cb361083f565b6001600160a01b031614610cd95760405162461bcd60e51b815260040161045f90611563565b50607580546001600160a01b0383166001600160a01b03199091161790556001919050565b606a546001600160a01b031681565b60735481565b610d1b610d93565b6001600160a01b0316610d2c61083f565b6001600160a01b031614610d525760405162461bcd60e51b815260040161045f90611563565b6001600160a01b038116610d785760405162461bcd60e51b815260040161045f90611445565b610d8181610e1b565b50565b606c546001600160a01b031681565b3390565b600054610100900460ff1680610db0575060005460ff16155b610dcc5760405162461bcd60e51b815260040161045f90611515565b600054610100900460ff16158015610df7576000805460ff1961ff0019909116610100171660011790555b610dff610f84565b610e07610ff7565b8015610d81576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610ec38363a9059cbb60e01b8484604051602401610e8c9291906113ee565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611067565b505050565b6000610ed48284611642565b9392505050565b6000610ed48284611622565b6000610ed48284611661565b606d5460675460665460405163e6a4390560e01b81526000936001600160a01b039081169363e6a4390593610f30939183169216906004016113d4565b60206040518083038186803b158015610f4857600080fd5b505afa158015610f5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f809190611228565b5050565b600054610100900460ff1680610f9d575060005460ff16155b610fb95760405162461bcd60e51b815260040161045f90611515565b600054610100900460ff16158015610e07576000805460ff1961ff0019909116610100171660011790558015610d81576000805461ff001916905550565b600054610100900460ff1680611010575060005460ff16155b61102c5760405162461bcd60e51b815260040161045f90611515565b600054610100900460ff16158015611057576000805460ff1961ff0019909116610100171660011790555b610e07611062610d93565b610e1b565b60006110bc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110f69092919063ffffffff16565b805190915015610ec357808060200190518101906110da91906112c3565b610ec35760405162461bcd60e51b815260040161045f906115cf565b6060611105848460008561110d565b949350505050565b60608247101561112f5760405162461bcd60e51b815260040161045f906114cf565b611138856111cd565b6111545760405162461bcd60e51b815260040161045f90611598565b600080866001600160a01b0316858760405161117091906113a4565b60006040518083038185875af1925050503d80600081146111ad576040519150601f19603f3d011682016040523d82523d6000602084013e6111b2565b606091505b50915091506111c28282866111d3565b979650505050505050565b3b151590565b606083156111e2575081610ed4565b8251156111f25782518084602001fd5b8160405162461bcd60e51b815260040161045f9190611412565b60006020828403121561121d578081fd5b8135610ed4816116be565b600060208284031215611239578081fd5b8151610ed4816116be565b60008060408385031215611256578081fd5b8235611261816116be565b91506020830135611271816116d3565b809150509250929050565b6000806040838503121561128e578182fd5b8235611299816116be565b946020939093013593505050565b6000602082840312156112b8578081fd5b8135610ed4816116d3565b6000602082840312156112d4578081fd5b8151610ed4816116d3565b600080600080600080600060e0888a0312156112f9578283fd5b8735611304816116be565b96506020880135611314816116be565b95506040880135611324816116be565b94506060880135611334816116be565b93506080880135611344816116be565b925060a0880135611354816116be565b915060c0880135611364816116be565b8091505092959891949750929550565b600060208284031215611385578081fd5b5035919050565b60006020828403121561139d578081fd5b5051919050565b600082516113b6818460208701611678565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152611431816040850160208701611678565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526024908201527f6578656375746f723a2063616c6c6572206973206e6f742074686520657865636040820152633aba37b960e11b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b60008261163d57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561165c5761165c6116a8565b500290565b600082821015611673576116736116a8565b500390565b60005b8381101561169357818101518382015260200161167b565b838111156116a2576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610d8157600080fd5b8015158114610d8157600080fdfea264697066735822122070cc6a9ca8bdc19a8b3de12baacc67a7ad70b380fc6dced7195437f0d2c2430964736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xBD0B1F44 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDB7F521A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDB7F521A EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF1068454 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xF6D7EADE EQ PUSH2 0x410 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xBD0B1F44 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xC83DD231 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xD10C06A2 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xD477F05F EQ PUSH2 0x3C7 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xA36A7526 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xAAF5BFC3 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xAF5518C4 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xB8BB97A1 EQ PUSH2 0x3A7 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x91CCA3DB EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x930ED033 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x9DA5B0D5 EQ PUSH2 0x35E JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x4ECAAC41 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x4ECAAC41 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x55C746D1 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x58DE5DE8 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x7E47961C EQ PUSH2 0x333 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x4591DB50 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x48C7E528 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x4AE6A027 EQ PUSH2 0x300 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x2C535A52 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2C535A52 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x3011D3D5 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x35876476 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x36E9332D EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x3C850E1E EQ PUSH2 0x2BF JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x16D03993 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x1B0D8AAB EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x27C42A50 EQ PUSH2 0x272 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x418 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x1244 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x52B JUMP JUMPDEST PUSH2 0x295 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x295 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x252 PUSH2 0x2CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x295 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x75E JUMP JUMPDEST PUSH2 0x295 PUSH2 0x764 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x830 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x295 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x252 PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST PUSH2 0x252 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0x252 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x252 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH2 0x295 PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x9F6 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x9FC JUMP JUMPDEST PUSH2 0x252 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x252 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0xC32 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x295 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x229 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x295 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x72 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x439 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x73 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x48C PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4FC PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x6E SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x559 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x5A8 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x6C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x6D DUP1 SLOAD DUP3 AND DUP12 DUP5 AND OR SWAP1 SSTORE PUSH1 0x66 DUP1 SLOAD DUP3 AND DUP10 DUP5 AND OR SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x69 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0x6A DUP1 SLOAD CALLER SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6B DUP1 SLOAD DUP4 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1388 PUSH1 0x6E SSTORE PUSH2 0x9C4 PUSH1 0x6F DUP2 SWAP1 SSTORE PUSH1 0x70 SSTORE PUSH2 0x2710 PUSH1 0x71 SSTORE PUSH2 0x3E8 PUSH1 0x72 SSTORE PUSH1 0x74 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH2 0xFF01 PUSH1 0xA0 SHL SUB NOT AND DUP6 DUP5 AND OR SWAP1 SSTORE PUSH1 0x67 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A9 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x70 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x702 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x78E PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x74 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x7ED PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7FE PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x82E PUSH1 0x0 PUSH2 0xE1B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x75 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x867 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x878 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x8B2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0xE6D JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D5 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8E6 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x6A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93B PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x94C PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A7 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B8 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x6F SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x148B JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA6B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x138C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAE0 PUSH1 0x71 SLOAD PUSH2 0xADA PUSH1 0x6E SLOAD DUP6 PUSH2 0xEC8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xEDB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAFF PUSH1 0x71 SLOAD PUSH2 0xADA PUSH1 0x6F SLOAD DUP7 PUSH2 0xEC8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB17 DUP3 PUSH2 0xB11 DUP7 DUP7 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x66 SLOAD SWAP2 SWAP3 POP PUSH2 0xB37 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP6 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x66 SLOAD PUSH2 0xB54 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x66 SLOAD PUSH2 0xB71 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB8B PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x74 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC27 JUMPI PUSH1 0x75 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x796C7BE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC25 SWAP2 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3C PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC4D PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x6B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA2 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCB3 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x75 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD1B PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD2C PUSH2 0x83F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH2 0xD81 DUP2 PUSH2 0xE1B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xDB0 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xDCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xDFF PUSH2 0xF84 JUMP JUMPDEST PUSH2 0xE07 PUSH2 0xFF7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEC3 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE8C SWAP3 SWAP2 SWAP1 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1067 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED4 DUP3 DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED4 DUP3 DUP5 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED4 DUP3 DUP5 PUSH2 0x1661 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x67 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0xF30 SWAP4 SWAP2 DUP4 AND SWAP3 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xF9D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xFB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE07 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1010 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x102C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1057 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xE07 PUSH2 0x1062 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10F6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xEC3 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10DA SWAP2 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1105 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x110D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH2 0x1138 DUP6 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x1154 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11C2 DUP3 DUP3 DUP7 PUSH2 0x11D3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x11E2 JUMPI POP DUP2 PUSH2 0xED4 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x11F2 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xED4 DUP2 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1239 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xED4 DUP2 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1256 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1261 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1271 DUP2 PUSH2 0x16D3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1299 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xED4 DUP2 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xED4 DUP2 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x12F9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1304 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1314 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x1324 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH2 0x1334 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x1344 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x1354 DUP2 PUSH2 0x16BE JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH2 0x1364 DUP2 PUSH2 0x16BE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1385 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139D JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x13B6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1678 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1431 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578656375746F723A2063616C6C6572206973206E6F74207468652065786563 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3ABA37B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x163D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x165C JUMPI PUSH2 0x165C PUSH2 0x16A8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1673 PUSH2 0x16A8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1693 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x167B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16A2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xCC6A9CA8BDC19A8B3DE12BAACC67A7AD70 0xB3 DUP1 0xFC PUSH14 0xCED7195437F0D2C2430964736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "909:5177:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1525:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5805:112;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2591:177::-;;;;;;:::i;:::-;;:::i;4979:132::-;;;;;;:::i;:::-;;:::i;1429:26::-;;;:::i;1132:28::-;;;:::i;:::-;;;;;;;:::i;1701:884::-;;;;;;:::i;:::-;;:::i;:::-;;1580:17;;;:::i;5251:130::-;;;;;;:::i;:::-;;:::i;1166:29::-;;;:::i;5387:133::-;;;;;;:::i;:::-;;:::i;1086:40::-;;;;;;:::i;:::-;;:::i;1461:27::-;;;:::i;1201:28::-;;;:::i;5526:133::-;;;;;;:::i;:::-;;:::i;1636:26::-;;;:::i;1934:101:0:-;;;:::i;1669:25:11:-;;;:::i;1302:85:0:-;;;:::i;1293:18:11:-;;;:::i;4508:215::-;;;;;;:::i;:::-;;:::i;1604:26::-;;;:::i;4729:118::-;;;;;;:::i;:::-;;:::i;5923:161::-;;;;;;:::i;:::-;;:::i;1494:24::-;;;:::i;5117:128::-;;;;;;:::i;:::-;;:::i;1235:29::-;;;:::i;1395:28::-;;;:::i;1356:32::-;;;:::i;2901:657::-;;;:::i;4853:120::-;;;;;;:::i;:::-;;:::i;5665:134::-;;;;;;:::i;:::-;;:::i;1270:17::-;;;:::i;1555:18::-;;;:::i;2184:198:0:-;;;;;;:::i;:::-;;:::i;1318:32:11:-;;;:::i;1525:24::-;;;;:::o;5805:112::-;5863:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;5879:3:11::1;:10:::0;5906:4:::1;::::0;5805:112::o;2591:177::-;2694:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2714:18:11;::::1;;::::0;;;:8:::1;:18;::::0;;;;:26;;;::::1;;-1:-1:-1::0;;2714:26:11;;::::1;;::::0;;;2591:177;;;;:::o;4979:132::-;5047:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;5063:13:11::1;:20:::0;5100:4:::1;::::0;4979:132::o;1429:26::-;;;;:::o;1132:28::-;;;-1:-1:-1;;;;;1132:28:11;;:::o;1701:884::-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;2067:16:11::1;:14;:16::i;:::-;2137:6;:16:::0;;-1:-1:-1;;;;;;2137:16:11;;::::1;-1:-1:-1::0;;;;;2137:16:11;;::::1;::::0;;;::::1;::::0;;;2163:7:::1;:18:::0;;;::::1;::::0;;::::1;;::::0;;2191:3:::1;:10:::0;;;::::1;::::0;;::::1;;::::0;;2211:3:::1;:10:::0;;;::::1;::::0;;::::1;;::::0;;2231:4:::1;:12:::0;;;::::1;::::0;;::::1;;::::0;;2253:2:::1;:15:::0;;2258:10:::1;2253:15:::0;;::::1;::::0;::::1;::::0;;;2278:3:::1;:16:::0;;;::::1;::::0;;::::1;::::0;;2320:4:::1;2304:13;:20:::0;2348:4:::1;2334:11;:18:::0;;;2362:12:::1;:19:::0;2403:5:::1;2391:9;:17:::0;2430:4:::1;2418:9;:16:::0;2444:14:::1;:21:::0;;-1:-1:-1;;;;;;;2444:21:11;;::::1;;-1:-1:-1::0;;;;;;2507:12:11;;;::::1;;::::0;;2529:4:::1;:12:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;797:66:1;;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;797:66;1701:884:11;;;;;;;;:::o;1580:17::-;;;-1:-1:-1;;;;;1580:17:11;;:::o;5251:130::-;5318:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;5334:12:11::1;:19:::0;5370:4:::1;::::0;5251:130::o;1166:29::-;;;-1:-1:-1;;;;;1166:29:11;;:::o;5387:133::-;5454:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;5470:14:11::1;:22:::0;;;::::1;;-1:-1:-1::0;;;5470:22:11::1;-1:-1:-1::0;;;;5470:22:11;;::::1;;::::0;;-1:-1:-1;5387:133:11;;;:::o;1086:40::-;;;;;;;;;;;;;;;:::o;1461:27::-;;;;:::o;1201:28::-;;;-1:-1:-1;;;;;1201:28:11;;:::o;5526:133::-;5593:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;5609:14:11::1;:22:::0;;;::::1;;-1:-1:-1::0;;;5609:22:11::1;-1:-1:-1::0;;;;5609:22:11;;::::1;;::::0;;-1:-1:-1;5526:133:11;;;:::o;1636:26::-;;;-1:-1:-1;;;1636:26:11;;;;;:::o;1934:101:0:-;1525:12;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;1998:30:::1;2025:1;1998:18;:30::i;:::-;1934:101::o:0;1669:25:11:-;;;-1:-1:-1;;;;;1669:25:11;;:::o;1302:85:0:-;1374:6;;-1:-1:-1;;;;;1374:6:0;1302:85;:::o;1293:18:11:-;;;-1:-1:-1;;;;;1293:18:11;;:::o;4508:215::-;4617:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;4637:58:11::1;-1:-1:-1::0;;;;;4637:40:11;::::1;4678:10;4690:4:::0;4637:40:::1;:58::i;:::-;-1:-1:-1::0;4712:4:11::1;4508:215:::0;;;;:::o;1604:26::-;;;-1:-1:-1;;;1604:26:11;;;;;:::o;4729:118::-;4790:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;4806:2:11::1;:13:::0;;-1:-1:-1;;;;;4806:13:11;::::1;-1:-1:-1::0;;;;;;4806:13:11;;::::1;;::::0;;;4729:118;;;:::o;5923:161::-;6024:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;6044:4:11::1;:12:::0;;-1:-1:-1;;;;;6044:12:11;::::1;-1:-1:-1::0;;;;;;6044:12:11;;::::1;;::::0;;;5923:161;;;:::o;1494:24::-;;;;:::o;5117:128::-;5183:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;5199:11:11::1;:18:::0;5234:4:::1;::::0;5117:128::o;1235:29::-;;;-1:-1:-1;;;;;1235:29:11;;:::o;1395:28::-;;;;:::o;1356:32::-;;;-1:-1:-1;;;;;1356:32:11;;:::o;2901:657::-;2825:10;2958:4;2816:20;;;:8;:20;;;;;;;;2808:69;;;;-1:-1:-1;;;2808:69:11;;;;;;;:::i;:::-;2997:3:::1;::::0;:28:::1;::::0;-1:-1:-1;;;2997:28:11;;2974:20:::1;::::0;-1:-1:-1;;;;;2997:3:11::1;::::0;:13:::1;::::0;:28:::1;::::0;3019:4:::1;::::0;2997:28:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2974:51;;3035:14;3052:46;3088:9;;3052:31;3069:13;;3052:12;:16;;:31;;;;:::i;:::-;:35:::0;::::1;:46::i;:::-;3035:63;;3108:12;3123:44;3157:9;;3123:29;3140:11;;3123:12;:16;;:29;;;;:::i;:44::-;3108:59:::0;-1:-1:-1;3177:13:11::1;3193:34;3108:59:::0;3193:24:::1;:12:::0;3210:6;3193:16:::1;:24::i;:::-;:28:::0;::::1;:34::i;:::-;3263:4;::::0;3238:3:::1;::::0;3177:50;;-1:-1:-1;3238:39:11::1;::::0;-1:-1:-1;;;;;3238:3:11;;::::1;::::0;3263:4:::1;3270:6:::0;3238:16:::1;:39::i;:::-;3312:2;::::0;3287:3:::1;::::0;:35:::1;::::0;-1:-1:-1;;;;;3287:3:11;;::::1;::::0;3312:2:::1;3317:4:::0;3287:16:::1;:35::i;:::-;3357:3;::::0;3332::::1;::::0;:37:::1;::::0;-1:-1:-1;;;;;3332:3:11;;::::1;::::0;3357::::1;3363:5:::0;3332:16:::1;:37::i;:::-;3384:14;::::0;-1:-1:-1;;;3384:14:11;::::1;;;3380:57;;;3414:12;:10;:12::i;:::-;3451:14;::::0;-1:-1:-1;;;3451:14:11;::::1;;;3447:83;;;3493:10;;;;;;;;;-1:-1:-1::0;;;;;3493:10:11::1;-1:-1:-1::0;;;;;3481:36:11::1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3447:83;3547:4;3540:11;;;;;;2901:657:::0;:::o;4853:120::-;4915:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;4931:3:11::1;:14:::0;;-1:-1:-1;;;;;4931:14:11;::::1;-1:-1:-1::0;;;;;;4931:14:11;;::::1;;::::0;;;4853:120;;;:::o;5665:134::-;5734:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;5750:10:11::1;:21:::0;;-1:-1:-1;;;;;5750:21:11;::::1;-1:-1:-1::0;;;;;;5750:21:11;;::::1;;::::0;;;5665:134;;;:::o;1270:17::-;;;-1:-1:-1;;;;;1270:17:11;;:::o;1555:18::-;;;;:::o;2184:198:0:-;1525:12;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2272:22:0;::::1;2264:73;;;;-1:-1:-1::0;;;2264:73:0::1;;;;;;;:::i;:::-;2347:28;2366:8;2347:18;:28::i;:::-;2184:198:::0;:::o;1318:32:11:-;;;-1:-1:-1;;;;;1318:32:11;;:::o;876:96:5:-;955:10;876:96;:::o;988:126:0:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;1045:26:0::1;:24;:26::i;:::-;1081;:24;:26::i;:::-;801:14:1::0;797:66;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;988:126:0;:::o;2536:187::-;2628:6;;;-1:-1:-1;;;;;2644:17:0;;;-1:-1:-1;;;;;;2644:17:0;;;;;;;2676:40;;2628:6;;;2644:17;2628:6;;2676:40;;2609:16;;2676:40;2536:187;;:::o;745:216:3:-;868:86;888:5;918:23;;;943:2;947:5;895:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;895:58:3;;;;;;;;;;;;;;-1:-1:-1;;;;;895:58:3;-1:-1:-1;;;;;;895:58:3;;;;;;;;;;868:19;:86::i;:::-;745:216;;;:::o;3462:96:6:-;3520:7;3546:5;3550:1;3546;:5;:::i;:::-;3539:12;3462:96;-1:-1:-1;;;3462:96:6:o;3847:::-;3905:7;3931:5;3935:1;3931;:5;:::i;3119:96::-;3177:7;3203:5;3207:1;3203;:5;:::i;3564:938:11:-;3627:7;;3651:4;;3666:3;;3627:44;;-1:-1:-1;;;3627:44:11;;3605:19;;-1:-1:-1;;;;;3627:7:11;;;;:15;;:44;;3651:4;;;;3666:3;;3627:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3564:938:11:o;807:64:5:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;801:14;797:66;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;807:64:5;:::o;1120:106:0:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;1187:32:0::1;1206:12;:10;:12::i;:::-;1187:18;:32::i;3306:717:3:-:0;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:3;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:3;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:3;;;;;;;:::i;3525:223:4:-;3658:12;3689:52;3711:6;3719:4;3725:1;3728:12;3689:21;:52::i;:::-;3682:59;3525:223;-1:-1:-1;;;;3525:223:4:o;4612:499::-;4777:12;4834:5;4809:21;:30;;4801:81;;;;-1:-1:-1;;;4801:81:4;;;;;;;:::i;:::-;4900:18;4911:6;4900:10;:18::i;:::-;4892:60;;;;-1:-1:-1;;;4892:60:4;;;;;;;:::i;:::-;4964:12;4978:23;5005:6;-1:-1:-1;;;;;5005:11:4;5024:5;5031:4;5005:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4963:73;;;;5053:51;5070:7;5079:10;5091:12;5053:16;:51::i;:::-;5046:58;4612:499;-1:-1:-1;;;;;;;4612:499:4:o;782:377::-;1098:20;1144:8;;;782:377::o;6275:692::-;6421:12;6449:7;6445:516;;;-1:-1:-1;6479:10:4;6472:17;;6445:516;6590:17;;:21;6586:365;;6784:10;6778:17;6844:15;6831:10;6827:2;6823:19;6816:44;6733:145;6923:12;6916:20;;-1:-1:-1;;;6916:20:4;;;;;;;;:::i;14:259:12:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:396::-;;;672:2;660:9;651:7;647:23;643:32;640:2;;;693:6;685;678:22;640:2;737:9;724:23;756:33;783:5;756:33;:::i;:::-;808:5;-1:-1:-1;865:2:12;850:18;;837:32;878;837;878;:::i;:::-;929:7;919:17;;;630:312;;;;;:::o;947:327::-;;;1076:2;1064:9;1055:7;1051:23;1047:32;1044:2;;;1097:6;1089;1082:22;1044:2;1141:9;1128:23;1160:33;1187:5;1160:33;:::i;:::-;1212:5;1264:2;1249:18;;;;1236:32;;-1:-1:-1;;;1034:240:12:o;1279:253::-;;1388:2;1376:9;1367:7;1363:23;1359:32;1356:2;;;1409:6;1401;1394:22;1356:2;1453:9;1440:23;1472:30;1496:5;1472:30;:::i;1537:257::-;;1657:2;1645:9;1636:7;1632:23;1628:32;1625:2;;;1678:6;1670;1663:22;1625:2;1715:9;1709:16;1734:30;1758:5;1734:30;:::i;2088:1288::-;;;;;;;;2469:3;2457:9;2448:7;2444:23;2440:33;2437:2;;;2491:6;2483;2476:22;2437:2;2535:9;2522:23;2554:33;2581:5;2554:33;:::i;:::-;2606:5;-1:-1:-1;2663:2:12;2648:18;;2635:32;2676:35;2635:32;2676:35;:::i;:::-;2730:7;-1:-1:-1;2789:2:12;2774:18;;2761:32;2802:35;2761:32;2802:35;:::i;:::-;2856:7;-1:-1:-1;2915:2:12;2900:18;;2887:32;2928:35;2887:32;2928:35;:::i;:::-;2982:7;-1:-1:-1;3041:3:12;3026:19;;3013:33;3055:35;3013:33;3055:35;:::i;:::-;3109:7;-1:-1:-1;3168:3:12;3153:19;;3140:33;3182:35;3140:33;3182:35;:::i;:::-;3236:7;-1:-1:-1;3295:3:12;3280:19;;3267:33;3309:35;3267:33;3309:35;:::i;:::-;3363:7;3353:17;;;2427:949;;;;;;;;;;:::o;3381:190::-;;3493:2;3481:9;3472:7;3468:23;3464:32;3461:2;;;3514:6;3506;3499:22;3461:2;-1:-1:-1;3542:23:12;;3451:120;-1:-1:-1;3451:120:12:o;3576:194::-;;3699:2;3687:9;3678:7;3674:23;3670:32;3667:2;;;3720:6;3712;3705:22;3667:2;-1:-1:-1;3748:16:12;;3657:113;-1:-1:-1;3657:113:12:o;3775:274::-;;3942:6;3936:13;3958:53;4004:6;3999:3;3992:4;3984:6;3980:17;3958:53;:::i;:::-;4027:16;;;;;3912:137;-1:-1:-1;;3912:137:12:o;4054:203::-;-1:-1:-1;;;;;4218:32:12;;;;4200:51;;4188:2;4173:18;;4155:102::o;4262:304::-;-1:-1:-1;;;;;4492:15:12;;;4474:34;;4544:15;;4539:2;4524:18;;4517:43;4424:2;4409:18;;4391:175::o;4571:274::-;-1:-1:-1;;;;;4763:32:12;;;;4745:51;;4827:2;4812:18;;4805:34;4733:2;4718:18;;4700:145::o;4850:187::-;5015:14;;5008:22;4990:41;;4978:2;4963:18;;4945:92::o;5966:383::-;;6115:2;6104:9;6097:21;6147:6;6141:13;6190:6;6185:2;6174:9;6170:18;6163:34;6206:66;6265:6;6260:2;6249:9;6245:18;6240:2;6232:6;6228:15;6206:66;:::i;:::-;6333:2;6312:15;-1:-1:-1;;6308:29:12;6293:45;;;;6340:2;6289:54;;6087:262;-1:-1:-1;;6087:262:12:o;6354:402::-;6556:2;6538:21;;;6595:2;6575:18;;;6568:30;6634:34;6629:2;6614:18;;6607:62;-1:-1:-1;;;6700:2:12;6685:18;;6678:36;6746:3;6731:19;;6528:228::o;6761:400::-;6963:2;6945:21;;;7002:2;6982:18;;;6975:30;7041:34;7036:2;7021:18;;7014:62;-1:-1:-1;;;7107:2:12;7092:18;;7085:34;7151:3;7136:19;;6935:226::o;7166:402::-;7368:2;7350:21;;;7407:2;7387:18;;;7380:30;7446:34;7441:2;7426:18;;7419:62;-1:-1:-1;;;7512:2:12;7497:18;;7490:36;7558:3;7543:19;;7340:228::o;7573:410::-;7775:2;7757:21;;;7814:2;7794:18;;;7787:30;7853:34;7848:2;7833:18;;7826:62;-1:-1:-1;;;7919:2:12;7904:18;;7897:44;7973:3;7958:19;;7747:236::o;7988:356::-;8190:2;8172:21;;;8209:18;;;8202:30;8268:34;8263:2;8248:18;;8241:62;8335:2;8320:18;;8162:182::o;8349:353::-;8551:2;8533:21;;;8590:2;8570:18;;;8563:30;8629:31;8624:2;8609:18;;8602:59;8693:2;8678:18;;8523:179::o;8707:406::-;8909:2;8891:21;;;8948:2;8928:18;;;8921:30;8987:34;8982:2;8967:18;;8960:62;-1:-1:-1;;;9053:2:12;9038:18;;9031:40;9103:3;9088:19;;8881:232::o;9118:177::-;9264:25;;;9252:2;9237:18;;9219:76::o;9300:217::-;;9366:1;9356:2;;-1:-1:-1;;;9391:31:12;;9445:4;9442:1;9435:15;9473:4;9398:1;9463:15;9356:2;-1:-1:-1;9502:9:12;;9346:171::o;9522:168::-;;9628:1;9624;9620:6;9616:14;9613:1;9610:21;9605:1;9598:9;9591:17;9587:45;9584:2;;;9635:18;;:::i;:::-;-1:-1:-1;9675:9:12;;9574:116::o;9695:125::-;;9763:1;9760;9757:8;9754:2;;;9768:18;;:::i;:::-;-1:-1:-1;9805:9:12;;9744:76::o;9825:258::-;9897:1;9907:113;9921:6;9918:1;9915:13;9907:113;;;9997:11;;;9991:18;9978:11;;;9971:39;9943:2;9936:10;9907:113;;;10038:6;10035:1;10032:13;10029:2;;;10073:1;10064:6;10059:3;10055:16;10048:27;10029:2;;9878:205;;;:::o;10088:127::-;10149:10;10144:3;10140:20;10137:1;10130:31;10180:4;10177:1;10170:15;10204:4;10201:1;10194:15;10220:133;-1:-1:-1;;;;;10297:31:12;;10287:42;;10277:2;;10343:1;10340;10333:12;10358:120;10446:5;10439:13;10432:21;10425:5;10422:32;10412:2;;10468:1;10465;10458:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1182200",
								"executionCost": "1227",
								"totalCost": "1183427"
							},
							"external": {
								"Factory()": "1137",
								"PRECISION()": "1117",
								"Router()": "1202",
								"autoAdjustFarm()": "1169",
								"basePoint()": "1075",
								"dev()": "1138",
								"executor(address)": "1348",
								"farm()": "1182",
								"initialize(address,address,address,address,address,address,address)": "infinite",
								"jointExecution()": "infinite",
								"op()": "1136",
								"openStabilizer()": "1146",
								"owner()": "1116",
								"pid()": "1116",
								"renounceOwnership()": "23618",
								"sea()": "1115",
								"setAutoAdjustFarm(bool)": "22238",
								"setDev(address)": "22297",
								"setExecutor(address,bool)": "infinite",
								"setOp(address)": "22231",
								"setOpenStabilizer(bool)": "22237",
								"setPid(uint256)": "21318",
								"setStabilizer(address)": "22230",
								"setToDevPercent(uint256)": "21383",
								"setToOpPercent(uint256)": "21360",
								"setToSseaPercent(uint256)": "21362",
								"setUSDCAddress(address)": "22253",
								"ssea()": "1203",
								"stabilizer()": "1203",
								"toDevPercent()": "1140",
								"toOpPercent()": "1074",
								"toSseaPercent()": "1073",
								"transferOwnership(address)": "infinite",
								"usc()": "1138",
								"usdc()": "1116",
								"withdrawalERC20(address,uint256)": "infinite"
							},
							"internal": {
								"adjustFarm()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 909,
									"end": 6086,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 6086,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070cc6a9ca8bdc19a8b3de12baacc67a7ad70b380fc6dced7195437f0d2c2430964736f6c63430008000033",
									".code": [
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "BD0B1F44"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "DB7F521A"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "DB7F521A"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "EC1F1F69"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "F1068454"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "F6D7EADE"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "BD0B1F44"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "C83DD231"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "D10C06A2"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "D477F05F"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "A36A7526"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "A36A7526"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "AAF5BFC3"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "AAF5EB68"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "AF5518C4"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "B8BB97A1"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "91CCA3DB"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "930ED033"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "9DA5B0D5"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "3E413BEE"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "4ECAAC41"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "4ECAAC41"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "55C746D1"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "58DE5DE8"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "7E47961C"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "3E413BEE"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "4591DB50"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "48C7E528"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "4AE6A027"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "2C535A52"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "2C535A52"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "3011D3D5"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "35876476"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "36E9332D"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "3C850E1E"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "16D03993"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "1B0D8AAB"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "1E1BFF3F"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "27C42A50"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6086,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5863,
											"end": 5867,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5879,
											"end": 5882,
											"name": "PUSH",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 5879,
											"end": 5889,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5910,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5906,
											"end": 5910,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5917,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2722,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5047,
											"end": 5051,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5063,
											"end": 5076,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5100,
											"end": 5104,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5100,
											"end": 5104,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4979,
											"end": 5111,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 2067,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "6C"
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2194,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2214,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2281,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "1388"
										},
										{
											"begin": 2304,
											"end": 2317,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 11,
											"value": "9C4"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2362,
											"end": 2381,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2430,
											"end": 2434,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 2418,
											"end": 2427,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 2418,
											"end": 2434,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "OR",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2533,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 797,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5318,
											"end": 5322,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 5334,
											"end": 5353,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5370,
											"end": 5374,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5370,
											"end": 5374,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5381,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5454,
											"end": 5458,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5484,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5387,
											"end": 5520,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5593,
											"end": 5597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5609,
											"end": 5623,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5631,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5526,
											"end": 5659,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4637,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4637,
											"end": 4677,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4677,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4688,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4694,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4637,
											"end": 4695,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4637,
											"end": 4695,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4637,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4712,
											"end": 4716,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4723,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4794,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4806,
											"end": 4808,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 4806,
											"end": 4819,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4806,
											"end": 4819,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4806,
											"end": 4819,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4806,
											"end": 4819,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4806,
											"end": 4819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4806,
											"end": 4819,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4806,
											"end": 4819,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4806,
											"end": 4819,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4806,
											"end": 4819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4806,
											"end": 4819,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4806,
											"end": 4819,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4847,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6024,
											"end": 6028,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6044,
											"end": 6048,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5923,
											"end": 6084,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5210,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 5199,
											"end": 5217,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5234,
											"end": 5238,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5234,
											"end": 5238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5117,
											"end": 5245,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2835,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 2962,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2824,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3010,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 2997,
											"end": 3010,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2974,
											"end": 3025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2974,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3035,
											"end": 3049,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 3088,
											"end": 3097,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3088,
											"end": 3097,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 3069,
											"end": 3082,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 3069,
											"end": 3082,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3064,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 3052,
											"end": 3068,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3035,
											"end": 3098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3035,
											"end": 3098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3108,
											"end": 3120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 3140,
											"end": 3151,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 3140,
											"end": 3151,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3108,
											"end": 3167,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3177,
											"end": 3190,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 3108,
											"end": 3167,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3193,
											"end": 3205,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3216,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3221,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3227,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3227,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3270,
											"end": 3276,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3363,
											"end": 3368,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3437,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 3380,
											"end": 3437,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 3414,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3530,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 3447,
											"end": 3530,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "PUSH",
											"source": 11,
											"value": "796C7BE7"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3530,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 3447,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3551,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4915,
											"end": 4919,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4931,
											"end": 4934,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 4973,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5738,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5750,
											"end": 5760,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 5750,
											"end": 5771,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5771,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5750,
											"end": 5771,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5771,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5750,
											"end": 5771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5771,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5771,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5771,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5771,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5771,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2366,
											"end": 2374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 11,
											"value": "6C"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 955,
											"end": 965,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 876,
											"end": 972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1045,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1081,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 888,
											"end": 893,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 943,
											"end": 945,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 947,
											"end": 952,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 868,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3547,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 3935,
											"end": 3936,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3932,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 3207,
											"end": 3208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3564,
											"end": 4502,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3564,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6A43905"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3642,
											"name": "PUSH",
											"source": 11,
											"value": "E6A43905"
										},
										{
											"begin": 3627,
											"end": 3642,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3564,
											"end": 4502,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 807,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 1206,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 3790,
											"end": 3794,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3775,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 3950,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3719,
											"end": 3723,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3740,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3682,
											"end": 3741,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4777,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4834,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "tag",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "tag",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 5001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5011,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5005,
											"end": 5016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5024,
											"end": 5029,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 5103,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5104,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "tag",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6433,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6449,
											"end": 6456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6479,
											"end": 6489,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6586,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 6586,
											"end": 6951,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6794,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6778,
											"end": 6795,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6859,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6841,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6823,
											"end": 6842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6733,
											"end": 6878,
											"name": "tag",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 6733,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6923,
											"end": 6935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 273,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 14,
											"end": 273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 273,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 210,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 210,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 210,
											"end": 243,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 278,
											"end": 541,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 278,
											"end": 541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 278,
											"end": 541,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 389,
											"end": 398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 376,
											"end": 399,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 372,
											"end": 404,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 369,
											"end": 371,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 369,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 369,
											"end": 371,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 414,
											"end": 420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 407,
											"end": 429,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 369,
											"end": 371,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 369,
											"end": 371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 459,
											"end": 468,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 453,
											"end": 469,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 478,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 505,
											"end": 510,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 478,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 478,
											"end": 511,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 546,
											"end": 942,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 546,
											"end": 942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 546,
											"end": 942,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 942,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 669,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 651,
											"end": 658,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 647,
											"end": 670,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 643,
											"end": 675,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 640,
											"end": 642,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 640,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 640,
											"end": 642,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 693,
											"end": 699,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 685,
											"end": 691,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 678,
											"end": 700,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 640,
											"end": 642,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 640,
											"end": 642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 724,
											"end": 747,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 756,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 783,
											"end": 788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 756,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 756,
											"end": 789,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 756,
											"end": 789,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 756,
											"end": 789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 808,
											"end": 813,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 868,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 850,
											"end": 868,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 837,
											"end": 869,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 878,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 837,
											"end": 869,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 878,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 878,
											"end": 910,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 910,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 878,
											"end": 910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 936,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 919,
											"end": 936,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 919,
											"end": 936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 919,
											"end": 936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 630,
											"end": 942,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 630,
											"end": 942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 630,
											"end": 942,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 630,
											"end": 942,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 630,
											"end": 942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 630,
											"end": 942,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 947,
											"end": 1274,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 947,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 947,
											"end": 1274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 1274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1076,
											"end": 1078,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1064,
											"end": 1073,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1055,
											"end": 1062,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1074,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1103,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1160,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1160,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 1160,
											"end": 1193,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1160,
											"end": 1193,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 1160,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1266,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1249,
											"end": 1267,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1249,
											"end": 1267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1249,
											"end": 1267,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1249,
											"end": 1267,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1268,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1268,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1034,
											"end": 1274,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1279,
											"end": 1532,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1279,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1279,
											"end": 1532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1390,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1385,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1374,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1386,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1391,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1356,
											"end": 1358,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1356,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 1356,
											"end": 1358,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1394,
											"end": 1416,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1356,
											"end": 1358,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 1356,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1463,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1794,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 1537,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1537,
											"end": 1794,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1643,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1628,
											"end": 1660,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1709,
											"end": 1725,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 1758,
											"end": 1763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 1734,
											"end": 1764,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 3376,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2088,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2088,
											"end": 3376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 3376,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2088,
											"end": 3376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 3376,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2088,
											"end": 3376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 3376,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2088,
											"end": 3376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2448,
											"end": 2455,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2467,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2440,
											"end": 2473,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2437,
											"end": 2439,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2437,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 2437,
											"end": 2439,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2489,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2476,
											"end": 2498,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2437,
											"end": 2439,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 2437,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2545,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2554,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 2581,
											"end": 2586,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2554,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 2554,
											"end": 2587,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2554,
											"end": 2587,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 2554,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2606,
											"end": 2611,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2663,
											"end": 2665,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2789,
											"end": 2791,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2774,
											"end": 2792,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2774,
											"end": 2792,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2793,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 2761,
											"end": 2793,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2915,
											"end": 2917,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2887,
											"end": 2919,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2928,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 2887,
											"end": 2919,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2928,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 2928,
											"end": 2963,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2928,
											"end": 2963,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 2928,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2982,
											"end": 2989,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3041,
											"end": 3044,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3046,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 3013,
											"end": 3046,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 3055,
											"end": 3090,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3090,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 3055,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3116,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3168,
											"end": 3171,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 3153,
											"end": 3172,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3153,
											"end": 3172,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3182,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3182,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 3182,
											"end": 3217,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3182,
											"end": 3217,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 3182,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3236,
											"end": 3243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3295,
											"end": 3298,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 3280,
											"end": 3299,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3280,
											"end": 3299,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3309,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3309,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 3309,
											"end": 3344,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3309,
											"end": 3344,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3309,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3370,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3370,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 3376,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 3376,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 3376,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 3376,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 3376,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 3376,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 3376,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 3376,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 3376,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 3376,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 3376,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3381,
											"end": 3571,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 3381,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3381,
											"end": 3571,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3490,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3479,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3468,
											"end": 3491,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3496,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3463,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 3461,
											"end": 3463,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3520,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3506,
											"end": 3512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3521,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3463,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 3461,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3451,
											"end": 3571,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3451,
											"end": 3571,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3576,
											"end": 3770,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 3576,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3770,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3696,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3674,
											"end": 3697,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3670,
											"end": 3702,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3705,
											"end": 3727,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3657,
											"end": 3770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3770,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3775,
											"end": 4049,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 3775,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 4049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3948,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3936,
											"end": 3949,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3958,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 4004,
											"end": 4010,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4002,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 3996,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3984,
											"end": 3990,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3980,
											"end": 3997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3958,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 3958,
											"end": 4011,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3958,
											"end": 4011,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 3958,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4043,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4043,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4043,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 4049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3912,
											"end": 4049,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4054,
											"end": 4257,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 4054,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4250,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4218,
											"end": 4250,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4218,
											"end": 4250,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4218,
											"end": 4250,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4251,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4190,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4173,
											"end": 4191,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4173,
											"end": 4191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4155,
											"end": 4257,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4262,
											"end": 4566,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 4262,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4492,
											"end": 4507,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4492,
											"end": 4507,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4492,
											"end": 4507,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4474,
											"end": 4508,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4474,
											"end": 4508,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 4559,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 4559,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4539,
											"end": 4541,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4524,
											"end": 4542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4524,
											"end": 4542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4517,
											"end": 4560,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4391,
											"end": 4566,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4571,
											"end": 4845,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 4571,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4763,
											"end": 4795,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4796,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4796,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 4839,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4733,
											"end": 4735,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4700,
											"end": 4845,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4850,
											"end": 5037,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 4850,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5008,
											"end": 5030,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 5031,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 5031,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4945,
											"end": 5037,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5966,
											"end": 6349,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 5966,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5966,
											"end": 6349,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6115,
											"end": 6117,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6113,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6097,
											"end": 6118,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6147,
											"end": 6153,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6141,
											"end": 6154,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6190,
											"end": 6196,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6187,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6174,
											"end": 6183,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6170,
											"end": 6188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6163,
											"end": 6197,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6206,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 6265,
											"end": 6271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6262,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6249,
											"end": 6258,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6245,
											"end": 6263,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6240,
											"end": 6242,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6228,
											"end": 6243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6206,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 6206,
											"end": 6272,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6206,
											"end": 6272,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 6206,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6333,
											"end": 6335,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6312,
											"end": 6327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6293,
											"end": 6338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6293,
											"end": 6338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6293,
											"end": 6338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6293,
											"end": 6338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6340,
											"end": 6342,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6289,
											"end": 6343,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6289,
											"end": 6343,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6087,
											"end": 6349,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6087,
											"end": 6349,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6354,
											"end": 6756,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 6354,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6558,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6538,
											"end": 6559,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6559,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6559,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6595,
											"end": 6597,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 6575,
											"end": 6593,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6593,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6568,
											"end": 6598,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6634,
											"end": 6668,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6629,
											"end": 6631,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6607,
											"end": 6669,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6700,
											"end": 6702,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6685,
											"end": 6703,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6685,
											"end": 6703,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6678,
											"end": 6714,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 6749,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6731,
											"end": 6750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6750,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6528,
											"end": 6756,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6761,
											"end": 7161,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 6761,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6966,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6945,
											"end": 6966,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6945,
											"end": 6966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6982,
											"end": 7000,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6982,
											"end": 7000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6982,
											"end": 7000,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6975,
											"end": 7005,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7041,
											"end": 7075,
											"name": "PUSH",
											"source": 12,
											"value": "6578656375746F723A2063616C6C6572206973206E6F74207468652065786563"
										},
										{
											"begin": 7036,
											"end": 7038,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7021,
											"end": 7039,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7014,
											"end": 7076,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3ABA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7107,
											"end": 7109,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7085,
											"end": 7119,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7151,
											"end": 7154,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6935,
											"end": 7161,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7166,
											"end": 7568,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 7166,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7370,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7350,
											"end": 7371,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7350,
											"end": 7371,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7350,
											"end": 7371,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7409,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7380,
											"end": 7410,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7446,
											"end": 7480,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 7441,
											"end": 7443,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7426,
											"end": 7444,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7426,
											"end": 7444,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7419,
											"end": 7481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7512,
											"end": 7514,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7497,
											"end": 7515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7497,
											"end": 7515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7490,
											"end": 7526,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7558,
											"end": 7561,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7543,
											"end": 7562,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7543,
											"end": 7562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7340,
											"end": 7568,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7573,
											"end": 7983,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 7573,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 7777,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7778,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7757,
											"end": 7778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7757,
											"end": 7778,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7814,
											"end": 7816,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7787,
											"end": 7817,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7853,
											"end": 7887,
											"name": "PUSH",
											"source": 12,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 7848,
											"end": 7850,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7833,
											"end": 7851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7833,
											"end": 7851,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7826,
											"end": 7888,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7897,
											"end": 7941,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7973,
											"end": 7976,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7958,
											"end": 7977,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7958,
											"end": 7977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 7983,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7988,
											"end": 8344,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 7988,
											"end": 8344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8190,
											"end": 8192,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8172,
											"end": 8193,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8193,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8193,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8232,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8268,
											"end": 8302,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8241,
											"end": 8303,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8335,
											"end": 8337,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8320,
											"end": 8338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8320,
											"end": 8338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8162,
											"end": 8344,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8349,
											"end": 8702,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8349,
											"end": 8702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8551,
											"end": 8553,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8554,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8533,
											"end": 8554,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8533,
											"end": 8554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8590,
											"end": 8592,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8593,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8629,
											"end": 8660,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 8624,
											"end": 8626,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8609,
											"end": 8627,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8609,
											"end": 8627,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8602,
											"end": 8661,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8695,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8523,
											"end": 8702,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8707,
											"end": 9113,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 8707,
											"end": 9113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8909,
											"end": 8911,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8891,
											"end": 8912,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8891,
											"end": 8912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8891,
											"end": 8912,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8948,
											"end": 8950,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 8928,
											"end": 8946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8928,
											"end": 8946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8928,
											"end": 8946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8921,
											"end": 8951,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8987,
											"end": 9021,
											"name": "PUSH",
											"source": 12,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 8982,
											"end": 8984,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8967,
											"end": 8985,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8967,
											"end": 8985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8960,
											"end": 9022,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9053,
											"end": 9055,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9031,
											"end": 9071,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9103,
											"end": 9106,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9088,
											"end": 9107,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9088,
											"end": 9107,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8881,
											"end": 9113,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9118,
											"end": 9295,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 9118,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9264,
											"end": 9289,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9264,
											"end": 9289,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9264,
											"end": 9289,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9252,
											"end": 9254,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9219,
											"end": 9295,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9300,
											"end": 9517,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 9300,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9300,
											"end": 9517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9366,
											"end": 9367,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9356,
											"end": 9358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 9356,
											"end": 9358,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9391,
											"end": 9422,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9391,
											"end": 9422,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9445,
											"end": 9449,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 9442,
											"end": 9443,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9435,
											"end": 9450,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9473,
											"end": 9477,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9398,
											"end": 9399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9463,
											"end": 9478,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9356,
											"end": 9358,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 9356,
											"end": 9358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9502,
											"end": 9511,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9502,
											"end": 9511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9346,
											"end": 9517,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9522,
											"end": 9690,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 9522,
											"end": 9690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9522,
											"end": 9690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9628,
											"end": 9629,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9625,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9620,
											"end": 9626,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9616,
											"end": 9630,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9613,
											"end": 9614,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9610,
											"end": 9631,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9605,
											"end": 9606,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9607,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9591,
											"end": 9608,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9587,
											"end": 9632,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9586,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 9584,
											"end": 9586,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9675,
											"end": 9684,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9675,
											"end": 9684,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9574,
											"end": 9690,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9695,
											"end": 9820,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 9695,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9695,
											"end": 9820,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9764,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9761,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9765,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9754,
											"end": 9756,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9754,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 9754,
											"end": 9756,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9768,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 9768,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 9768,
											"end": 9786,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9768,
											"end": 9786,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 9768,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9805,
											"end": 9814,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9805,
											"end": 9814,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9744,
											"end": 9820,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9825,
											"end": 10083,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 9825,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9897,
											"end": 9898,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9907,
											"end": 10020,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 9907,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9927,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 9919,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9915,
											"end": 9928,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9907,
											"end": 10020,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9907,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 9907,
											"end": 10020,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9997,
											"end": 10008,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9997,
											"end": 10008,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9997,
											"end": 10008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10009,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9978,
											"end": 9989,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9978,
											"end": 9989,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9978,
											"end": 9989,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 10010,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9943,
											"end": 9945,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9936,
											"end": 9946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9907,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 9907,
											"end": 10020,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9907,
											"end": 10020,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 9907,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10044,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10036,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10032,
											"end": 10045,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10059,
											"end": 10062,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10055,
											"end": 10071,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10048,
											"end": 10075,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9878,
											"end": 10083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9878,
											"end": 10083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9878,
											"end": 10083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9878,
											"end": 10083,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10088,
											"end": 10215,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 10088,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10149,
											"end": 10159,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 10144,
											"end": 10147,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 10140,
											"end": 10160,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10130,
											"end": 10161,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10180,
											"end": 10184,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10170,
											"end": 10185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10204,
											"end": 10208,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10201,
											"end": 10202,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10194,
											"end": 10209,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10220,
											"end": 10353,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 10220,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10297,
											"end": 10328,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10297,
											"end": 10328,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10287,
											"end": 10329,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10287,
											"end": 10329,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10277,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 10277,
											"end": 10279,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10344,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10340,
											"end": 10341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10333,
											"end": 10345,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10358,
											"end": 10478,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 10358,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10446,
											"end": 10451,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10439,
											"end": 10452,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10432,
											"end": 10453,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10425,
											"end": 10430,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10422,
											"end": 10454,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10468,
											"end": 10469,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10465,
											"end": 10466,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10458,
											"end": 10470,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Factory()": "c83dd231",
							"PRECISION()": "aaf5eb68",
							"Router()": "f6d7eade",
							"autoAdjustFarm()": "9da5b0d5",
							"basePoint()": "16d03993",
							"dev()": "91cca3db",
							"executor(address)": "48c7e528",
							"farm()": "36e9332d",
							"initialize(address,address,address,address,address,address,address)": "35876476",
							"jointExecution()": "d10c06a2",
							"op()": "ec1f1f69",
							"openStabilizer()": "58de5de8",
							"owner()": "8da5cb5b",
							"pid()": "f1068454",
							"renounceOwnership()": "715018a6",
							"sea()": "4ecaac41",
							"setAutoAdjustFarm(bool)": "4591db50",
							"setDev(address)": "d477f05f",
							"setExecutor(address,bool)": "1e1bff3f",
							"setOp(address)": "a36a7526",
							"setOpenStabilizer(bool)": "55c746d1",
							"setPid(uint256)": "1b0d8aab",
							"setStabilizer(address)": "db7f521a",
							"setToDevPercent(uint256)": "3c850e1e",
							"setToOpPercent(uint256)": "af5518c4",
							"setToSseaPercent(uint256)": "27c42a50",
							"setUSDCAddress(address)": "aaf5bfc3",
							"ssea()": "b8bb97a1",
							"stabilizer()": "7e47961c",
							"toDevPercent()": "4ae6a027",
							"toOpPercent()": "2c535a52",
							"toSseaPercent()": "bd0b1f44",
							"transferOwnership(address)": "f2fde38b",
							"usc()": "3011d3d5",
							"usdc()": "3e413bee",
							"withdrawalERC20(address,uint256)": "930ed033"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoAdjustFarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basePoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farm\",\"outputs\":[{\"internalType\":\"contract IFarm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"_Factory\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"_Router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usc\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_sea\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_ssea\",\"type\":\"address\"},{\"internalType\":\"contract IFarm\",\"name\":\"_farm\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jointExecution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"op\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sea\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setAutoAdjustFarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setDev\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_type\",\"type\":\"bool\"}],\"name\":\"setExecutor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setOp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setOpenStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setPid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToDevPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToOpPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToSseaPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usdc\",\"type\":\"address\"}],\"name\":\"setUSDCAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssea\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toDevPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toOpPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toSseaPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usc\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"withdrawalERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"helperLogic\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0x841a9d6c4dca7bf27687dc7bfe898c618d329a07573277291a4a20443ab6cf98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35d7b6a6b740a8a82e505708863b4a46529b157261f8767680752215a7499ee8\",\"dweb:/ipfs/QmbUUkc3HLNCeWhYB3W5ADRV5foR2mrzhdZPdrkyQkdrf5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 124,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1825,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "executor",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1828,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "usc",
								"offset": 0,
								"slot": "102",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1831,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "usdc",
								"offset": 0,
								"slot": "103",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1834,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "sea",
								"offset": 0,
								"slot": "104",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1837,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "ssea",
								"offset": 0,
								"slot": "105",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1839,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "op",
								"offset": 0,
								"slot": "106",
								"type": "t_address"
							},
							{
								"astId": 1841,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "dev",
								"offset": 0,
								"slot": "107",
								"type": "t_address"
							},
							{
								"astId": 1844,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "Router",
								"offset": 0,
								"slot": "108",
								"type": "t_contract(IUniswapV2Router02)1784"
							},
							{
								"astId": 1847,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "Factory",
								"offset": 0,
								"slot": "109",
								"type": "t_contract(IUniswapV2Factory)1146"
							},
							{
								"astId": 1849,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toSseaPercent",
								"offset": 0,
								"slot": "110",
								"type": "t_uint256"
							},
							{
								"astId": 1851,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toOpPercent",
								"offset": 0,
								"slot": "111",
								"type": "t_uint256"
							},
							{
								"astId": 1853,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toDevPercent",
								"offset": 0,
								"slot": "112",
								"type": "t_uint256"
							},
							{
								"astId": 1855,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "PRECISION",
								"offset": 0,
								"slot": "113",
								"type": "t_uint256"
							},
							{
								"astId": 1857,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "basePoint",
								"offset": 0,
								"slot": "114",
								"type": "t_uint256"
							},
							{
								"astId": 1859,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "pid",
								"offset": 0,
								"slot": "115",
								"type": "t_uint256"
							},
							{
								"astId": 1862,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "farm",
								"offset": 0,
								"slot": "116",
								"type": "t_contract(IFarm)1804"
							},
							{
								"astId": 1864,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "autoAdjustFarm",
								"offset": 20,
								"slot": "116",
								"type": "t_bool"
							},
							{
								"astId": 1866,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "openStabilizer",
								"offset": 21,
								"slot": "116",
								"type": "t_bool"
							},
							{
								"astId": 1868,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "stabilizer",
								"offset": 0,
								"slot": "117",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20Upgradeable)248": {
								"encoding": "inplace",
								"label": "contract IERC20Upgradeable",
								"numberOfBytes": "20"
							},
							"t_contract(IFarm)1804": {
								"encoding": "inplace",
								"label": "contract IFarm",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Factory)1146": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Factory",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)1784": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/helperLogic.sol:127:9:\n    |\n127 |         address pairAddress = Factory.getPair(address(usdc), address(usc));\n    |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3624,
					"file": "contracts/helperLogic.sol",
					"start": 3605
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n   --> contracts/helperLogic.sol:126:5:\n    |\n126 |     function adjustFarm() internal {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 4502,
					"file": "contracts/helperLogic.sol",
					"start": 3564
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							761
						],
						"Initializable": [
							170
						],
						"OwnableUpgradeable": [
							125
						]
					},
					"id": 126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 762,
							"src": "112:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 171,
							"src": "154:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "733:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "733:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 761,
										"src": "748:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "748:18:0"
								}
							],
							"contractDependencies": [
								170,
								761
							],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "198:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								761,
								170
							],
							"name": "OwnableUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "773:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "829:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "860:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:57:0"
									},
									"src": "802:84:0"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "1035:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "1045:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1045:26:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1081:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "1081:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "892:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"modifierName": {
												"id": 19,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "1023:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1023:11:0"
										}
									],
									"name": "__Ownable_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:0:0"
									},
									"scope": 125,
									"src": "988:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 35,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "1206:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1206:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 34,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1187:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1187:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1187:32:0"
											}
										]
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 32,
											"modifierName": {
												"id": 31,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "1165:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1165:11:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 125,
									"src": "1120:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1357:30:0",
										"statements": [
											{
												"expression": {
													"id": 46,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1374:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 45,
												"id": 47,
												"nodeType": "Return",
												"src": "1367:13:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1232:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1348:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:9:0"
									},
									"scope": 125,
									"src": "1302:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1496:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 53,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1514:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1514:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 55,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "1525:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1525:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1514:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1506:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1506:68:0"
											},
											{
												"id": 61,
												"nodeType": "PlaceholderStatement",
												"src": "1584:1:0"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1393:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 63,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:0"
									},
									"src": "1475:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1988:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2025:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2017:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 70,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2017:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 69,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1998:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1998:30:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1598:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 67,
											"modifierName": {
												"id": 66,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1960:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 125,
									"src": "1934:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2254:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 86,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2272:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2292:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2284:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 87,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2284:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2284:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2272:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2296:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 85,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "2264:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "2366:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2347:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2347:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "2347:28:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2041:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 83,
											"modifierName": {
												"id": 82,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "2244:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2244:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2211:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:18:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2254:0:0"
									},
									"scope": 125,
									"src": "2184:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "2599:124:0",
										"statements": [
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "2609:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 106,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2609:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 109,
												"initialValue": {
													"id": 108,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2628:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2609:25:0"
											},
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 110,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2644:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 111,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2653:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2644:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2644:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 115,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "2697:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2707:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 114,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2676:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2676:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "EmitStatement",
												"src": "2671:45:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2388:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "2564:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2599:0:0"
									},
									"scope": 125,
									"src": "2536:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 124,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "2728:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 121,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2728:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 123,
										"length": {
											"hexValue": "3439",
											"id": 122,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2736:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "2728:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 126,
							"src": "693:2063:0"
						}
					],
					"src": "87:2670:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							170
						]
					},
					"id": 171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "161:73:1",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 130,
									"mutability": "mutable",
									"name": "_initialized",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "239:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "239:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "271:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 133,
									"mutability": "mutable",
									"name": "_initializing",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "367:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 132,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "367:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "521:348:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "539:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "556:13:1",
																"subExpression": {
																	"id": 138,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "557:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "539:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "571:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "531:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "531:89:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "531:89:1"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"scope": 168,
														"src": "631:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 144,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "631:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "653:14:1",
													"subExpression": {
														"id": 146,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "654:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "631:36:1"
											},
											{
												"condition": {
													"id": 149,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "681:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "IfStatement",
												"src": "677:98:1",
												"trueBody": {
													"id": 158,
													"nodeType": "Block",
													"src": "697:78:1",
													"statements": [
														{
															"expression": {
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 150,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "711:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "727:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "711:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 153,
															"nodeType": "ExpressionStatement",
															"src": "711:20:1"
														},
														{
															"expression": {
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 154,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "745:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "760:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "745:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 157,
															"nodeType": "ExpressionStatement",
															"src": "745:19:1"
														}
													]
												}
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "785:1:1"
											},
											{
												"condition": {
													"id": 161,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "801:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "IfStatement",
												"src": "797:66:1",
												"trueBody": {
													"id": 166,
													"nodeType": "Block",
													"src": "817:46:1",
													"statements": [
														{
															"expression": {
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 162,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "831:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "847:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "831:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 165,
															"nodeType": "ExpressionStatement",
															"src": "831:21:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "400:93:1",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 169,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:2:1"
									},
									"src": "498:371:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 171,
							"src": "123:748:1"
						}
					],
					"src": "98:774:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							248
						]
					},
					"id": 249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 172,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 173,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 248,
							"linearizedBaseContracts": [
								248
							],
							"name": "IERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "221:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "338:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:9:2"
									},
									"scope": 248,
									"src": "292:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "353:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "449:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:17:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "489:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:2"
									},
									"scope": 248,
									"src": "430:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "504:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "736:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "755:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:35:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "789:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "789:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:6:2"
									},
									"scope": 248,
									"src": "718:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "801:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1089:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1104:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:32:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1144:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:9:2"
									},
									"scope": 248,
									"src": "1070:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1159:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1823:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1840:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:33:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1874:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1874:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:6:2"
									},
									"scope": 248,
									"src": "1806:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1886:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2218:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2242:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2269:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:81:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2308:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:6:2"
									},
									"scope": 248,
									"src": "2187:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2320:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 238,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2498:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2520:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2540:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2540:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2497:57:2"
									},
									"src": "2483:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2561:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 247,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2729:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2752:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2777:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:63:2"
									},
									"src": "2714:78:2"
								}
							],
							"scope": 249,
							"src": "187:2607:2"
						}
					],
					"src": "91:2704:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						],
						"IERC20Upgradeable": [
							248
						],
						"SafeERC20Upgradeable": [
							472
						]
					},
					"id": 473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 251,
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 249,
							"src": "125:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 252,
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 718,
							"src": "160:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "209:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 472,
							"linearizedBaseContracts": [
								472
							],
							"name": "SafeERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 256,
									"libraryName": {
										"id": 254,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 717,
										"src": "708:18:3"
									},
									"nodeType": "UsingForDirective",
									"src": "702:37:3",
									"typeName": {
										"id": 255,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "858:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 267,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "888:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 270,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "918:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 197,
																		"src": "918:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "918:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 273,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "943:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "947:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 268,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "895:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "895:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "895:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 266,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "868:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "868:86:3"
											}
										]
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "776:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 257,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "776:17:3"
													},
													"referencedDeclaration": 248,
													"src": "776:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "809:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "829:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:82:3"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:3"
									},
									"scope": 472,
									"src": "745:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1106:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1136:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 295,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1166:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 229,
																		"src": "1166:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1166:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 298,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "1195:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 299,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1201:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 300,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "1205:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 293,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1143:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1143:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1143:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 291,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1116:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "1116:96:3"
											}
										]
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1002:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 280,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1002:17:3"
													},
													"referencedDeclaration": 248,
													"src": "1002:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1035:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1057:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1077:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:104:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:0:3"
									},
									"scope": 472,
									"src": "967:252:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1596:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "1845:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1854:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1845:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 320,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1844:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 325,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1885:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 324,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1877:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 323,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1877:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1877:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 327,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "1892:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "1861:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 207,
																				"src": "1861:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1861:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1904:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1861:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1860:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1844:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1920:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1823:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "1823:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "2016:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 340,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 309,
																			"src": "2046:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2046:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2046:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 343,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "2070:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "2079:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2023:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2023:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2023:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 336,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1996:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1996:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1996:90:3"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "1225:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1509:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 307,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1509:17:3"
													},
													"referencedDeclaration": 248,
													"src": "1509:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1542:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:87:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:0:3"
									},
									"scope": 472,
									"src": "1479:614:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "2226:194:3",
										"statements": [
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 384,
														"src": "2236:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2236:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 365,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2283:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	],
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2275:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 363,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2275:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2275:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 367,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "2290:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 361,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "2259:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 207,
															"src": "2259:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 369,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2301:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2259:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2236:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "2336:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 376,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 352,
																			"src": "2366:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2366:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2366:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 379,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2390:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 380,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "2399:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 374,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2343:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2343:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2343:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 372,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2316:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "2316:97:3"
											}
										]
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2139:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 350,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "2139:17:3"
													},
													"referencedDeclaration": 248,
													"src": "2139:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2172:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2197:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:87:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:3"
									},
									"scope": 472,
									"src": "2099:321:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2553:370:3",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "2563:354:3",
												"statements": [
													{
														"assignments": [
															396
														],
														"declarations": [
															{
																"constant": false,
																"id": 396,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "2587:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 395,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2587:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 405,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 401,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2634:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2626:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 399,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2626:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2626:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 403,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 397,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2610:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 207,
																"src": "2610:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2610:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2587:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 407,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "2671:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 408,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2687:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2671:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2694:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 406,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2663:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "2663:75:3"
													},
													{
														"assignments": [
															414
														],
														"declarations": [
															{
																"constant": false,
																"id": 414,
																"mutability": "mutable",
																"name": "newAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "2752:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 413,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2752:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 418,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "2775:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 416,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "2790:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2775:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2752:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2829:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 423,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "2859:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 217,
																				"src": "2859:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2859:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 426,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "2883:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 427,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 414,
																			"src": "2892:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 421,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2836:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2836:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2836:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 419,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "2809:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2809:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "2809:97:3"
													}
												]
											}
										]
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2466:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 386,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "2466:17:3"
													},
													"referencedDeclaration": 248,
													"src": "2466:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2499:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2524:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:87:3"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:3"
									},
									"scope": 472,
									"src": "2426:497:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3387:636:3",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "3736:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 442,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3736:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"id": 449,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "3790:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3796:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 446,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "3770:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3762:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 444,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3762:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3762:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 563,
														"src": "3762:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3762:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 453,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "3845:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3845:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3865:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3845:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 469,
												"nodeType": "IfStatement",
												"src": "3841:176:3",
												"trueBody": {
													"id": 468,
													"nodeType": "Block",
													"src": "3868:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 460,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 443,
																				"src": "3940:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3953:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 461,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3953:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 463,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3952:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 458,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3929:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3929:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3929:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3961:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 457,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3921:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3921:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "3921:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2929:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3335:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "3335:17:3"
													},
													"referencedDeclaration": 248,
													"src": "3335:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3360:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3360:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3334:44:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3387:0:3"
									},
									"scope": 472,
									"src": "3306:717:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 473,
							"src": "667:3358:3"
						}
					],
					"src": "100:3926:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						]
					},
					"id": 718,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 475,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 717,
							"linearizedBaseContracts": [
								717
							],
							"name": "AddressUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "848:311:4",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "1045:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1045:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"nodeType": "VariableDeclarationStatement",
												"src": "1045:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1090:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1110:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1098:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1090:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 478,
														"isOffset": false,
														"isSlot": false,
														"src": "1110:7:4",
														"valueSize": 1
													},
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:4:4",
														"valueSize": 1
													}
												],
												"id": 486,
												"nodeType": "InlineAssembly",
												"src": "1067:61:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 487,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "1144:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1151:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1144:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 482,
												"id": 490,
												"nodeType": "Return",
												"src": "1137:15:4"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "212:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "802:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:17:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "842:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "842:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:6:4"
									},
									"scope": 717,
									"src": "782:377:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "2147:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 503,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2173:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2165:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 501,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2165:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2165:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2165:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 506,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2190:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2165:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2198:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2157:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2157:73:4"
											},
											{
												"assignments": [
													512,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "2242:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 511,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2242:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 519,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2290:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 513,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "2260:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2260:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 515,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2282:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2260:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2260:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2241:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "2311:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2320:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2303:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "2303:78:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1165:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2095:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2095:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2122:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:43:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2147:0:4"
									},
									"scope": 717,
									"src": "2076:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "3219:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3249:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3257:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3263:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 536,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															543,
															563
														],
														"referencedDeclaration": 563,
														"src": "3236:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 535,
												"id": 541,
												"nodeType": "Return",
												"src": "3229:67:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2394:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3152:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3168:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3168:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:35:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3205:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3205:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:14:4"
									},
									"scope": 717,
									"src": "3130:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "3672:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "3711:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3719:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3725:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 559,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3728:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 555,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "3689:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3689:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 554,
												"id": 561,
												"nodeType": "Return",
												"src": "3682:59:4"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "3309:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3556:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3580:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3580:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3607:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3607:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3546:93:4"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3658:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3658:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:14:4"
									},
									"scope": 717,
									"src": "3525:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "4253:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "4292:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "4306:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4313:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 575,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "4270:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 574,
												"id": 581,
												"nodeType": "Return",
												"src": "4263:94:4"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3754:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4150:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4174:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4201:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:80:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4239:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4239:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:14:4"
									},
									"scope": 717,
									"src": "4110:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4791:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 600,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4817:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4809:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 598,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4809:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4809:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4809:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 603,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "4834:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4809:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4841:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4801:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "4801:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 610,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "4911:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 609,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "4900:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4900:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4920:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4892:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4892:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "4892:60:4"
											},
											{
												"assignments": [
													616,
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4964:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 615,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4964:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4978:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 617,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4978:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"id": 623,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5031:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 619,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "5005:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5005:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 621,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "5024:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5005:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5005:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4963:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 628,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5079:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 629,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "5091:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 626,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5053:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5053:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 596,
												"id": 631,
												"nodeType": "Return",
												"src": "5046:58:4"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "4370:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4676:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4676:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4703:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4726:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4642:116:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4777:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4777:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4776:14:4"
									},
									"scope": 717,
									"src": "4612:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "5388:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "5424:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5432:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5438:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 643,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															650,
															685
														],
														"referencedDeclaration": 685,
														"src": "5405:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5405:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 642,
												"id": 648,
												"nodeType": "Return",
												"src": "5398:80:4"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5117:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5316:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5332:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5332:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:35:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5374:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5374:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:14:4"
									},
									"scope": 717,
									"src": "5288:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "5827:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 664,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "5856:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 663,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "5845:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5845:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5865:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5837:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5837:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5837:67:4"
											},
											{
												"assignments": [
													670,
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "5916:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 669,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5916:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "5930:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 671,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5930:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"arguments": [
														{
															"id": 675,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "5975:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 673,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "5957:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5957:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5957:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5915:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 679,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "6014:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 680,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "6023:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 681,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "6035:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 678,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5997:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5997:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 661,
												"id": 683,
												"nodeType": "Return",
												"src": "5990:58:4"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "5491:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5706:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5706:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5730:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5730:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5757:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5757:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:93:4"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5813:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5813:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5812:14:4"
									},
									"scope": 717,
									"src": "5669:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "6435:532:4",
										"statements": [
											{
												"condition": {
													"id": 697,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 688,
													"src": "6449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 713,
													"nodeType": "Block",
													"src": "6506:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 701,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "6590:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6590:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6610:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6590:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 711,
																"nodeType": "Block",
																"src": "6898:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 708,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 692,
																					"src": "6923:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 707,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "6916:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6916:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 710,
																		"nodeType": "ExpressionStatement",
																		"src": "6916:20:4"
																	}
																]
															},
															"id": 712,
															"nodeType": "IfStatement",
															"src": "6586:365:4",
															"trueBody": {
																"id": 706,
																"nodeType": "Block",
																"src": "6613:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6733:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6755:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6784:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6778:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6778:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6759:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6827:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6831:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6823:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6823:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6844:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6816:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6816:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6816:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 690,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6784:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 690,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6831:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 705,
																		"nodeType": "InlineAssembly",
																		"src": "6724:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 714,
												"nodeType": "IfStatement",
												"src": "6445:516:4",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "6458:42:4",
													"statements": [
														{
															"expression": {
																"id": 698,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "6479:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 696,
															"id": 699,
															"nodeType": "Return",
															"src": "6472:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "6061:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6310:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6310:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6332:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6332:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6365:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6365:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6300:97:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6421:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6421:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:14:4"
									},
									"scope": 717,
									"src": "6275:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 718,
							"src": "179:6790:4"
						}
					],
					"src": "86:6884:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							761
						],
						"Initializable": [
							170
						]
					},
					"id": 762,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 719,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 720,
							"nodeType": "ImportDirective",
							"scope": 762,
							"sourceUnit": 171,
							"src": "110:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 722,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "691:13:5"
									},
									"id": 723,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:5"
								}
							],
							"contractDependencies": [
								170
							],
							"contractKind": "contract",
							"documentation": {
								"id": 721,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 761,
							"linearizedBaseContracts": [
								761,
								170
							],
							"name": "ContextUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "758:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 728,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "768:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "768:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "768:26:5"
											}
										]
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 726,
											"modifierName": {
												"id": 725,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "746:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:11:5"
										}
									],
									"name": "__Context_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:5"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:0:5"
									},
									"scope": 761,
									"src": "711:90:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "864:7:5",
										"statements": []
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 735,
											"modifierName": {
												"id": 734,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "852:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "852:11:5"
										}
									],
									"name": "__Context_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "864:0:5"
									},
									"scope": 761,
									"src": "807:64:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "938:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 743,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "955:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "955:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 742,
												"id": 745,
												"nodeType": "Return",
												"src": "948:17:5"
											}
										]
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "895:2:5"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "929:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:9:5"
									},
									"scope": 761,
									"src": "876:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "1045:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 752,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1062:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1062:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 751,
												"id": 754,
												"nodeType": "Return",
												"src": "1055:15:5"
											}
										]
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:2:5"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1029:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1029:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:16:5"
									},
									"scope": 761,
									"src": "978:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 760,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 761,
									"src": "1082:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 757,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 759,
										"length": {
											"hexValue": "3530",
											"id": 758,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1090:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1082:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 762,
							"src": "651:459:5"
						}
					],
					"src": "86:1025:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
					"exportedSymbols": {
						"SafeMathUpgradeable": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 763,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 764,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1073,
							"linearizedBaseContracts": [
								1073
							],
							"name": "SafeMathUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "713:140:6",
										"statements": [
											{
												"id": 794,
												"nodeType": "UncheckedBlock",
												"src": "723:124:6",
												"statements": [
													{
														"assignments": [
															777
														],
														"declarations": [
															{
																"constant": false,
																"id": 777,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 794,
																"src": "747:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 776,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "747:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 781,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "759:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 779,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "759:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "747:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 782,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "782:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 783,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "786:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "782:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 789,
														"nodeType": "IfStatement",
														"src": "778:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "797:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "796:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 775,
															"id": 788,
															"nodeType": "Return",
															"src": "789:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "828:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 791,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "834:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 792,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "827:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 775,
														"id": 793,
														"nodeType": "Return",
														"src": "820:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "501:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "653:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "664:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:22:6"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "698:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "704:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:15:6"
									},
									"scope": 1073,
									"src": "637:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "1075:113:6",
										"statements": [
											{
												"id": 822,
												"nodeType": "UncheckedBlock",
												"src": "1085:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 808,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "1113:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 809,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "1117:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1113:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 815,
														"nodeType": "IfStatement",
														"src": "1109:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1128:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1135:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 807,
															"id": 814,
															"nodeType": "Return",
															"src": "1120:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1159:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 817,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "1165:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 818,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "1169:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1165:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 820,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1158:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 807,
														"id": 821,
														"nodeType": "Return",
														"src": "1151:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "859:135:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1015:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1026:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:22:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1060:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1060:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1066:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:15:6"
									},
									"scope": 1073,
									"src": "999:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "1412:417:6",
										"statements": [
											{
												"id": 864,
												"nodeType": "UncheckedBlock",
												"src": "1422:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1680:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1685:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1680:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "1676:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1702:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1695:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 835,
															"id": 842,
															"nodeType": "Return",
															"src": "1688:16:6"
														}
													},
													{
														"assignments": [
															845
														],
														"declarations": [
															{
																"constant": false,
																"id": 845,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 864,
																"src": "1718:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 844,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1718:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 849,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1730:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 847,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1730:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1718:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 850,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1753:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 851,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "1757:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1753:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 853,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1762:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1753:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 859,
														"nodeType": "IfStatement",
														"src": "1749:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1773:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1780:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1772:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 835,
															"id": 858,
															"nodeType": "Return",
															"src": "1765:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1804:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 861,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1810:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 862,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1803:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 835,
														"id": 863,
														"nodeType": "Return",
														"src": "1796:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "1194:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1352:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1363:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:22:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1397:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1397:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1403:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:15:6"
									},
									"scope": 1073,
									"src": "1336:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "2054:114:6",
										"statements": [
											{
												"id": 892,
												"nodeType": "UncheckedBlock",
												"src": "2064:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 878,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "2092:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2097:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2092:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 885,
														"nodeType": "IfStatement",
														"src": "2088:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2108:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2115:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2107:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 877,
															"id": 884,
															"nodeType": "Return",
															"src": "2100:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2139:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 887,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "2145:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 888,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "2149:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2145:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 890,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2138:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 877,
														"id": 891,
														"nodeType": "Return",
														"src": "2131:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1835:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "1994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2005:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:22:6"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2039:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2039:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2045:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:15:6"
									},
									"scope": 1073,
									"src": "1978:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2403:114:6",
										"statements": [
											{
												"id": 920,
												"nodeType": "UncheckedBlock",
												"src": "2413:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "2441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2446:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2441:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 913,
														"nodeType": "IfStatement",
														"src": "2437:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2457:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2464:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2456:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 905,
															"id": 912,
															"nodeType": "Return",
															"src": "2449:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2488:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 915,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "2494:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 916,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "2498:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2494:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 918,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2487:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 905,
														"id": 919,
														"nodeType": "Return",
														"src": "2480:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "2174:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2354:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:22:6"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2388:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2388:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2394:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:15:6"
									},
									"scope": 1073,
									"src": "2327:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "2819:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 932,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2836:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 933,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2840:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2836:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 931,
												"id": 935,
												"nodeType": "Return",
												"src": "2829:12:6"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "2523:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2765:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2776:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2764:22:6"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2810:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:9:6"
									},
									"scope": 1073,
									"src": "2752:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "3186:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 947,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "3203:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 948,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3207:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3203:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 946,
												"id": 950,
												"nodeType": "Return",
												"src": "3196:12:6"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "2854:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3132:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3143:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:22:6"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3177:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:9:6"
									},
									"scope": 1073,
									"src": "3119:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "3529:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3546:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 963,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "3550:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3546:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 961,
												"id": 965,
												"nodeType": "Return",
												"src": "3539:12:6"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "3221:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3475:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3486:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3474:22:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3520:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3519:9:6"
									},
									"scope": 1073,
									"src": "3462:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "3914:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "3931:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 978,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "3935:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3931:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 976,
												"id": 980,
												"nodeType": "Return",
												"src": "3924:12:6"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "3564:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3860:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3871:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3871:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3859:22:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3905:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3905:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:9:6"
									},
									"scope": 1073,
									"src": "3847:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "4463:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "4480:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 993,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "4484:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4480:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 991,
												"id": 995,
												"nodeType": "Return",
												"src": "4473:12:6"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "3949:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4409:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4420:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4408:22:6"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4454:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4454:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4453:9:6"
									},
									"scope": 1073,
									"src": "4396:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "5081:106:6",
										"statements": [
											{
												"id": 1020,
												"nodeType": "UncheckedBlock",
												"src": "5091:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1010,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "5123:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1011,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "5128:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5123:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1013,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "5131:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1009,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5115:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5115:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1015,
														"nodeType": "ExpressionStatement",
														"src": "5115:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "5165:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1017,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "5169:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5165:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1008,
														"id": 1019,
														"nodeType": "Return",
														"src": "5158:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "4498:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4978:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5016:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1003,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5016:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:80:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5072:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5072:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5071:9:6"
									},
									"scope": 1073,
									"src": "4956:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "5796:105:6",
										"statements": [
											{
												"id": 1045,
												"nodeType": "UncheckedBlock",
												"src": "5806:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1035,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "5838:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5842:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5838:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1038,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5845:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1034,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5830:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5830:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1040,
														"nodeType": "ExpressionStatement",
														"src": "5830:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "5879:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1042,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "5883:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5879:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1033,
														"id": 1044,
														"nodeType": "Return",
														"src": "5872:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "5193:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5693:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5712:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5712:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5731:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5731:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5683:80:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5787:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5786:9:6"
									},
									"scope": 1073,
									"src": "5671:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "6672:105:6",
										"statements": [
											{
												"id": 1070,
												"nodeType": "UncheckedBlock",
												"src": "6682:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1060,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "6714:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6718:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6714:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1063,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "6721:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1059,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6706:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6706:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1065,
														"nodeType": "ExpressionStatement",
														"src": "6706:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1066,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "6755:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1067,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "6759:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6755:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1058,
														"id": 1069,
														"nodeType": "Return",
														"src": "6748:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "5907:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6569:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6569:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6588:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6607:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1053,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6607:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6559:80:6"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6663:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6662:9:6"
									},
									"scope": 1073,
									"src": "6547:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1074,
							"src": "467:6312:6"
						}
					],
					"src": "92:6688:6"
				},
				"id": 6
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1146
						]
					},
					"id": 1147,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1075,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1146,
							"linearizedBaseContracts": [
								1146
							],
							"name": "IUniswapV2Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1085,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "115:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "139:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "163:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "177:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "177:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:68:7"
									},
									"src": "97:86:7"
								},
								{
									"functionSelector": "017e7e58",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:2:7"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "229:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:9:7"
									},
									"scope": 1146,
									"src": "189:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:7"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "289:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:9:7"
									},
									"scope": 1146,
									"src": "243:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7cd07e47",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "320:2:7"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "346:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:7"
									},
									"scope": 1146,
									"src": "303:52:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "378:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "394:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:32:7"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "433:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:14:7"
									},
									"scope": 1146,
									"src": "361:86:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "470:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:6:7"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "499:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:14:7"
									},
									"scope": 1146,
									"src": "452:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:2:7"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "567:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "567:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:6:7"
									},
									"scope": 1146,
									"src": "518:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 1130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "599:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "615:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:32:7"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "649:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:14:7"
									},
									"scope": 1146,
									"src": "579:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 1135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "687:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:9:7"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:0:7"
									},
									"scope": 1146,
									"src": "669:36:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 1140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "734:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:9:7"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:0:7"
									},
									"scope": 1146,
									"src": "710:42:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23cf3118",
									"id": 1145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMigrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "778:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:9:7"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:0:7"
									},
									"scope": 1146,
									"src": "757:39:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1147,
							"src": "63:735:7"
						}
					],
					"src": "37:762:7"
				},
				"id": 7
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1388
						]
					},
					"id": 1389,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1148,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1388,
							"linearizedBaseContracts": [
								1388
							],
							"name": "IUniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1156,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "109:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "132:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "157:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "157:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:60:8"
									},
									"src": "94:75:8"
								},
								{
									"anonymous": false,
									"id": 1164,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "189:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "211:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "231:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "231:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:54:8"
									},
									"src": "174:69:8"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:8"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "288:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "288:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:15:8"
									},
									"scope": 1388,
									"src": "249:54:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:8"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "349:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "349:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:15:8"
									},
									"scope": 1388,
									"src": "308:56:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:2:8"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "412:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1176,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "412:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:7:8"
									},
									"scope": 1388,
									"src": "369:50:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:2:8"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "470:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:6:8"
									},
									"scope": 1388,
									"src": "424:52:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "500:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:15:8"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "538:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "538:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:6:8"
									},
									"scope": 1388,
									"src": "481:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "568:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "583:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:32:8"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "623:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:6:8"
									},
									"scope": 1388,
									"src": "549:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "652:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "669:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:29:8"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "699:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "699:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:6:8"
									},
									"scope": 1388,
									"src": "635:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "728:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "740:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "740:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:24:8"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "770:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "770:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "769:6:8"
									},
									"scope": 1388,
									"src": "710:66:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "803:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "817:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "829:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:38:8"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "859:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "859:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:6:8"
									},
									"scope": 1388,
									"src": "781:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:2:8"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "922:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:9:8"
									},
									"scope": 1388,
									"src": "871:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:8"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "986:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:9:8"
									},
									"scope": 1388,
									"src": "936:59:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1016:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:15:8"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1054:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1054:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:6:8"
									},
									"scope": 1388,
									"src": "1000:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1082:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1097:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1114:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1114:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1126:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1126:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1141:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1141:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1150:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1161:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:90:8"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1180:0:8"
									},
									"scope": 1388,
									"src": "1066:115:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1271,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1198:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1222:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1222:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1236:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1236:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:52:8"
									},
									"src": "1187:63:8"
								},
								{
									"anonymous": false,
									"id": 1281,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1266:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1290:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1304:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1304:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1318:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:72:8"
									},
									"src": "1255:83:8"
								},
								{
									"anonymous": false,
									"id": 1295,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1363:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1395:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1395:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1419:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1419:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1443:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1443:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1468:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1493:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:164:8"
									},
									"src": "1343:175:8"
								},
								{
									"anonymous": false,
									"id": 1301,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1534:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1296,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1552:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1298,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:36:8"
									},
									"src": "1523:47:8"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 1306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:2:8"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1628:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1628:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:6:8"
									},
									"scope": 1388,
									"src": "1576:58:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1655:2:8"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1681:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:8"
									},
									"scope": 1388,
									"src": "1639:51:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:8"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1736:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1735:9:8"
									},
									"scope": 1388,
									"src": "1695:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:8"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "1791:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:9:8"
									},
									"scope": 1388,
									"src": "1750:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:2:8"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1851:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1323,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1869:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1325,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1887:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1327,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1887:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:63:8"
									},
									"scope": 1388,
									"src": "1805:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1948:2:8"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1974:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1974:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:6:8"
									},
									"scope": 1388,
									"src": "1919:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 1340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2014:2:8"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2040:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2040:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:6:8"
									},
									"scope": 1388,
									"src": "1985:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2065:2:8"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "2091:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2091:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:6:8"
									},
									"scope": 1388,
									"src": "2051:46:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2117:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2116:12:8"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2147:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2147:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:16:8"
									},
									"scope": 1388,
									"src": "2103:60:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 1361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2182:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:12:8"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2212:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2212:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2226:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2226:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:28:8"
									},
									"scope": 1388,
									"src": "2168:72:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2259:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2259:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2276:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2276:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2293:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2305:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2305:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2258:67:8"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2334:0:8"
									},
									"scope": 1388,
									"src": "2245:90:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2354:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:12:8"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:8"
									},
									"scope": 1388,
									"src": "2340:35:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2393:2:8"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2404:0:8"
									},
									"scope": 1388,
									"src": "2380:25:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2431:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2440:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:18:8"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2457:0:8"
									},
									"scope": 1388,
									"src": "2411:47:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1389,
							"src": "63:2397:8"
						}
					],
					"src": "37:2423:8"
				},
				"id": 8
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1696
						]
					},
					"id": 1697,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1390,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1696,
							"linearizedBaseContracts": [
								1696
							],
							"name": "IUniswapV2Router01",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:9"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "140:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:9:9"
									},
									"scope": 1696,
									"src": "98:51:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:9"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "193:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:9:9"
									},
									"scope": 1696,
									"src": "154:48:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "239:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "263:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "amountADesired",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "287:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "287:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "316:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "316:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "345:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "370:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "370:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "395:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "415:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "415:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:205:9"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "453:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "453:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "467:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "467:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "481:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "481:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:44:9"
									},
									"scope": 1696,
									"src": "208:289:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "536:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "559:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "592:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "592:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "621:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "621:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "648:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "668:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "668:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:161:9"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "714:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "714:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "732:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "732:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "748:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "748:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:50:9"
									},
									"scope": 1696,
									"src": "502:262:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "803:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "827:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "851:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "851:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "875:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "900:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "900:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "925:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "945:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "945:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:171:9"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "983:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "983:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "997:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:28:9"
									},
									"scope": 1696,
									"src": "769:242:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1053:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1076:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1076:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1100:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1100:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1129:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1129:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1156:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1176:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1176:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:152:9"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1214:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1214:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1232:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1232:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:34:9"
									},
									"scope": 1696,
									"src": "1016:232:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1297:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1321:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1345:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1345:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1369:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1369:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1394:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1394:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1419:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1439:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1439:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1462:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1462:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1479:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1503,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1479:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1488:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1505,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1499:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:227:9"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1533:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1533:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1547:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1547:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1532:28:9"
									},
									"scope": 1696,
									"src": "1253:308:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1613:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1636:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1636:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1660:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1660:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1689:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1689:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1716:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1736:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1736:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1759:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1759:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1776:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1776:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1785:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1796:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:208:9"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1830:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1830:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1848:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1848:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:34:9"
									},
									"scope": 1696,
									"src": "1566:298:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1912:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1912:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1935:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1935:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1962:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1547,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1962:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1548,
													"nodeType": "ArrayTypeName",
													"src": "1962:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1995:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2015:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2015:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:132:9"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2053:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1555,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2053:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1556,
													"nodeType": "ArrayTypeName",
													"src": "2053:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:23:9"
									},
									"scope": 1696,
									"src": "1869:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2124:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2124:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2148:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2148:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2174:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1564,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2174:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1565,
													"nodeType": "ArrayTypeName",
													"src": "2174:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2207:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2227:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2227:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:132:9"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2265:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2265:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "2265:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2264:23:9"
									},
									"scope": 1696,
									"src": "2081:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2324:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2324:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2343:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1579,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2343:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1580,
													"nodeType": "ArrayTypeName",
													"src": "2343:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2368:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2380:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2380:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:71:9"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2445:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1587,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2445:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1588,
													"nodeType": "ArrayTypeName",
													"src": "2445:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:23:9"
									},
									"scope": 1696,
									"src": "2293:175:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2504:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2504:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2520:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2520:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2538:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1596,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2538:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1597,
													"nodeType": "ArrayTypeName",
													"src": "2538:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2563:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2575:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2575:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2503:86:9"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2624:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1604,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2624:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1605,
													"nodeType": "ArrayTypeName",
													"src": "2624:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2623:23:9"
									},
									"scope": 1696,
									"src": "2473:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2683:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2683:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2698:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2698:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2717:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1613,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2717:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1614,
													"nodeType": "ArrayTypeName",
													"src": "2717:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2742:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2754:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2754:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:86:9"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2803:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1621,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2803:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1622,
													"nodeType": "ArrayTypeName",
													"src": "2803:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2802:23:9"
									},
									"scope": 1696,
									"src": "2652:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2862:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2878:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1628,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2878:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1629,
													"nodeType": "ArrayTypeName",
													"src": "2878:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2903:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2915:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2915:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:68:9"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2980:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1636,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2980:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1637,
													"nodeType": "ArrayTypeName",
													"src": "2980:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2979:23:9"
									},
									"scope": 1696,
									"src": "2831:172:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3024:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3024:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3038:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3038:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3053:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3053:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3023:44:9"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3091:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3091:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3090:14:9"
									},
									"scope": 1696,
									"src": "3009:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3132:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3132:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3147:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3147:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3163:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3163:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:48:9"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3203:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3203:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:16:9"
									},
									"scope": 1696,
									"src": "3110:109:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3245:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3245:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3261:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3261:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3277:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3277:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3244:49:9"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3317:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3317:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:15:9"
									},
									"scope": 1696,
									"src": "3224:108:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3360:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3360:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3375:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1676,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3375:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1677,
													"nodeType": "ArrayTypeName",
													"src": "3375:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3359:40:9"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3423:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1680,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3423:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1681,
													"nodeType": "ArrayTypeName",
													"src": "3423:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3422:23:9"
									},
									"scope": 1696,
									"src": "3337:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3473:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3473:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3489:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3489:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1688,
													"nodeType": "ArrayTypeName",
													"src": "3489:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:41:9"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3537:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1691,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3537:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1692,
													"nodeType": "ArrayTypeName",
													"src": "3537:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:23:9"
									},
									"scope": 1696,
									"src": "3451:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1697,
							"src": "63:3499:9"
						}
					],
					"src": "37:3525:9"
				},
				"id": 9
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1696
						],
						"IUniswapV2Router02": [
							1784
						]
					},
					"id": 1785,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1698,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:10"
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1699,
							"nodeType": "ImportDirective",
							"scope": 1785,
							"sourceUnit": 1697,
							"src": "63:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1700,
										"name": "IUniswapV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1696,
										"src": "131:18:10"
									},
									"id": 1701,
									"nodeType": "InheritanceSpecifier",
									"src": "131:18:10"
								}
							],
							"contractDependencies": [
								1696
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1784,
							"linearizedBaseContracts": [
								1784,
								1696
							],
							"name": "IUniswapV2Router02",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "222:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "245:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "245:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "269:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "298:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "298:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "325:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "345:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:152:10"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "383:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "383:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:16:10"
									},
									"scope": 1784,
									"src": "156:243:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "480:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "503:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "503:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "527:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "527:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "556:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "556:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "583:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "603:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "603:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "626:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "626:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "643:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1733,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "643:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "652:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "663:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:208:10"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "697:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "697:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:16:10"
									},
									"scope": 1784,
									"src": "404:309:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "791:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "814:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "841:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1748,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "841:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1749,
													"nodeType": "ArrayTypeName",
													"src": "841:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "874:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "894:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "894:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:132:10"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:0:10"
									},
									"scope": 1784,
									"src": "719:204:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "997:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1024:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1760,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1024:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1761,
													"nodeType": "ArrayTypeName",
													"src": "1024:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1057:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1077:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:109:10"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:0:10"
									},
									"scope": 1784,
									"src": "928:186:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1188:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1188:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1211:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1211:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1238:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1774,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1238:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1775,
													"nodeType": "ArrayTypeName",
													"src": "1238:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1271:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1291:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1291:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:132:10"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1319:0:10"
									},
									"scope": 1784,
									"src": "1119:201:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1785,
							"src": "99:1223:10"
						}
					],
					"src": "37:1285:10"
				},
				"id": 10
			},
			"contracts/helperLogic.sol": {
				"ast": {
					"absolutePath": "contracts/helperLogic.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						],
						"ContextUpgradeable": [
							761
						],
						"IERC20Upgradeable": [
							248
						],
						"IFarm": [
							1804
						],
						"IStabilizer": [
							1810
						],
						"IUniswapV2Factory": [
							1146
						],
						"IUniswapV2Pair": [
							1388
						],
						"IUniswapV2Router01": [
							1696
						],
						"IUniswapV2Router02": [
							1784
						],
						"Initializable": [
							170
						],
						"OwnableUpgradeable": [
							125
						],
						"SafeERC20Upgradeable": [
							472
						],
						"SafeMathUpgradeable": [
							1073
						],
						"helperLogic": [
							2294
						]
					},
					"id": 2295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1786,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 1787,
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 249,
							"src": "55:79:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 1788,
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 473,
							"src": "135:88:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1789,
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 171,
							"src": "224:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1790,
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 126,
							"src": "300:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"id": 1791,
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 1074,
							"src": "376:80:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
							"id": 1792,
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 1389,
							"src": "458:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
							"id": 1793,
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 1147,
							"src": "534:78:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
							"id": 1794,
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 1785,
							"src": "613:79:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1804,
							"linearizedBaseContracts": [
								1804
							],
							"name": "IFarm",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "46ca6bea",
									"id": 1803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "742:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "764:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "793:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:83:11"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "824:0:11"
									},
									"scope": 1804,
									"src": "716:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2295,
							"src": "694:133:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1810,
							"linearizedBaseContracts": [
								1810
							],
							"name": "IStabilizer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "796c7be7",
									"id": 1809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "goStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:2:11"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "899:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "899:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:6:11"
									},
									"scope": 1810,
									"src": "857:48:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2295,
							"src": "829:78:11"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1811,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "933:13:11"
									},
									"id": 1812,
									"nodeType": "InheritanceSpecifier",
									"src": "933:13:11"
								},
								{
									"baseName": {
										"id": 1813,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "948:18:11"
									},
									"id": 1814,
									"nodeType": "InheritanceSpecifier",
									"src": "948:18:11"
								}
							],
							"contractDependencies": [
								125,
								170,
								761
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2294,
							"linearizedBaseContracts": [
								2294,
								125,
								761,
								170
							],
							"name": "helperLogic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1818,
									"libraryName": {
										"id": 1815,
										"name": "SafeERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "979:20:11"
									},
									"nodeType": "UsingForDirective",
									"src": "973:49:11",
									"typeName": {
										"id": 1817,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1816,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1004:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1004:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									}
								},
								{
									"id": 1821,
									"libraryName": {
										"id": 1819,
										"name": "SafeMathUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1073,
										"src": "1033:19:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1027:38:11",
									"typeName": {
										"id": 1820,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1057:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "48c7e528",
									"id": 1825,
									"mutability": "mutable",
									"name": "executor",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1086:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1824,
										"keyType": {
											"id": 1822,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1094:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1086:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1823,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1105:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3011d3d5",
									"id": 1828,
									"mutability": "mutable",
									"name": "usc",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1132:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1827,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1826,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1132:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1132:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e413bee",
									"id": 1831,
									"mutability": "mutable",
									"name": "usdc",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1166:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1830,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1829,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1166:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1166:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ecaac41",
									"id": 1834,
									"mutability": "mutable",
									"name": "sea",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1201:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1833,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1832,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1201:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1201:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8bb97a1",
									"id": 1837,
									"mutability": "mutable",
									"name": "ssea",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1235:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1836,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1835,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1235:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1235:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec1f1f69",
									"id": 1839,
									"mutability": "mutable",
									"name": "op",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1270:17:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1838,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1270:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "91cca3db",
									"id": 1841,
									"mutability": "mutable",
									"name": "dev",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1293:18:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1840,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1293:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f6d7eade",
									"id": 1844,
									"mutability": "mutable",
									"name": "Router",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1318:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1843,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1842,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1784,
											"src": "1318:18:11"
										},
										"referencedDeclaration": 1784,
										"src": "1318:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c83dd231",
									"id": 1847,
									"mutability": "mutable",
									"name": "Factory",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1356:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
										"typeString": "contract IUniswapV2Factory"
									},
									"typeName": {
										"id": 1846,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1845,
											"name": "IUniswapV2Factory",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1146,
											"src": "1356:17:11"
										},
										"referencedDeclaration": 1146,
										"src": "1356:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
											"typeString": "contract IUniswapV2Factory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bd0b1f44",
									"id": 1849,
									"mutability": "mutable",
									"name": "toSseaPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1395:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1848,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1395:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c535a52",
									"id": 1851,
									"mutability": "mutable",
									"name": "toOpPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1429:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1850,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1429:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ae6a027",
									"id": 1853,
									"mutability": "mutable",
									"name": "toDevPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1461:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1852,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1461:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aaf5eb68",
									"id": 1855,
									"mutability": "mutable",
									"name": "PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1494:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1494:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16d03993",
									"id": 1857,
									"mutability": "mutable",
									"name": "basePoint",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1525:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1856,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1525:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f1068454",
									"id": 1859,
									"mutability": "mutable",
									"name": "pid",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1555:18:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1858,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1555:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36e9332d",
									"id": 1862,
									"mutability": "mutable",
									"name": "farm",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1580:17:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFarm_$1804",
										"typeString": "contract IFarm"
									},
									"typeName": {
										"id": 1861,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1860,
											"name": "IFarm",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1804,
											"src": "1580:5:11"
										},
										"referencedDeclaration": 1804,
										"src": "1580:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFarm_$1804",
											"typeString": "contract IFarm"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9da5b0d5",
									"id": 1864,
									"mutability": "mutable",
									"name": "autoAdjustFarm",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1604:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1863,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1604:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "58de5de8",
									"id": 1866,
									"mutability": "mutable",
									"name": "openStabilizer",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1636:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1865,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1636:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e47961c",
									"id": 1868,
									"mutability": "mutable",
									"name": "stabilizer",
									"nodeType": "VariableDeclaration",
									"scope": 2294,
									"src": "1669:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1867,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1669:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "2057:528:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1894,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2067:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "2067:16:11"
											},
											{
												"expression": {
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1897,
														"name": "Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "2137:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1898,
														"name": "_Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "2146:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "2137:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "2137:16:11"
											},
											{
												"expression": {
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1901,
														"name": "Factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "2163:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
															"typeString": "contract IUniswapV2Factory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1902,
														"name": "_Factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1871,
														"src": "2173:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
															"typeString": "contract IUniswapV2Factory"
														}
													},
													"src": "2163:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
														"typeString": "contract IUniswapV2Factory"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "2163:18:11"
											},
											{
												"expression": {
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1905,
														"name": "usc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "2191:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1906,
														"name": "_usc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "2197:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2191:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1908,
												"nodeType": "ExpressionStatement",
												"src": "2191:10:11"
											},
											{
												"expression": {
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1909,
														"name": "sea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "2211:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1910,
														"name": "_sea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "2217:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2211:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "2211:10:11"
											},
											{
												"expression": {
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1913,
														"name": "ssea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "2231:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1914,
														"name": "_ssea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "2238:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2231:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "2231:12:11"
											},
											{
												"expression": {
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1917,
														"name": "op",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "2253:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1918,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2258:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2258:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2253:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "2253:15:11"
											},
											{
												"expression": {
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1922,
														"name": "dev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "2278:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1923,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2284:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2284:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2278:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "2278:16:11"
											},
											{
												"expression": {
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1927,
														"name": "toSseaPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "2304:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35303030",
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000_by_1",
															"typeString": "int_const 5000"
														},
														"value": "5000"
													},
													"src": "2304:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1930,
												"nodeType": "ExpressionStatement",
												"src": "2304:20:11"
											},
											{
												"expression": {
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1931,
														"name": "toOpPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "2334:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030",
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2348:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500_by_1",
															"typeString": "int_const 2500"
														},
														"value": "2500"
													},
													"src": "2334:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "2334:18:11"
											},
											{
												"expression": {
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1935,
														"name": "toDevPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "2362:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030",
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500_by_1",
															"typeString": "int_const 2500"
														},
														"value": "2500"
													},
													"src": "2362:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "2362:19:11"
											},
											{
												"expression": {
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1939,
														"name": "PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "2391:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030",
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2403:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2391:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "2391:17:11"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1943,
														"name": "basePoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "2418:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2430:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2418:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "2418:16:11"
											},
											{
												"expression": {
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1947,
														"name": "autoAdjustFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2444:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2461:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2444:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "2444:21:11"
											},
											{
												"expression": {
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1951,
														"name": "openStabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "2475:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2492:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2475:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "2475:22:11"
											},
											{
												"expression": {
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1955,
														"name": "farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "2507:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1956,
														"name": "_farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "2514:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"src": "2507:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "2507:12:11"
											},
											{
												"expression": {
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1959,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "2529:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1960,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "2536:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2529:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "2529:12:11"
											}
										]
									},
									"functionSelector": "35876476",
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1892,
											"modifierName": {
												"id": 1891,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "2041:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2041:11:11"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "_Factory",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1765:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
													"typeString": "contract IUniswapV2Factory"
												},
												"typeName": {
													"id": 1870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1869,
														"name": "IUniswapV2Factory",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1146,
														"src": "1765:17:11"
													},
													"referencedDeclaration": 1146,
													"src": "1765:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
														"typeString": "contract IUniswapV2Factory"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "_Router",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1801:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
													"typeString": "contract IUniswapV2Router02"
												},
												"typeName": {
													"id": 1873,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1872,
														"name": "IUniswapV2Router02",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1784,
														"src": "1801:18:11"
													},
													"referencedDeclaration": 1784,
													"src": "1801:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "_usc",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1837:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1875,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1837:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1837:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "_usdc",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1869:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1879,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1878,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1869:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1869:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "_sea",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1902:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1882,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1881,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1902:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1902:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "_ssea",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1934:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1884,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1934:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1934:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "_farm",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1967:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFarm_$1804",
													"typeString": "contract IFarm"
												},
												"typeName": {
													"id": 1888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1887,
														"name": "IFarm",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1804,
														"src": "1967:5:11"
													},
													"referencedDeclaration": 1804,
													"src": "1967:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:264:11"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:11"
									},
									"scope": 2294,
									"src": "1701:884:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "2704:64:11",
										"statements": [
											{
												"expression": {
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1975,
															"name": "executor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "2714:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1977,
														"indexExpression": {
															"id": 1976,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "2723:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2714:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1978,
														"name": "_type",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "2735:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "2714:26:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2757:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1974,
												"id": 1982,
												"nodeType": "Return",
												"src": "2750:11:11"
											}
										]
									},
									"functionSelector": "1e1bff3f",
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1971,
											"modifierName": {
												"id": 1970,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "2667:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2667:9:11"
										}
									],
									"name": "setExecutor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2612:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2612:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "_type",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2630:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2630:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2611:30:11"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2694:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2694:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:6:11"
									},
									"scope": 2294,
									"src": "2591:177:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "2798:97:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1987,
																"name": "executor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "2816:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1990,
															"indexExpression": {
																"expression": {
																	"id": 1988,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2825:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2825:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2816:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6578656375746f723a2063616c6c6572206973206e6f7420746865206578656375746f72",
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2838:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a",
																"typeString": "literal_string \"executor: caller is not the executor\""
															},
															"value": "executor: caller is not the executor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a",
																"typeString": "literal_string \"executor: caller is not the executor\""
															}
														],
														"id": 1986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2808:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2808:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "2808:69:11"
											},
											{
												"id": 1994,
												"nodeType": "PlaceholderStatement",
												"src": "2887:1:11"
											}
										]
									},
									"id": 1996,
									"name": "onlyExecutor",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2795:2:11"
									},
									"src": "2774:121:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "2964:594:11",
										"statements": [
											{
												"assignments": [
													2004
												],
												"declarations": [
													{
														"constant": false,
														"id": 2004,
														"mutability": "mutable",
														"name": "uscBalanceOf",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "2974:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2003,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2974:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2012,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2009,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3019:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_helperLogic_$2294",
																		"typeString": "contract helperLogic"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_helperLogic_$2294",
																		"typeString": "contract helperLogic"
																	}
																],
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3011:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2007,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3011:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3011:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2005,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "2997:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "2997:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2997:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2974:51:11"
											},
											{
												"assignments": [
													2014
												],
												"declarations": [
													{
														"constant": false,
														"id": 2014,
														"mutability": "mutable",
														"name": "toSsea",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "3035:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2013,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3035:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2022,
												"initialValue": {
													"arguments": [
														{
															"id": 2020,
															"name": "PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "3088:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2017,
																	"name": "toSseaPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "3069:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2015,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2004,
																	"src": "3052:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "3052:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3052:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "3052:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3035:63:11"
											},
											{
												"assignments": [
													2024
												],
												"declarations": [
													{
														"constant": false,
														"id": 2024,
														"mutability": "mutable",
														"name": "toOp",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "3108:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3108:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2032,
												"initialValue": {
													"arguments": [
														{
															"id": 2030,
															"name": "PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "3157:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2027,
																	"name": "toOpPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "3140:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2025,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2004,
																	"src": "3123:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "3123:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3123:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "3123:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3123:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3108:59:11"
											},
											{
												"assignments": [
													2034
												],
												"declarations": [
													{
														"constant": false,
														"id": 2034,
														"mutability": "mutable",
														"name": "toDev",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "3177:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2033,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3177:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2042,
												"initialValue": {
													"arguments": [
														{
															"id": 2040,
															"name": "toOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "3222:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2037,
																	"name": "toSsea",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "3210:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2035,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2004,
																	"src": "3193:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 952,
																"src": "3193:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3193:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "3193:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3193:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3177:50:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2048,
																	"name": "ssea",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "3263:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3255:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2046,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3255:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3255:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2050,
															"name": "toSsea",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "3270:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2043,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "3238:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "3238:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3238:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "3238:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2058,
																	"name": "op",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "3312:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3304:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3304:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3304:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2060,
															"name": "toOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "3317:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2053,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "3287:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "3287:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3287:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "3287:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2068,
																	"name": "dev",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "3357:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3349:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2066,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3349:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3349:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2070,
															"name": "toDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "3363:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2063,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "3332:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "3332:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3332:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "3332:37:11"
											},
											{
												"condition": {
													"id": 2073,
													"name": "autoAdjustFarm",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1864,
													"src": "3384:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2078,
												"nodeType": "IfStatement",
												"src": "3380:57:11",
												"trueBody": {
													"id": 2077,
													"nodeType": "Block",
													"src": "3400:37:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2074,
																	"name": "adjustFarm",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "3414:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3414:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2076,
															"nodeType": "ExpressionStatement",
															"src": "3414:12:11"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2079,
													"name": "openStabilizer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1866,
													"src": "3451:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2087,
												"nodeType": "IfStatement",
												"src": "3447:83:11",
												"trueBody": {
													"id": 2086,
													"nodeType": "Block",
													"src": "3467:63:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2081,
																				"name": "stabilizer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1868,
																				"src": "3493:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2080,
																			"name": "IStabilizer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "3481:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IStabilizer_$1810_$",
																				"typeString": "type(contract IStabilizer)"
																			}
																		},
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3481:23:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IStabilizer_$1810",
																			"typeString": "contract IStabilizer"
																		}
																	},
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "goStabilizer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1809,
																	"src": "3481:36:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
																		"typeString": "function () external returns (bool)"
																	}
																},
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3481:38:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2085,
															"nodeType": "ExpressionStatement",
															"src": "3481:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3547:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2002,
												"id": 2089,
												"nodeType": "Return",
												"src": "3540:11:11"
											}
										]
									},
									"functionSelector": "d10c06a2",
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1999,
											"modifierName": {
												"id": 1998,
												"name": "onlyExecutor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1996,
												"src": "2936:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2936:12:11"
										}
									],
									"name": "jointExecution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2924:2:11"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "2958:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2958:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2957:6:11"
									},
									"scope": 2294,
									"src": "2901:657:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "3595:907:11",
										"statements": [
											{
												"assignments": [
													2095
												],
												"declarations": [
													{
														"constant": false,
														"id": 2095,
														"mutability": "mutable",
														"name": "pairAddress",
														"nodeType": "VariableDeclaration",
														"scope": 2108,
														"src": "3605:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2094,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3605:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2107,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2100,
																	"name": "usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "3651:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3643:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2098,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3643:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3643:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2104,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "3666:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3658:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3658:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3658:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2096,
															"name": "Factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "3627:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1109,
														"src": "3627:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) view external returns (address)"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3627:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3605:66:11"
											}
										]
									},
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "adjustFarm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3583:2:11"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3595:0:11"
									},
									"scope": 2294,
									"src": "3564:938:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "4627:96:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2124,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4678:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4678:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2126,
															"name": "_amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "4690:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2121,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2111,
																	"src": "4655:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2120,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "4637:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$248_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4637:27:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4637:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4637:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2128,
												"nodeType": "ExpressionStatement",
												"src": "4637:58:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4712:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2119,
												"id": 2130,
												"nodeType": "Return",
												"src": "4705:11:11"
											}
										]
									},
									"functionSelector": "930ed033",
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2116,
											"modifierName": {
												"id": 2115,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "4590:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4590:9:11"
										}
									],
									"name": "withdrawalERC20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "4533:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4533:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "_amt",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "4551:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4551:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4532:32:11"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "4617:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4617:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4616:6:11"
									},
									"scope": 2294,
									"src": "4508:215:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "4796:51:11",
										"statements": [
											{
												"expression": {
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2141,
														"name": "op",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "4806:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2142,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2134,
														"src": "4811:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4806:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "4806:13:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4836:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2140,
												"id": 2146,
												"nodeType": "Return",
												"src": "4829:11:11"
											}
										]
									},
									"functionSelector": "a36a7526",
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2137,
											"modifierName": {
												"id": 2136,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "4771:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4771:9:11"
										}
									],
									"name": "setOp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "4744:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4744:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4743:18:11"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "4790:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4790:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4789:6:11"
									},
									"scope": 2294,
									"src": "4729:118:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2163,
										"nodeType": "Block",
										"src": "4921:52:11",
										"statements": [
											{
												"expression": {
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2157,
														"name": "dev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "4931:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2158,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "4937:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4931:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2160,
												"nodeType": "ExpressionStatement",
												"src": "4931:14:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4962:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2156,
												"id": 2162,
												"nodeType": "Return",
												"src": "4955:11:11"
											}
										]
									},
									"functionSelector": "d477f05f",
									"id": 2164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2153,
											"modifierName": {
												"id": 2152,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "4896:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4896:9:11"
										}
									],
									"name": "setDev",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "4869:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4869:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4868:18:11"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "4915:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4915:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4914:6:11"
									},
									"scope": 2294,
									"src": "4853:120:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2179,
										"nodeType": "Block",
										"src": "5053:58:11",
										"statements": [
											{
												"expression": {
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2173,
														"name": "toSseaPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "5063:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2174,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2166,
														"src": "5079:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5063:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2176,
												"nodeType": "ExpressionStatement",
												"src": "5063:20:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5100:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2172,
												"id": 2178,
												"nodeType": "Return",
												"src": "5093:11:11"
											}
										]
									},
									"functionSelector": "27c42a50",
									"id": 2180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2169,
											"modifierName": {
												"id": 2168,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5028:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5028:9:11"
										}
									],
									"name": "setToSseaPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "5005:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5005:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5004:14:11"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "5047:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5047:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5046:6:11"
									},
									"scope": 2294,
									"src": "4979:132:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "5189:56:11",
										"statements": [
											{
												"expression": {
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2189,
														"name": "toOpPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "5199:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2190,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2182,
														"src": "5213:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5199:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2192,
												"nodeType": "ExpressionStatement",
												"src": "5199:18:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5234:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2188,
												"id": 2194,
												"nodeType": "Return",
												"src": "5227:11:11"
											}
										]
									},
									"functionSelector": "af5518c4",
									"id": 2196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2185,
											"modifierName": {
												"id": 2184,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5164:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5164:9:11"
										}
									],
									"name": "setToOpPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "5141:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5141:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5140:14:11"
									},
									"returnParameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "5183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5182:6:11"
									},
									"scope": 2294,
									"src": "5117:128:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "5324:57:11",
										"statements": [
											{
												"expression": {
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2205,
														"name": "toDevPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "5334:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2206,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "5349:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5334:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2208,
												"nodeType": "ExpressionStatement",
												"src": "5334:19:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5370:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2204,
												"id": 2210,
												"nodeType": "Return",
												"src": "5363:11:11"
											}
										]
									},
									"functionSelector": "3c850e1e",
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2201,
											"modifierName": {
												"id": 2200,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5299:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5299:9:11"
										}
									],
									"name": "setToDevPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "5276:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5276:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5275:14:11"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "5318:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5318:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5317:6:11"
									},
									"scope": 2294,
									"src": "5251:130:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "5460:60:11",
										"statements": [
											{
												"expression": {
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2221,
														"name": "autoAdjustFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "5470:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2222,
														"name": "_bool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "5487:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5470:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2224,
												"nodeType": "ExpressionStatement",
												"src": "5470:22:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5509:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2220,
												"id": 2226,
												"nodeType": "Return",
												"src": "5502:11:11"
											}
										]
									},
									"functionSelector": "4591db50",
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2217,
											"modifierName": {
												"id": 2216,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5435:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5435:9:11"
										}
									],
									"name": "setAutoAdjustFarm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "_bool",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "5414:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5414:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5413:12:11"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "5454:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5454:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5453:6:11"
									},
									"scope": 2294,
									"src": "5387:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2243,
										"nodeType": "Block",
										"src": "5599:60:11",
										"statements": [
											{
												"expression": {
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2237,
														"name": "openStabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "5609:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2238,
														"name": "_bool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2230,
														"src": "5626:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5609:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2240,
												"nodeType": "ExpressionStatement",
												"src": "5609:22:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5648:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2236,
												"id": 2242,
												"nodeType": "Return",
												"src": "5641:11:11"
											}
										]
									},
									"functionSelector": "55c746d1",
									"id": 2244,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2233,
											"modifierName": {
												"id": 2232,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5574:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5574:9:11"
										}
									],
									"name": "setOpenStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "_bool",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "5553:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5553:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5552:12:11"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "5593:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5593:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5592:6:11"
									},
									"scope": 2294,
									"src": "5526:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2259,
										"nodeType": "Block",
										"src": "5740:59:11",
										"statements": [
											{
												"expression": {
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2253,
														"name": "stabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "5750:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2254,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2246,
														"src": "5763:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5750:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2256,
												"nodeType": "ExpressionStatement",
												"src": "5750:21:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5788:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2252,
												"id": 2258,
												"nodeType": "Return",
												"src": "5781:11:11"
											}
										]
									},
									"functionSelector": "db7f521a",
									"id": 2260,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2249,
											"modifierName": {
												"id": 2248,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5715:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5715:9:11"
										}
									],
									"name": "setStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "5688:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5688:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5687:18:11"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "5734:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5734:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5733:6:11"
									},
									"scope": 2294,
									"src": "5665:134:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "5869:48:11",
										"statements": [
											{
												"expression": {
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2269,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "5879:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2270,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "5885:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5879:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2272,
												"nodeType": "ExpressionStatement",
												"src": "5879:10:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5906:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2268,
												"id": 2274,
												"nodeType": "Return",
												"src": "5899:11:11"
											}
										]
									},
									"functionSelector": "1b0d8aab",
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2265,
											"modifierName": {
												"id": 2264,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5844:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5844:9:11"
										}
									],
									"name": "setPid",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "5821:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5821:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5820:14:11"
									},
									"returnParameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "5863:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5863:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:6:11"
									},
									"scope": 2294,
									"src": "5805:112:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "6034:50:11",
										"statements": [
											{
												"expression": {
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2286,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "6044:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2287,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2279,
														"src": "6051:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "6044:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "6044:12:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6073:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2285,
												"id": 2291,
												"nodeType": "Return",
												"src": "6066:11:11"
											}
										]
									},
									"functionSelector": "aaf5bfc3",
									"id": 2293,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2282,
											"modifierName": {
												"id": 2281,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5997:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5997:9:11"
										}
									],
									"name": "setUSDCAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "_usdc",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "5947:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 2278,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2277,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "5947:17:11"
													},
													"referencedDeclaration": 248,
													"src": "5947:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5946:25:11"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "6024:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6024:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6023:6:11"
									},
									"scope": 2294,
									"src": "5923:161:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2295,
							"src": "909:5177:11"
						}
					],
					"src": "32:6055:11"
				},
				"id": 11
			}
		}
	}
}